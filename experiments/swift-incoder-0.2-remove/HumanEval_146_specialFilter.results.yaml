language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 20 {\n                    count += 1\n                }\n      \
    \      }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpng5wpk99/tmpng5wpk99.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab32391ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab323615b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab323615988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3236147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpng5wpk99                        0x00005652507485d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ab323b0a460 __libc_start_main +
    245

    6    tmpng5wpk99                        0x0000565250748169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 0 && num % 5 != 0 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp1ihp_h7b/tmp1ihp_h7b.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2febcbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2fe8c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad2fe8c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2fe8c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1ihp_h7b                        0x00005613a746e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad2fedb7460 __libc_start_main +
    245

    6    tmp1ihp_h7b                        0x00005613a746e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 0 && num % 2 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpbw3c4l0m/tmpbw3c4l0m.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c6c3f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c6c0f0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c6c0f0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c6c0ef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbw3c4l0m                        0x000056421de8c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b3c6c5e5460 __libc_start_main +
    245

    6    tmpbw3c4l0m                        0x000056421de8c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa4cfgdt5/tmpa4cfgdt5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af398177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af397e6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af397e6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af397e6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa4cfgdt5                        0x000055da333f36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af398363460 __libc_start_main +
    245

    6    tmpa4cfgdt5                        0x000055da333f3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 {\n                if\
    \ num > 10 && nums.last % 2 == 1 {\n                    count += 1\n         \
    \       }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqrs659it.swift:11:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpqrs659it.swift:11:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpqrs659it.swift:11:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 0 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpujr2vwjs/tmpujr2vwjs.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b861b362c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b861b059b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b861b059988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b861b0587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpujr2vwjs                        0x00005596b73175d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b861b54e460 __libc_start_main +
    245

    6    tmpujr2vwjs                        0x00005596b7317169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 10 == 1 {\n                    count += 1\n                }\n       \
    \     }\n            if num % 2 == 0 {\n                if num % 10 == 3 {\n \
    \                   count += 1\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkoq4r2wl/tmpkoq4r2wl.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002accf3f73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002accf3c6ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002accf3c6a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002accf3c697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkoq4r2wl                        0x000056522f62a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002accf415f460 __libc_start_main +
    245

    6    tmpkoq4r2wl                        0x000056522f62a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num > 10 && num < 100 {\n                    if num % 3 == 1 {\n           \
    \             if num % 5 == 1 {\n                            count += 1\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpy0tdt9cq/tmpy0tdt9cq.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3219ddbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3219ad2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3219ad2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3219ad17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0tdt9cq                        0x000055e3e14af5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b3219fc7460 __libc_start_main +
    245

    6    tmpy0tdt9cq                        0x000055e3e14af169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 && num % 3 != 0 || num\
    \ % 5 == 0 {\n                count += 1\n            }\n        }\n    }\n  \
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp419zq2m5/tmp419zq2m5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b00a2fc7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b00a2cbeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b00a2cbe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00a2cbd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp419zq2m5                        0x0000555dda30b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b00a31b3460 __libc_start_main +
    245

    6    tmp419zq2m5                        0x0000555dda30b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 && num % 3 != 0 {\n  \
    \              count += 1\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpbyw8j5ol/tmpbyw8j5ol.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6943a50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6943747b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6943747988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69437467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbyw8j5ol                        0x0000556d9d30c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b6943c3c460 __libc_start_main +
    245

    6    tmpbyw8j5ol                        0x0000556d9d30c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 {\n                if\
    \ num > 10 && num % 2 == 1 {\n                    count += 1\n               \
    \ }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8nfxda30/tmp8nfxda30.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6512e93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6512b8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6512b8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6512b897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8nfxda30                        0x0000558a8e7715d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b651307f460 __libc_start_main +
    245

    6    tmp8nfxda30                        0x0000558a8e771169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 == 1 {\n                    if num % 5 == 1 {\n                    \
    \    count += 1\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu3agz0v9/tmpu3agz0v9.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09429d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09426c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09426c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09426c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3agz0v9                        0x0000563d1c0685d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b0942bbc460 __libc_start_main +
    245

    6    tmpu3agz0v9                        0x0000563d1c068169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 3 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6iny0u92/tmp6iny0u92.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abffe50ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abffe201b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abffe201988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abffe2007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6iny0u92                        0x0000559d904705d7 <unavailable> + 5591

    5    libc.so.6                          0x00002abffe6f6460 __libc_start_main +
    245

    6    tmp6iny0u92                        0x0000559d90470169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 0 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpujr2vwjs/tmpujr2vwjs.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b861b362c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b861b059b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b861b059988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b861b0587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpujr2vwjs                        0x00005596b73175d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b861b54e460 __libc_start_main +
    245

    6    tmpujr2vwjs                        0x00005596b7317169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 3 != 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6iny0u92/tmp6iny0u92.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abffe50ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abffe201b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abffe201988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abffe2007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6iny0u92                        0x0000559d904705d7 <unavailable> + 5591

    5    libc.so.6                          0x00002abffe6f6460 __libc_start_main +
    245

    6    tmp6iny0u92                        0x0000559d90470169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 100 {\n                    count += 1\n                }\n     \
    \           if num > 100 && num < 1000 {\n                    count += 1\n   \
    \             }\n                if num > 1000 && num < 10000 {\n            \
    \        count += 1\n                }\n                if num > 10000 && num\
    \ < 100000 {\n                    count += 1\n                }\n            \
    \    if num > 100000 && num < 1000000 {\n                    count += 1\n    \
    \            }\n                if num > 1000000 && num < 10000000 {\n       \
    \             count += 1\n                }\n                if num > 10000000\
    \ && num < 100000000 {\n                    count += 1\n                }\n  \
    \              if num > 100000000 && num < 1000000000 {\n                    count\
    \ += 1\n                }\n                if num > 1000000000 && num < 10000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 10000000000 && num < 100000000000 {\n                    count += 1\n    \
    \            }\n                if num > 100000000000 && num < 1000000000000 {\n\
    \                    count += 1\n                }\n                if num > 1000000000000\
    \ && num < 10000000000000 {\n                    count += 1\n                }\n\
    \                if num > 10000000000000 && num < 100000000000000 {\n        \
    \            count += 1\n                }\n                if num > 100000000000000\
    \ && num < 1000000000000000 {\n                    count += 1\n              \
    \  }\n                if num > 1000000000000000 && num < 10000000000000000 {\n\
    \                    count += 1\n                }\n                if num > 10000000000000000\
    \ && num < 100000000000000000 {\n                    count += 1\n            \
    \    }\n                if num > 100000000000000000 && num < 1000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000000000000000000 && num < 10000000000000000000 {\n                    count\
    \ += 1\n                }\n                if num > 10000000000000000000 && num\
    \ < 100000000000000000000 {\n                    count += 1\n                }\n\
    \                if num > 100000000000000000000 && num < 1000000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000000000000000000000 && num < 10000000000000000000000 {\n              \
    \      count += 1\n                }\n                if num > 10000000000000000000000\
    \ && num < 100000000000000000000000 {\n                    count += 1\n      \
    \          }\n                if num > 100000000000000000000000 && num < 1000000000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000000000000000000000000 && num < 10000000000000000000000000 {\n        \
    \            count += 1\n                }\n                if num > 10000000000000000000000000\
    \ && num < 100000000000000000000000000 {\n                    count += 1\n   \
    \             }\n                if num > 100000000000000000000000000 && num <\
    \ 1000000000000000000000000000 {\n                    count += 1\n           \
    \     }\n                if num > 10000000000\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpsd4hblrd.swift:92:37: error: expected '{' after 'if' condition\n\
    \                if num > 10000000000\n                                    ^\n\
    /tmp/tmpsd4hblrd.swift:114:46: error: expected '}' at end of brace statement\n\
    assert(specialFilter(nums: [] as [Int]) == 0)\n                              \
    \               ^\n/tmp/tmpsd4hblrd.swift:9:21: note: to match this opening '{'\n\
    \        if num > 10 {\n                    ^\n/tmp/tmpsd4hblrd.swift:114:46:\
    \ error: expected '}' at end of brace statement\nassert(specialFilter(nums: []\
    \ as [Int]) == 0)\n                                             ^\n/tmp/tmpsd4hblrd.swift:8:21:\
    \ note: to match this opening '{'\n    for num in nums {\n                   \
    \ ^\n/tmp/tmpsd4hblrd.swift:114:46: error: expected '}' at end of brace statement\n\
    assert(specialFilter(nums: [] as [Int]) == 0)\n                              \
    \               ^\n/tmp/tmpsd4hblrd.swift:6:40: note: to match this opening '{'\n\
    func specialFilter(nums: [Int]) -> Int {\n                                   \
    \    ^\n/tmp/tmpsd4hblrd.swift:96:6: error: operator functions can only be declared\
    \ at global or in type scope\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n     ^\n"
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 && num % 3 != 0 && num\
    \ % 5 != 0 {\n                count += 1\n            }\n        }\n    }\n  \
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkqnr1cvj/tmpkqnr1cvj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8537ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85377cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85377cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85377ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkqnr1cvj                        0x000055d85e9fb6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8537cc0460 __libc_start_main +
    245

    6    tmpkqnr1cvj                        0x000055d85e9fb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 == 1 {\n                    if num % 5 == 1 {\n                    \
    \    if num % 7 == 1 {\n                            if num % 9 == 1 {\n      \
    \                          count += 1\n                            }\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpo8n6td3k/tmpo8n6td3k.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52188e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52185dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52185dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52185db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo8n6td3k                        0x0000555d426225d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b5218ad1460 __libc_start_main +
    245

    6    tmpo8n6td3k                        0x0000555d42622169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 2 == 0 {\n                    if num > 10 && num < 100 {\n           \
    \             count += 1\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmphruj6ybe/tmphruj6ybe.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b458be2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b458bb26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b458bb26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b458bb257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphruj6ybe                        0x000055ea6eeb35d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b458c01b460 __libc_start_main +
    245

    6    tmphruj6ybe                        0x000055ea6eeb3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 3 != 0 && num % 5 != 0 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprh679462/tmprh679462.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6294eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6291e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6291e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6291e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprh679462                        0x000055d3a5e015d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ac6296d6460 __libc_start_main +
    245

    6    tmprh679462                        0x000055d3a5e01169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 {\n                if\
    \ num % 2 == 1 {\n                    count += 1\n                }\n        \
    \    }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfbszdol_/tmpfbszdol_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b534230fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5342006b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5342006988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b53420057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfbszdol_                        0x00005652692925d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b53424fb460 __libc_start_main +
    245

    6    tmpfbszdol_                        0x0000565269292169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 100 {\n                    count += 1\n                }\n     \
    \       }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpatfprrxq/tmpatfprrxq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba519d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba519a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba519a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba519a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpatfprrxq                        0x0000558a1c4045d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba519f72460 __libc_start_main +
    245

    6    tmpatfprrxq                        0x0000558a1c404169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num > 10 && num < 100 {\n                    if num % 2 == 1 {\n           \
    \             count += 1\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpxu7jguba/tmpxu7jguba.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae194a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae19471fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae19471f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae19471e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxu7jguba                        0x0000557b3c3e06b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ae194c14460 __libc_start_main +
    245

    6    tmpxu7jguba                        0x0000557b3c3e0169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa4cfgdt5/tmpa4cfgdt5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af398177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af397e6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af397e6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af397e6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa4cfgdt5                        0x000055da333f36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af398363460 __libc_start_main +
    245

    6    tmpa4cfgdt5                        0x000055da333f3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 {\n                if\
    \ num % 3 == 0 || num % 5 == 0 {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpxjomuqop/tmpxjomuqop.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a4be75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a4bb6cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a4bb6c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a4bb6b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxjomuqop                        0x00005620037d85d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b7a4c061460 __libc_start_main +
    245

    6    tmpxjomuqop                        0x00005620037d8169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa4cfgdt5/tmpa4cfgdt5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af398177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af397e6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af397e6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af397e6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa4cfgdt5                        0x000055da333f36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af398363460 __libc_start_main +
    245

    6    tmpa4cfgdt5                        0x000055da333f3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 && num % 3 != 0 && num\
    \ % 5 != 0 {\n                count += 1\n            }\n        }\n    }\n  \
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkqnr1cvj/tmpkqnr1cvj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8537ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85377cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85377cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85377ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkqnr1cvj                        0x000055d85e9fb6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8537cc0460 __libc_start_main +
    245

    6    tmpkqnr1cvj                        0x000055d85e9fb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num / 10 % 2 == 1 {\n                    count += 1\n                }\n   \
    \         }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfs15s7hj/tmpfs15s7hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9595878c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b959556fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b959556f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b959556e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfs15s7hj                        0x0000556e572336b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b9595a64460 __libc_start_main +
    245

    6    tmpfs15s7hj                        0x0000556e57233169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 == 1 {\n                    if num % 5 == 1 {\n                    \
    \    count += 1\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu3agz0v9/tmpu3agz0v9.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09429d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09426c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09426c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09426c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3agz0v9                        0x0000563d1c0685d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b0942bbc460 __libc_start_main +
    245

    6    tmpu3agz0v9                        0x0000563d1c068169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 20 {\n                    count += 1\n                }\n      \
    \      }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpng5wpk99/tmpng5wpk99.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab32391ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab323615b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab323615988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3236147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpng5wpk99                        0x00005652507485d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ab323b0a460 __libc_start_main +
    245

    6    tmpng5wpk99                        0x0000565250748169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 0 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9g9om2ww/tmp9g9om2ww.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56df15ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56dee51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56dee51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56dee507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9g9om2ww                        0x00005628cf27c5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b56df346460 __libc_start_main +
    245

    6    tmp9g9om2ww                        0x00005628cf27c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa4cfgdt5/tmpa4cfgdt5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af398177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af397e6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af397e6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af397e6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa4cfgdt5                        0x000055da333f36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af398363460 __libc_start_main +
    245

    6    tmpa4cfgdt5                        0x000055da333f3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp43wxj1db/tmp43wxj1db.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b605d583c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b605d27ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b605d27a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b605d2797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43wxj1db                        0x00005591ac3845d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b605d76f460 __libc_start_main +
    245

    6    tmp43wxj1db                        0x00005591ac384169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 == 1 {\n                    if num % 5 == 1 {\n                    \
    \    count += 1\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu3agz0v9/tmpu3agz0v9.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09429d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09426c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09426c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09426c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3agz0v9                        0x0000563d1c0685d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b0942bbc460 __libc_start_main +
    245

    6    tmpu3agz0v9                        0x0000563d1c068169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 20 {\n                    count += 1\n                }\n      \
    \      }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpng5wpk99/tmpng5wpk99.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab32391ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab323615b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab323615988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3236147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpng5wpk99                        0x00005652507485d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ab323b0a460 __libc_start_main +
    245

    6    tmpng5wpk99                        0x0000565250748169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 2 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa4cfgdt5/tmpa4cfgdt5.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af398177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af397e6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af397e6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af397e6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa4cfgdt5                        0x000055da333f36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af398363460 __libc_start_main +
    245

    6    tmpa4cfgdt5                        0x000055da333f3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 && n % 7 == 1\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpdwmhzl8z/tmpdwmhzl8z.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7dfc2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7df926b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7df926988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7df9257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdwmhzl8z                        0x0000563ff1d975d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba7dfe1b460 __libc_start_main +
    245

    6    tmpdwmhzl8z                        0x0000563ff1d97169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 0 {\n                if\
    \ num % 3 != 0 || num % 5 != 0 {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6d0l159j/tmp6d0l159j.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b411108dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4110d84b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4110d84988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4110d837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6d0l159j                        0x000055e4fd8ea6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b4111279460 __libc_start_main +
    245

    6    tmp6d0l159j                        0x000055e4fd8ea169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 20 {\n                    count += 1\n                }\n      \
    \          if num > 20 && num < 30 {\n                    count += 1\n       \
    \         }\n                if num > 30 && num < 40 {\n                    count\
    \ += 1\n                }\n                if num > 40 && num < 50 {\n       \
    \             count += 1\n                }\n                if num > 50 && num\
    \ < 60 {\n                    count += 1\n                }\n                if\
    \ num > 60 && num < 70 {\n                    count += 1\n                }\n\
    \                if num > 70 && num < 80 {\n                    count += 1\n \
    \               }\n                if num > 80 && num < 90 {\n               \
    \     count += 1\n                }\n                if num > 90 {\n         \
    \           count += 1\n                }\n            }\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv4fwcxno/tmpv4fwcxno.swift:61: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b4391dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b43614b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b43614988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b436137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv4fwcxno                        0x00005581609185d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b7b43b09460 __libc_start_main +
    245

    6    tmpv4fwcxno                        0x0000558160918169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 != 0 || num % 5 != 0 {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpmkzi715k/tmpmkzi715k.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a8e8c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a8e5bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2a8e5bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2a8e5bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmkzi715k                        0x000055eff69eb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b2a8eab2460 __libc_start_main +
    245

    6    tmpmkzi715k                        0x000055eff69eb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 3 != 0 && num % 5 != 0 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprh679462/tmprh679462.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6294eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6291e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6291e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6291e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprh679462                        0x000055d3a5e015d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ac6296d6460 __libc_start_main +
    245

    6    tmprh679462                        0x000055d3a5e01169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 != 0 {\n                    if num % 5 != 0 {\n                    \
    \    count += 1\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp5bwg8jzm/tmp5bwg8jzm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6c66abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6c63a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6c63a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6c63a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5bwg8jzm                        0x00005572399635d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ac6c6897460 __libc_start_main +
    245

    6    tmp5bwg8jzm                        0x0000557239963169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 2 == 1 {\n                    count += 1\n                }\n        \
    \    }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmppgeri80g/tmppgeri80g.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e30389c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e30080b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e30080988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e3007f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppgeri80g                        0x0000564a035fe6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3e30575460 __libc_start_main +
    245

    6    tmppgeri80g                        0x0000564a035fe169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                count\
    \ += 1\n            }\n            if num % 2 == 0 {\n                if num >\
    \ 10 && num < 100 {\n                    count += 1\n                }\n     \
    \       }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpatfprrxq/tmpatfprrxq.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba519d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba519a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba519a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba519a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpatfprrxq                        0x0000558a1c4045d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba519f72460 __libc_start_main +
    245

    6    tmpatfprrxq                        0x0000558a1c404169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 10 == 1 {\n                    count += 1\n                }\n       \
    \     }\n            if num % 2 == 0 {\n                if num % 10 == 3 {\n \
    \                   count += 1\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkoq4r2wl/tmpkoq4r2wl.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002accf3f73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002accf3c6ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002accf3c6a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002accf3c697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkoq4r2wl                        0x000056522f62a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002accf415f460 __libc_start_main +
    245

    6    tmpkoq4r2wl                        0x000056522f62a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpz3gaj_4w/tmpz3gaj_4w.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4bc6b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4bc3b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4bc3b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4bc3af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz3gaj_4w                        0x000056330737f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ae4bc8a5460 __libc_start_main +
    245

    6    tmpz3gaj_4w                        0x000056330737f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 && n % 5 == 1 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb650_a_e/tmpb650_a_e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8259598c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825928fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825928f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825928e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb650_a_e                        0x00005609fd9a25d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b8259784460 __libc_start_main +
    245

    6    tmpb650_a_e                        0x00005609fd9a2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 != 0 && num % 3 != 0 && num % 5 != 0 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmprh679462/tmprh679462.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6294eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6291e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6291e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6291e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprh679462                        0x000055d3a5e015d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ac6296d6460 __libc_start_main +
    245

    6    tmprh679462                        0x000055d3a5e01169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009854
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 {\n            if num % 2 == 1 {\n                if\
    \ num % 3 == 1 {\n                    if num % 5 == 1 {\n                    \
    \    count += 1\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu3agz0v9/tmpu3agz0v9.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09429d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09426c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09426c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09426c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3agz0v9                        0x0000563d1c0685d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b0942bbc460 __libc_start_main +
    245

    6    tmpu3agz0v9                        0x0000563d1c068169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 == 1 && num % 5 == 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpye_kacqy/tmpye_kacqy.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad057953c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad05764ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad05764a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0576497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpye_kacqy                        0x000055ad97ed65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad057b3f460 __libc_start_main +
    245

    6    tmpye_kacqy                        0x000055ad97ed6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 2 == 1 {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcmh3_mcw/tmpcmh3_mcw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649a29bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6499f92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6499f92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6499f917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcmh3_mcw                        0x000055a48643f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b649a487460 __libc_start_main +
    245

    6    tmpcmh3_mcw                        0x000055a48643f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for num in nums\
    \ {\n        if num > 10 && num % 2 == 1 && num % 3 != 1 && num % 5 != 1 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv7_s36rc/tmpv7_s36rc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7875f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7875c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7875c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7875c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7_s36rc                        0x000055e881227797 <unavailable> + 6039

    5    libc.so.6                          0x00002b7876180460 __libc_start_main +
    245

    6    tmpv7_s36rc                        0x000055e881227169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    func specialFilter(nums: [Int]) -> Int {\n    var count = 0\n    for n in nums\
    \ {\n        if n > 10 && n % 2 == 1 && n % 3 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpzqysaxq7/tmpzqysaxq7.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77d2e1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77d2b16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77d2b16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77d2b157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzqysaxq7                        0x0000560186afb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b77d300b460 __libc_start_main +
    245

    6    tmpzqysaxq7                        0x0000560186afb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009853

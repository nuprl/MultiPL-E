name: HumanEval_70_strange_sort_list
language: swift
prompt: "\n/// Given list of integers, return list in strange order.\n/// Strange\
  \ sorting, is when you start with the minimum value,\n/// then maximum of the remaining\
  \ integers, then minimum and so on.\n/// Examples:\nfunc strange_sort_list(lst:\
  \ [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(strange_sort_list(lst: [1, 2, 3, 4]) ==\
  \ [1, 4, 2, 3])\nassert(strange_sort_list(lst: [5, 6, 7, 8, 9]) == [5, 9, 6, 8,\
  \ 7])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5]) == [1, 5, 2, 4, 3])\nassert(strange_sort_list(lst:\
  \ [5, 6, 7, 8, 9, 1]) == [1, 9, 5, 8, 6, 7])\nassert(strange_sort_list(lst: [5,\
  \ 5, 5, 5]) == [5, 5, 5, 5])\nassert(strange_sort_list(lst: [] as [Int]) == [] as\
  \ [Int])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5, 6, 7, 8]) == [1, 8, 2, 7,\
  \ 3, 6, 4, 5])\nassert(strange_sort_list(lst: [0, 2, 2, 2, 5, 5, -5, -5]) == [-5,\
  \ 5, -5, 5, 0, 2, 2, 2])\nassert(strange_sort_list(lst: [111111]) == [111111])"
completions: ["    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for num in lst {\n        if min > num {\n            min = num\n   \
    \     }\n        if max < num {\n            max = num\n        }\n    }\n   \
    \ for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            max = num\n        }\n    }\n    for num\
    \ in lst {\n        if min > num {\n            min = num\n        }\n       \
    \ if max < num {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if min > num {\n            min = num\n        }\n        if max\
    \ < num {\n            max = num\n        }\n    }\n    for num in lst {\n   \
    \     if min > num {\n            min = num\n        }\n        if max < num {\n\
    \            max = num\n        }\n    }\n    for num in lst {\n        if min\
    \ > num {\n            min = num\n        }\n        if max < num {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if min > num {\n\
    \            min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n", "    var result = [Int]()\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    for el in lst {\n        if el < min {\n    \
    \        min = el\n        }\n        if el > max {\n            max = el\n  \
    \      }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ at: 0)\n        } else if el == max {\n            result.insert(el, at: result.count\
    \ - 1)\n        } else {\n            result.insert(el, at: result.count - 1)\n\
    \            result.insert(el, at: 0)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var min: Int = Int.max\n    for el in lst {\n  \
    \      if el < min {\n            min = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == min {\n            continue\n        }\n        if el >\
    \ min {\n            result.insert(el, at: 0)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for x\
    \ in lst {\n        if x < min {\n            min = x\n        }\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    for x in lst {\n       \
    \ if x == min {\n            result.insert(x, at: 0)\n        }\n        if x\
    \ == max {\n            result.insert(x, at: result.count - 1)\n        }\n  \
    \  }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return lst2",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        }\n        if el > max {\n          \
    \  max = el\n        }\n    }\n    for el in lst {\n        if el < min {\n  \
    \          result.insert(el, at: 0)\n        }\n        if el > max {\n      \
    \      result.insert(el, at: result.count - 1)\n        }\n    }\n    return result",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n  \
    \  lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var lst2 = lst\n    for _ in 0..<lst.count {\n        lst2.remove(at:\
    \ 0)\n    }\n    return lst2", "    var result = [Int]()\n    var min: Int = 0\n\
    \    var max: Int = 0\n    for num in lst {\n        if num < min {\n        \
    \    min = num\n        }\n        if num > max {\n            max = num\n   \
    \     }\n    }\n    for num in lst {\n        if num == min {\n            result.insert(num,\
    \ at: 0)\n        }\n        if num == max {\n            result.insert(num, at:\
    \ result.count - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num ==\
    \ min {\n            result.insert(num, at: 0)\n        }\n        if num == max\
    \ {\n            result.insert(num, at: result.count - 1)\n        }\n    }\n\
    \    return result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for\
    \ number in lst {\n        if number > max {\n            max = number\n     \
    \   }\n        if number < min {\n            min = number\n        }\n    }\n\
    \    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n \
    \   }\n    for number in lst {\n        if number > max {\n            max = number\n\
    \        }\n        if number < min {\n            min = number\n        }\n",
  "    var lst2 = lst\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at:\
    \ 0)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 1)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 2)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 3)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 4)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 5)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 6)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 7)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 8)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 9)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 10)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 11)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 12)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 13)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 14)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 15)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 16)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 17)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at: lst2.count\
    \ - 18)\n    }\n    for _ in 0..<(lst2.count - 1) {\n        lst2.remove(at",
  "    var result = [Int]()\n    var min: Int = lst[0]\n    var max: Int = lst[0]\n\
    \    for x in lst {\n        if x < min {\n            min = x\n        }\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == min {\n            result.insert(x, 0)\n        }\n        if\
    \ x == max {\n            result.insert(x, 0)\n        }\n    }\n    for x in\
    \ lst {\n        if x == min {\n            result.insert(x, 0)\n        }\n \
    \       if x == max {\n            result.insert(x, 0)\n        }\n    }\n   \
    \ for x in lst {\n        if x == min {\n            result.insert(x, 0)\n   \
    \     }\n        if x == max {\n            result.insert(x, 0)\n        }\n \
    \   }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n", "    var result =\
    \ [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num == min {\n            result.insert(num, at: 0)\n        }\n        if num\
    \ == max {\n            result.insert(num, at: result.count - 1)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n\
    \    var max: Int = 0\n    for num in lst {\n        if num < min {\n        \
    \    min = num\n        }\n        if num > max {\n            max = num\n   \
    \     }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min: Int = Int.max\n   \
    \ for x in lst {\n        if x < min {\n            min = x\n        }\n    }\n\
    \    for x in lst {\n        if x == min {\n            continue\n        }\n\
    \        if x > min {\n            result.insert(x, at: 0)\n        } else {\n\
    \            result.insert(x, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = Int.max\n    var max:\
    \ Int = Int.min\n    for el in lst {\n        if el < min {\n            min =\
    \ el\n        }\n        if el > max {\n            max = el\n        }\n    }\n\
    \    for el in lst {\n        if el < min {\n            el = min\n        }\n\
    \        if el > max {\n            el = max\n        }\n        result.append(el)\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    for n in lst {\n        if n < min {\n      \
    \      min = n\n        }\n        if n > max {\n            max = n\n       \
    \ }\n    }\n    for n in lst {\n        if n < min {\n            min = n\n  \
    \      }\n        if n > max {\n            max = n\n        }\n    }\n    for\
    \ n in lst {\n        if n < min {\n            min = n\n        }\n        if\
    \ n > max {\n            max = n\n        }\n    }\n    for n in lst {\n     \
    \   if n < min {\n            min = n\n        }\n        if n > max {\n     \
    \       max = n\n        }\n    }\n    for n in lst {\n        if n < min {\n\
    \            min = n\n        }\n        if n > max {\n            max = n\n \
    \       }\n    }\n    for n in lst {\n        if n < min {\n            min =\
    \ n\n        }\n        if n > max {\n            max = n\n        }\n    }\n\
    \    for n in lst {\n        if n < min {\n            min = n\n        }\n  \
    \      if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n < min {\n            min = n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    for n in lst {\n        if n < min\
    \ {\n            min = n\n        }\n        if n > max {\n            max = n\n\
    \        }\n    }\n    for n in lst {\n        if n < min {\n            min =\
    \ n\n        }\n        if n > max {\n            max = n\n        }\n    }\n\
    \    for n in lst {\n        if n < min {\n            min = n\n        }\n  \
    \      if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n < min {\n            min = n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    for n in lst {\n        if n < min\
    \ {\n            min = n\n        }\n        if n > max {\n            max = n\n\
    \        }\n    }\n    for n in lst {\n        if n < min {\n            min =\
    \ n\n        }\n        if n > max {\n            max = n\n        }\n    }\n\
    \    for n in lst {\n        if n < min {\n            min = n\n        }\n  \
    \      if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n < min {\n            min = n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    for n in lst {\n        if ", "  \
    \  var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num < min {\n            min = num\n        }\n        if num\
    \ > max {\n            max = num\n        }\n    }\n    for num in lst {\n   \
    \     if num < min {\n            min = num\n        }\n        if num > max {\n\
    \            max = num\n        }\n    }\n    for num in lst {\n        if num\
    \ < min {\n            min = num\n        }\n        if num > max {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if num < min {\n\
    \            min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n",
  "    var result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n\
    \    for x in lst {\n        if x < min {\n            min = x\n        }\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == min {\n            result.insert(x, at: 0)\n        }\n     \
    \   if x == max {\n            result.insert(x, at: result.count - 1)\n      \
    \  }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        } else if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        } else {\n            result.insert(value, at:\
    \ result.count)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        } else if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        } else {\n            result.insert(value, at:\
    \ result.count - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n\
    \    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n   \
    \ return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var\
    \ result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for x in lst\
    \ {\n        if x < min {\n            min = x\n        }\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    for x in lst {\n        if x ==\
    \ min {\n            result.insert(x, at: 0)\n        }\n        if x == max {\n\
    \            result.insert(x, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    for _ in\
    \ 0..<(lst2.count - 1) {\n        let minIndex = lst2.index(of: lst2.min())!\n\
    \        let maxIndex = lst2.index(of: lst2.max())!\n        lst2.remove(at: minIndex)\n\
    \        lst2.remove(at: maxIndex)\n        lst2.insert(lst2.min(), at: minIndex)\n\
    \        lst2.insert(lst2.max(), at: maxIndex)\n    }\n    return lst2", "   \
    \ var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ at: 0)\n            minValue = value\n        } else if value > maxValue {\n\
    \            result.insert(maxValue, at: 0)\n            maxValue = value\n  \
    \      } else {\n            result.insert(value, at: 0)\n        }\n    }\n \
    \   return result.sorted()", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue\
    \ = lst[0]\n    for value in lst {\n        if value < minValue {\n          \
    \  minValue = value\n        }\n        if value > maxValue {\n            maxValue\
    \ = value\n        }\n    }\n    for value in lst {\n        if value < minValue\
    \ {\n            result.insert(value, at: 0)\n        }\n        if value > maxValue\
    \ {\n            result.insert(value, at: result.count - 1)\n        }\n    }\n\
    \    for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n        if value > maxValue {\n          \
    \  result.insert(value, at: 0)\n        }\n    }\n    return result", "    var\
    \ lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n \
    \   var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: result.count - 1)\n\
    \        }\n        if value > maxValue {\n            result.insert(value, at:\
    \ 0)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for num in lst {\n        if min\
    \ == nil || num < min! {\n            min = num\n        }\n        if max ==\
    \ nil || num > max! {\n            max = num\n        }\n    }\n    if min ==\
    \ nil || max == nil {\n        return result\n    }\n    for num in lst {\n  \
    \      if num == min! {\n            result.insert(num, at: 0)\n        }\n  \
    \      if num == max! {\n            result.insert(num, at: result.count - 1)\n\
    \        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n", "    var result\
    \ = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n    for x\
    \ in lst {\n        if x < min {\n            min = x\n        }\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    for x in lst {\n       \
    \ if x == min {\n            result.insert(x, at: 0)\n        }\n        if x\
    \ == max {\n            result.insert(x, at: result.count - 1)\n        }\n  \
    \  }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return lst2",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n  \
    \  lst2.sort()\n    return lst2", "    var result = [Int]()\n    var min = lst[0]\n\
    \    var max = lst[0]\n    for el in lst {\n        if el < min {\n          \
    \  min = el\n        }\n        if el > max {\n            max = el\n        }\n\
    \    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ at: 0)\n        }\n        if el == max {\n            result.insert(el, at:\
    \ result.count - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var minValue = lst[0]\n    var\
    \ maxValue = lst[0]\n    for value in lst {\n        if value < minValue {\n \
    \           result.appendContentsOf(Array(minValue...value))\n            minValue\
    \ = value\n        } else if value > maxValue {\n            result.appendContentsOf(Array(maxValue...value))\n\
    \            maxValue = value\n        } else {\n            result.appendContentsOf(Array(minValue...maxValue))\n\
    \            minValue = maxValue\n            maxValue = value\n        }\n  \
    \  }\n    result.appendContentsOf(Array(minValue...maxValue))\n    return result",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: result.count - 1)\n\
    \        }\n        if value > maxValue {\n            result.insert(value, at:\
    \ 0)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el < min\
    \ {\n            min = el\n        }\n        if el > max {\n            max =\
    \ el\n        }\n    }\n    for el in lst {\n        if el == min {\n        \
    \    result.insert(el, at: 0)\n        }\n        if el == max {\n           \
    \ result.insert(el, at: result.count - 1)\n        }\n    }\n    return result",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n  \
    \  lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result\
    \ = [Int]()\n    var min: Int? = nil\n    var max: Int? = nil\n    for x in lst\
    \ {\n        if x == nil {\n            continue\n        }\n        if min ==\
    \ nil || x < min {\n            min = x\n        }\n        if max == nil || x\
    \ > max {\n            max = x\n        }\n    }\n    if min == nil {\n      \
    \  return lst\n    }\n    if max == nil {\n        return lst\n    }\n    for\
    \ x in lst {\n        if x == nil {\n            continue\n        }\n       \
    \ if x == min {\n            result.insert(x, 0)\n        }\n        if x == max\
    \ {\n            result.insert(x, result.count - 1)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result\
    \ = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n    for x\
    \ in lst {\n        if x < min {\n            min = x\n        }\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    for x in lst {\n       \
    \ if x == min {\n            result.insert(x, at: 0)\n        }\n        if x\
    \ == max {\n            result.insert(x, at: result.count - 1)\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    for x in lst {\n        if x < min {\n      \
    \      min = x\n        }\n        if x > max {\n            max = x\n       \
    \ }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ at: 0)\n        }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: result.count - 1)\n\
    \        }\n        if value > maxValue {\n            result.insert(value, at:\
    \ 0)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var result = [Int]()\n    var min: Int = Int.max\n    for num in lst {\n \
    \       if num < min {\n            min = num\n        }\n    }\n    for num in\
    \ lst {\n        if num > min {\n            result.insert(num, at: 0)\n     \
    \   }\n    }\n    for num in lst {\n        if num < min {\n            result.insert(num,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    for _ in 0..<(lst2.count - 1) {\n\
    \        let minIndex = lst2.index(of: lst2.min())!\n        let maxIndex = lst2.index(of:\
    \ lst2.max())!\n        lst2.remove(at: minIndex)\n        lst2.remove(at: maxIndex)\n\
    \    }\n    return lst2", "    var result = [Int]()\n    var min: Int? = nil\n\
    \    var max: Int? = nil\n    for x in lst {\n        if x == nil {\n        \
    \    continue\n        }\n        if min == nil || x < min {\n            min\
    \ = x\n        }\n        if max == nil || x > max {\n            max = x\n  \
    \      }\n    }\n    if min == nil {\n        return result\n    }\n    if max\
    \ == nil {\n        return strange_sort_list(lst.reversed())\n    }\n    for x\
    \ in lst {\n        if x == nil {\n            continue\n        }\n        if\
    \ x == min {\n            result.append(self[min!])\n            min! = nil\n\
    \        }\n        if x == max {\n            result.append(self[max!])\n   \
    \         max! = nil\n        }\n    }\n    if min != nil {\n        result.append(self[min!])\n\
    \    }\n    if max != nil {\n        result.append(self[max!])\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = Int.max\n    var max:\
    \ Int = Int.min\n    for x in lst {\n        if x < min {\n            min = x\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == min {\n            result.insert(x, at: 0)\n   \
    \     }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var result = [Int]()\n    var min: Int? = nil\n    var max: Int? = nil\n \
    \   for num in lst {\n        if min == nil || num < min! {\n            min =\
    \ num\n        }\n        if max == nil || num > max! {\n            max = num\n\
    \        }\n    }\n    if min != nil {\n        result.insert(min!, at: 0)\n \
    \   }\n    if max != nil {\n        result.insert(max!, at: result.count - 1)\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n\
    \    var max: Int = 0\n    for num in lst {\n        if num < min {\n        \
    \    min = num\n        }\n        if num > max {\n            max = num\n   \
    \     }\n    }\n    for num in lst {\n        if num < min {\n            result\
    \ += [num]\n        }\n        if num > max {\n            result += [num]\n \
    \       }\n    }\n    for num in lst {\n        if num < max {\n            result\
    \ += [num]\n        }\n        if num > min {\n            result += [num]\n \
    \       }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = Int.max\n    var max: Int = Int.min\n    for x in lst {\n        if x\
    \ < min {\n            min = x\n        }\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    for x in lst {\n        if x == min {\n         \
    \   result.insert(x, at: 0)\n        }\n        if x == max {\n            result.insert(x,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min {\n\
    \            min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, at: 0)\n        }\n        if num == max {\n            result.insert(num,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(value, at: 0)\n    \
    \    }\n        if value > maxValue {\n            result.insert(value, at: result.count\
    \ - 1)\n        }\n    }\n    for value in lst {\n        if value < minValue\
    \ {\n            result.insert(value, at: result.count - 1)\n        }\n     \
    \   if value > maxValue {\n            result.insert(value, at: 0)\n        }\n\
    \    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return lst2",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num == min {\n            result.insert(num, at: 0)\n        }\n\
    \        if num == max {\n            result.insert(num, at: result.count - 1)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = Int.max\n    var max: Int = Int.min\n    for x in lst {\n        if x\
    \ < min {\n            min = x\n        }\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    for x in lst {\n        if x == min {\n         \
    \   result.insert(x, at: 0)\n        }\n        if x == max {\n            result.insert(x,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var min:\
    \ Int = Int.max\n    var max: Int = Int.min\n    for x in lst {\n        if x\
    \ < min {\n            min = x\n        }\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    for x in lst {\n        if x == min {\n         \
    \   result.insert(x, at: 0)\n        }\n        if x == max {\n            result.insert(x,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        } else if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(value, at: 0)\n    \
    \    } else if value > maxValue {\n            result.insert(value, at: result.count\
    \ - 1)\n        } else {\n            result.insert(value, at: result.count -\
    \ 1)\n            result.insert(value, at: 0)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n\
    \    for x in lst {\n        if x < min {\n            min = x\n        }\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == min {\n            result.insert(x, at: 0)\n        }\n     \
    \   if x == max {\n            result.insert(x, at: result.count - 1)\n      \
    \  }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var\
    \ min: Int = Int.max\n    for el in lst {\n        if el < min {\n           \
    \ min = el\n        }\n    }\n    for el in lst {\n        if el == min {\n  \
    \          result.insert(el, at: 0)\n        } else {\n            result.insert(el,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var min: Int? = nil\n    for el in lst {\n        if min == nil\
    \ || el < min {\n            min = el\n        }\n    }\n    if min != nil {\n\
    \        result.insert(min, at: 0)\n    }\n    for el in lst {\n        if el\
    \ != min {\n            result.insert(el, at: 0)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result\
    \ = [Int]()\n    var min: Int? = nil\n    var max: Int? = nil\n    for n in lst\
    \ {\n        if min == nil || n < min {\n            min = n\n        }\n    \
    \    if max == nil || n > max {\n            max = n\n        }\n    }\n    if\
    \ min != nil {\n        result.insert(min, 0)\n    }\n    if max != nil {\n  \
    \      result.insert(max, result.count - 1)\n    }\n    return result", "    var\
    \ lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n \
    \   var min: Int = Int.max\n    for el in lst {\n        if el < min {\n     \
    \       min = el\n        }\n    }\n    for el in lst {\n        if el == min\
    \ {\n            continue\n        }\n        if el > min {\n            result.insert(el,\
    \ at: 0)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var min: Int = Int.max\n    for x in lst {\n        if x < min {\n      \
    \      min = x\n        }\n    }\n    for x in lst {\n        if x == min {\n\
    \            continue\n        }\n        if x > min {\n            result.append(min)\n\
    \        }\n        result.append(x)\n    }\n    return result", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var\
    \ min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num == min {\n   \
    \         result.insert(num, at: 0)\n        }\n        if num == max {\n    \
    \        result.insert(num, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = Int.max\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n    }\n\
    \    for num in lst {\n        if num > min {\n            result.insert(num,\
    \ at: 0)\n        }\n    }\n    for num in lst {\n        if num < min {\n   \
    \         result.insert(num, at: 0)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(value, at: 0)\n        } else if value > maxValue {\n\
    \            result.insert(value, at: result.count - 1)\n        } else {\n  \
    \          result.insert(value, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var min: Int = Int.max\n    var max: Int = Int.min\n    for el in lst {\n\
    \        if el < min {\n            min = el\n        }\n        if el > max {\n\
    \            max = el\n        }\n    }\n    for el in lst {\n        if el <\
    \ min {\n            result.insert(el, at: 0)\n        }\n        if el > max\
    \ {\n            result.insert(el, at: result.count - 1)\n        }\n    }\n \
    \   return result", "    var result = [Int]()\n    var minValue = lst[0]\n   \
    \ var maxValue = lst[0]\n    for value in lst {\n        if value < minValue {\n\
    \            minValue = value\n        }\n        if value > maxValue {\n    \
    \        maxValue = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: 0)\n        } else\
    \ if value > maxValue {\n            result.insert(value, at: result.count - 1)\n\
    \        } else {\n            result.insert(value, at: result.count - 1)\n  \
    \      }\n    }\n    return result", "    var lst2 = lst\n    for _ in 0..<(lst2.count\
    \ - 1) {\n        let min = lst2.min()!\n        let max = lst2.max()!\n     \
    \   lst2.remove(at: 0)\n        lst2.remove(at: 0)\n        lst2.append(min)\n\
    \        lst2.append(max)\n    }\n    return lst2", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ at: 0)\n        }\n        result.append(value)\n    }\n    return result",
  "    var lst2 = lst\n    for index in 0..<lst.count {\n        if lst[index] < lst[index\
    \ + 1] {\n            lst2.swapAt(index, index + 1)\n        }\n    }\n    return\
    \ lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for el in lst {\n        if min\
    \ == nil || el < min {\n            min = el\n        }\n        if max == nil\
    \ || el > max {\n            max = el\n        }\n    }\n    if min != nil {\n\
    \        result.insert(min!, at: 0)\n    }\n    if max != nil {\n        result.insert(max!,\
    \ at: result.count - 1)\n    }\n    return result", "    var result = [Int]()\n\
    \    var min = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        }\n        if el > max {\n          \
    \  max = el\n        }\n    }\n    for el in lst {\n        if el < min {\n  \
    \          result.insert(el, at: 0)\n        }\n        if el > max {\n      \
    \      result.insert(el, at: result.count - 1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = Int.max\n    for v in lst {\n    \
    \    if v < min {\n            min = v\n        }\n    }\n    for v in lst {\n\
    \        if v > min {\n            result.insert(v, at: 0)\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            result.insert(v, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min = lst[0]\n    var max\
    \ = lst[0]\n    for v in lst {\n        if v < min {\n            min = v\n  \
    \      }\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ v in lst {\n        if v < min {\n            min = v\n        }\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for v in lst {\n     \
    \   if v < min {\n            min = v\n        }\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    for v in lst {\n        if v < min {\n\
    \            min = v\n        }\n        if v > max {\n            max = v\n \
    \       }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v\n        }\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v\n        }\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v", "    var lst2 = lst\n    for _ in 0..<(lst2.count -\
    \ 1) {\n        let minIndex = lst2.index(of: lst2.minElement()!)\n        let\
    \ maxIndex = lst2.index(of: lst2.maxElement()!)\n        lst2.remove(at: minIndex)\n\
    \        lst2.remove(at: maxIndex)\n    }\n    return lst2", "    var lst2 = lst\n\
    \    lst2.sort()\n    return lst2", "    var result = [Int]()\n    var min: Int\
    \ = Int.max\n    var max: Int = Int.min\n    for el in lst {\n        if el <\
    \ min {\n            min = el\n        }\n        if el > max {\n            max\
    \ = el\n        }\n    }\n    for el in lst {\n        if el == min {\n      \
    \      result.insert(el, at: 0)\n        }\n        if el == max {\n         \
    \   result.insert(el, at: result.count - 1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(value, at: 0)\n        } else if value > maxValue {\n\
    \            result.insert(value, at: result.count - 1)\n        } else {\n  \
    \          result.insert(value, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = Int.max\n    var max:\
    \ Int = Int.min\n    for x in lst {\n        if x < min {\n            min = x\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == min {\n            result.insert(x, at: 0)\n   \
    \     }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min = lst[0]\n    var max\
    \ = lst[0]\n    for el in lst {\n        if el < min {\n            min = el\n\
    \        }\n        if el > max {\n            max = el\n        }\n    }\n  \
    \  for el in lst {\n        if el == min {\n            result.insert(el, at:\
    \ 0)\n        }\n        if el == max {\n            result.insert(el, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ at: result.count - 1)\n        }\n        result.append(value)\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var min = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        }\n        if el > max {\n          \
    \  max = el\n        }\n    }\n    for el in lst {\n        if el < min {\n  \
    \          result.insert(el, at: 0)\n        }\n        if el > max {\n      \
    \      result.insert(el, at: result.count - 1)\n        }\n    }\n    return result",
  "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n  \
    \  lst2.sort()\n    return lst2", "    var result = [Int]()\n    var min: Int\
    \ = Int.max\n    var max: Int = Int.min\n    for x in lst {\n        if x < min\
    \ {\n            min = x\n        }\n        if x > max {\n            max = x\n\
    \        }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ at: 0)\n        }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el < min\
    \ {\n            min = el\n        } else if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ at: 0)\n        } else if el == max {\n            result.insert(el, at: result.count\
    \ - 1)\n        } else {\n            result.insert(el, at: result.count - 1)\n\
    \        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var minValue = lst[0]\n    var\
    \ maxValue = lst[0]\n    for value in lst {\n        if value < minValue {\n \
    \           minValue = value\n        }\n        if value > maxValue {\n     \
    \       maxValue = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: 0)\n        } else\
    \ if value > maxValue {\n            result.insert(value, at: result.count - 1)\n\
    \        } else {\n            result.insert(value, at: result.count - 1)\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min {\n  \
    \          min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, at: 0)\n        }\n        if num == max {\n            result.insert(num,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value\
    \ in lst {\n        if value < minValue {\n            minValue = value\n    \
    \    }\n        if value > maxValue {\n            maxValue = value\n        }\n\
    \    }\n    for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: result.count - 1)\n\
    \        }\n        if value > maxValue {\n            result.insert(value, at:\
    \ 0)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    for el in lst {\n        if min == nil || el < min! {\n\
    \            min = el\n        }\n    }\n    if min == nil {\n        return result\n\
    \    }\n    for el in lst {\n        if el == min! {\n            continue\n \
    \       }\n        if el > min! {\n            result.insert(el, at: 0)\n    \
    \    }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n    return\
    \ lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var lst2\
    \ = lst\n    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        } else if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        } else {\n            result.insert(value, at:\
    \ result.count)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        } else if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        } else {\n            result.insert(value, at:\
    \ result.count - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n\
    \    lst2.sort()\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n   \
    \ return lst2", "    var lst2 = lst\n    for _ in 0..<lst.count {\n        lst2.remove(at:\
    \ 0)\n    }\n    return lst2", "    var result = [Int]()\n    var min: Int? =\
    \ nil\n    for el in lst {\n        if min == nil || el < min {\n            min\
    \ = el\n        }\n    }\n    if min != nil {\n        result.insert(min, at:\
    \ 0)\n    }\n    var max = min\n    for el in lst {\n        if el > max {\n \
    \           max = el\n        }\n    }\n    if max != nil {\n        result.insert(max,\
    \ at: result.count - 1)\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n", "    var result\
    \ = [Int]()\n    var min: Int = Int.max\n    for x in lst {\n        if x < min\
    \ {\n            min = x\n        }\n    }\n    for x in lst {\n        if x ==\
    \ min {\n            continue\n        }\n        if x > min {\n            result.insert(x,\
    \ at: 0)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min: Int = Int.max\n   \
    \ var max: Int = Int.min\n    for x in lst {\n        if x < min {\n         \
    \   min = x\n        }\n        if x > max {\n            max = x\n        }\n\
    \    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ at: 0)\n        }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        }\n        if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, at: result.count - 1)\n\
    \        }\n        if value > maxValue {\n            result.insert(value, at:\
    \ 0)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", " \
    \   var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ at: 0)\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, at: 0)\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, at: 0)\n            minValue = value\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, at:\
    \ 0)\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(minValue, at: 0)\n \
    \           minValue = value\n        }\n        if value > maxValue {\n     \
    \       result.insert(maxValue, at: 0)\n            maxValue = value\n       \
    \ }\n    }\n    for value in lst {\n        if value < minValue {\n          \
    \  result.insert(minValue, at: 0)\n            minValue = value\n        }\n \
    \       if value > maxValue {\n            result.insert(maxValue, at: 0)\n  \
    \          maxValue = value\n        }\n    }\n    for value in lst {\n      \
    \  if value < minValue {\n            result.insert(minValue, at: 0)\n       \
    \     minValue = value\n        }\n        if value > maxValue {\n           \
    \ result.insert(maxValue, at: 0)\n            maxValue = value\n        }\n  \
    \  }\n    for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ at: 0)\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, at: 0)\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, at: 0)\n            minValue = value\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, at:\
    \ 0)\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(minValue, at: 0)\n \
    \           minValue = value\n        }\n        if value > maxValue {\n     \
    \       result.insert(maxValue, at: 0)\n            maxValue = value\n       \
    \ }\n    }\n    for value in lst {\n        if value < minValue {\n          \
    \  result.insert(minValue, at: 0)\n            minValue = value\n        }\n \
    \       if value > maxValue {\n            result.insert(maxValue, at: 0)\n  \
    \          maxValue = value\n        }\n    }\n    for value in lst {\n      \
    \  if value < minValue {\n            result.insert(minValue, at: 0)", "    var\
    \ result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n \
    \   for num in lst {\n        if num < min {\n            min = num\n        }\n\
    \        if num > max {\n            max = num\n        }\n    }\n    for num\
    \ in lst {\n        if num < min {\n            result.insert(num, at: 0)\n  \
    \      }\n        if num > max {\n            result.insert(num, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min: Int = Int.max\n   \
    \ var max: Int = Int.min\n    for num in lst {\n        if num < min {\n     \
    \       min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, at: 0)\n        }\n        if num == max {\n            result.insert(num,\
    \ at: result.count - 1)\n        }\n    }\n    return result", "    var lst2 =\
    \ lst\n    for index in 0..<lst2.count {\n        let min = lst2[index]\n    \
    \    var lst3 = lst2\n        for index2 in 0..<lst3.count {\n            if lst3[index2]\
    \ < min {\n                lst3 = lst3.filter{ $0 != min }\n                lst3\
    \ = lst3.filter{ $0 != lst3[index2] }\n                lst3 = lst3.filter{ $0\
    \ != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2] }\n\
    \                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }\n                lst3 = lst3.filter{ $0 != min }\n                lst3 = lst3.filter{\
    \ $0 != lst2[index] }\n                lst3 = lst3.filter{ $0 != lst2[index2]\
    \ }", "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue =\
    \ lst[0]\n    for value in lst {\n        if value < minValue {\n            minValue\
    \ = value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(value, at: 0)\n        }\n        if value > maxValue\
    \ {\n            result.insert(value, at: result.count - 1)\n        }\n    }\n\
    \    for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        }\n        if value > maxValue {\n          \
    \  result.insert(value, at: 0)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var min: Int = Int.max\n    for value in lst {\n     \
    \   if value < min {\n            min = value\n        }\n    }\n    for value\
    \ in lst {\n        if value > min {\n            result.insert(value, at: 0)\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    result.insert(value, at: 0)\n        }\n    }\n    return result", "    var\
    \ lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n \
    \   var min: Int? = nil\n    for n in lst {\n        if min == nil || n < min\
    \ {\n            min = n\n        }\n    }\n    if min != nil {\n        result.insert(min,\
    \ at: 0)\n    }\n    for n in lst {\n        if min == nil || n > min {\n    \
    \        result.insert(n, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    for _ in 0..<(lst2.count - 1) {\n        let\
    \ minIndex = lst2.index(of: lst2.min())!\n        let maxIndex = lst2.index(of:\
    \ lst2.max())!\n        lst2.remove(at: minIndex)\n        lst2.remove(at: maxIndex)\n\
    \    }\n    return lst2", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(value, at: 0)\n        }\n\
    \        if value > maxValue {\n            result.insert(value, at: result.count\
    \ - 1)\n        }\n    }\n    for value in lst {\n        if value < minValue\
    \ {\n            result.insert(value, at: result.count - 1)\n        }\n     \
    \   if value > maxValue {\n            result.insert(value, at: 0)\n        }\n\
    \    }\n    return result", "    var lst2 = lst\n    for _ in 0..<(lst2.count\
    \ - 1) {\n        let minIndex = lst2.index(of: lst2.min())!\n        let maxIndex\
    \ = lst2.index(of: lst2.max())!\n        lst2.remove(at: minIndex)\n        lst2.remove(at:\
    \ maxIndex)\n    }\n    return lst2", "    var lst2 = lst\n    lst2.sort()\n \
    \   return lst2", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "  \
    \  var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result = [Int]()\n\
    \    var min: Int = Int.max\n    var max: Int = Int.min\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num < min {\n            min = num\n        }\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if num < min {\n            min = num\n        }\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num < min\
    \ {\n            min = num\n        }\n        if num > max {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num < min {\n    \
    \        min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num < min {\n            min = num\n\
    \        }\n        if num > max {\n", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min: Int = lst[0]\n    var\
    \ max: Int = lst[0]\n    for el in lst {\n        if el < min {\n            min\
    \ = el\n        }\n        if el > max {\n            max = el\n        }\n  \
    \  }\n    for el in lst {\n        if el < min {\n            result.insert(min,\
    \ el)\n        }\n        if el > max {\n            result.insert(max, el)\n\
    \        }\n    }\n    return result", "    var lst2 = lst\n    lst2.sort()\n\
    \    return lst2", "    var result = [Int]()\n    var min: Int = Int.max\n   \
    \ var max: Int = Int.min\n    for el in lst {\n        if el < min {\n       \
    \     min = el\n        }\n        if el > max {\n            max = el\n     \
    \   }\n    }\n    for el in lst {\n        if el < min {\n            min = el\n\
    \        }\n        if el > max {\n            max = el\n        }\n    }\n  \
    \  for el in lst {\n        if el < min {\n            min = el\n        }\n \
    \       if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el < min {\n            min = el\n        }\n        if el > max\
    \ {\n            max = el\n        }\n    }\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        }\n        if el > max {\n          \
    \  max = el\n        }\n    }\n    for el in lst {\n        if el < min {\n  \
    \          min = el\n        }\n        if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el < min {\n            min\
    \ = el\n        }\n        if el > max {\n            max = el\n        }\n  \
    \  }\n    for el in lst {\n        if el < min {\n            min = el\n     \
    \   }\n        if el > max {\n            max = el\n        }\n    }\n    for\
    \ el in lst {\n        if el < min {\n            min = el\n        }\n      \
    \  if el > max {\n            max = el\n        }\n    }\n    for el in lst {\n\
    \        if el < min {\n            min = el\n        }\n        if el > max {\n\
    \            max = el\n        }\n    }\n    for el in lst {\n        if el <\
    \ min {\n            min = el\n        }\n        if el > max {\n            max\
    \ = el\n        }\n    }\n    for el in lst {\n        if el < min {\n       \
    \     min = el\n        }\n        if el > max {\n            max = el\n     \
    \   }\n    }\n    for el in lst {\n        if el < min {\n            min = el\n\
    \        }\n        if el > max {\n            max = el\n        }\n    }\n  \
    \  for el in lst {\n        if el < min {\n            min = el\n        }\n \
    \       if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el < min {\n            min = el\n        }\n        if el > max\
    \ {\n", "    var result = [Int]()\n    var min: Int? = nil\n    var max: Int?\
    \ = nil\n    for el in lst {\n        if min == nil || el < min {\n          \
    \  min = el\n        }\n        if max == nil || el > max {\n            max =\
    \ el\n        }\n    }\n    if min != nil {\n        result.insert(min, 0)\n \
    \   }\n    if max != nil {\n        result.insert(max, result.count-1)\n    }\n\
    \    return result", "    var result = [Int]()\n    var min: Int = lst[0]\n  \
    \  var max: Int = lst[0]\n    for x in lst {\n        if x < min {\n         \
    \   min = x\n        }\n        if x > max {\n            max = x\n        }\n\
    \    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ at: 0)\n        }\n        if x == max {\n            result.insert(x, at: result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num == min {\n   \
    \         result.insert(num, at: 0)\n        }\n        if num == max {\n    \
    \        result.insert(num, at: result.count - 1)\n        }\n    }\n    return\
    \ result", "    var lst2 = lst\n    lst2.sort()\n    return lst2", "    var result\
    \ = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value\
    \ in lst {\n        if value < minValue {\n            minValue = value\n    \
    \    }\n        if value > maxValue {\n            maxValue = value\n        }\n\
    \    }\n    for value in lst {\n        if value < minValue {\n            result.insert(value,\
    \ at: 0)\n        } else if value > maxValue {\n            result.insert(value,\
    \ at: result.count - 1)\n        } else {\n            result.insert(value, at:\
    \ result.count)\n        }\n    }\n    return result", "    var lst2 = lst\n \
    \   lst2.sort()\n    return lst2"]
stop_tokens:
- "\n}"

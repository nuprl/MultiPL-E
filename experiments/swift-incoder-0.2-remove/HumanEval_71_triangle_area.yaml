name: HumanEval_71_triangle_area
language: swift
prompt: "\n/// Given the lengths of the three sides of a triangle. Return the area\
  \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
  \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
  func triangle_area(a: Int, b: Int, c: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\n\
  assert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8,\
  \ c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
  \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
  \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
  \ 2, b: 2, c: 10) == -1)"
completions: ["    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2\n    if area > 0 {\n        return round(area *\
    \ 100) / 100\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return\
    \ Double(round(side1 + side2))\n    } else {\n        return -1\n    }", "   \
    \ var a = a\n    var b = b\n    var c = c\n    var area: Double = 0\n    if a\
    \ + b > c {\n        a = b\n        b = c\n        c = a\n    }\n    if a + c\
    \ > b {\n        a = c\n        c = b\n        b = a\n    }\n    if b + c > a\
    \ {\n        b = c\n        c = a\n        a = b\n    }\n    area = (a * b * c)\
    \ / Double(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    return area", "    let sides\
    \ = a + b + c\n    if sides == 0 {\n        return -1\n    }\n    let area = Double(sides)\
    \ / Double(3.0)\n    if area > 1.0 {\n        return round(area, 2)\n    } else\
    \ {\n        return area\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n\
    \        return round(area * 100) / 100\n    } else {\n        return -1\n   \
    \ }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 +\
    \ side2 > side3 {\n        return Double(round(side1 + side2) / 2) / 2\n    }\
    \ else {\n        return -1\n    }", "    var sum: Double = 0\n    sum += a\n\
    \    sum += b\n    sum += c\n    if sum > c {\n        return sum\n    } else\
    \ {\n        return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a * b * 0.5)\n    } else\
    \ {\n        return Double(-1 * c * b)\n    }", "    if a + b > c {\n        return\
    \ Double(-1) / Double(Double.max)\n    }\n    if a + c > b {\n        return Double(-1)\
    \ / Double(Double.max)\n    }\n    if b + c > a {\n        return Double(-1) /\
    \ Double(Double.max)\n    }\n    return Double(a * b * c) / Double(Double.pi)",
  "    let sum = a + b + c\n    if sum > c {\n        return -1\n    }\n    if sum\
    \ < c {\n        return -1\n    }\n    if sum < b {\n        return -1\n    }\n\
    \    if sum < a {\n        return -1\n    }\n    return Double(sqrt(Double(sum)\
    \ * Double(sum - b - c)))", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n   \
    \ let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area = (side1 + side2 + side3) / 2\n    if area > 0 {\n       \
    \ return area\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 * side2 * side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    if a + b > c {\n        return Double(sqrt(pow((a\
    \ + b), 2) + pow((c - a), 2)))\n    }\n    if a + c > b {\n        return Double(sqrt(pow((a\
    \ + c), 2) + pow((b - a), 2)))\n    }\n    if b + c > a {\n        return Double(sqrt(pow((b\
    \ + c), 2) + pow((a - b), 2)))\n    }\n    return -1", "    let a1 = abs(a)\n\
    \    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 + b1 > c1 {\n        return\
    \ Double(a1 * b1 / c1)\n    } else {\n        return -1\n    }", "    var sum:\
    \ Double = 0\n    sum += a\n    sum += b\n    sum += c\n    if sum > c {\n   \
    \     return Double(sum - c) / 2\n    } else {\n        return -1\n    }", " \
    \   let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) +\
    \ pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2\
    \ > side3 {\n        return Double(round(side1 + side2) / 2) / 2\n    } else {\n\
    \        return -1\n    }", "    let area: Double = Double(a * b * c) / Double(2\
    \ * a * b + b * c + c * a + a * b + b * c)\n    return area", "    var sum: Double\
    \ = 0\n    sum += a\n    sum += b\n    sum += c\n    if sum > c {\n        return\
    \ Double(sum)\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 * side2 * side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    if a + b > c {\n        return Double(sqrt(pow((b\
    \ * b) - (4 * a * c), 0.5)))\n    } else {\n        return -1\n    }", "    let\
    \ sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return Double(sum)\n    }\n    return -1", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area = side1 + side2 + side3\n    if area > 0 {\n        return\
    \ Double(area)\n    } else {\n        return -1\n    }", "    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 =\
    \ sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n \
    \   let area: Double = side1 * side2 * side3\n    if area > 0 {\n        return\
    \ round(area)\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2\n\
    \    if area > 0 {\n        return round(area)\n    } else {\n        return -1\n\
    \    }", "    if a + b > c {\n        return Double(a + b - c)\n    }\n    if\
    \ a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n \
    \       return Double(b + c - a)\n    }\n    return -1", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return\
    \ Double(round(side1 + side2) / 2) / 2\n    } else {\n        return -1\n    }",
  "    let sides = a + b + c\n    if sides > 0 {\n        let area = Double(a * b\
    \ * c) / sides\n        return round(area, 2)\n    }\n    return -1", "    var\
    \ area: Double = 0\n    if a + b > c {\n        area = (a * b) / c\n    } else\
    \ {\n        area = -1\n    }\n    return area", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let sides = a + b + c\n    if sides % 2 == 0 {\n\
    \        return Double(sides / 2)\n    } else {\n        return -1\n    }", " \
    \   if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return -1", "    let side1 = sqrt(pow(a, 2) +\
    \ pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let sum = side1 + side2 + side3\n    if sum > 0 {\n   \
    \     return Double(round(sum * 100) / 100)\n    } else {\n        return -1\n\
    \    }", "    let sides = a + b + c\n    let area = Double(sides) / 2.0\n    if\
    \ area > Double(sides / 2.0) {\n        return area\n    } else {\n        return\
    \ -1\n    }", "    if a + b > c {\n        return Double(a + b - c)\n    }\n \
    \   if a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a\
    \ {\n        return Double(b + c - a)\n    }\n    return -1", "    let sides =\
    \ [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n   \
    \     return -1\n    }\n    return Double(sides.last) * 0.5", "    var sum: Double\
    \ = 0\n    sum = a + b + c\n    if sum > c {\n        return Double(sum)\n   \
    \ } else {\n        return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a * b * 0.5)\n\
    \    }\n    if a + c > b {\n        return Double(a * c * 0.5)\n    }\n    if\
    \ b + c > a {\n        return Double(b * c * 0.5)\n    }\n    return Double(-1)\
    \ // not a triangle", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a * b * 0.5)\n    }\n    if a + c >\
    \ b {\n        return Double(a * c * 0.5)\n    }\n    if b + c > a {\n       \
    \ return Double(b * c * 0.5)\n    }\n    return -1", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area = (side1 + side2 + side3) / 2\n    if area > 0 {\n       \
    \ return area\n    } else {\n        return -1\n    }", "    let sides = a + b\
    \ + c\n    if sides % 2 == 0 {\n        return Double(sides / 2)\n    } else {\n\
    \        return -1\n    }", "    let area: Double = Double(a * b * c) / Double(2.0\
    \ * a + b + c)\n    return area < 0.0 ? -1.0 : area", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2\n\
    \    return round(area, 2)", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n  \
    \  let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area = side1 + side2 + side3\n    if area > 0 {\n        return\
    \ Double(area)\n    } else {\n        return -1\n    }", "    var sum: Double\
    \ = 0\n    sum += a\n    sum += b\n    sum += c\n    if sum > c {\n        return\
    \ sum\n    }\n    return -1", "    if a + b > c {\n        return Double(a + b\
    \ - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n \
    \   if b + c > a {\n        return Double(b + c - a)\n    }\n    return -1", " \
    \   let sum = a + b + c\n    if sum > 0 {\n        return Double(sum) / Double(sum)\n\
    \    } else {\n        return -1\n    }", "    let sides = [a, b, c]\n    let\
    \ sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sum)\
    \ / Double(sides.last)\n    } else {\n        return -1\n    }", "    let side1\
    \ = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n\
    \    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2 +\
    \ side3) / 2\n    if area > 0 {\n        return area\n    } else {\n        return\
    \ -1\n    }", "    if a + b > c {\n        return Double(a + b - c)\n    }\n \
    \   if a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a\
    \ {\n        return Double(b + c - a)\n    }\n    return -1", "    var area: Double\
    \ = 0\n    if a + b > c {\n        area = (a * b) / c\n    } else {\n        area\
    \ = (a * c) / b\n    }\n    return area", "    let sides = a + b + c\n    if sides\
    \ > 0 {\n        let area = Double(a * b * c) / Double(sides)\n        return\
    \ round(area, 2)\n    }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2.0\n    if area >\
    \ 0.0 {\n        return round(area * 100) / 100.0\n    } else {\n        return\
    \ -1\n    }", "    let sides = [a, b, c]\n    \n    if sides.contains(0) {\n \
    \       return -1\n    }\n    \n    let sum = sides.reduce(0, +)\n    \n    if\
    \ sum > sides.last {\n        return -1\n    }\n    \n    return Double(sum) /\
    \ Double(sides.last)", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n\
    \    let area: Double = side1 + side2 + side3\n    if area > 0 {\n        return\
    \ round(area * 100) / 100\n    } else {\n        return -1\n    }", "    let sides\
    \ = a + b + c\n    if sides == 0 {\n        return -1\n    }\n    let area = Double(sqrt(Double(a\
    \ * b * c) / sides))\n    return round(area, 2)", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sum)\
    \ / Double(sides.last)\n    } else {\n        return -1\n    }", "    let side1\
    \ = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n\
    \    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2 +\
    \ side3) / 2\n    if area > 0 {\n        return round(area)\n    } else {\n  \
    \      return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area = (side1 + side2 + side3) / 2\n    if area > 0 {\n       \
    \ return area\n    } else {\n        return -1\n    }", "    let sides = [a, b,\
    \ c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides > sides.last\
    \ {\n        return -1\n    }\n    let third = sides.last\n    return Double(sumOfSides)\
    \ / third", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n   \
    \ if sum > sides.last {\n        return Double(sum)\n    }\n    return -1", " \
    \   let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    let a2 = a1\
    \ + b1\n    let b2 = b1 + c1\n    let c2 = c1 + a1\n    if a2 > b2 && a2 > c2\
    \ {\n        return a * b * c / 2\n    } else if b2 > a2 && b2 > c2 {\n      \
    \  return b * a * c / 2\n    } else {\n        return c * a * a / 2\n    }", " \
    \   let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) +\
    \ pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1\
    \ + side2 + side3) / 2.0\n    if area > 0.0 {\n        return round(area * 100)\
    \ / 100.0\n    } else {\n        return -1\n    }", "    if a + b > c {\n    \
    \    return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 =\
    \ sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n \
    \   let area = (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n        return\
    \ round(area * 100) / 100.0\n    }\n    return -1", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sum)\
    \ / Double(sides.last)\n    } else {\n        return -1\n    }", "    let sides\
    \ = a + b + c\n    let area = sides/2.0\n    if area > Double(sides) {\n     \
    \   return area\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 * side2 * side3\n\
    \    if area > 0 {\n        return round(area, 2)\n    } else {\n        return\
    \ -1\n    }", "    let sides = a + b + c\n    if sides > 0 {\n        let area\
    \ = Double(sides) / Double(sides - a)\n        return round(area, 2)\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides % 2 == 0 {\n       \
    \ return Double(sides) / 2\n    }\n    return -1", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let sides = a + b + c\n    if sides % 2 == 0 {\n\
    \        return Double(sides) / 2.0\n    }\n    return -1", "    if a + b > c\
    \ {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n        return\
    \ Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b + c -\
    \ a)\n    }\n    return -1", "    let sides = a + b + c\n    if sides == 0 {\n\
    \        return -1\n    }\n    let area = Double(sides) / Double(sides - a)\n\
    \    return round(area, 2)", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    } else\
    \ {\n        return Double(a + b + c - a)\n    }", "    var sum: Double = 0\n\
    \    sum = a + b + c\n    if sum > c {\n        return Double(sum - c) / Double(2\
    \ * c)\n    }\n    if sum > b {\n        return Double(sum - b) / Double(2 * b)\n\
    \    }\n    if sum > a {\n        return Double(sum - a) / Double(2 * a)\n   \
    \ }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n\
    \    let area = (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n        return\
    \ round(area * 100) / 100.0\n    } else {\n        return -1\n    }", "    let\
    \ side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3\
    \ {\n        return Double(round(side1 + side2 - side3))\n    } else {\n     \
    \   return -1\n    }", "    var a = a\n    var b = b\n    var c = c\n    var area:\
    \ Double = 0\n    if a + b > c {\n        a = b\n        b = c\n        c = a\n\
    \    }\n    area = (a * b + c) / 2\n    if area > 0 {\n        area = round(area,\
    \ 2)\n    }\n    return area", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 * side2 * side3\n    if area > 0 {\n\
    \        return round(area * 100) / 100\n    } else {\n        return -1\n   \
    \ }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2\n    if area > 0 {\n        return area\n    } else\
    \ {\n        return -1\n    }", "    var area: Double = 0\n    if a + b > c {\n\
    \        area = (a * b) / c\n    } else {\n        area = -1\n    }\n    return\
    \ area", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if\
    \ a1 > b1 && b1 > c1 {\n        return Double(a1 * b1 * c1)\n    }\n    return\
    \ -1", "    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a\
    \ + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n   \
    \     return Double(b + c - a)\n    }\n    return -1", "    if a + b > c {\n \
    \       return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ -1\n    }\n    let area = Double(sides) / Double(2.0 * Double(a + b + c))\n\
    \    return round(area, 2)", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return Double(sides.last * sides.last)\n\
    \    }\n    return -1", "    let sum = a + b + c\n    if sum > 0 {\n        let\
    \ area = Double(a * b * c) / Double(sum)\n        return round(area, 2)\n    }\n\
    \    return -1", "    var sum: Double = 0\n    var area: Double = 0\n    if a\
    \ + b > c {\n        sum = a + b\n    } else {\n        sum = a + c\n    }\n \
    \   if a + c > b {\n        sum = sum + c\n    } else {\n        sum = sum + b\n\
    \    }\n    area = Double(sum) / 2.0\n    if area > 1.0 {\n        area = area\
    \ - 1\n    }\n    return area", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n\
    \        return round(area * 100) / 100\n    } else {\n        return -1\n   \
    \ }", "    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a +\
    \ c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n     \
    \   return Double(b + c - a)\n    }\n    return -1", "    if a + b > c {\n   \
    \     return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    var sum: Double = 0\n    sum += a\n    sum += b\n    sum\
    \ += c\n    if sum > c {\n        return Double(sum)\n    } else {\n        return\
    \ -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2.0\n    return round(area, 2)", "    let side1 =\
    \ sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n \
    \   let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2\
    \ + side3\n    if area > 0 {\n        return round(area, 2)\n    } else {\n  \
    \      return -1\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return Double(sum)\n    } else {\n  \
    \      return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let c =\
    \ abs(c)\n    let s = a + b + c\n    if s > 0 {\n        let area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        return round(area, 2)\n    }\n    return\
    \ -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 + side2 + side3\n    if area > 0 {\n        return round(area\
    \ * 100) / 100\n    } else {\n        return -1\n    }", "    let sides = [a,\
    \ b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n       \
    \ return -1\n    }\n    return Double(sum) / Double(sides.last)", "    let side1\
    \ = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n\
    \    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2\
    \ + side3\n    if area > 0 {\n        return round(area * 100) / 100\n    } else\
    \ {\n        return -1\n    }", "    if a + b > c {\n        return Double(a +\
    \ b - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n\
    \    if b + c > a {\n        return Double(b + c - a)\n    }\n    return -1",
  "    var area = 0.0\n    if a + b > c {\n        area = (a * b) / c\n    } else\
    \ {\n        area = -1\n    }\n    return round(area, 2)", "    if a + b > c {\n\
    \        return Double(sqrt(Double(a * a + b * b + c * c - a * b * c)))\n    }\n\
    \    if a + c > b {\n        return Double(sqrt(Double(a * a + c * c + b * b -\
    \ a * c * b)))\n    }\n    if b + c > a {\n        return Double(sqrt(Double(b\
    \ * b + c * c + a * a - b * c * a)))\n    }\n    return -1", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ / b) * Double(c / b)\n    } else {\n        return -1\n    }", "    let side1\
    \ = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n\
    \    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n\
    \        return Double(round(side1 + side2) / 2)\n    } else {\n        return\
    \ -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 * side2 * side3\n    if area > 0 {\n        return round(area,\
    \ 2)\n    } else {\n        return -1\n    }", "    let a1 = b * b - a * c\n \
    \   let a2 = a * a\n    let a3 = a * a\n    let b1 = 2 * b * b\n    let b2 = b\
    \ * b\n    let c1 = 2 * c * c\n    let c2 = c * c\n    let c3 = c * c\n    let\
    \ det = a1 * b2 - a2 * b1\n    if det < 0 {\n        return -1\n    }\n    let\
    \ area = sqrt(a1 * a2 + a2 * b2 + a3 * b1 - a1 * b1 - a2 * b2 - a3 * b3)\n   \
    \ if area < 0 {\n        return -1\n    }\n    return round(area, 2)", "    var\
    \ area = 0.0\n    if a + b > c {\n        area = (a * b) / c\n    } else {\n \
    \       area = (a * c) / b\n    }\n    return round(area, 2)", "    let side1\
    \ = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n\
    \    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2\
    \ + side3\n    if area > 0 {\n        return round(area * 100) / 100\n    } else\
    \ {\n        return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n\
    \        return round(area * 100) / 100\n    } else {\n        return -1\n   \
    \ }", "    let sides = a + b + c\n    if sides == 0 {\n        return -1\n   \
    \ }\n    let area = sqrt(Double(a * b * c) / sides)\n    return round(area, 2)",
  "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1\
    \ + side2 + side3\n    if area > 0 {\n        return round(area * 100) / 100\n\
    \    } else {\n        return -1\n    }", "    let a1 = (a + b) / 2\n    let b1\
    \ = (b + c) / 2\n    let c1 = (c + a) / 2\n    return a1 * b1 * c1", "    let\
    \ a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n   \
    \     return Double(a * b * 0.5)\n    }\n    if a + c > b {\n        return Double(a\
    \ * c * 0.5)\n    }\n    if b + c > a {\n        return Double(b * c * 0.5)\n\
    \    }\n    return -1", "    let sum = a + b + c\n    if sum < 0 {\n        return\
    \ -1\n    }\n    if sum > 3 {\n        return 0\n    }\n    let area = Double(sqrt(Double(sum)\
    \ * Double(sum - b) * Double(sum - c)))\n    return round(area, 2)", "    let\
    \ a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 > b1 && b1\
    \ > c1 {\n        return Double(a1 * b1 * c1)\n    }\n    return -1", "    let\
    \ side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area > 0 {\n        return round(area * 100) / 100.0\n\
    \    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return Double(round(side1\
    \ + side2) / 2) / 2\n    } else {\n        return -1\n    }", "    let sum = a\
    \ + b + c\n    if sum > c {\n        return Double(sum) / Double(c)\n    }\n \
    \   if sum > b {\n        return Double(sum) / Double(b)\n    }\n    if sum >\
    \ a {\n        return Double(sum) / Double(a)\n    }\n    return -1", "    if\
    \ a + b > c {\n        return Double(sqrt(pow((a + b), 2.0) + pow((c + a), 2.0)))\n\
    \    } else {\n        return -1\n    }", "    var sum: Double = 0\n    sum +=\
    \ a\n    sum += b\n    sum += c\n    if sum > c {\n        return Double(sum -\
    \ c) / 2\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return\
    \ Double(round(side1 + side2 - side3))\n    } else {\n        return -1\n    }",
  "    if a + b > c {\n        return Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * ", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n\
    \        return round(area * 100) / 100\n    } else {\n        return -1\n   \
    \ }", "    let sum = a + b + c\n    if sum > 0 {\n        return Double(sum) /\
    \ Double(sum)\n    }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return Double(round(side1\
    \ + side2) / 2) / 2\n    } else {\n        return -1\n    }", "    if a + b >\
    \ c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n        return\
    \ Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b + c -\
    \ a)\n    }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n  \
    \  let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    if side1 + side2 > side3 {\n        return Double(round(side1 + side2)\
    \ / 2) / 2\n    } else {\n        return -1\n    }", "    let area: Double = Double(a\
    \ * b * c) / Double(2 * a * b + b * c + c * a + a * b + b * c)\n    return area",
  "    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n\
    \        return Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b\
    \ + c - a)\n    }\n    return -1", "    let sides = a + b + c\n    if sides >\
    \ 0 {\n        let area = Double(sqrt(Double(a * b * c) / sides))\n        return\
    \ round(area, 2)\n    }\n    return -1", "    let a1 = b * b - 4 * a * c\n   \
    \ let a2 = sqrt(a1)\n    let a3 = sqrt(a2)\n    let a4 = b * b + 4 * a * c\n \
    \   let a5 = sqrt(a4)\n    let a6 = a * b + 4 * a * c\n    let a7 = a * b - a2\
    \ * c\n    let a8 = sqrt(a6)\n    let a9 = a * b - a2 * c\n    let a10 = a * b\
    \ - a2 * c\n    let a11 = a * b - a2 * c\n    let a12 = a * b - a2 * c\n    let\
    \ a13 = a * b - a2 * c\n    let a14 = a * b - a2 * c\n    let a15 = a * b - a2\
    \ * c\n    let a16 = a * b - a2 * c\n    let a17 = a * b - a2 * c\n    let a18\
    \ = a * b - a2 * c\n    let a19 = a * b - a2 * c\n    let a20 = a * b - a2 * c\n\
    \    let a21 = a * b - a2 * c\n    let a22 = a * b - a2 * c\n    let a23 = a *\
    \ b - a2 * c\n    let a24 = a * b - a2 * c\n    let a25 = a * b - a2 * c\n   \
    \ let a26 = a * b - a2 * c\n    let a27 = a * b - a2 * c\n    let a28 = a * b\
    \ - a2 * c\n    let a29 = a * b - a2 * c\n    let a30 = a * b - a2 * c\n    let\
    \ a31 = a * b - a2 * c\n    let a32 = a * b - a2 * c\n    let a33 = a * b - a2\
    \ * c\n    let a34 = a * b - a2 * c\n    let a35 = a * b - a2 * c\n    let a36\
    \ = a * b - a2 * c\n    let a37 = a * b - a2 * c\n    let a38 = a * b - a2 * c\n\
    \    let a39 = a * b - a2 * c\n    let a40 = a * b - a2 * c\n    let a41 = a *\
    \ b - a2 * c\n    let a42 = a * b - a2 * c\n    let a43 = a * b - a2 * c\n   \
    \ let a44 = a * b - a2 * c\n    let a45 = a * b - a2 * c\n    let a46 = a * b\
    \ - a2 * c\n    let a47 = a * b - a2 * c\n    let a48 = a * b - a2 * c\n    let\
    \ a49 = a * b - a2 * c\n    let a50 = a * b - a2 * c\n    let a51 = a * b - a2\
    \ * c\n    let a52 = a * b - a2 * c\n    let a53 = a * b - a2 * c\n    let a54\
    \ = a * b - a2 * c\n    let a55 = a * b - a2 * c\n    let a56 = a * b - a2 * c\n\
    \    let a57 = a * b - a2 * c\n    let a58 = a * b - a2 * ", "    var sum: Double\
    \ = 0\n    sum += a\n    sum += b\n    sum += c\n    if sum > c {\n        return\
    \ Double(sum)\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n     \
    \   return round(area)\n    } else {\n        return -1\n    }", "    let a1 =\
    \ abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    let a2 = a1 + b1\n   \
    \ let b2 = b1 + c1\n    let c2 = c1 + a1\n    if a2 > b2 && b2 > c2 {\n      \
    \  return a * b * c / 2\n    }\n    return -1", "    let a = abs(a)\n    let b\
    \ = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a +\
    \ b - c)\n    } else {\n        return -1\n    }", "    let sides = a + b + c\n\
    \    if sides % 2 == 0 {\n        return Double(sides) / 2\n    }\n    return\
    \ -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2\n    if area > 0 {\n        return area\n    } else\
    \ {\n        return -1\n    }", "    var area: Double = 0\n    if a + b > c {\n\
    \        area = (a * b) / c\n    }\n    else {\n        area = (a * b) / (a +\
    \ b)\n    }\n    return area", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n\
    \    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) +\
    \ pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n\
    \        return round(area, 2)\n    } else {\n        return -1\n    }", "   \
    \ let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area > 0 {\n        return round(area, 2)\n    } else\
    \ {\n        return -1\n    }", "    var sum: Double = 0\n    sum += a\n    sum\
    \ += b\n    sum += c\n    if sum > c {\n        return Double(sum)\n    } else\
    \ {\n        return -1\n    }", "    let sides = a + b + c\n    if sides == 0\
    \ {\n        return -1\n    }\n    let area = sqrt(Double(sides) * Double(sides)\
    \ / Double(2))\n    return round(area, 2)", "    let sides = [a, b, c]\n    guard\
    \ sides.count >= 3 else {\n        return -1\n    }\n    let sum = sides[0] +\
    \ sides[1] + sides[2]\n    if sum > sides[2] {\n        return Double(round(100\
    \ * Double(sides[0]) / Double(sides[2])))\n    }\n    if sum < sides[0] {\n  \
    \      return Double(round(100 * Double(sides[1]) / Double(sides[0])))\n    }\n\
    \    if sum < sides[1] {\n        return Double(round(100 * Double(sides[2]) /\
    \ Double(sides[1])))\n    }\n    return 0", "    if a + b > c {\n        return\
    \ Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a + c -\
    \ b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n   \
    \ return -1", "    let sides = a + b + c\n    if sides > 0 {\n        return Double(sides)\
    \ / Double(sides)\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area = side1 + side2 + side3\n    if\
    \ area > 0 {\n        return Double(area)\n    } else {\n        return -1\n \
    \   }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 + side2 + side3\n    if area > 0 {\n        return round(area)\n\
    \    } else {\n        return -1\n    }", "    if a + b > c {\n        return\
    \ Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a + c -\
    \ b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n   \
    \ return -1", "    let sides = a + b + c\n    if sides % 2 == 0 {\n        return\
    \ Double(sides / 2)\n    } else {\n        return -1\n    }", "    var sum: Double\
    \ = 0\n    sum = a + b + c\n    if sum > c {\n        return Double(sum - c) /\
    \ 2.0\n    }\n    if sum > b {\n        return Double(sum - b) / 2.0\n    }\n\
    \    if sum > a {\n        return Double(sum - a) / 2.0\n    }\n    return -1",
  "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area > 1.0 {\n        return area\n    } else {\n   \
    \     return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n     \
    \   return round(area * 100) / 100\n    } else {\n        return -1\n    }", " \
    \   var area = 0.0\n    \n    if a + b > c {\n        area = (a * b) / c\n   \
    \ } else {\n        area = -1\n    }\n    \n    return area", "    let sides =\
    \ [a, b, c]\n    guard sides.count >= 3 else {\n        return -1\n    }\n   \
    \ let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n        return Double(round(100\
    \ * sides[0] / sum)) / 100\n    } else {\n        return Double(round(100 * sides[1]\
    \ / sum)) / 100\n    }", "    let sides = a + b + c\n    if sides == 0 {\n   \
    \     return -1\n    }\n    let area = sqrt(Double(a * b * c) / sides)\n    return\
    \ round(area, 2)", "    if a + b > c {\n        return Double(a + b - c)\n   \
    \ }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c\
    \ > a {\n        return Double(b + c - a)\n    }\n    return -1", "    let sum\
    \ = a + b + c\n    if sum < 0 {\n        return -1\n    }\n    let area = Double(sqrt(Double(sum)\
    \ * Double(sum) / Double(2)))\n    return round(area, 2)", "    let sides = [a,\
    \ b, c]\n    \n    if sides.reduce(0) { $0 + $1 } > sides.reduce(0) { $0 + $2\
    \ } { return -1 }\n    \n    let area = sides.reduce(0) { $0 + $1 }\n    \n  \
    \  return Double(area) / Double(sides.count)", "    if a + b > c {\n        return\
    \ Double(a + b - c)\n    } else {\n        return Double(a + b + c)\n    }", " \
    \   let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 + b1\
    \ > c1 {\n        return Double(a1 * b1 * c1 / 2)\n    } else {\n        return\
    \ -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 + side2 + side3\n    if area > 0 {\n        return round(area\
    \ * 100) / 100\n    } else {\n        return -1\n    }", "    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n\
    \    if sum > sides.last {\n        return Double(sides.last * sides.last)\n \
    \   }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n\
    \    let area = (side1 + side2 + side3) / 2\n    if area > 0 {\n        return\
    \ round(area, 2)\n    } else {\n        return -1\n    }", "    let sum = a +\
    \ b + c\n    if sum < 0 {\n        return -1\n    }\n    if sum == 0 {\n     \
    \   return 0\n    }\n    let area = sqrt(Double(a * b * c) / sum)\n    return\
    \ round(area, 2)", "    let sides = a + b + c\n    if sides > 0 {\n        let\
    \ area = Double(sides) / Double(sides - a)\n        return area\n    } else {\n\
    \        return -1\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return -1\n    }\n    let area = Double(sides.last)\
    \ * Double(sides.last) / Double(sides.last)\n    return round(area, 2)", "   \
    \ let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3\
    \ {\n        return Double(round(side1 + side2 - side3))\n    } else {\n     \
    \   return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n\
    \    if side1 + side2 > side3 {\n        return Double(round(side1 + side2) /\
    \ 2) / 2\n    } else {\n        return -1\n    }", "    var area = 0.0\n    if\
    \ a + b > c {\n        area = (a * b) / c\n    } else {\n        area = -1\n \
    \   }\n    return area", "    let sides = [a, b, c]\n    guard sides.count >=\
    \ 3 else {\n        return -1\n    }\n    let sum = sides.reduce(0, combine: +)\n\
    \    if sum > sides[2]{\n        return Double(round(100*sides[0]/sum))\n    }\n\
    \    return Double(round(100*sides[1]/sum))", "    let sides = a + b + c\n   \
    \ if sides == 0 {\n        return -1\n    }\n    let third = sides / 3\n    let\
    \ area = third * (third - a) * (third - b) * (third - c)\n    return Double(area\
    \ / sides)", "    if a + b > c {\n        return Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1) * Double(-1)\
    \ * Double(-1) * Double(-1) * Double(-1) * ", "    let side1 = sqrt(pow(a, 2)\
    \ + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area >\
    \ 0 {\n        return round(area, 2)\n    } else {\n        return -1\n    }",
  "    var a = a\n    var b = b\n    var c = c\n    var area = 0.0\n    var area_sum\
    \ = 0.0\n    var area_product = 0.0\n    var area_product2 = 0.0\n    var area_product3\
    \ = 0.0\n    var area_product4 = 0.0\n    var area_product5 = 0.0\n    var area_product6\
    \ = 0.0\n    var area_product7 = 0.0\n    var area_product8 = 0.0\n    var area_product9\
    \ = 0.0\n    var area_product10 = 0.0\n    var area_product11 = 0.0\n    var area_product12\
    \ = 0.0\n    var area_product13 = 0.0\n    var area_product14 = 0.0\n    var area_product15\
    \ = 0.0\n    var area_product16 = 0.0\n    var area_product17 = 0.0\n    var area_product18\
    \ = 0.0\n    var area_product19 = 0.0\n    var area_product20 = 0.0\n    var area_product21\
    \ = 0.0\n    var area_product22 = 0.0\n    var area_product23 = 0.0\n    var area_product24\
    \ = 0.0\n    var area_product25 = 0.0\n    var area_product26 = 0.0\n    var area_product27\
    \ = 0.0\n    var area_product28 = 0.0\n    var area_product29 = 0.0\n    var area_product30\
    \ = 0.0\n    var area_product31 = 0.0\n    var area_product32 = 0.0\n    var area_product33\
    \ = 0.0\n    var area_product34 = 0.0\n    var area_product35 = 0.0\n    var area_product36\
    \ = 0.0\n    var area_product37 = 0.0\n    var area_product38 = 0.0\n    var area_product39\
    \ = 0.0\n    var area_product40 = 0.0\n    var area_product41 = 0.0\n    var area_product42\
    \ = 0.0\n    var area_product43 = 0.0\n    var area_product44 = 0.0\n    var area_product45\
    \ = 0.0\n    var area_product46 = 0.0\n    var area_product47 = 0.0\n    var area_product48\
    \ = 0.0\n    var area_product49 = 0.0\n    var area_product50 = 0.0\n    var area_product51\
    \ = 0.0\n    var area_product52 = 0.0\n    var area_product53 = 0.0\n    var area_product54\
    \ = 0.0\n    var area_product55 = 0.0\n    var area_product56 = 0.0\n    var area_product57\
    \ = 0.0\n    var area_product58 = 0.0\n    var area_product59 = 0.0\n    var area_product60\
    \ = 0.0\n    var area_product61 = 0.0\n    var area_product62 = 0.0\n    var area_product63\
    \ = 0.0\n    var area_product64 = 0.0\n    var area_product65 = 0.0\n    var area_product66\
    \ = 0.0\n    var area_product67 = 0.0\n    var area_product68 = 0.0\n    var area_product69\
    \ = 0.0\n    var area_product70 = 0.0\n    var area_product71 = 0.0\n    var area_product72\
    \ = 0.0\n    var area_product73 = 0.0\n    var area_product74 = 0.0\n    var area_product75\
    \ = 0.0\n    var area_product76 = 0.0\n    var area_product77 = 0.0\n    var area_product78\
    \ = 0.0\n    var area_product79 = 0.0\n    var ", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n\
    \    if area > 0 {\n        return round(area * 100) / 100\n    } else {\n   \
    \     return -1\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.first)", "    if a + b > c {\n        return\
    \ Double(sqrt(Double(a * a + b * b + c * c)))\n    } else {\n        return -1\n\
    \    }", "    let sides = a + b + c\n    if sides == 0 {\n        return -1\n\
    \    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area >\
    \ sides {\n        return Double(area)\n    } else {\n        return -1\n    }",
  "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area > 0.0 {\n        return round(area * 100) / 100\n\
    \    } else {\n        return -1\n    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n\
    \    let c1 = abs(c)\n    \n    if a1 + b1 > c1 {\n        return Double(a1 *\
    \ b1 * c1 / 2)\n    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    if side1 + side2 > side3 {\n        return\
    \ Double(round(side1 + side2))\n    } else {\n        return -1\n    }", "   \
    \ if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n\
    \        return Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b\
    \ + c - a)\n    }\n    return -1", "    let sides = a + b + c\n    let area =\
    \ Double(sides) / 2.0\n    if area > Double(sides / 2.0) {\n        return area\n\
    \    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area: Double = side1 + side2 + side3\n    if area >\
    \ 0 {\n        return round(area * 100) / 100\n    } else {\n        return -1\n\
    \    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    \n\
    \    if a1 + b1 > c1 {\n        return a * b * c / 2\n    } else {\n        return\
    \ -1\n    }", "    var sum: Double = 0\n    sum = a + b + c\n    if sum > c {\n\
    \        return Double(sum - c) / 2.0\n    }\n    if sum > b {\n        return\
    \ Double(sum - b) / 2.0\n    }\n    if sum > a {\n        return Double(sum -\
    \ a) / 2.0\n    }\n    return -1", "    let area: Double = Double(a * b * c) /\
    \ Double(2 * a * b + 2 * b * c + c * a)\n    return area < 0 ? -1 : 0", "    let\
    \ side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area: Double = side1\
    \ + side2 + side3\n    if area > 0 {\n        return round(area * 100) / 100\n\
    \    } else {\n        return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let sum = side1 + side2 + side3\n    if sum > 0 {\n   \
    \     return Double(round(100 * Double(sum) / Double(side3)))\n    } else {\n\
    \        return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n   \
    \ let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area: Double = side1 + side2 + side3\n    if area > 0 {\n     \
    \   return round(area * 100) / 100\n    } else {\n        return -1\n    }", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return Double(sum) / Double(sides.last)\n    }\n    return -1", " \
    \   var sum: Double = 0\n    sum += a\n    sum += b\n    sum += c\n    if sum\
    \ > c {\n        return Double(sum / 2)\n    } else {\n        return -1\n   \
    \ }", "    let area: Double = abs(a * b - c * c)\n    if area > 0 {\n        return\
    \ round(area / 2)\n    } else {\n        return -1\n    }", "    let a1 = (a +\
    \ b) / 2\n    let a2 = (b + c) / 2\n    let a3 = (c + a) / 2\n    let a4 = (a1\
    \ + a2) / 2\n    let a5 = (a2 + a3) / 2\n    let a6 = (a3 + a4) / 2\n    let a7\
    \ = (a4 + a5) / 2\n    let a8 = (a5 + a6) / 2\n    let a9 = (a6 + a7) / 2\n  \
    \  let a10 = (a7 + a8) / 2\n    let a11 = (a8 + a9) / 2\n    let a12 = (a9 + a10)\
    \ / 2\n    let a13 = (a10 + a11) / 2\n    let a14 = (a11 + a12) / 2\n    let a15\
    \ = (a12 + a13) / 2\n    let a16 = (a13 + a14) / 2\n    let a17 = (a14 + a15)\
    \ / 2\n    let a18 = (a15 + a16) / 2\n    let a19 = (a16 + a17) / 2\n    let a20\
    \ = (a17 + a18) / 2\n    let a21 = (a18 + a19) / 2\n    let a22 = (a19 + a20)\
    \ / 2\n    let a23 = (a20 + a21) / 2\n    let a24 = (a21 + a22) / 2\n    let a25\
    \ = (a22 + a23) / 2\n    let a26 = (a23 + a24) / 2\n    let a27 = (a24 + a25)\
    \ / 2\n    let a28 = (a25 + a26) / 2\n    let a29 = (a26 + a27) / 2\n    let a30\
    \ = (a27 + a28) / 2\n    let a31 = (a28 + a29) / 2\n    let a32 = (a29 + a30)\
    \ / 2\n    let a33 = (a30 + a31) / 2\n    let a34 = (a31 + a32) / 2\n    let a35\
    \ = (a32 + a33) / 2\n    let a36 = (a33 + a34) / 2\n    let a37 = (a34 + a35)\
    \ / 2\n    let a38 = (a35 + a36) / 2\n    let a39 = (a36 + a37) / 2\n    let a40\
    \ = (a37 + a38) / 2\n    let a41 = (a38 + a39) / 2\n    let a42 = (a39 + a40)\
    \ / 2\n    let a43 = (a40 + a41) / 2\n    let a44 = (a41 + a42) / 2\n    let a45\
    \ = (a42 + a43) / 2\n    let a46 = (a43 + a44) / 2\n    let a47 = (a44 + a45)\
    \ / 2\n    let a48 = (a45 + a46) / 2\n    let a49 = (a46 + a47) / 2\n    let a50\
    \ = (a47 + a48) / 2\n    let a51 = (a48 + a49) / 2\n    let a52 = (a49 + a50)\
    \ / 2\n    let a53 = (a50 + a51) / 2\n    let a54 = (a51 + a52) / 2\n    let a55\
    \ = (a52 + a53) / 2\n    let a56 = (a53 + a54) / 2\n    let a57 = (a54 + a55)\
    \ / 2\n    let a58 = (a55 + a56) / 2\n    let ", "    let a = abs(a)\n    let\
    \ b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ * b * c / 2)\n    } else {\n        return -1\n    }"]
stop_tokens:
- "\n}"

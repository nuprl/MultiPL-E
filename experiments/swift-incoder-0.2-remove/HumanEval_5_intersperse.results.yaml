language: swift
name: HumanEval_5_intersperse
results:
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.insert(number,\
    \ at: 0)\n    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\n\
    assert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpkwvavpyg/tmpkwvavpyg.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5dbc675c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5dbc36cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5dbc36c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5dbc36b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkwvavpyg                        0x00005654545d16ff <unavailable> + 5887

    5    libc.so.6                          0x00002b5dbc861460 __libc_start_main +
    245

    6    tmpkwvavpyg                        0x00005654545d11f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for index in 0..<numbers.count\
    \ {\n        numbersInOrder[index] = numbersInOrder[index] + delimeter\n    }\n\
    \    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmppd0ueyo4/tmppd0ueyo4.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebe43d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebe40cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebe40cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebe40ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd0ueyo4                        0x000055e2e252e75f <unavailable> + 5983

    5    libc.so.6                          0x00002aebe45c0460 __libc_start_main +
    245

    6    tmppd0ueyo4                        0x000055e2e252e259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.append(number)\n\
    \    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmp4rebjgre/tmp4rebjgre.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2833e51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2833b48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2833b48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2833b477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rebjgre                        0x0000564b382d66ff <unavailable> + 5887

    5    libc.so.6                          0x00002b283403d460 __libc_start_main +
    245

    6    tmp4rebjgre                        0x0000564b382d61f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.insert(number,\
    \ at: 0)\n    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\n\
    assert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpkwvavpyg/tmpkwvavpyg.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5dbc675c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5dbc36cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5dbc36c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5dbc36b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkwvavpyg                        0x00005654545d16ff <unavailable> + 5887

    5    libc.so.6                          0x00002b5dbc861460 __libc_start_main +
    245

    6    tmpkwvavpyg                        0x00005654545d11f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: 1
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    for number in numbersInOrder {\n\
    \        numbersInOrder.insert(number, delimeter)\n    }\n    return numbersInOrder\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: SyntaxError
  stderr: "/tmp/tmpzedgqecj.swift:9:24: error: no exact matches in call to instance\
    \ method 'insert'\n        numbersInOrder.insert(number, delimeter)\n        \
    \               ^\nSwift.Array:11:37: note: incorrect labels for candidate (have:\
    \ '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Element, at i: Int)\n                                  \
    \  ^\nSwift.RangeReplaceableCollection:6:37: note: incorrect labels for candidate\
    \ (have: '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Self.Element, at i: Self.Index)\n                      \
    \              ^\n"
  stdout: ''
  timestamp: 1659979127
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for index in stride(from: 0,\
    \ to: numbers.count, by: 1) {\n        numbersInOrder[index] = numbersInOrder[index]\
    \ + delimeter\n    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\n\
    assert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpw8xydpjk/tmpw8xydpjk.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef74a53c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef7474ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef7474a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef747497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw8xydpjk                        0x000055ce324e97df <unavailable> + 6111

    5    libc.so.6                          0x00002aef74c3f460 __libc_start_main +
    245

    6    tmpw8xydpjk                        0x000055ce324e92d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.insert(number,\
    \ at: 0)\n    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\n\
    assert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpkwvavpyg/tmpkwvavpyg.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5dbc675c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5dbc36cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5dbc36c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5dbc36b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkwvavpyg                        0x00005654545d16ff <unavailable> + 5887

    5    libc.so.6                          0x00002b5dbc861460 __libc_start_main +
    245

    6    tmpkwvavpyg                        0x00005654545d11f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: 1
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for var i = 0; i < numbers.count;\
    \ i++ {\n        if i != 0 {\n            numbersInOrder[i - 1] = delimeter\n\
    \        }\n        numbersInOrder[i] = numbers[i]\n    }\n    return numbersInOrder\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: SyntaxError
  stderr: "/tmp/tmpori6owva.swift:5:5: error: C-style for statement has been removed\
    \ in Swift 3\n    for var i = 0; i < numbers.count; i++ {\n    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979127
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    \n    var interspersedNumbers\
    \ = [Int]()\n    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    \n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmp8bh6tkej/tmp8bh6tkej.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0140235c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b013ff2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b013ff2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b013ff2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8bh6tkej                        0x000055c2eed816ef <unavailable> + 5871

    5    libc.so.6                          0x00002b0140421460 __libc_start_main +
    245

    6    tmp8bh6tkej                        0x000055c2eed811e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.filter { $0 != number }\n       \
    \ numbersInOrder.append(number)\n    }\n    return numbersInOrder\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpywox6obo/tmpywox6obo.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ababbc11c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ababb908b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ababb908988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ababb9077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpywox6obo                        0x00005579a78cc75f <unavailable> + 5983

    5    libc.so.6                          0x00002ababbdfd460 __libc_start_main +
    245

    6    tmpywox6obo                        0x00005579a78cc259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpi97lbv0o/tmpi97lbv0o.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eb8902c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eb85f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eb85f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eb85f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi97lbv0o                        0x000055929a1346ef <unavailable> + 5871

    5    libc.so.6                          0x00002b3eb8aee460 __libc_start_main +
    245

    6    tmpi97lbv0o                        0x000055929a1341e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: 1
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    for number in numbersInOrder {\n\
    \        numbersInOrder.insert(number, delimeter)\n    }\n    return numbersInOrder\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: SyntaxError
  stderr: "/tmp/tmpzedgqecj.swift:9:24: error: no exact matches in call to instance\
    \ method 'insert'\n        numbersInOrder.insert(number, delimeter)\n        \
    \               ^\nSwift.Array:11:37: note: incorrect labels for candidate (have:\
    \ '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Element, at i: Int)\n                                  \
    \  ^\nSwift.RangeReplaceableCollection:6:37: note: incorrect labels for candidate\
    \ (have: '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Self.Element, at i: Self.Index)\n                      \
    \              ^\n"
  stdout: ''
  timestamp: 1659979127
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: 1
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = [Int]()\n    for number in numbers {\n   \
    \     numbersInOrder.append(number)\n    }\n    for number in numbersInOrder {\n\
    \        numbersInOrder.insert(number, delimeter)\n    }\n    return numbersInOrder\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: SyntaxError
  stderr: "/tmp/tmpzedgqecj.swift:9:24: error: no exact matches in call to instance\
    \ method 'insert'\n        numbersInOrder.insert(number, delimeter)\n        \
    \               ^\nSwift.Array:11:37: note: incorrect labels for candidate (have:\
    \ '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Element, at i: Int)\n                                  \
    \  ^\nSwift.RangeReplaceableCollection:6:37: note: incorrect labels for candidate\
    \ (have: '(_:_:)', expected: '(_:at:)')\n    @inlinable public mutating func insert(_\
    \ newElement: __owned Self.Element, at i: Self.Index)\n                      \
    \              ^\n"
  stdout: ''
  timestamp: 1659979127
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.append(number)\n\
    \    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmp4rebjgre/tmp4rebjgre.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2833e51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2833b48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2833b48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2833b477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rebjgre                        0x0000564b382d66ff <unavailable> + 5887

    5    libc.so.6                          0x00002b283403d460 __libc_start_main +
    245

    6    tmp4rebjgre                        0x0000564b382d61f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for index in 0..<numbers.count\
    \ {\n        let nextIndex = index + 1\n        if nextIndex < numbers.count {\n\
    \            numbersInOrder.insert(numbersInOrder[index], at: nextIndex)\n   \
    \     }\n    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\n\
    assert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmp_lm4bc7z/tmp_lm4bc7z.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40b6fb1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40b6ca8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40b6ca8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40b6ca77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_lm4bc7z                        0x00005638c15b475f <unavailable> + 5983

    5    libc.so.6                          0x00002b40b719d460 __libc_start_main +
    245

    6    tmp_lm4bc7z                        0x00005638c15b4259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    var result = [Int]()\n    for\
    \ number in numbersInOrder {\n        result.append(number)\n        result.append(delimeter)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpabclf4sc/tmpabclf4sc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af139951c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af139648b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af139648988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1396477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpabclf4sc                        0x0000556759cf66ef <unavailable> + 5871

    5    libc.so.6                          0x00002af139b3d460 __libc_start_main +
    245

    6    tmpabclf4sc                        0x0000556759cf61e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    var result = [Int]()\n    for\
    \ number in numbersInOrder {\n        result.append(number)\n        result.append(delimeter)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpabclf4sc/tmpabclf4sc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af139951c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af139648b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af139648988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1396477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpabclf4sc                        0x0000556759cf66ef <unavailable> + 5871

    5    libc.so.6                          0x00002af139b3d460 __libc_start_main +
    245

    6    tmpabclf4sc                        0x0000556759cf61e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpptggbibv/tmpptggbibv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2125d1dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2125a14b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2125a14988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2125a137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpptggbibv                        0x00005606c8c146ef <unavailable> + 5871

    5    libc.so.6                          0x00002b2125f09460 __libc_start_main +
    245

    6    tmpptggbibv                        0x00005606c8c141e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.filter { $0 != number }\n       \
    \ numbersInOrder.append(number)\n    }\n    return numbersInOrder\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpywox6obo/tmpywox6obo.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ababbc11c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ababb908b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ababb908988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ababb9077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpywox6obo                        0x00005579a78cc75f <unavailable> + 5983

    5    libc.so.6                          0x00002ababbdfd460 __libc_start_main +
    245

    6    tmpywox6obo                        0x00005579a78cc259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for index in 0..<numbers.count\
    \ {\n        numbersInOrder[index] = numbersInOrder[index] + delimeter\n    }\n\
    \    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmppd0ueyo4/tmppd0ueyo4.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebe43d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebe40cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebe40cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebe40ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd0ueyo4                        0x000055e2e252e75f <unavailable> + 5983

    5    libc.so.6                          0x00002aebe45c0460 __libc_start_main +
    245

    6    tmppd0ueyo4                        0x000055e2e252e259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    for number in numbersInOrder\
    \ {\n        numbersInOrder = numbersInOrder.dropLast()\n        numbersInOrder.append(number)\n\
    \    }\n    return numbersInOrder\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(intersperse(numbers:\
    \ [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers: [5,\
    \ 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmp4rebjgre/tmp4rebjgre.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2833e51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2833b48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2833b48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2833b477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rebjgre                        0x0000564b382d66ff <unavailable> + 5887

    5    libc.so.6                          0x00002b283403d460 __libc_start_main +
    245

    6    tmp4rebjgre                        0x0000564b382d61f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersInOrder = numbers\n    var interspersedNumbers = [Int]()\n\
    \    for number in numbersInOrder {\n        interspersedNumbers.append(number)\n\
    \        interspersedNumbers.append(delimeter)\n    }\n    return interspersedNumbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7)\
    \ == [] as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) ==\
    \ [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2)\
    \ == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpptggbibv/tmpptggbibv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2125d1dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2125a14b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2125a14988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2125a137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpptggbibv                        0x00005606c8c146ef <unavailable> + 5871

    5    libc.so.6                          0x00002b2125f09460 __libc_start_main +
    245

    6    tmpptggbibv                        0x00005606c8c141e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var numbersWithDelimeter = [Int]()\n    for number in numbers {\n\
    \        numbersWithDelimeter.append(number)\n        numbersWithDelimeter.append(delimeter)\n\
    \    }\n    return numbersWithDelimeter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(intersperse(numbers: [] as [Int], delimeter: 7) == [] as [Int])\nassert(intersperse(numbers:\
    \ [5, 6, 3, 2], delimeter: 8) == [5, 8, 6, 8, 3, 8, 2])\nassert(intersperse(numbers:\
    \ [2, 2, 2], delimeter: 2) == [2, 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpwiyy5zxl/tmpwiyy5zxl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2bad92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2baa89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2baa89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2baa887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwiyy5zxl                        0x0000562c04c216ef <unavailable> + 5871

    5    libc.so.6                          0x00002ab2baf7e460 __libc_start_main +
    245

    6    tmpwiyy5zxl                        0x0000562c04c211e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128
- exit_code: -4
  program: "\n/// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\nfunc intersperse(numbers: [Int], delimeter: Int) ->\
    \ [Int] {\n    var result = [Int]()\n    for number in numbers {\n        result.append(number)\n\
    \        result.append(delimeter)\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(intersperse(numbers: [] as [Int], delimeter: 7) == []\
    \ as [Int])\nassert(intersperse(numbers: [5, 6, 3, 2], delimeter: 8) == [5, 8,\
    \ 6, 8, 3, 8, 2])\nassert(intersperse(numbers: [2, 2, 2], delimeter: 2) == [2,\
    \ 2, 2, 2, 2])"
  status: Exception
  stderr: 'tmpakzwv6dj/tmpakzwv6dj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b5e39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b5b30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b5b30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b5b2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakzwv6dj                        0x000055e71ab916ef <unavailable> + 5871

    5    libc.so.6                          0x00002b93b6025460 __libc_start_main +
    245

    6    tmpakzwv6dj                        0x000055e71ab911e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979128

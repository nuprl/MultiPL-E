language: swift
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter{\
    \ $0.unicodeScalars.filter{ $0.isInvertedForm == false }.count == 0 }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpa0cqxz5o.swift:4:54: error: value of type 'Unicode.Scalar' has\
    \ no member 'isInvertedForm'\n    return text.filter{ $0.unicodeScalars.filter{\
    \ $0.isInvertedForm == false }.count == 0 }\n                                \
    \                  ~~ ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp2n8ob14d/tmp2n8ob14d.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad76d0a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad76cda0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad76cda0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad76cd9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n8ob14d                        0x000055b2896ba5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad76d295460 __libc_start_main +
    245

    6    tmp2n8ob14d                        0x000055b2896ba0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpbyjm_kqo.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmpbyjm_kqo.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmpbyjm_kqo.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmpbyjm_kqo.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmpbyjm_kqo.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmpbyjm_kqo.swift:10:24: error: 'characters'\
    \ is unavailable: Please use String directly\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n                       ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp2n8ob14d/tmp2n8ob14d.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad76d0a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad76cda0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad76cda0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad76cd9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n8ob14d                        0x000055b2896ba5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad76d295460 __libc_start_main +
    245

    6    tmp2n8ob14d                        0x000055b2896ba0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    vowels.append(Character(\"a\"))\n    vowels.append(Character(\"\
    e\"))\n    vowels.append(Character(\"i\"))\n    vowels.append(Character(\"o\"\
    ))\n    vowels.append(Character(\"u\"))\n    \n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result += char\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpax_3mw81.swift:14:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp8c4v5x6t.swift:6:20: error: single-quoted string literal found,\
    \ use '\"'\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n                   ^~~\n                   \"a\"\n/tmp/tmp8c4v5x6t.swift:6:35:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                      ^~~\n                                  \"e\"\n/tmp/tmp8c4v5x6t.swift:6:50:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                                     ^~~\n                                  \
    \               \"i\"\n/tmp/tmp8c4v5x6t.swift:6:65: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                      ^~~\n                                                 \
    \               \"o\"\n/tmp/tmp8c4v5x6t.swift:6:80: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                                     ^~~\n                                  \
    \                                             \"u\"\n/tmp/tmp8c4v5x6t.swift:10:49:\
    \ error: instance method 'contains' requires that 'Unicode.Scalar' conform to\
    \ 'Collection'\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n                                                ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    vowels.append('a') // add 'a' to the list of vowels\n\
    \    vowels.append('e') // add 'e' to the list of vowels\n    vowels.append('i')\
    \ // add 'i' to the list of vowels\n    vowels.append('o') // add 'o' to the list\
    \ of vowels\n    vowels.append('u') // add 'u' to the list of vowels\n\n    var\
    \ newText = text\n    for char in text {\n        if !vowels.contains(char) {\n\
    \            newText = newText.replacingOccurrences(of: String(char), with: \"\
    \")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp2zrrnh4m.swift:5:19: error: single-quoted string literal found,\
    \ use '\"'\n    vowels.append('a') // add 'a' to the list of vowels\n        \
    \          ^~~\n                  \"a\"\n/tmp/tmp2zrrnh4m.swift:6:19: error: single-quoted\
    \ string literal found, use '\"'\n    vowels.append('e') // add 'e' to the list\
    \ of vowels\n                  ^~~\n                  \"e\"\n/tmp/tmp2zrrnh4m.swift:7:19:\
    \ error: single-quoted string literal found, use '\"'\n    vowels.append('i')\
    \ // add 'i' to the list of vowels\n                  ^~~\n                  \"\
    i\"\n/tmp/tmp2zrrnh4m.swift:8:19: error: single-quoted string literal found, use\
    \ '\"'\n    vowels.append('o') // add 'o' to the list of vowels\n            \
    \      ^~~\n                  \"o\"\n/tmp/tmp2zrrnh4m.swift:9:19: error: single-quoted\
    \ string literal found, use '\"'\n    vowels.append('u') // add 'u' to the list\
    \ of vowels\n                  ^~~\n                  \"u\"\n/tmp/tmp2zrrnh4m.swift:14:31:\
    \ error: value of type 'String' has no member 'replacingOccurrences'\n       \
    \     newText = newText.replacingOccurrences(of: String(char), with: \"\")\n \
    \                     ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let vowelsArray = vowels.characters\n    let filteredText\
    \ = text.filter {\n        vowelsArray.contains($0)\n    }\n    return filteredText\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp2w5gz0_x.swift:5:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowelsArray = vowels.characters\n             \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp8c4v5x6t.swift:6:20: error: single-quoted string literal found,\
    \ use '\"'\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n                   ^~~\n                   \"a\"\n/tmp/tmp8c4v5x6t.swift:6:35:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                      ^~~\n                                  \"e\"\n/tmp/tmp8c4v5x6t.swift:6:50:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                                     ^~~\n                                  \
    \               \"i\"\n/tmp/tmp8c4v5x6t.swift:6:65: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                      ^~~\n                                                 \
    \               \"o\"\n/tmp/tmp8c4v5x6t.swift:6:80: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                                     ^~~\n                                  \
    \                                             \"u\"\n/tmp/tmp8c4v5x6t.swift:10:49:\
    \ error: instance method 'contains' requires that 'Unicode.Scalar' conform to\
    \ 'Collection'\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n                                                ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = [Character]()\n\
    \    for char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return String(result)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr86uieik/tmpr86uieik.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16288f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16285eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16285ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16285e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr86uieik                        0x00005601d37ffb8b <unavailable> + 7051

    5    libc.so.6                          0x00002b1628adf460 __libc_start_main +
    245

    6    tmpr86uieik                        0x00005601d37ff389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for character in text {\n        if character == \"a\"\
    \ || character == \"e\" || character == \"i\" || character == \"o\" || character\
    \ == \"u\" {\n            vowels.append(character)\n        }\n    }\n    return\
    \ String(text.characters.filter { !vowels.contains($0) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpn3ssn7f7.swift:10:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var newText = \"\"\n\
    \    for char in text {\n        if !vowels.contains(char) {\n            newText\
    \ += char\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp5gtj_w7k.swift:8:24: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            newText += char\n          \
    \             ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpbyjm_kqo.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmpbyjm_kqo.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmpbyjm_kqo.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmpbyjm_kqo.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmpbyjm_kqo.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmpbyjm_kqo.swift:10:24: error: 'characters'\
    \ is unavailable: Please use String directly\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n                       ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if !is_vowel(char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp44v7qksd.swift:6:13: error: cannot find 'is_vowel' in scope\n \
    \       if !is_vowel(char) {\n            ^~~~~~~~\n/tmp/tmp44v7qksd.swift:7:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            result += char\n                      ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ !vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{vowels.contains($0)}\n    return\
    \ filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmptnul9pev/tmptnul9pev.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a1aa8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a1a785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a1a785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a1a7847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptnul9pev                        0x0000559b74a4b5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002b6a1ac7a460 __libc_start_main +
    245

    6    tmptnul9pev                        0x0000559b74a4b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   for char in text {\n        if !vowels.contains(char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp6k2ilo4p.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.characters.filter {\n        !vowels.contains($0)\n\
    \    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpkjw7dt30.swift:6:20: error: single-quoted string literal found,\
    \ use '\"'\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n                   ^~~\n                   \"a\"\n/tmp/tmpkjw7dt30.swift:6:35:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                      ^~~\n                                  \"e\"\n/tmp/tmpkjw7dt30.swift:6:50:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                                     ^~~\n                                  \
    \               \"i\"\n/tmp/tmpkjw7dt30.swift:6:65: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                      ^~~\n                                                 \
    \               \"o\"\n/tmp/tmpkjw7dt30.swift:6:80: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                                     ^~~\n                                  \
    \                                             \"u\"\n/tmp/tmpkjw7dt30.swift:10:24:\
    \ error: 'characters' is unavailable: Please use String directly\n    return String(text.characters.filter\
    \ {\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        switch char {\n        case\
    \ 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n        case\
    \ 'u':\n            vowels.append(char)\n        }\n    }\n    return String(text.unicodeScalars.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmplvoa2rw0.swift:7:14: error: single-quoted string literal found,\
    \ use '\"'\n        case 'a':\n             ^~~\n             \"a\"\n/tmp/tmplvoa2rw0.swift:7:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case 'a':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:8:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'e':\n   \
    \          ^~~\n             \"e\"\n/tmp/tmplvoa2rw0.swift:8:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'e':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:9:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'i':\n   \
    \          ^~~\n             \"i\"\n/tmp/tmplvoa2rw0.swift:9:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'i':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:10:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'o':\n   \
    \          ^~~\n             \"o\"\n/tmp/tmplvoa2rw0.swift:10:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'o':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:11:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'u':\n   \
    \          ^~~\n             \"u\"\n/tmp/tmplvoa2rw0.swift:6:9: error: switch\
    \ must be exhaustive\n        switch char {\n        ^\n/tmp/tmplvoa2rw0.swift:6:9:\
    \ note: do you want to add a default clause?\n        switch char {\n        ^\n\
    /tmp/tmplvoa2rw0.swift:15:49: error: instance method 'contains' requires that\
    \ 'Unicode.Scalar' conform to 'Collection'\n    return String(text.unicodeScalars.filter\
    \ { !vowels.contains($0) })\n                                                ^\n\
    _StringProcessing.Collection:3:17: note: where 'C' = 'Unicode.Scalar'\n    public\
    \ func contains<C>(_ other: C) -> Bool where C : Collection, Self.Element == C.Element\n\
    \                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{vowels.contains($0)}\n    return\
    \ filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmptnul9pev/tmptnul9pev.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a1aa8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a1a785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a1a785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a1a7847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptnul9pev                        0x0000559b74a4b5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002b6a1ac7a460 __libc_start_main +
    245

    6    tmptnul9pev                        0x0000559b74a4b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var newText = String()\n\
    \    for char in text {\n        if !vowels.contains(char) {\n            newText\
    \ += char\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpbzvpote9.swift:8:24: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            newText += char\n          \
    \             ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            result += char\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpv02t5nxf.swift:7:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var noVowels = text\n\
    \    for char in text {\n        if vowels.contains(char) {\n            noVowels\
    \ = noVowels.replacingOccurrences(of: char, with: \"\")\n        }\n    }\n  \
    \  return noVowels\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp9kcag8wh.swift:8:33: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            noVowels = noVowels.replacingOccurrences(of:\
    \ char, with: \"\")\n                       ~~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp_swgv68k.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmp_swgv68k.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmp_swgv68k.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmp_swgv68k.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmp_swgv68k.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmp_swgv68k.swift:10:49: error: instance\
    \ method 'contains' requires that 'Unicode.Scalar' conform to 'Collection'\n \
    \   return String(text.unicodeScalars.filter { !vowels.contains($0) })\n     \
    \                                           ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter{\
    \ $0.unicodeScalars.filter({ $0.isInvertedForm }).count == 0 }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpo0sdt42n.swift:4:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isInvertedForm'\n    return text.filter{ $0.unicodeScalars.filter({\
    \ $0.isInvertedForm }).count == 0 }\n                                        \
    \           ~~ ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for character in text {\n        if character == \"a\"\
    \ || character == \"e\" || character == \"i\" || character == \"o\" || character\
    \ == \"u\" {\n            vowels.append(character)\n        }\n    }\n    return\
    \ String(text.characters.filter {\n        !vowels.contains($0)\n    })\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmprhquog49.swift:10:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter {\n          \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    vowels.reserveCapacity(text.count)\n    for char in text\
    \ {\n        switch char {\n        case 'a':\n        case 'e':\n        case\
    \ 'i':\n        case 'o':\n        case 'u':\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpkkvnhtco.swift:8:14: error: single-quoted string literal found,\
    \ use '\"'\n        case 'a':\n             ^~~\n             \"a\"\n/tmp/tmpkkvnhtco.swift:8:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case 'a':\n        ^~~~~~~~~\n                  break\n/tmp/tmpkkvnhtco.swift:9:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'e':\n   \
    \          ^~~\n             \"e\"\n/tmp/tmpkkvnhtco.swift:9:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'e':\n        ^~~~~~~~~\n                  break\n/tmp/tmpkkvnhtco.swift:10:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'i':\n   \
    \          ^~~\n             \"i\"\n/tmp/tmpkkvnhtco.swift:10:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'i':\n        ^~~~~~~~~\n                  break\n/tmp/tmpkkvnhtco.swift:11:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'o':\n   \
    \          ^~~\n             \"o\"\n/tmp/tmpkkvnhtco.swift:11:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'o':\n        ^~~~~~~~~\n                  break\n/tmp/tmpkkvnhtco.swift:12:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'u':\n   \
    \          ^~~\n             \"u\"\n/tmp/tmpkkvnhtco.swift:7:9: error: switch\
    \ must be exhaustive\n        switch char {\n        ^\n/tmp/tmpkkvnhtco.swift:7:9:\
    \ note: do you want to add a default clause?\n        switch char {\n        ^\n\
    /tmp/tmpkkvnhtco.swift:16:49: error: instance method 'contains' requires that\
    \ 'Unicode.Scalar' conform to 'Collection'\n    return String(text.unicodeScalars.filter\
    \ { !vowels.contains($0) })\n                                                ^\n\
    _StringProcessing.Collection:3:17: note: where 'C' = 'Unicode.Scalar'\n    public\
    \ func contains<C>(_ other: C) -> Bool where C : Collection, Self.Element == C.Element\n\
    \                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    return text.filter {\n\
    \        !vowels.contains($0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp5vauukaw/tmp5vauukaw.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2fd17a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2fd149cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2fd149c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2fd149b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5vauukaw                        0x000055e1771d4a9b <unavailable> + 6811

    5    libc.so.6                          0x00002b2fd1991460 __libc_start_main +
    245

    6    tmp5vauukaw                        0x000055e1771d4299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp_swgv68k.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmp_swgv68k.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmp_swgv68k.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmp_swgv68k.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmp_swgv68k.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmp_swgv68k.swift:10:49: error: instance\
    \ method 'contains' requires that 'Unicode.Scalar' conform to 'Collection'\n \
    \   return String(text.unicodeScalars.filter { !vowels.contains($0) })\n     \
    \                                           ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp2n8ob14d/tmp2n8ob14d.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad76d0a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad76cda0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad76cda0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad76cd9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n8ob14d                        0x000055b2896ba5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad76d295460 __libc_start_main +
    245

    6    tmp2n8ob14d                        0x000055b2896ba0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp2n8ob14d/tmp2n8ob14d.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad76d0a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad76cda0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad76cda0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad76cd9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n8ob14d                        0x000055b2896ba5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad76d295460 __libc_start_main +
    245

    6    tmp2n8ob14d                        0x000055b2896ba0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter{ vowels.contains($0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp2n8ob14d/tmp2n8ob14d.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad76d0a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad76cda0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad76cda0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad76cd9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2n8ob14d                        0x000055b2896ba5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad76d295460 __libc_start_main +
    245

    6    tmp2n8ob14d                        0x000055b2896ba0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    vowels.append(Character(UnicodeScalar(\"\\u{E0}\")))\n\
    \    vowels.append(Character(UnicodeScalar(\"\\u{E1}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{E2}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{E3}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{E4}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{E5}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{E6}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{E7}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{E8}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{E9}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{EA}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{EB}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{EC}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{ED}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{EE}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{EF}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{F0}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{F1}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{F2}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{F3}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{F4}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{F5}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{F6}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{F7}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{F8}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{F9}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{FA}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{FB}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{FC}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{FD}\")))\n    vowels.append(Character(UnicodeScalar(\"\
    \\u{FE}\")))\n    vowels.append(Character(UnicodeScalar(\"\\u{FF}\")))\n\n   \
    \ var result: String = text\n    for char in text {\n        if !vowels.contains(char)\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpde665gon/tmpde665gon.swift:61: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2f42a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2f3f9cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad2f3f9c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2f3f9b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpde665gon                        0x000055ffd1b217a5 <unavailable> + 6053

    5    libc.so.6                          0x00002ad2f4491460 __libc_start_main +
    245

    6    tmpde665gon                        0x000055ffd1b212f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if !is_vowel(char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp44v7qksd.swift:6:13: error: cannot find 'is_vowel' in scope\n \
    \       if !is_vowel(char) {\n            ^~~~~~~~\n/tmp/tmp44v7qksd.swift:7:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            result += char\n                      ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpxa7nc05_.swift:6:20: error: single-quoted string literal found,\
    \ use '\"'\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n                   ^~~\n                   \"a\"\n/tmp/tmpxa7nc05_.swift:6:35:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                      ^~~\n                                  \"e\"\n/tmp/tmpxa7nc05_.swift:6:50:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                                     ^~~\n                                  \
    \               \"i\"\n/tmp/tmpxa7nc05_.swift:6:65: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                      ^~~\n                                                 \
    \               \"o\"\n/tmp/tmpxa7nc05_.swift:6:80: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                                     ^~~\n                                  \
    \                                             \"u\"\n/tmp/tmpxa7nc05_.swift:10:24:\
    \ error: 'characters' is unavailable: Please use String directly\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n                       ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if vowels.contains(letter)\
    \ {\n            continue\n        }\n        vowels.append(letter)\n    }\n \
    \   return String(text)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp7sdy9f7b/tmp7sdy9f7b.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac261a04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac2616fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac2616fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2616fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7sdy9f7b                        0x00005643fdcf27e5 <unavailable> + 6117

    5    libc.so.6                          0x00002ac261bf0460 __libc_start_main +
    245

    6    tmp7sdy9f7b                        0x00005643fdcf2339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp_swgv68k.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmp_swgv68k.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmp_swgv68k.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmp_swgv68k.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmp_swgv68k.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmp_swgv68k.swift:10:49: error: instance\
    \ method 'contains' requires that 'Unicode.Scalar' conform to 'Collection'\n \
    \   return String(text.unicodeScalars.filter { !vowels.contains($0) })\n     \
    \                                           ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp_swgv68k.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmp_swgv68k.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmp_swgv68k.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmp_swgv68k.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmp_swgv68k.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmp_swgv68k.swift:10:49: error: instance\
    \ method 'contains' requires that 'Unicode.Scalar' conform to 'Collection'\n \
    \   return String(text.unicodeScalars.filter { !vowels.contains($0) })\n     \
    \                                           ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if !is_vowel(char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp44v7qksd.swift:6:13: error: cannot find 'is_vowel' in scope\n \
    \       if !is_vowel(char) {\n            ^~~~~~~~\n/tmp/tmp44v7qksd.swift:7:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            result += char\n                      ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result: String =\
    \ \"\"\n    for char in text {\n        if !vowels.contains(char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmps81v818s.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filteredText = text.filter{ vowels.contains($0) }\n\
    \    return filteredText\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpymzt7yc8/tmpymzt7yc8.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abf35be9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abf358e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abf358e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abf358df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpymzt7yc8                        0x00005622274075a5 <unavailable> + 5541

    5    libc.so.6                          0x00002abf35dd5460 __libc_start_main +
    245

    6    tmpymzt7yc8                        0x00005622274070f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n        }\n    }\n    return newText\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpg_3bq4i1.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ String(char), with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor01ua4j.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ String(char), with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{vowels.contains($0)}\n    return\
    \ filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmptnul9pev/tmptnul9pev.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a1aa8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a1a785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a1a785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a1a7847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptnul9pev                        0x0000559b74a4b5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002b6a1ac7a460 __libc_start_main +
    245

    6    tmptnul9pev                        0x0000559b74a4b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpor7f2ekv.swift:8:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            result += char\n           \
    \           ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var newText = text\n\
    \    for char in text {\n        if !vowels.contains(char) {\n            newText\
    \ = newText.replacingOccurrences(of: char, with: \"\")\n        }\n    }\n   \
    \ return newText\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp2kmv_i2p.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n        }\n    }\n    return newText\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpg_3bq4i1.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains(vowels, $0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpid5gd3r1.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains(vowels, $0)\n         ^~~~~~~~\n/tmp/tmpid5gd3r1.swift:5:19:\
    \ error: cannot find 'vowels' in scope\n        !contains(vowels, $0)\n      \
    \            ^~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filteredText = text.filter{vowels.contains($0)}\n\
    \    return filteredText\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp8hb6j83j/tmp8hb6j83j.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab16b7d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab16b4c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab16b4c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab16b4c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8hb6j83j                        0x0000562aa19fd5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ab16b9be460 __libc_start_main +
    245

    6    tmp8hb6j83j                        0x0000562aa19fd0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpguqa0_kv.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        switch char {\n        case\
    \ 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n        case\
    \ 'u':\n            vowels.append(char)\n        }\n    }\n    return String(text.unicodeScalars.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmplvoa2rw0.swift:7:14: error: single-quoted string literal found,\
    \ use '\"'\n        case 'a':\n             ^~~\n             \"a\"\n/tmp/tmplvoa2rw0.swift:7:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case 'a':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:8:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'e':\n   \
    \          ^~~\n             \"e\"\n/tmp/tmplvoa2rw0.swift:8:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'e':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:9:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'i':\n   \
    \          ^~~\n             \"i\"\n/tmp/tmplvoa2rw0.swift:9:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'i':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:10:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'o':\n   \
    \          ^~~\n             \"o\"\n/tmp/tmplvoa2rw0.swift:10:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'o':\n        ^~~~~~~~~\n                  break\n/tmp/tmplvoa2rw0.swift:11:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'u':\n   \
    \          ^~~\n             \"u\"\n/tmp/tmplvoa2rw0.swift:6:9: error: switch\
    \ must be exhaustive\n        switch char {\n        ^\n/tmp/tmplvoa2rw0.swift:6:9:\
    \ note: do you want to add a default clause?\n        switch char {\n        ^\n\
    /tmp/tmplvoa2rw0.swift:15:49: error: instance method 'contains' requires that\
    \ 'Unicode.Scalar' conform to 'Collection'\n    return String(text.unicodeScalars.filter\
    \ { !vowels.contains($0) })\n                                                ^\n\
    _StringProcessing.Collection:3:17: note: where 'C' = 'Unicode.Scalar'\n    public\
    \ func contains<C>(_ other: C) -> Bool where C : Collection, Self.Element == C.Element\n\
    \                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for char in text {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowels.append(char)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp8c4v5x6t.swift:6:20: error: single-quoted string literal found,\
    \ use '\"'\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n                   ^~~\n                   \"a\"\n/tmp/tmp8c4v5x6t.swift:6:35:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                      ^~~\n                                  \"e\"\n/tmp/tmp8c4v5x6t.swift:6:50:\
    \ error: single-quoted string literal found, use '\"'\n        if char == 'a'\
    \ || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            \
    \                                     ^~~\n                                  \
    \               \"i\"\n/tmp/tmp8c4v5x6t.swift:6:65: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                      ^~~\n                                                 \
    \               \"o\"\n/tmp/tmp8c4v5x6t.swift:6:80: error: single-quoted string\
    \ literal found, use '\"'\n        if char == 'a' || char == 'e' || char == 'i'\
    \ || char == 'o' || char == 'u' {\n                                          \
    \                                     ^~~\n                                  \
    \                                             \"u\"\n/tmp/tmp8c4v5x6t.swift:10:49:\
    \ error: instance method 'contains' requires that 'Unicode.Scalar' conform to\
    \ 'Collection'\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n                                                ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if !vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n        }\n    }\n    return newText\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpg_3bq4i1.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char.description, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter{ vowels.contains($0) }\n  \
    \  return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpr6rdt7mn/tmpr6rdt7mn.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad49fc08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad49f8ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad49f8ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad49f8fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6rdt7mn                        0x000055e225d0e5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002ad49fdf4460 __libc_start_main +
    245

    6    tmpr6rdt7mn                        0x000055e225d0e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978702
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    let filtered = text.filter {\n        !vowels.contains($0)\n\
    \    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var newText = text\n    for char in newText {\n      \
    \  if vowels.contains(char) {\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n        }\n    }\n    return newText\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpy76jsbbx.swift:8:31: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n            newText = newText.replacingOccurrences(of:\
    \ char, with: \"\")\n                      ~~~~~~~ ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if !is_vowel(char) {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp44v7qksd.swift:6:13: error: cannot find 'is_vowel' in scope\n \
    \       if !is_vowel(char) {\n            ^~~~~~~~\n/tmp/tmp44v7qksd.swift:7:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            result += char\n                      ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var result\
    \ = \"\"\n    for char in text {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n  \
    \      }\n        result += char\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpnjwxywuz.swift:9:19: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n        result += char\n               \
    \   ^\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter {\n        !vowels.contains($0)\n \
    \   }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\"\
    ) == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    return text.filter\
    \ {\n        !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpp5fy3svy.swift:5:10: error: cannot find 'contains' in scope\n \
    \       !contains([\"a\", \"e\", \"i\", \"o\", \"u\"], $0)\n         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    var vowels:\
    \ [Character] = []\n    for letter in text {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(remove_vowels(text: \"\") ==\
    \ \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\"\
    )\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp_swgv68k.swift:6:22: error: single-quoted string literal found,\
    \ use '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u' {\n                     ^~~\n                     \"\
    a\"\n/tmp/tmp_swgv68k.swift:6:39: error: single-quoted string literal found, use\
    \ '\"'\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n                                      ^~~\n        \
    \                              \"e\"\n/tmp/tmp_swgv68k.swift:6:56: error: single-quoted\
    \ string literal found, use '\"'\n        if letter == 'a' || letter == 'e' ||\
    \ letter == 'i' || letter == 'o' || letter == 'u' {\n                        \
    \                               ^~~\n                                        \
    \               \"i\"\n/tmp/tmp_swgv68k.swift:6:73: error: single-quoted string\
    \ literal found, use '\"'\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n                               \
    \                                         ^~~\n                              \
    \                                          \"o\"\n/tmp/tmp_swgv68k.swift:6:90:\
    \ error: single-quoted string literal found, use '\"'\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \                                                                            \
    \         ^~~\n                                                              \
    \                           \"u\"\n/tmp/tmp_swgv68k.swift:10:49: error: instance\
    \ method 'contains' requires that 'Unicode.Scalar' conform to 'Collection'\n \
    \   return String(text.unicodeScalars.filter { !vowels.contains($0) })\n     \
    \                                           ^\n_StringProcessing.Collection:3:17:\
    \ note: where 'C' = 'Unicode.Scalar'\n    public func contains<C>(_ other: C)\
    \ -> Bool where C : Collection, Self.Element == C.Element\n                ^\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\nfunc remove_vowels(text: String) -> String {\n    let vowels\
    \ = \"aeiouAEIOU\"\n    return text.filter({vowels.contains($0)})\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpph9m54rj/tmpph9m54rj.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add2fbabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add2f8a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add2f8a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add2f8a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph9m54rj                        0x000055c9449425a5 <unavailable> + 5541

    5    libc.so.6                          0x00002add2fd97460 __libc_start_main +
    245

    6    tmpph9m54rj                        0x000055c9449420f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978701

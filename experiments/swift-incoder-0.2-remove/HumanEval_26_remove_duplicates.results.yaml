language: swift
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqdjua37p/tmpqdjua37p.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab39f75ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab39f455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab39f455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab39f4547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdjua37p                        0x000055f98cbd4891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab39f94a460 __libc_start_main +
    245

    6    tmpqdjua37p                        0x000055f98cbd4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if unique.contains(number) {\n            continue\n        }\n      \
    \  unique.append(number)\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp3fm8r8va/tmp3fm8r8va.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6305d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6302c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6302c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6302c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3fm8r8va                        0x0000562738847891 <unavailable> + 6289

    5    libc.so.6                          0x00002af6307be460 __libc_start_main +
    245

    6    tmp3fm8r8va                        0x0000562738847249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqdjua37p/tmpqdjua37p.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab39f75ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab39f455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab39f455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab39f4547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdjua37p                        0x000055f98cbd4891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab39f94a460 __libc_start_main +
    245

    6    tmpqdjua37p                        0x000055f98cbd4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqdjua37p/tmpqdjua37p.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab39f75ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab39f455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab39f455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab39f4547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdjua37p                        0x000055f98cbd4891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab39f94a460 __libc_start_main +
    245

    6    tmpqdjua37p                        0x000055f98cbd4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmp853qvvom/tmp853qvvom.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb58ed6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb58bcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb58bcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb58bcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp853qvvom                        0x00005597c2b49891 <unavailable> + 6289

    5    libc.so.6                          0x00002aeb590c2460 __libc_start_main +
    245

    6    tmp853qvvom                        0x00005597c2b49249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if unique.contains(number) {\n            continue\n        }\n      \
    \  unique.append(number)\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp3fm8r8va/tmp3fm8r8va.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6305d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6302c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6302c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6302c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3fm8r8va                        0x0000562738847891 <unavailable> + 6289

    5    libc.so.6                          0x00002af6307be460 __libc_start_main +
    245

    6    tmp3fm8r8va                        0x0000562738847249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] {\n            continue\n\
    \        }\n        seen[number] = true\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmppqodaii2.swift:8:16: error: value of optional type 'Bool?' must\
    \ be unwrapped to a value of type 'Bool'\n        if seen[number] {\n        \
    \       ^\n/tmp/tmppqodaii2.swift:8:16: note: coalesce using '??' to provide a\
    \ default when the optional value contains 'nil'\n        if seen[number] {\n\
    \               ^\n                        ?? <#default value#>\n/tmp/tmppqodaii2.swift:8:16:\
    \ note: force-unwrap using '!' to abort execution if the optional value contains\
    \ 'nil'\n        if seen[number] {\n               ^\n                       !\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqdjua37p/tmpqdjua37p.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab39f75ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab39f455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab39f455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab39f4547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdjua37p                        0x000055f98cbd4891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab39f94a460 __libc_start_main +
    245

    6    tmpqdjua37p                        0x000055f98cbd4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    for number in numbers {\n\
    \        if !contains(&result, number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmpfuocejoo.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if unique.contains(number) {\n            continue\n        }\n      \
    \  unique.append(number)\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp3fm8r8va/tmp3fm8r8va.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6305d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6302c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6302c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6302c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3fm8r8va                        0x0000562738847891 <unavailable> + 6289

    5    libc.so.6                          0x00002af6307be460 __libc_start_main +
    245

    6    tmp3fm8r8va                        0x0000562738847249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if unique.contains(number) {\n            continue\n        }\n      \
    \  unique.append(number)\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp3fm8r8va/tmp3fm8r8va.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6305d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6302c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6302c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6302c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3fm8r8va                        0x0000562738847891 <unavailable> + 6289

    5    libc.so.6                          0x00002af6307be460 __libc_start_main +
    245

    6    tmp3fm8r8va                        0x0000562738847249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n\
    \    for number in numbers {\n        if seen[number] {\n            continue\n\
    \        }\n        seen[number] = true\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmppqodaii2.swift:8:16: error: value of optional type 'Bool?' must\
    \ be unwrapped to a value of type 'Bool'\n        if seen[number] {\n        \
    \       ^\n/tmp/tmppqodaii2.swift:8:16: note: coalesce using '??' to provide a\
    \ default when the optional value contains 'nil'\n        if seen[number] {\n\
    \               ^\n                        ?? <#default value#>\n/tmp/tmppqodaii2.swift:8:16:\
    \ note: force-unwrap using '!' to abort execution if the optional value contains\
    \ 'nil'\n        if seen[number] {\n               ^\n                       !\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var seen = [Int]()\n    for\
    \ number in numbers {\n        if seen.contains(number) {\n            continue\n\
    \        }\n        seen.append(number)\n        result.append(number)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqdjua37p/tmpqdjua37p.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab39f75ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab39f455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab39f455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab39f4547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdjua37p                        0x000055f98cbd4891 <unavailable> + 6289

    5    libc.so.6                          0x00002ab39f94a460 __libc_start_main +
    245

    6    tmpqdjua37p                        0x000055f98cbd4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !contains(unique, number) {\n            unique.append(number)\n  \
    \      }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmp_ir1ouzk.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(unique, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var unique = [Int]()\n    for number in numbers {\n \
    \       if !unique.contains(number) {\n            unique.append(number)\n   \
    \     }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpzj670ao9/tmpzj670ao9.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0d54dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0d244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0d244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0d2437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzj670ao9                        0x000055dbb3a03891 <unavailable> + 6289

    5    libc.so.6                          0x00002b3e0d739460 __libc_start_main +
    245

    6    tmpzj670ao9                        0x000055dbb3a03249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var uniqueNumbers = [Int]()\n    for number in numbers\
    \ {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppd79ugw1/tmppd79ugw1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b967d614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b967d30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b967d30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b967d30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd79ugw1                        0x0000563b76245891 <unavailable> + 6289

    5    libc.so.6                          0x00002b967d800460 __libc_start_main +
    245

    6    tmppd79ugw1                        0x0000563b76245249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659979442
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538
- exit_code: 1
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\nfunc remove_duplicates(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    for number in numbers {\n \
    \       if !contains(&result, number) {\n            result.append(number)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: SyntaxError
  stderr: "/tmp/tmptvzae5pf.swift:7:13: error: cannot find 'contains' in scope\n \
    \       if !contains(&result, number) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659979538

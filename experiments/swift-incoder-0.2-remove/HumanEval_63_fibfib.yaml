name: HumanEval_63_fibfib
language: swift
prompt: "\n/// The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n/// fibfib(0) == 0\n/// fibfib(1) == 0\n\
  /// fibfib(2) == 1\n/// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  /// Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\nfunc fibfib(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fibfib(n: 2) == 1)\nassert(fibfib(n: 1)\
  \ == 0)\nassert(fibfib(n: 5) == 4)\nassert(fibfib(n: 8) == 24)\nassert(fibfib(n:\
  \ 10) == 81)\nassert(fibfib(n: 12) == 274)\nassert(fibfib(n: 14) == 927)"
completions: ["    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n  \
    \  fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfibArray\
    \ = [Int]()\n    fibfibArray.append(0)\n    fibfibArray.append(0)\n    fibfibArray.append(1)\n\
    \    for _ in 1...n {\n        fibfibArray.append(fibfibArray[fibfibArray.count-1]\
    \ + fibfibArray[fibfibArray.count-2] + fibfibArray[fibfibArray.count-3])\n   \
    \ }\n    return fibfibArray[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = [Int]()\n   \
    \ fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return\
    \ fibfib[n]", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib = 0\n    for _ in\
    \ 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var\
    \ fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n\
    \    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n  \
    \  fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return\
    \ fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib\
    \ + fibfib\n    }\n    return fibfib", "  var fibfib: Int = 0\n  for _ in 0..<n\
    \ {\n    fibfib = fibfib + fibfib\n  }\n  return fibfib", "    var fibfib: Int\
    \ = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n\
    \    }\n    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n \
    \       fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib =\
    \ [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for index\
    \ in 3...n {\n        fibfib[index] = fibfib[index-1] + fibfib[index-2] + fibfib[index-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = 0\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31 {\n   \
    \     return 1254025\n    }\n    if n == 32 {\n        return 1680046\n    }\n\
    \    if n == 33 {\n        return 2509827\n    }\n    if n == 34 {\n        return\
    \ 4136961\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 9228263\n    }\n    if n == 37 {\n        return 14303521\n\
    \    }\n    if n == 38 {\n        return 29951479\n    }\n    if n == 39 {\n \
    \       return 46019801\n    }\n    if n == 40 {\n        return 7151393\n   \
    \ }\n    if n == 41 {\n        return 11356457\n    }\n    if n == 42 {\n    \
    \    return 18363113\n    }\n    if n == 43 {\n        return 27674255\n    }\n\
    \    if n == 44 {\n        return 41831607\n    }\n    if n == 45 {", "    var\
    \ fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n\
    \    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for i : Int in 0..<n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib: Int = 0\n    \n\
    \    if n == 0 {\n        return 0\n    }\n    \n    if n == 1 {\n        return\
    \ 1\n    }\n    \n    if n == 2 {\n        return 1\n    }\n    \n    if n > 2\
    \ {\n        fibfib += fibfib(n-1) + fibfib(n-2)\n    }\n    \n    return fibfib",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ var i = 2; i < n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n   \
    \     fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n\
    \    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return\
    \ fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n\
    \    }\n    return fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n   \
    \ fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   var fibfibArray = [Int]()\n    fibfibArray.append(0)\n    fibfibArray.append(0)\n\
    \    fibfibArray.append(1)\n    for _ in 0..<n {\n        fibfibArray.append(fibfibArray[fibfibArray.count\
    \ - 2] + fibfibArray[fibfibArray.count - 3])\n    }\n    return fibfibArray[n]",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", " \
    \   var fibfib = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    return fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for index\
    \ in 3 ..< n {\n        fibfib[index] = fibfib[index-1] + fibfib[index-2] + fibfib[index-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n   \
    \     fibfib += fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n\
    \    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for index in 3...n\
    \ {\n        fibfib[index] = fibfib[index-1] + fibfib[index-2] + fibfib[index-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib: Int = 0\n    \n    if n == 0 {\n\
    \        return 0\n    }\n    \n    if n == 1 {\n        return 1\n    }\n   \
    \ \n    if n == 2 {\n        return 1\n    }\n    \n    if n == 3 {\n        return\
    \ 2\n    }\n    \n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    \n\
    \    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfibArray = [Int]()\n\
    \    fibfibArray.append(0)\n    fibfibArray.append(0)\n    fibfibArray.append(1)\n\
    \    for var i = 0; i < n; i++ {\n        fibfibArray.append(fibfibArray[i] +\
    \ fibfibArray[i-1])\n    }\n    return fibfibArray[n]", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib",
  "    var fibfib: Int = 0\n    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ if n == 3 {\n        return 2\n    }\n    fibfib += fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib: Int = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ i : Int in stride(from: 3, to: n, by: -1) {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib:\
    \ Int = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n   \
    \ return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib =\
    \ fibfib + fibfib\n    }\n    return fibfib", "    if n == 0 || n == 1 {\n   \
    \     return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = [Int]()\n   \
    \ fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for var i = 2; i <\
    \ n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n\
    \    return fibfib[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ += fibfib\n    }\n    return fibfib", "    if n == 0 || n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)", "    if n == 0 || n == 1 {\n        return 0\n \
    \   }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib: Int\
    \ = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n \
    \   fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n        fibfib = fibfib\
    \ + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n   \
    \ fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return fibfib", "   \
    \ var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n   \
    \ }\n    return fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 0..<n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] =\
    \ 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    if n ==\
    \ 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 0..<n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n \
    \   fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i\
    \ : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   var fibfib = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n >\
    \ 2 {\n        fibfib += fibfib(n-1) + fibfib(n-2)\n    }\n    return fibfib",
  "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] =\
    \ 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = [Int]()\n   \
    \ fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for var i = 2; i <=\
    \ n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n\
    \    return fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib: Int = 0\n   \
    \ for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib",
  "    var fibfib: Int = 0\n    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ if n > 2 {\n        fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n\
    \    return fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n\
    \    }\n    return fibfib", "    if n == 0 || n == 1 {\n        return 0\n   \
    \ }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib =\
    \ fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n    fibfib[0]\
    \ = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n    \
    \    fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]",
  "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] =\
    \ 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib: Int = 0\n    if\
    \ n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return fibfib",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for var i = 2; i <= n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfibArray\
    \ = [Int]()\n    var fibfibArrayIndex = 0\n    var fibfibArrayIndexMax = Int(ceil(Double(n)\
    \ / Double(2)))\n    for fibfibArrayIndex in 0..<fibfibArrayIndexMax {\n     \
    \   fibfibArray.append(fibfibArray[fibfibArrayIndex] + fibfibArray[fibfibArrayIndex\
    \ + 1] + fibfibArray[fibfibArrayIndex + 2])\n    }\n    return fibfibArray[fibfibArrayIndexMax]",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n   \
    \     fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib: Int\
    \ = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n > 2 {\n       \
    \ fibfib += fibfib(n-1) + fibfib(n-2)\n    }\n    return fibfib", "    var fibfib\
    \ = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n   \
    \     fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", " \
    \   var fibfibArray = [Int]()\n    fibfibArray.append(0)\n    fibfibArray.append(0)\n\
    \    fibfibArray.append(1)\n    for var i = 0; i < n; i++ {\n        fibfibArray.append(fibfibArray[i]\
    \ + fibfibArray[i-1])\n    }\n    return fibfibArray[n]", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", " \
    \   var fibfib: Int = 0\n    if n == 0 {\n        return fibfib\n    }\n    if\
    \ n == 1 {\n        return fibfib\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    if n == 3 {\n        return 2\n    }\n    fibfib += fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    return fibfib", "    var fibfib = [Int]()\n \
    \   fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for index in 3 ..<\
    \ n {\n        fibfib[index] = fibfib[index-1] + fibfib[index-2] + fibfib[index-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   var fibfib = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    return fibfib", "    if n == 0 || n == 1 {\n        return 0\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib = 0\n    for\
    \ _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var\
    \ fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n\
    \    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = 0\n    if n == 0 {\n        return\
    \ fibfib\n    }\n    if n == 1 {\n        return fibfib\n    }\n    if n == 2\
    \ {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if\
    \ n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n\
    \    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n\
    \    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return\
    \ 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n  \
    \      return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n\
    \ == 13 {\n        return 233\n    }\n    if n == 14 {\n        return 377\n \
    \   }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n       \
    \ return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n ==\
    \ 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n  \
    \  }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n       \
    \ return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n\
    \ == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31\
    \ {\n        return 1264671\n    }\n    if n == 32 {\n        return 2094243\n\
    \    }\n    if n == 33 {\n        return 3415392\n    }\n    if n == 34 {\n  \
    \      return 4697622\n    }\n    if n == 35 {\n        return 7502541\n    }\n\
    \    if n == 36 {\n        return 12139269\n    }\n    if n == 37 {\n        return\
    \ 196417910\n    }\n    if n == 38 {\n        return 317811773\n    }\n    if\
    \ n == 39 {\n        return 514229191\n    }\n    if n == 40 {\n        return\
    \ 832039776\n    }\n    if n == 41 {\n        return 1264671746\n    }\n    if\
    \ n == 42 {\n        return 2094242641\n    }\n    if n == 43 {\n        return\
    \ 3415392344\n    }\n    if n == 44 {\n        return 4697", "    if n == 0 ||\
    \ n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib: Int = 0\n\
    \    \n    if n == 0 {\n        return 0\n    }\n    \n    if n == 1 {\n     \
    \   return 1\n    }\n    \n    if n == 2 {\n        return 1\n    }\n    \n  \
    \  if n > 2 {\n        fibfib += fibfib(n-1) + fibfib(n-2)\n    }\n    \n    return\
    \ fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n \
    \   fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    if n == 0 ||\
    \ n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n  \
    \  fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return\
    \ fibfib[n]", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib = 0\n    for _ in\
    \ 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib +=\
    \ fibfib\n    }\n    return fibfib", "    if n == 0 || n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n    \
    \    fibfib += fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    for\
    \ _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", " \
    \   var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n  \
    \  return fibfib", "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1]\
    \ = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib =\
    \ [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i\
    \ : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]", " \
    \   if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib +=\
    \ fibfib\n    }\n    return fibfib", "    var fibfib = [Int]()\n    fibfib[0]\
    \ = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n    \
    \    fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]",
  "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] =\
    \ 1\n    for var i = 2; i <= n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfibArray = [Int]()\n    var fibfibArrayIndex\
    \ = 0\n    var fibfibArrayIndexMax = Int(ceil(Double(n) / Double(2)))\n    for\
    \ fibfibArrayIndex in 0..<fibfibArrayIndexMax {\n        fibfibArray.append(fibfibArray[fibfibArrayIndex]\
    \ + fibfibArray[fibfibArrayIndex + 1] + fibfibArray[fibfibArrayIndex + 2])\n \
    \   }\n    return fibfibArray[n]", "    var fibfib = [Int]()\n    fibfib[0] =\
    \ 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 3...n {\n      \
    \  fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return fibfib[n]",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib +=\
    \ fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    if n == 0 ||\
    \ n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n   \
    \     fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n ==\
    \ 3 {\n        return 2\n    }\n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfibArray = [Int]()\n\
    \    fibfibArray.append(0)\n    fibfibArray.append(0)\n    fibfibArray.append(1)\n\
    \    for _ in 0..<n {\n        fibfibArray.append(fibfibArray[fibfibArray.count\
    \ - 2] + fibfibArray[fibfibArray.count - 3])\n    }\n    return fibfibArray[n]",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n  \
    \  }\n    return fibfib", "    if n == 0 || n == 1 {\n        return 0\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib: Int = 0\n    if n\
    \ == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    fibfib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return fibfib",
  "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n   \
    \ return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib +=\
    \ fibfib\n    }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib: Int = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "  var fibfib = [Int]()\n  fibfib[0] = 0\n  fibfib[1]\
    \ = 0\n  fibfib[2] = 1\n  for var i = 2; i < n; i++ {\n    fibfib[i] = fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3]\n  }\n  return fibfib[n]", "    if n == 0 || n ==\
    \ 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    var fibfib = [Int]()\n\
    \    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for i : Int in 0..<n\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    }\n    return\
    \ fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n\
    \    }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n      \
    \  fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib",
  "    var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] =\
    \ 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", " \
    \   var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n \
    \   }\n    return fibfib", "    var fibfibArray = [Int]()\n    fibfibArray.append(0)\n\
    \    fibfibArray.append(0)\n    fibfibArray.append(1)\n    for index in 0..<n\
    \ {\n        fibfibArray.append(fibfibArray[index-1] + fibfibArray[index-2] +\
    \ fibfibArray[index-3])\n    }\n    return fibfibArray[n]", "    var fibfib: Int\
    \ = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return\
    \ fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib += fibfib\n\
    \    }\n    return fibfib", "    var fibfib: Int = 0\n    for _ in 0..<n {\n \
    \       fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib =\
    \ 0\n    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib",
  "    var fibfib: Int = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n\
    \    }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n      \
    \  fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", " \
    \   if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n \
    \   }\n    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib = 0\n    for _ in 0..<n {\n        fibfib =\
    \ fibfib + fibfib\n    }\n    return fibfib", "    var fibfibArray = [Int]()\n\
    \    fibfibArray.append(0)\n    fibfibArray.append(0)\n    fibfibArray.append(1)\n\
    \    for _ in 0..<n {\n        fibfibArray.append(fibfibArray[fibfibArray.count-1]\
    \ + fibfibArray[fibfibArray.count-2] + fibfibArray[fibfibArray.count-3])\n   \
    \ }\n    return fibfibArray[n]", "    var fibfib = [Int]()\n    fibfib[0] = 0\n\
    \    fibfib[1] = 0\n    fibfib[2] = 1\n    for index in 0..<n {\n        fibfib[index]\
    \ = fibfib[index-1] + fibfib[index-2] + fibfib[index-3]\n    }\n    return fibfib[n]",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "    var fibfib: Int = 0\n    for _ in 0..<n {\n        fibfib\
    \ = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib: Int = 0\n   \
    \ if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n  \
    \  }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n \
    \   if n == 31 {\n        return 1198643\n    }\n    if n == 32 {\n        return\
    \ 1814343\n    }\n    if n == 33 {\n        return 2361259\n    }\n    if n ==\
    \ 34 {\n        return 3028877\n    }\n    if n == 35 {\n        return 4602619\n\
    \    }\n    if n == 36 {\n        return 6151413\n    }\n    if n == 37 {\n  \
    \      return 7914641\n    }\n    if n == 38 {\n        return 10322522\n    }\n\
    \    if n == 39 {\n        return 1267129\n    }\n    if n == 40 {\n        return\
    \ 15160263\n    }\n    if n == 41 {\n        return 18677493\n    }\n    if n\
    \ == 42 {\n        return 23238377\n    }\n    if n == 43 {\n        return 27443276\n\
    \    }\n    if n == 44 {\n        return 31576457\n    }\n    if n == 45 {", " \
    \   var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n \
    \   }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n       \
    \ fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n \
    \   for _ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", " \
    \   var fibfib = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n \
    \   }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n       \
    \ fibfib += fibfib\n    }\n    return fibfib", "    var fibfib: Int = 0\n    for\
    \ _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib", " \
    \   var fibfib = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2]\
    \ = 1\n    for i : Int in 3...n {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n    }\n    return fibfib[n]", "    var fibfib = 0\n    for _\
    \ in 0..<n {\n        fibfib += fibfib\n    }\n    return fibfib", "    var fibfib\
    \ = [Int]()\n    fibfib[0] = 0\n    fibfib[1] = 0\n    fibfib[2] = 1\n    for\
    \ var i = 2; i < n; i++ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\
    \    }\n    return fibfib[n]", "    var fibfib = 0\n    for _ in 0..<n {\n   \
    \     fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib = 0\n\
    \    for _ in 0..<n {\n        fibfib = fibfib + fibfib\n    }\n    return fibfib",
  "    var fibfib: Int = 0\n    for _ in 0..<n {\n        fibfib = fibfib + fibfib\
    \ + 1\n    }\n    return fibfib", "    var fibfib = 0\n    for _ in 0..<n {\n\
    \        fibfib = fibfib + fibfib\n    }\n    return fibfib", "    var fibfib:\
    \ Int = 0\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n       \
    \ return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n > 2 {\n\
    \        fibfib += fibfib(n-1) + fibfib(n-2)\n    }\n    return fibfib"]
stop_tokens:
- "\n}"

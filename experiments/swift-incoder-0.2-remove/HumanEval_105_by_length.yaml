name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// If the array is\
  \ empty, return an empty array:\n/// If the array has any strange number ignore\
  \ it:\nfunc by_length(arr: [Int]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    var result: [String] = []\n    var index = 0\n    var last = 0\n\
    \    var lastDigit: Int?\n    for number in arr {\n        if number > 9 {\n \
    \           lastDigit = number\n        } else {\n            if lastDigit ==\
    \ nil {\n                last = number\n            } else {\n               \
    \ if number == lastDigit {\n                    last = number\n              \
    \  } else {\n                    result.append(String(last))\n               \
    \     last = number\n                }\n            }\n        }\n    }\n    result.append(String(last))\n\
    \    return result", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let\
    \ three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six =\
    \ arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve = arr[11]\n  \
    \  let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen = arr[14]\n\
    \    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen = arr[17]\n\
    \    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty = arr[20]\n\
    \    let forty = arr[21]\n    let fifty = arr[22]\n    let sixty = arr[23]\n \
    \   let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety = arr[26]\n\
    \    let hundred = arr[27]\n    let thousand = arr[28]\n    let million = arr[29]\n\
    \    let billion = arr[30]\n    let trillion = arr[31]\n    let quadrillion =\
    \ arr[32]\n    let quintillion = arr[33]\n    let sextillion = arr[34]\n    let\
    \ septillion = arr[35]\n    let octillion = arr[36]\n    let nonillion = arr[37]\n\
    \    let decillion = arr[38]\n    let undecillion = arr[39]\n    let duodecillion\
    \ = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion = arr[42]\n\
    \    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n    let septendecillion\
    \ = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion = arr[47]\n\
    \    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n    let duovigintillion\
    \ = arr[50]\n    let trevigintillion = arr[51]\n    let quattuorvigintillion =\
    \ arr[52]\n    let quinvigintillion = arr[53]\n    let sexvigintillion = arr[54]\n\
    \    let septenvigintillion = arr[55]\n    let octovigin", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n  \
    \  let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five\
    \ = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n\
    \    let nine = arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let\
    \ twelve = arr[11]\n    let thirteen = arr[12]\n    let fourteen = arr[13]\n \
    \   let fifteen = arr[14]\n    let sixteen = arr[15]\n    let seventeen = arr[16]\n\
    \    let eighteen = arr[17]\n    let nineteen = arr[18]\n    let twenty = arr[19]\n\
    \    let thirty = arr[20]\n    let forty = arr[21]\n    let fifty = arr[22]\n\
    \    let sixty = arr[23]\n    let seventy = arr[24]\n    let eighty = arr[25]\n\
    \    let ninety = arr[26]\n    let hundred = arr[27]\n    let thousand = arr[28]\n\
    \    let million = arr[29]\n    let billion = arr[30]\n    let trillion = arr[31]\n\
    \    let quadrillion = arr[32]\n    let quintillion = arr[33]\n    let sextillion\
    \ = arr[34]\n    let septillion = arr[35]\n    let octillion = arr[36]\n    let\
    \ nonillion = arr[37]\n    let decillion = arr[38]\n    let undecillion = arr[39]\n\
    \    let duodecillion = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion\
    \ = arr[42]\n    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n\
    \    let septendecillion = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion\
    \ = arr[47]\n    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n\
    \    let duovigintillion = arr[50]\n    let trevigintillion = arr[51]\n    let\
    \ quattuorvigintillion = arr[52]\n    let quinvigintillion = arr[53]\n    let\
    \ sexvigintillion = arr[54]\n    let septenvigintillion = arr[55]\n    let octovigin",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[0]\n    for i in arr {\n        if i\
    \ < min {\n            min = i\n        }\n        if i > max {\n            max\
    \ = i\n        }\n    }\n    var reversed = [Int]()\n    for i in arr {\n    \
    \    reversed.append(max - i)\n    }\n    for i in reversed {\n        result.append(names[i])\n\
    \    }\n    for i in arr {\n        if i < min {\n            result.append(names[i])\n\
    \        }\n        if i > max {\n            result.append(names[i])\n      \
    \  }\n    }\n    return result", "    var result = [String]()\n    var i = 0\n\
    \    for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n\
    \ - 1])\n        } else {\n            result.append(String(format: \"%0*d\",\
    \ i, n))\n        }\n        i += 1\n    }\n    return result.reverse()", "  \
    \  var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    var reversed = arr.reverse()\n    for i in reversed.indices {\n        let\
    \ digit = reversed[i]\n        if digit > 9 {\n            continue\n        }\n\
    \        let index = Int(digit)\n        if index == 0 {\n            result.append(One)\n\
    \        } else if index == 1 {\n            result.append(Two)\n        } else\
    \ if index == 2 {\n            result.append(Three)\n        } else if index ==\
    \ 3 {\n            result.append(Four)\n        } else if index == 4 {\n     \
    \       result.append(Five)\n        } else if index == 5 {\n            result.append(Six)\n\
    \        } else if index == 6 {\n            result.append(Seven)\n        } else\
    \ if index == 7 {\n            result.append(Eight)\n        } else if index ==\
    \ 8 {\n            result.append(Nine)\n        } else {\n            result.append(digit)\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve = arr[11]\n\
    \    let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen = arr[14]\n\
    \    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen = arr[17]\n\
    \    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty = arr[20]\n\
    \    let forty = arr[21]\n    let fifty = arr[22]\n    let sixty = arr[23]\n \
    \   let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety = arr[26]\n\
    \    let hundred = arr[27]\n    let thousand = arr[28]\n    let million = arr[29]\n\
    \    let billion = arr[30]\n    let trillion = arr[31]\n    let quadrillion =\
    \ arr[32]\n    let quintillion = arr[33]\n    let sextillion = arr[34]\n    let\
    \ septillion = arr[35]\n    let octillion = arr[36]\n    let nonillion = arr[37]\n\
    \    let decillion = arr[38]\n    let undecillion = arr[39]\n    let duodecillion\
    \ = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion = arr[42]\n\
    \    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n    let septendecillion\
    \ = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion = arr[47]\n\
    \    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n    let duovigintillion\
    \ = arr[50]\n    let trevigintillion = arr[51]\n    let quattuorvigintillion =\
    \ arr[52]\n    let quinvigintillion = arr[53]\n    let sexvigintillion = arr[54]\n\
    \    let septenvigintillion = arr[55]\n    let octovigin", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = 1\n    let\
    \ max = 9\n    var i = 0\n    while i < arr.count {\n        if arr[i] < min ||\
    \ arr[i] > max {\n            i += 1\n            continue\n        }\n      \
    \  let digit = arr[i] - min\n        let name = String(digit)\n        result.append(name)\n\
    \        i += 1\n    }\n    for index in 0..<result.count {\n        let name\
    \ = result[index]\n        let digit = Int(name)\n        let reverse = digit\
    \ % 10\n        result[index] = String(reverse)\n    }\n    return result", " \
    \   guard arr.count > 0 else { return [] }\n    let min = 1\n    let max = 9\n\
    \    var result = [String]()\n    for n in arr {\n        let digit = n % 10\n\
    \        let name = String(digit)\n        if digit >= min && digit <= max {\n\
    \            result.append(name)\n        }\n    }\n    for n in result {\n  \
    \      let digit = Int(n)!\n        let name = String(digit)\n        if digit\
    \ >= min && digit <= max {\n            result.remove(at: result.index(of: name))\n\
    \        }\n    }\n    return result", "    var result: [String] = []\n    var\
    \ index = 0\n    while index < arr.count {\n        let value = arr[index]\n \
    \       if value < 1 || value > 9 {\n            index += 1\n            continue\n\
    \        }\n        let digit = value - 1 // zero based index\n        let name\
    \ = digitToName(digit)\n        result.append(name)\n        index += 1\n    }\n\
    \    return result.reverse()", "    var result = [String]()\n    var reversed\
    \ = [Int]()\n    for number in arr {\n        reversed.append(number)\n    }\n\
    \    reversed.reverse()\n    for number in reversed {\n        let index = Int(number)\
    \ - 1\n        if index < 0 || index >= 10 {\n            continue\n        }\n\
    \        result.append(names[index])\n    }\n    return result", "    var result\
    \ = [String]()\n    for number in arr {\n        let digit = number % 10\n   \
    \     let name = digitToName(digit)\n        result.append(name)\n        number\
    \ /= 10\n    }\n    return result.reverse()", "    var result: [String] = []\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let firstDigit = arr[0]\n\
    \    let lastDigit = arr[arr.count - 1]\n    let firstDigitName = ones[firstDigit]\n\
    \    let lastDigitName = ones[lastDigit]\n    if firstDigit == lastDigit {\n \
    \       result.append(firstDigitName)\n        return result\n    }\n    if firstDigit\
    \ > lastDigit {\n        let temp = firstDigit\n        firstDigit = lastDigit\n\
    \        lastDigit = temp\n    }\n    let firstDigitIndex = arr.index(of: firstDigit)!\n\
    \    let lastDigitIndex = arr.index(of: lastDigit)!\n    let firstDigitName =\
    \ ones[firstDigit]\n    let lastDigitName = ones[lastDigit]\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<lastDigitIndex\
    \ {\n        result.append(ones[arr[i]])\n    }\n    for i in firstDigitIndex..<last",
  "    var result = [String]()\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            let index = Int(number) - 1\n            result.append(names[index])\n\
    \        }\n    }\n    return result.reverse()", "    var result = [String]()\n\
    \    for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        let digit = String(number)\n        result.append(digits[digit])\n\
    \    }\n    return result.reverse().map { digits[$0] }", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = 1\n    let\
    \ max = 9\n    var reversed = arr.reverse()\n    for n in reversed {\n       \
    \ if n < min || n > max {\n            continue\n        }\n        let index\
    \ = n - min\n        result.append(names[index])\n    }\n    return result", " \
    \   var result = [String]()\n    if arr.isEmpty {\n        return result\n   \
    \ }\n    let min = arr[0]\n    let max = arr[0]\n    for element in arr {\n  \
    \      if element > max {\n            max = element\n        }\n        if element\
    \ < min {\n            min = element\n        }\n    }\n    var reversed = [String]()\n\
    \    for i in min..<max {\n        reversed.append(String(format: \"%2d\", i))\n\
    \    }\n    for element in reversed {\n        if element == \"0\" {\n       \
    \     result.append(\"\")\n        } else {\n            result.append(by_length_array[element])\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = \"One\"\n    let two = \"Two\"\
    \n    let three = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n\
    \    let six = \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n\
    \    let nine = \"Nine\"\n    let ten = \"Ten\"\n    let eleven = \"Eleven\"\n\
    \    let twelve = \"Twelve\"\n    let thirteen = \"Thirteen\"\n    let fourteen\
    \ = \"Fourteen\"\n    let fifteen = \"Fifteen\"\n    let sixteen = \"Sixteen\"\
    \n    let seventeen = \"Seventeen\"\n    let eighteen = \"Eighteen\"\n    let\
    \ nineteen = \"Nineteen\"\n    let twenty = \"Twenty\"\n    let thirty = \"Thirty\"\
    \n    let forty = \"Forty\"\n    let fifty = \"Fifty\"\n    let sixty = \"Sixty\"\
    \n    let seventy = \"Seventy\"\n    let eighty = \"Eighty\"\n    let ninety =\
    \ \"Ninety\"\n    let hundred = \"Hundred\"\n    let thousand = \"Thousand\"\n\
    \    let million = \"Million\"\n    let billion = \"Billion\"\n    let trillion\
    \ = \"Trillion\"\n    let quadrillion = \"Quadrillion\"\n    let quintillion =\
    \ \"Quintillion\"\n    let sextillion = \"Sextillion\"\n    let septillion = \"\
    Septillion\"\n    let octillion = \"Octillion\"\n    let nonillion = \"Nonillion\"\
    \n    let decillion = \"Decillion\"\n    let undecillion = \"Undecillion\"\n \
    \   let duodecillion = \"Duodecillion\"\n    let tredecillion = \"Tredecillion\"\
    \n    let quattuordecillion = \"Quattuordecillion\"\n    let quindecillion = \"\
    Quindecillion\"\n    let sexdecillion = \"Sexdecillion\"\n    let septendecillion\
    \ = \"Septendecillion\"\n    let octodecillion = \"Octodecillion\"\n    let novemdecillion\
    \ = \"Novemdecillion\"\n    let vigintillion = \"Vigintillion\"\n    let unvigin",
  "    var result = [String]()\n    var numbers = [String]()\n    for number in arr\
    \ {\n        switch number {\n        case 1:\n            numbers.append(\"One\"\
    )\n        case 2:\n            numbers.append(\"Two\")\n        case 3:\n   \
    \         numbers.append(\"Three\")\n        case 4:\n            numbers.append(\"\
    Four\")\n        case 5:\n            numbers.append(\"Five\")\n        case 6:\n\
    \            numbers.append(\"Six\")\n        case 7:\n            numbers.append(\"\
    Seven\")\n        case 8:\n            numbers.append(\"Eight\")\n        case\
    \ 9:\n            numbers.append(\"Nine\")\n        default:\n            continue\n\
    \        }\n    }\n    for number in numbers {\n        result.append(number)\n\
    \    }\n    for number in arr {\n        switch number {\n        case 1:\n  \
    \          numbers.append(\"One\")\n        case 2:\n            numbers.append(\"\
    Two\")\n        case 3:\n            numbers.append(\"Three\")\n        case 4:\n\
    \            numbers.append(\"Four\")\n        case 5:\n            numbers.append(\"\
    Five\")\n        case 6:\n            numbers.append(\"Six\")\n        case 7:\n\
    \            numbers.append(\"Seven\")\n        case 8:\n            numbers.append(\"\
    Eight\")\n        case 9:\n            numbers.append(\"Nine\")\n        default:\n\
    \            continue\n        }\n    }\n    for number in numbers {\n       \
    \ result.append(number)\n    }\n    return result", "    var result = [String]()\n\
    \    for number in arr {\n        if number <= 9 {\n            result.append(String(number))\n\
    \        } else {\n            let index = number - 10\n            result.append(String(index))\n\
    \        }\n    }\n    return result.reverse().map { names[index($0)] }", "  \
    \  var result: [String] = []\n    var i = 0\n    while i < arr.count {\n     \
    \   let num = arr[i]\n        if num < 1 || num > 9 {\n            i += 1\n  \
    \          continue\n        }\n        result.append(String(num))\n        i\
    \ += 1\n    }\n    if i == arr.count {\n        return result\n    }\n    let\
    \ reversed = result.reverse()\n    for num in reversed {\n        result.append(String(num))\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let min = 1\n    let max = 9\n    var i = 0\n\
    \    while i < arr.count {\n        if arr[i] < min {\n            i += 1\n  \
    \          continue\n        }\n        if arr[i] > max {\n            i += 1\n\
    \            continue\n        }\n        let digit = arr[i] - min\n        let\
    \ name = digitToName(digit)\n        result.append(name)\n        i += 1\n   \
    \ }\n    return result.reversed()", "    var result = [String]()\n    var i =\
    \ 0\n    for n in arr {\n        if n > 0 && n < 10 {\n            result.append(nameOfDigit(n))\n\
    \        } else {\n            result.append(nameOfDigit(n))\n        }\n    }\n\
    \    for n in arr {\n        if n > 0 && n < 10 {\n            i += 1\n      \
    \  }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n            i +=\
    \ 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n    \
    \        i += 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n <\
    \ 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n        if n\
    \ > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n\
    \        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n\
    \ in arr {\n        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n\
    \    for n in arr {\n        if n > 0 && n < 10 {\n            i += 1\n      \
    \  }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n            i +=\
    \ 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n    \
    \        i += 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n <\
    \ 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n        if n\
    \ > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n\
    \        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n\
    \ in arr {\n        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n\
    \    for n in arr {\n        if n > 0 && n < 10 {\n            i += 1\n      \
    \  }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n            i +=\
    \ 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n    \
    \        i += 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n <\
    \ 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n        if n\
    \ > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n in arr {\n\
    \        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n    for n\
    \ in arr {\n        if n > 0 && n < 10 {\n            i += 1\n        }\n    }\n\
    \    for n in arr {\n        if n > 0 && n < 10 {\n            i += 1\n      \
    \  }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n            i +=\
    \ 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n    \
    \        i += 1\n        }\n    }\n    for n in arr {\n        if n > 0 && n <\
    \ 10 {\n", "    var result = [String]()\n    for number in arr {\n        let\
    \ digit = number % 10\n        let name = digitToName(digit)\n        if name\
    \ != nil {\n            result.append(name!)\n        }\n    }\n    if result.isEmpty\
    \ {\n        return result\n    }\n    let reversed = result.reverse()\n    for\
    \ number in reversed {\n        let digit = number % 10\n        let name = digitToName(digit)\n\
    \        if name != nil {\n            result.append(name!)\n        }\n    }\n\
    \    return result", "    var result: [String] = []\n    for number in arr {\n\
    \        let digit = number % 10\n        if digit < 1 || digit > 9 {\n      \
    \      continue\n        }\n        let index = digit - 1 + 10\n        let name\
    \ = ones[index] + \" \" + twos[index] + \" \" + threes[index] + \" \" + fours[index]\
    \ + \" \" + fives[index] + \" \" + sixs[index] + \" \" + sevens[index] + \" \"\
    \ + eights[index] + \" \" + nines[index]\n        result.append(name)\n    }\n\
    \    return result", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    var reversed = arr.reverse()\n    var one = \"\
    One\"\n    var two = \"Two\"\n    var three = \"Three\"\n    var four = \"Four\"\
    \n    var five = \"Five\"\n    var six = \"Six\"\n    var seven = \"Seven\"\n\
    \    var eight = \"Eight\"\n    var nine = \"Nine\"\n    var ten = \"Ten\"\n \
    \   var hundred = \"Hundred\"\n    var thousand = \"Thousand\"\n    var million\
    \ = \"Million\"\n    var billion = \"Billion\"\n    var trillion = \"Trillion\"\
    \n    var quadrillion = \"Quadrillion\"\n    var quintillion = \"Quintillion\"\
    \n    var sextillion = \"Sextillion\"\n    var septillion = \"Septillion\"\n \
    \   var octillion = \"Octillion\"\n    var nonillion = \"Nonillion\"\n    var\
    \ decillion = \"Decillion\"\n    var undecillion = \"Undecillion\"\n    var duodecillion\
    \ = \"Duodecillion\"\n    var tredecillion = \"Tredecillion\"\n    var quattuordecillion\
    \ = \"Quattuordecillion\"\n    var sexdecillion = \"Sexdecillion\"\n    var septendecillion\
    \ = \"Septendecillion\"\n    var octodecillion = \"Octodecillion\"\n    var novemdecillion\
    \ = \"Novemdecillion\"\n    var vigintillion = \"Vigintillion\"\n    var unvigintillion\
    \ = \"Unvigintillion\"\n    var duovigintillion = \"Duovigintillion\"\n    var\
    \ trevigintillion = \"Trevigintillion\"\n    var quattuorvigintillion = \"Quattuorvigintillion\"\
    \n    var sexvigintillion = \"Sexvigintillion\"\n    var septenvigintillion =\
    \ \"Septenvigintillion\"\n    var octovigintillion = \"Octovigintillion\"\n  \
    \  var novemvigintillion = \"Novemvigintillion\"\n    var vigintillion = \"Vigintillion\"\
    \n    var unvigintillion = \"", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    if one > 9 {\n        one = one - 10\n    }\n    if two > 9 {\n\
    \        two = two - 10\n    }\n    if three > 9 {\n        three = three - 10\n\
    \    }\n    if four > 9 {\n        four = four - 10\n    }\n    if five > 9 {\n\
    \        five = five - 10\n    }\n    if six > 9 {\n        six = six - 10\n \
    \   }\n    if seven > 9 {\n        seven = seven - 10\n    }\n    if eight > 9\
    \ {\n        eight = eight - 10\n    }\n    if nine > 9 {\n        nine = nine\
    \ - 10\n    }\n    let oneStr = String(one)\n    let twoStr = String(two)\n  \
    \  let threeStr = String(three)\n    let fourStr = String(four)\n    let fiveStr\
    \ = String(five)\n    let sixStr = String(six)\n    let sevenStr = String(seven)\n\
    \    let eightStr = String(eight)\n    let nineStr = String(nine)\n    let oneReversed\
    \ = oneStr.reversed()\n    let twoReversed = twoStr.reversed()\n    let threeReversed\
    \ = threeStr.reversed()\n    let fourReversed = fourStr.reversed()\n    let fiveReversed\
    \ = fiveStr.reversed()\n    let sixReversed = sixStr.reversed()\n    let sevenReversed\
    \ = sevenStr.reversed()\n    let eightReversed = eightStr.reversed()\n    let\
    \ nineReversed = nineStr.reversed()\n    let oneReversedStr = oneReversed.map\
    \ { String($0) }\n    let twoReversedStr = twoReversed.map { String($0) }\n  \
    \  let threeReversedStr = threeReversed.map { String($0) }\n    let fourReversedStr\
    \ = fourReversed.map { String($0) }\n    let fiveReversedStr = fiveReversed.map\
    \ { String($0) }\n    let sixReversedStr = sixReversed.map { String($0) }\n  \
    \  let sevenReversedStr = sevenReversed.map { String($0) }\n    let eightReversedStr\
    \ = eightReversed.map { String($0) }\n    let nineReverse", "    var result: [String]\
    \ = []\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        let digit = String(num)\n        let index = Int(digit)\n\
    \        let name = digits[index - 1]\n        result.append(name)\n    }\n  \
    \  return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let firstDigit = arr[0]\n    switch firstDigit\
    \ {\n    case 1:\n        result.append(\"One\")\n    case 2:\n        result.append(\"\
    Two\")\n    case 3:\n        result.append(\"Three\")\n    case 4:\n        result.append(\"\
    Four\")\n    case 5:\n        result.append(\"Five\")\n    case 6:\n        result.append(\"\
    Six\")\n    case 7:\n        result.append(\"Seven\")\n    case 8:\n        result.append(\"\
    Eight\")\n    case 9:\n        result.append(\"Nine\")\n    default:\n       \
    \ return result\n    }\n    \n    let secondDigit = arr[1]\n    switch secondDigit\
    \ {\n    case 1:\n        result.append(\"One\")\n    case 2:\n        result.append(\"\
    Two\")\n    case 3:\n        result.append(\"Three\")\n    case 4:\n        result.append(\"\
    Four\")\n    case 5:\n        result.append(\"Five\")\n    case 6:\n        result.append(\"\
    Six\")\n    case 7:\n        result.append(\"Seven\")\n    case 8:\n        result.append(\"\
    Eight\")\n    case 9:\n        result.append(\"Nine\")\n    default:\n       \
    \ return result\n    }\n    \n    let thirdDigit = arr[2]\n    switch thirdDigit\
    \ {\n    case 1:\n        result.append(\"One\")\n    case 2:\n        result.append(\"\
    Two\")\n    case 3:\n        result.append(\"Three\")\n    case 4:\n        result.append(\"\
    Four\")\n    case 5:\n        result.append(\"Five\")\n    case 6:\n        result.append(\"\
    Six\")\n    case 7:\n        result.append(\"Seven\")\n    case 8:\n        result.append(\"\
    Eight\")\n    case 9:\n        result.append(\"Nine\")\n    default:\n       \
    \ return result\n    }\n    \n    let fourthDigit = arr[3]\n    switch fourthDigit\
    \ {\n    case 1:\n        result.append(\"One\")\n    case 2:\n        result.append(\"\
    Two\")\n    case 3:\n        result.append(\"Three\")\n    case 4:\n        result.append(\"\
    Four\")\n    case 5:\n        result.append(\"Five\")\n    case 6:\n        result.append(\"\
    Six\")\n    case 7:\n        result.append(\"Seven\")\n    case 8:\n        result.append(\"\
    Eight\")\n    case 9:\n        result.append(\"Nine\")\n    default:\n       \
    \ return result\n    }\n    \n    let fifthDigit = arr[4]\n    switch fifthDigit\
    \ {\n    case 1:\n        result.append(\"One\")\n    case 2:\n        result.append(\"\
    Two\")\n    case 3:\n        result.append(\"Three\")\n    case 4:\n        result.append(\"\
    Four\")\n    case 5:\n        result.append(\"Five\")\n    case 6:\n        result.append(\"\
    Six\")\n    case 7:\n        result.append(\"Seven\")\n    case 8:\n        result.append(\"\
    Eight\")\n    case 9:\n        result.append(\"Nine", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    for k in 0..<arr.count {\n        if arr[k] >= 1 &&\
    \ arr[k] <= 9 {\n            result.append(String(arr[k]))\n        }\n    }\n\
    \    for k in 0..<result.count {\n        if result[k] == \"\" {\n           \
    \ continue\n        }\n        for j in 0..<result.count {\n            if result[j]\
    \ == \"\" {\n                continue\n            }\n            if result[j]\
    \ == result[k] {\n                result[j] = result[k]\n            }\n     \
    \   }\n    }\n    for k in 0..<result.count {\n        if result[k] == \"\" {\n\
    \            result.remove(at: k)\n        }\n    }\n    return result", "   \
    \ var result: [String] = []\n    var i = 0\n    while i < arr.count {\n      \
    \  if arr[i] >= 1 && arr[i] <= 9 {\n            let digit = arr[i] - 1\n     \
    \       let name = ones[digit]\n            result.append(name)\n        } else\
    \ {\n            result.append(\"\")\n        }\n        i += 1\n    }\n    return\
    \ result.reverse()", "    var result: [String] = []\n    for number in arr {\n\
    \        if number < 1 || number > 9 {\n            continue\n        }\n    \
    \    let digit = String(number)\n        let name = digits[digit]\n        result.append(name)\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    var i\
    \ = 0\n    for n in arr {\n        if n < 10 {\n            result.append(String(format:\
    \ \"%d\\\"\", n))\n        } else {\n            result.append(String(format:\
    \ \"%d\\\"\", n - 10))\n        }\n    }\n    for n in arr {\n        if n < 10\
    \ {\n            result.append(String(format: \"%d\\\"\", n))\n        } else\
    \ {\n            result.append(String(format: \"%d\\\"\", n - 10))\n        }\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n  \
    \  for i in arr {\n        if i < min {\n            min = i\n        } else if\
    \ i > max {\n            max = i\n        }\n    }\n    if min > 9 {\n       \
    \ min = \"One\"\n    }\n    if max < 9 {\n        max = \"Nine\"\n    }\n    for\
    \ i in arr {\n        if i < min {\n            result.append(min)\n        }\
    \ else if i > max {\n            result.append(max)\n        } else {\n      \
    \      result.append(String(i))\n        }\n    }\n    return result", "    var\
    \ result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n  \
    \  let one = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n    let four\
    \ = arr[3]\n    let five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n\
    \    let eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n    if one\
    \ == 1 && two == 2 && three == 3 && four == 4 && five == 5 && six == 6 && seven\
    \ == 7 && eight == 8 && nine == 9 {\n        return arr\n    }\n    if one ==\
    \ 1 && two == 2 && three == 3 && four == 4 && five == 5 && six == 6 && seven ==\
    \ 7 && eight == 8 && nine == 9 {\n        return arr.reverse()\n    }\n    if\
    \ one == 1 && two == 2 && three == 3 && four == 4 && five == 5 && six == 6 &&\
    \ seven == 7 && eight == 8 && nine == 9 {\n        return arr.reverse().map {\
    \ $0.description }\n    }\n    if one == 1 && two == 2 && three == 3 && four ==\
    \ 4 && five == 5 && six == 6 && seven == 7 && eight == 8 && nine == 9 {\n    \
    \    return arr.reverse().map { $0.description }\n    }\n    if one == 1 && two\
    \ == 2 && three == 3 && four == 4 && five == 5 && six == 6 && seven == 7 && eight\
    \ == 8 && nine == 9 {\n        return arr.reverse().map { $0.description }\n \
    \   }\n    if one == 1 && two == 2 && three == 3 && four == 4 && five == 5 &&\
    \ six == 6 && seven == 7 && eight == 8 && nine == 9 {\n        return arr.reverse().map\
    \ { $0.description }\n    }\n    if one == 1 && two == 2 && three == 3 && four\
    \ == 4 && five == 5 && six == 6 && seven == 7 && eight == 8 && nine == 9 {\n \
    \       return arr.reverse().map { $0.description }\n    }\n    if one == 1 &&\
    \ two == 2 && three == 3 && four == 4 && five == 5 && six == 6 && seven == 7 &&\
    \ eight == 8 && nine == 9 {\n        return arr.reverse().map { $0.description\
    \ }\n    }\n    if one == 1 && two == 2 && three == 3 && four == 4 && five ==\
    \ 5 && six == 6 && seven == 7 && eight == 8 && nine == 9 {\n        return arr.reverse().map\
    \ { ", "    var result: [String] = []\n    if arr.isEmpty {\n        return result\n\
    \    }\n    let minLength = min(arr.count, 9)\n    for i in minLength...arr.count\
    \ {\n        let digit = arr[i]\n        let name = digitToName(digit)\n     \
    \   result.append(name)\n    }\n    let maxLength = max(arr.count, 9)\n    for\
    \ i in maxLength...arr.count {\n        let digit = arr[i]\n        let name =\
    \ digitToName(digit)\n        result.append(name)\n    }\n    return result.reverse()",
  "    var result = [String]()\n    \n    if arr.isEmpty {\n        return result\n\
    \    }\n    \n    let one = Int(One)\n    let two = Int(Two)\n    let three =\
    \ Int(Three)\n    let four = Int(Four)\n    let five = Int(Five)\n    let six\
    \ = Int(Six)\n    let seven = Int(Seven)\n    let eight = Int(Eight)\n    let\
    \ nine = Int(Nine)\n    \n    let minLength = min(arr.count, 9)\n    \n    for\
    \ i in minLength..<arr.count {\n        let digit = arr[i]\n        \n       \
    \ if digit < one {\n            result.append(String(digit))\n        } else if\
    \ digit < two {\n            result.append(String(digit))\n        } else if digit\
    \ < three {\n            result.append(String(digit))\n        } else if digit\
    \ < four {\n            result.append(String(digit))\n        } else if digit\
    \ < five {\n            result.append(String(digit))\n        } else if digit\
    \ < six {\n            result.append(String(digit))\n        } else if digit <\
    \ seven {\n            result.append(String(digit))\n        } else if digit <\
    \ eight {\n            result.append(String(digit))\n        } else if digit <\
    \ nine {\n            result.append(String(digit))\n        } else {\n       \
    \     result.append(String(digit))\n        }\n    }\n    \n    for i in minLength..<arr.count\
    \ {\n        let digit = arr[i]\n        \n        if digit > one {\n        \
    \    result.append(String(digit))\n        } else if digit > two {\n         \
    \   result.append(String(digit))\n        } else if digit > three {\n        \
    \    result.append(String(digit))\n        } else if digit > four {\n        \
    \    result.append(String(digit))\n        } else if digit > five {\n        \
    \    result.append(String(digit))\n        } else if digit > six {\n         \
    \   result.append(String(digit))\n        } else if digit > seven {\n        \
    \    result.append(String(digit))\n        } else if digit > eight {\n       \
    \     result.append(String(digit))\n        } else if digit > nine {\n       \
    \     result.append(String(digit))\n        } else {\n            result.append(String(digit))\n\
    \        }\n    }\n    \n    return result", "    var result = [String]()\n  \
    \  for number in arr {\n        if number >= 1 && number <= 9 {\n            let\
    \ name = ones[number-1]\n            result.append(name)\n        } else {\n \
    \           result.append(String(number))\n        }\n    }\n    return result.reversed()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let maxLength = arr.maxElement()\n    if maxLength < 10 {\n        return\
    \ result\n    }\n    let one = String(format: \"%0*d\", maxLength, 1) + \"One\"\
    \n    let two = String(format: \"%0*d\", maxLength, 2) + \"Two\"\n    let three\
    \ = String(format: \"%0*d\", maxLength, 3) + \"Three\"\n    let four = String(format:\
    \ \"%0*d\", maxLength, 4) + \"Four\"\n    let five = String(format: \"%0*d\",\
    \ maxLength, 5) + \"Five\"\n    let six = String(format: \"%0*d\", maxLength,\
    \ 6) + \"Six\"\n    let seven = String(format: \"%0*d\", maxLength, 7) + \"Seven\"\
    \n    let eight = String(format: \"%0*d\", maxLength, 8) + \"Eight\"\n    let\
    \ nine = String(format: \"%0*d\", maxLength, 9) + \"Nine\"\n    for element in\
    \ arr {\n        if element < 10 {\n            result.append(one)\n        }\
    \ else if element < 20 {\n            result.append(two)\n        } else if element\
    \ < 30 {\n            result.append(three)\n        } else if element < 40 {\n\
    \            result.append(four)\n        } else if element < 50 {\n         \
    \   result.append(five)\n        } else if element < 60 {\n            result.append(six)\n\
    \        } else if element < 70 {\n            result.append(seven)\n        }\
    \ else if element < 80 {\n            result.append(eight)\n        } else if\
    \ element < 90 {\n            result.append(nine)\n        } else {\n        \
    \    result.append(String(element))\n        }\n    }\n    return result.reverse()",
  "    guard arr.count > 0 else { return [] }\n    let ones = arr.filter{ $0 < 10\
    \ }\n    let tens = arr.filter{ $0 >= 10 && $0 < 20 }\n    let hundreds = arr.filter{\
    \ $0 >= 20 }\n    let thousands = arr.filter{ $0 >= 100 && $0 < 1000 }\n    let\
    \ millions = arr.filter{ $0 >= 1000 && $0 < 10000 }\n    let billions = arr.filter{\
    \ $0 >= 10000 && $0 < 1000000 }\n    let trillions = arr.filter{ $0 >= 1000000\
    \ && $0 < 100000000 }\n    let quadrillions = arr.filter{ $0 >= 100000000 }\n\
    \    let onesAndTens = ones + tens\n    let onesAndHundreds = ones + hundreds\n\
    \    let onesAndThousands = ones + thousands\n    let onesAndMillions = ones +\
    \ millions\n    let onesAndBillions = ones + billions\n    let onesAndTrillions\
    \ = ones + trillions\n    let onesAndQuadrillions = ones + quadrillions\n    let\
    \ onesAndOnesAndTens = onesAndTens + onesAndHundreds\n    let onesAndOnesAndHundreds\
    \ = onesAndOnesAndTens + onesAndThousands\n    let onesAndOnesAndThousands = onesAndOnesAndHundreds\
    \ + onesAndMillions\n    let onesAndOnesAndMillions = onesAndOnesAndThousands\
    \ + onesAndBillions\n    let onesAndOnesAndBillions = onesAndOnesAndMillions +\
    \ onesAndTrillions\n    let onesAndOnesAndTrillions = onesAndOnesAndBillions +\
    \ onesAndQuadrillions\n    let onesAndOnesAndQuadrillions = onesAndOnesAndTrillions\
    \ + onesAndOnesAndQuadrillions\n    let onesAndOnesAndOnesAndTens = onesAndOnesAndOnesAndTens\
    \ + onesAndOnesAndHundreds\n    let onesAndOnesAndOnesAndHundreds = onesAndOnesAndOnesAndTens\
    \ + onesAndOnesAndThousands\n    let onesAndOnesAndOnesAndThousands = onesAndOnesAndOnesAndHundreds\
    \ + onesAndOnesAndMillions\n    let onesAndOnesAndOnesAndMillions = onesAndOnesAndOnesAndThousands\
    \ + onesAndOnesAndBillions\n    let onesAndOnesAndOnesAndB", "    var result =\
    \ [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let min\
    \ = 1\n    let max = 9\n    var i = 0\n    while i < arr.count {\n        if arr[i]\
    \ < min {\n            i += 1\n            continue\n        }\n        if arr[i]\
    \ > max {\n            i += 1\n            continue\n        }\n        let digit\
    \ = arr[i] - min\n        let name = String(digit)\n        result.append(name)\n\
    \        i += 1\n    }\n    for index in 0..<result.count {\n        let name\
    \ = result[index]\n        let digit = Int(name) - min\n        let newDigit =\
    \ digit % 10\n        result[index] = String(newDigit)\n    }\n    return result",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    var index = 0\n    while index < arr.count {\n        let value = arr[index]\n\
    \        if value < 1 || value > 9 {\n            index += 1\n            continue\n\
    \        }\n        let digit = value - 1 // value starts at 1\n        let name\
    \ = ones[digit]\n        result.append(name)\n        index += 1\n    }\n    return\
    \ result.reverse()", "    var result = [String]()\n    var len = arr.count\n \
    \   if len == 0 {\n        return result\n    }\n    if len == 1 {\n        if\
    \ arr[0] == 1 {\n            return [\"One\"]\n        } else {\n            return\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"]\n        }\n    }\n    if len == 2 {\n        if arr[0] == 1 && arr[1]\
    \ == 2 {\n            return [\"One\", \"Two\"]\n        } else {\n          \
    \  return [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n        }\n    }\n    if len == 3 {\n        if arr[0]\
    \ == 1 && arr[1] == 2 && arr[2] == 3 {\n            return [\"One\", \"Two\",\
    \ \"Three\"]\n        } else {\n            return [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n        }\n  \
    \  }\n    if len == 4 {\n        if arr[0] == 1 && arr[1] == 2 && arr[2] == 3\
    \ && arr[3] == 4 {\n            return [\"One\", \"Two\", \"Three\", \"Four\"\
    ]\n        } else {\n            return [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n        }\n    }\n    if\
    \ len == 5 {\n        if arr[0] == 1 && arr[1] == 2 && arr[2] == 3 && arr[3] ==\
    \ 4 && arr[4] == 5 {\n            return [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\"]\n        } else {\n            return [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n        }\n  \
    \  }\n    if len == 6 {\n        if arr[0] == 1 && arr[1] == 2 && arr[2] == 3\
    \ && arr[3] == 4 && arr[4] == 5 && arr[5] == 6 {\n            return [\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"]\n        } else {\n       \
    \     return [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n        }\n    }\n    if len == 7 {\n        if arr[0]\
    \ == 1 && arr[1] == 2 && arr[2] == 3 && arr[3] == 4 && arr[4] == 5 && arr[5] ==\
    \ 6 && arr[6] == 7 {\n            return [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\"]\n        } else {\n            return [\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ]\n        }\n    }\n    if len == 8 {\n        if arr[0] == 1 && arr[1] == 2\
    \ && arr[2] == 3 && arr[3] == 4 && arr[4] == 5 && arr[5] == 6 && arr[6] == 7 &&\
    \ arr[7] == ", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n\
    \    let four = arr[3]\n    let five = arr[4]\n    let six = arr[5]\n    let seven\
    \ = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n\
    \    let hundred = arr[10]\n    let thousand = arr[11]\n    let ten_thousand =\
    \ arr[12]\n    let hundred_thousand = arr[13]\n    let million = arr[14]\n   \
    \ let billion = arr[15]\n    let trillion = arr[16]\n    let quadrillion = arr[17]\n\
    \    let quintillion = arr[18]\n    let sextillion = arr[19]\n    let septillion\
    \ = arr[20]\n    let octillion = arr[21]\n    let nonillion = arr[22]\n    let\
    \ decillion = arr[23]\n    let undecillion = arr[24]\n    let duodecillion = arr[25]\n\
    \    let tredecillion = arr[26]\n    let quattuordecillion = arr[27]\n    let\
    \ quindecillion = arr[28]\n    let sexdecillion = arr[29]\n    let septendecillion\
    \ = arr[30]\n    let octodecillion = arr[31]\n    let novemdecillion = arr[32]\n\
    \    let vigintillion = arr[33]\n    let unvigintillion = arr[34]\n    let duovigintillion\
    \ = arr[35]\n    let trevigintillion = arr[36]\n    let quattuorvigintillion =\
    \ arr[37]\n    let quinvigintillion = arr[38]\n    let sexvigintillion = arr[39]\n\
    \    let septenvigintillion = arr[40]\n    let octovigintillion = arr[41]\n  \
    \  let novemvigintillion = arr[42]\n    let vigintillion = arr[43]\n    let unvigintillion\
    \ = arr[44]\n    let duovigintillion = arr[45]\n    let trevigintillion = arr[46]\n\
    \    let quattuorvigintillion = arr[47]\n    let quinvigintillion = arr[48]\n\
    \    let sexvigintillion = arr[49]\n    let septenvigintillion = arr[50]\n   \
    \ let octovigintillion = arr[5", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n\
    \    for value in arr {\n        if value < min {\n            min = value\n \
    \       } else if value > max {\n            max = value\n        }\n    }\n \
    \   let one = String(format: \"%0*d\", 0, min)\n    let two = String(format: \"\
    %0*d\", 0, max)\n    let ones = String(format: \"%0*d\", 0, 9)\n    let twos =\
    \ String(format: \"%0*d\", 0, 9)\n    let onesAndTwos = String(format: \"%0*d\"\
    , 0, 9)\n    let onesAndTwosAndThrees = String(format: \"%0*d\", 0, 9)\n    let\
    \ onesAndTwosAndThreesAndFours = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFives\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSix\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSeven\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEight\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNine\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNineAndTen\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNineAndTenAndEleven\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelve\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteen\
    \ = String(format: \"%0*d\", 0, 9)\n    let onesAndTwosAndThreesAndFoursAndFivesAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteenAndFourteen\
    \ = String(format: \"%0*d\", 0, 9)\n    let ", "    guard arr.count > 0 else {\n\
    \        return []\n    }\n    var result = [String]()\n    var i = 0\n    while\
    \ i < arr.count {\n        let j = i\n        while j < arr.count && arr[j] <\
    \ 10 {\n            j += 1\n        }\n        if j == i {\n            result.append(String(arr[i]))\n\
    \        } else {\n            result.append(String(arr[i]) + \"-\" + String(arr[j]))\n\
    \        }\n        i = j\n    }\n    for index in 0..<result.count {\n      \
    \  let value = result[index]\n        let index = Int(value[value.startIndex])!\n\
    \        let name = One[index] ?? \"\"\n        result[index] = name\n    }\n\
    \    return result", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    var reversed = arr.reverse()\n    for i in reversed.indices\
    \ {\n        let digit = reversed[i]\n        if digit < 10 {\n            result.append(String(digit))\n\
    \        } else {\n            let index = digit - 10\n            let name =\
    \ ones[index] + \" \" + twos[index] + \" \" + threes[index] + \" \" + fours[index]\
    \ + \" \" + fives[index] + \" \" + sixs[index] + \" \" + sevens[index] + \" \"\
    \ + eights[index] + \" \" + nines[index]\n            result.append(name)\n  \
    \      }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = \"One\"\n    let two = \"Two\"\
    \n    let three = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n\
    \    let six = \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n\
    \    let nine = \"Nine\"\n    let ten = \"Ten\"\n    let eleven = \"Eleven\"\n\
    \    let twelve = \"Twelve\"\n    let thirteen = \"Thirteen\"\n    let fourteen\
    \ = \"Fourteen\"\n    let fifteen = \"Fifteen\"\n    let sixteen = \"Sixteen\"\
    \n    let seventeen = \"Seventeen\"\n    let eighteen = \"Eighteen\"\n    let\
    \ nineteen = \"Nineteen\"\n    let twenty = \"Twenty\"\n    let thirty = \"Thirty\"\
    \n    let forty = \"Forty\"\n    let fifty = \"Fifty\"\n    let sixty = \"Sixty\"\
    \n    let seventy = \"Seventy\"\n    let eighty = \"Eighty\"\n    let ninety =\
    \ \"Ninety\"\n    let hundred = \"Hundred\"\n    let thousand = \"Thousand\"\n\
    \    let million = \"Million\"\n    let billion = \"Billion\"\n    let trillion\
    \ = \"Trillion\"\n    let quadrillion = \"Quadrillion\"\n    let quintillion =\
    \ \"Quintillion\"\n    let sextillion = \"Sextillion\"\n    let septillion = \"\
    Septellion\"\n    let octillion = \"Octillion\"\n    let nonillion = \"Nonillion\"\
    \n    let decillion = \"Decillion\"\n    let undecillion = \"Undecillion\"\n \
    \   let duodecillion = \"Duodecillion\"\n    let tredecillion = \"Tredecillion\"\
    \n    let quattuordecillion = \"Quattuordecillion\"\n    let quindecillion = \"\
    Quindecillion\"\n    let sexdecillion = \"Sexdecillion\"\n    let septendecillion\
    \ = \"Septemtendecillion\"\n    let octodecillion = \"Octodecillion\"\n    let\
    \ novemdecillion = \"Novemdecillion\"\n    let vigintillion = \"Vigintillion\"\
    \n    let unvigin", "    var result = [String]()\n    if arr.isEmpty {\n     \
    \   return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let\
    \ three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six =\
    \ arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    if one == 1 && two == 2 && three == 3 && four == 4 && five == 5 && six ==\
    \ 6 && seven == 7 && eight == 8 && nine == 9 {\n        return arr\n    }\n  \
    \  let reversed = arr.reverse()\n    let reversedString = reversed.map { String($0)\
    \ }\n    let oneString = reversedString.map { String($0) }\n    let twoString\
    \ = oneString.map { String($0) }\n    let threeString = twoString.map { String($0)\
    \ }\n    let fourString = threeString.map { String($0) }\n    let fiveString =\
    \ fourString.map { String($0) }\n    let sixString = fiveString.map { String($0)\
    \ }\n    let sevenString = sixString.map { String($0) }\n    let eightString =\
    \ sevenString.map { String($0) }\n    let nineString = eightString.map { String($0)\
    \ }\n    let oneReversed = oneString.reverse()\n    let twoReversed = twoString.reverse()\n\
    \    let threeReversed = threeString.reverse()\n    let fourReversed = fourString.reverse()\n\
    \    let fiveReversed = fiveString.reverse()\n    let sixReversed = sixString.reverse()\n\
    \    let sevenReversed = sevenString.reverse()\n    let eightReversed = eightString.reverse()\n\
    \    let nineReversed = nineString.reverse()\n    let oneReversedString = oneReversed.map\
    \ { String($0) }\n    let twoReversedString = twoReversed.map { String($0) }\n\
    \    let threeReversedString = threeReversed.map { String($0) }\n    let fourReversedString\
    \ = fourReversed.map { String($0) }\n    let fiveReversedString = fiveReversed.map\
    \ { String($0) }\n    let sixReversedString = sixReversed.map { String($0) }\n\
    \    let sevenReversedString = sevenReversed.map { String($0) }\n    let eightReversedString\
    \ = eightReversed.map { String($0) }\n    let nineReversedString = nineReversed.map\
    \ { String($0) }\n    let oneReversedReversed = oneReversedString.reverse()\n\
    \    let twoReversedReversed = twoReversedString.reverse()", "    var result =\
    \ [String]()\n    var temp = [String]()\n    var i = 0\n    for n in arr {\n \
    \       if n > 9 {\n            temp = append(temp, \"Nine\")\n        } else\
    \ {\n            temp = append(temp, nameOf(n))\n        }\n    }\n    temp =\
    \ append(temp, \"One\")\n    temp = append(temp, \"Two\")\n    temp = append(temp,\
    \ \"Three\")\n    temp = append(temp, \"Four\")\n    temp = append(temp, \"Five\"\
    )\n    temp = append(temp, \"Six\")\n    temp = append(temp, \"Seven\")\n    temp\
    \ = append(temp, \"Eight\")\n    temp = append(temp, \"Nine\")\n    for n in arr\
    \ {\n        if n > 9 {\n            temp = append(temp, \"Nine\")\n        }\
    \ else {\n            temp = append(temp, nameOf(n))\n        }\n    }\n    result\
    \ = append(result, temp)\n    return result", "    var result = [String]()\n \
    \   if arr.isEmpty {\n        return result\n    }\n    let min = 1\n    let max\
    \ = 9\n    var index = 0\n    while index < arr.count {\n        let value = arr[index]\n\
    \        if value < min || value > max {\n            index += 1\n           \
    \ continue\n        }\n        let digit = value - min\n        let name = String(digit)\n\
    \        result.append(name)\n        index += 1\n    }\n    return result.reverse()",
  "    var result: [String] = []\n    if arr.isEmpty {\n        return result\n  \
    \  }\n    let one = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n   \
    \ let four = arr[3]\n    let five = arr[4]\n    let six = arr[5]\n    let seven\
    \ = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n\
    \    let hundred = arr[10]\n    let thousand = arr[11]\n    let ten_thousand =\
    \ arr[12]\n    let hundred_thousand = arr[13]\n    let thousand_thousand = arr[14]\n\
    \    let hundred_thousand_thousand = arr[15]\n    let thousand_thousand_thousand\
    \ = arr[16]\n    let hundred_thousand_thousand_thousand = arr[17]\n    let thousand_thousand_thousand_thousand\
    \ = arr[18]\n    let hundred_thousand_thousand_thousand_thousand = arr[19]\n \
    \   let thousand_thousand_thousand_thousand_thousand = arr[20]\n    let hundred_thousand_thousand_thousand_thousand_thousand\
    \ = arr[21]\n    let thousand_thousand_thousand_thousand_thousand_thousand = arr[22]\n\
    \    let hundred_thousand_thousand_thousand_thousand_thousand_thousand = arr[23]\n\
    \    let thousand_thousand_thousand_thousand_thousand_thousand_thousand = arr[24]\n\
    \    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[25]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[26]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[27]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[28]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[29]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[30]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[31]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[32]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand",
  "    var result = [String]()\n    var i = 0\n    while i < arr.count {\n       \
    \ if arr[i] >= 1 && arr[i] <= 9 {\n            result.append(name[arr[i]-1])\n\
    \        } else {\n            result.append(\"\")\n        }\n        i += 1\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    var i\
    \ = 0\n    for n in arr {\n        if n > 0 && n < 10 {\n            result.append(String(format:\
    \ \"%@\", names[i]))\n        }\n        i += 1\n    }\n    return result", " \
    \   var result = [String]()\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            result.append(String(number))\n        }\n    }\n\
    \    if result.isEmpty {\n        return result\n    }\n    let reversed = result.reverse()\n\
    \    for number in reversed {\n        if number == \"1\" {\n            result.removeFirst()\n\
    \        }\n        if number == \"2\" {\n            result.removeFirst()\n \
    \       }\n        if number == \"3\" {\n            result.removeFirst()\n  \
    \      }\n        if number == \"4\" {\n            result.removeFirst()\n   \
    \     }\n        if number == \"5\" {\n            result.removeFirst()\n    \
    \    }\n        if number == \"6\" {\n            result.removeFirst()\n     \
    \   }\n        if number == \"7\" {\n            result.removeFirst()\n      \
    \  }\n        if number == \"8\" {\n            result.removeFirst()\n       \
    \ }\n        if number == \"9\" {\n            result.removeFirst()\n        }\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    var i = 0\n    for number in arr {\n      \
    \  if number < 1 || number > 9 {\n            continue\n        }\n        i +=\
    \ 1\n        if i == 1 {\n            result.append(String(number))\n        \
    \    continue\n        }\n        result.append(String(number))\n        result.append(String(number\
    \ - 1))\n    }\n    return result.reverse()", "    var result = [String]()\n \
    \   for number in arr {\n        if number >= 1 && number <= 9 {\n           \
    \ result.append(String(number))\n        }\n    }\n    if result.isEmpty {\n \
    \       return result\n    }\n    var reversed = result.reverse()\n    var replaced\
    \ = [String]()\n    for number in reversed {\n        replaced.append(String(number))\n\
    \    }\n    for number in arr {\n        replaced[number-1] = \"\\(number)\"\n\
    \    }\n    return replaced", "    var result = [String]()\n    var reversed =\
    \ [Int]()\n    var one = \"One\"\n    var two = \"Two\"\n    var three = \"Three\"\
    \n    var four = \"Four\"\n    var five = \"Five\"\n    var six = \"Six\"\n  \
    \  var seven = \"Seven\"\n    var eight = \"Eight\"\n    var nine = \"Nine\"\n\
    \    var ten = \"Ten\"\n    var hundred = \"Hundred\"\n    var thousand = \"Thousand\"\
    \n    var million = \"Million\"\n    var billion = \"Billion\"\n    var trillion\
    \ = \"Trillion\"\n    var quadrillion = \"Quadrillion\"\n    var quintillion =\
    \ \"Quintillion\"\n    var sextillion = \"Sextillion\"\n    var septillion = \"\
    Septillion\"\n    var octillion = \"Octillion\"\n    var nonillion = \"Nonillion\"\
    \n    var decillion = \"Decillion\"\n    var undecillion = \"Undecillion\"\n \
    \   var duodecillion = \"Duodecillion\"\n    var tredecillion = \"Tredecillion\"\
    \n    var quattuordecillion = \"Quattuordecillion\"\n    var sexdecillion = \"\
    Sexdecillion\"\n    var septendecillion = \"Septendecillion\"\n    var octodecillion\
    \ = \"Octodecillion\"\n    var novemdecillion = \"Novemdecillion\"\n    var vigintillion\
    \ = \"Vigintillion\"\n    var unvigintillion = \"Unvigintillion\"\n    var duovigintillion\
    \ = \"Duovigintillion\"\n    var trevigintillion = \"Trevigintillion\"\n    var\
    \ quattuorvigintillion = \"Quattuorvigintillion\"\n    var sexvigintillion = \"\
    Sexvigintillion\"\n    var septenvigintillion = \"Septenvigintillion\"\n    var\
    \ octovigintillion = \"Octovigintillion\"\n    var novemvigintillion = \"Novemvigintillion\"\
    \n    var vigintillion = \"Vigintillion\"\n    var unvigintillion = \"Unvigintillion\"\
    \n    var ", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    var i = 0\n    var j = 0\n    for element in arr {\n    \
    \    if element < 1 || element > 9 {\n            continue\n        }\n      \
    \  i += 1\n        if i == 1 {\n            result.append(One[element])\n    \
    \        continue\n        }\n        if i == 2 {\n            result.append(Two[element])\n\
    \            continue\n        }\n        if i == 3 {\n            result.append(Three[element])\n\
    \            continue\n        }\n        if i == 4 {\n            result.append(Four[element])\n\
    \            continue\n        }\n        if i == 5 {\n            result.append(Five[element])\n\
    \            continue\n        }\n        if i == 6 {\n            result.append(Six[element])\n\
    \            continue\n        }\n        if i == 7 {\n            result.append(Seven[element])\n\
    \            continue\n        }\n        if i == 8 {\n            result.append(Eight[element])\n\
    \            continue\n        }\n        if i == 9 {\n            result.append(Nine[element])\n\
    \            continue\n        }\n        j += 1\n        if j == 1 {\n      \
    \      result.append(One[element])\n            continue\n        }\n        if\
    \ j == 2 {\n            result.append(Two[element])\n            continue\n  \
    \      }\n        if j == 3 {\n            result.append(Three[element])\n   \
    \         continue\n        }\n        if j == 4 {\n            result.append(Four[element])\n\
    \            continue\n        }\n        if j == 5 {\n            result.append(Five[element])\n\
    \            continue\n        }\n        if j == 6 {\n            result.append(Six[element])\n\
    \            continue\n        }\n        if j == 7 {\n            result.append(Seven[element])\n\
    \            continue\n        }\n        if j == 8 {\n            result.append(Eight[element])\n\
    \            continue\n        }\n        if j == 9 {\n            result.append(Nine[element])\n\
    \            continue\n        }\n    }\n    return result", "    var result =\
    \ [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let one\
    \ = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n\
    \    let five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let\
    \ eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n    let eleven\
    \ = arr[10]\n    let twelve = arr[11]\n    let thirteen = arr[12]\n    let fourteen\
    \ = arr[13]\n    let fifteen = arr[14]\n    let sixteen = arr[15]\n    let seventeen\
    \ = arr[16]\n    let eighteen = arr[17]\n    let nineteen = arr[18]\n    let twenty\
    \ = arr[19]\n    let thirty = arr[20]\n    let forty = arr[21]\n    let fifty\
    \ = arr[22]\n    let sixty = arr[23]\n    let seventy = arr[24]\n    let eighty\
    \ = arr[25]\n    let ninety = arr[26]\n    let hundred = arr[27]\n    let thousand\
    \ = arr[28]\n    let million = arr[29]\n    let billion = arr[30]\n    let trillion\
    \ = arr[31]\n    let quadrillion = arr[32]\n    let quintillion = arr[33]\n  \
    \  let sextillion = arr[34]\n    let septillion = arr[35]\n    let octillion =\
    \ arr[36]\n    let nonillion = arr[37]\n    let decillion = arr[38]\n    let undecillion\
    \ = arr[39]\n    let duodecillion = arr[40]\n    let tredecillion = arr[41]\n\
    \    let quattuordecillion = arr[42]\n    let quindecillion = arr[43]\n    let\
    \ sexdecillion = arr[44]\n    let septendecillion = arr[45]\n    let octodecillion\
    \ = arr[46]\n    let novemdecillion = arr[47]\n    let vigintillion = arr[48]\n\
    \    let unvigintillion = arr[49]\n    let duovigintillion = arr[50]\n    let\
    \ trevigintillion = arr[51]\n    let quattuorvigintillion = arr[52]\n    let quinvigintillion\
    \ = arr[53]\n    let sexvigintillion = arr[54]\n    let septenvigintillion = arr[55]\n\
    \    let octovigin", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    let maxValue = max(arr)\n    let minValue = min(arr)\n\
    \    var reversedArray = [Int]()\n    for i in arr {\n        reversedArray.append(maxValue\
    \ - i)\n    }\n    for i in reversedArray {\n        let index = reversedArray.index(of:\
    \ i)\n        result.append(String(format: \"%@\", names[index]))\n    }\n   \
    \ return result", "    guard arr.count > 0 else { return [] }\n    guard arr.count\
    \ <= 9 else { return [] }\n    guard arr.count >= 1 && arr.count <= 9 else { return\
    \ [] }\n    \n    var result = [String]()\n    \n    for number in arr {\n   \
    \     switch number {\n        case 1:\n            result.append(contentsOf:\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n        case 2:\n            result.append(contentsOf: [\"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"One\"\
    ])\n        case 3:\n            result.append(contentsOf: [\"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\"])\n    \
    \    case 4:\n            result.append(contentsOf: [\"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\", \"Three\"])\n        case\
    \ 5:\n            result.append(contentsOf: [\"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\", \"One\", \"Two\", \"Three\", \"Four\"])\n        case 6:\n\
    \            result.append(contentsOf: [\"Six\", \"Seven\", \"Eight\", \"Nine\"\
    , \"One\", \"Two\", \"Three\", \"Four\", \"Five\"])\n        case 7:\n       \
    \     result.append(contentsOf: [\"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\"])\n        case 8:\n            result.append(contentsOf:\
    \ [\"Eight\", \"Nine\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\"])\n        case 9:\n            result.append(contentsOf: [\"Nine\"\
    , \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    ])\n        default:\n            break\n        }\n    }\n    \n    return result.map\
    \ { String($0) }.reversed()", "    var result = [String]()\n    for number in\
    \ arr {\n        let digit = number % 10\n        let name = digitToName(digit)\n\
    \        result.append(name)\n        number /= 10\n    }\n    return result.reverse()",
  "    var result: [String] = []\n    var digits = \"\"\n    for digit in arr {\n\
    \        digits += String(digit)\n    }\n    digits = digits.reverse()\n    for\
    \ digit in digits {\n        let index = Int(digit)\n        if index >= 1 &&\
    \ index <= 9 {\n            let name = String(index)\n            result.append(name)\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    let ten = arr[9]\n    let hundred = arr[10]\n    let thousand =\
    \ arr[11]\n    let tenthousand = arr[12]\n    let hundredthousand = arr[13]\n\
    \    let onehundred = arr[14]\n    let onethousand = arr[15]\n    let onehundredthousand\
    \ = arr[16]\n    let onemillion = arr[17]\n    let onebillion = arr[18]\n    let\
    \ onetrillion = arr[19]\n    let onequadrillion = arr[20]\n    let onequintillion\
    \ = arr[21]\n    let onesextillion = arr[22]\n    let oneseptillion = arr[23]\n\
    \    let oneoctillion = arr[24]\n    let onenonillion = arr[25]\n    let onedecillion\
    \ = arr[26]\n    let oneundecillion = arr[27]\n    let oneduodecillion = arr[28]\n\
    \    let onetredecillion = arr[29]\n    let onequattuordecillion = arr[30]\n \
    \   let onequindecillion = arr[31]\n    let onesexdecillion = arr[32]\n    let\
    \ oneseptendecillion = arr[33]\n    let oneoctodecillion = arr[34]\n    let onenovemdecillion\
    \ = arr[35]\n    let onevigintillion = arr[36]\n    let oneunvigintillion = arr[37]\n\
    \    let oneduovigintillion = arr[38]\n    let onetrevigintillion = arr[39]\n\
    \    let onequattuorvigintillion = arr[40]\n    let onequinvigintillion = arr[41]\n\
    \    let onesexvigintillion = arr[42]\n    let oneseptemvigintillion = arr[43]\n\
    \    let oneoctovigintillion = arr[44]\n    let onenovemvigintillion = arr[45]\n\
    \    let onetrigintillion = arr[46]\n    let oneuntrigintillion = arr[47]\n  \
    \  let oneduotrigintillion = arr[48]\n    let onetretrigintillion = arr[", " \
    \   var result = [String]()\n    if arr.isEmpty {\n        return result\n   \
    \ }\n    let min = min(arr)\n    let max = max(arr)\n    var reversed = reverseArray(arr)\n\
    \    for number in reversed {\n        let name = getName(number)\n        if\
    \ number >= min && number <= max {\n            result.append(name)\n        }\n\
    \    }\n    return result", "    var result = [String]()\n    var numbers = [String]()\n\
    \    var index = 0\n    for number in arr {\n        numbers.append(String(number))\n\
    \    }\n    numbers.sort(by: {\n        guard let number = Int($0) else {\n  \
    \          return false\n        }\n        return number < 10\n    })\n    for\
    \ number in numbers {\n        guard let index = numbers.index(of: number) else\
    \ {\n            return result\n        }\n        result[index] = numbers[index].capitalized\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n  \
    \  let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six\
    \ = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    let ten = arr[9]\n    let hundred = arr[10]\n    let thousand = arr[11]\n\
    \    let ten_thousand = arr[12]\n    let hundred_thousand = arr[13]\n    let thousand_thousand\
    \ = arr[14]\n    let million = arr[15]\n    let billion = arr[16]\n    let trillion\
    \ = arr[17]\n    let quadrillion = arr[18]\n    let quintillion = arr[19]\n  \
    \  let sextillion = arr[20]\n    let septillion = arr[21]\n    let octillion =\
    \ arr[22]\n    let nonillion = arr[23]\n    let decillion = arr[24]\n    let undecillion\
    \ = arr[25]\n    let duodecillion = arr[26]\n    let tredecillion = arr[27]\n\
    \    let quattuordecillion = arr[28]\n    let quindecillion = arr[29]\n    let\
    \ sexdecillion = arr[30]\n    let septendecillion = arr[31]\n    let octodecillion\
    \ = arr[32]\n    let novemdecillion = arr[33]\n    let vigintillion = arr[34]\n\
    \    let unvigintillion = arr[35]\n    let duovigintillion = arr[36]\n    let\
    \ trevigintillion = arr[37]\n    let quattuorvigintillion = arr[38]\n    let quinvigintillion\
    \ = arr[39]\n    let sexvigintillion = arr[40]\n    let septenvigintillion = arr[41]\n\
    \    let octovigintillion = arr[42]\n    let novemvigintillion = arr[43]\n   \
    \ let vigintillions = arr[44]\n    let unvigintillions = arr[45]\n    let duovigintillions\
    \ = arr[46]\n    let trevigintillions = arr[47]\n    let quattuorvigintillions\
    \ = arr[48]\n    let quinvigintillions = arr[49]\n    let sexvigintillions = arr[50]\n\
    \    let septenvigin", "    var result = [String]()\n    for number in arr {\n\
    \        if number <= 9 {\n            result.append(String(number))\n       \
    \ } else {\n            let index = number - 10\n            result.append(String(index))\n\
    \        }\n    }\n    return result.reverse().map {\n        switch $0 {\n  \
    \      case \"0\":\n            return \"Zero\"\n        case \"1\":\n       \
    \     return \"One\"\n        case \"2\":\n            return \"Two\"\n      \
    \  case \"3\":\n            return \"Three\"\n        case \"4\":\n          \
    \  return \"Four\"\n        case \"5\":\n            return \"Five\"\n       \
    \ case \"6\":\n            return \"Six\"\n        case \"7\":\n            return\
    \ \"Seven\"\n        case \"8\":\n            return \"Eight\"\n        case \"\
    9\":\n            return \"Nine\"\n        default:\n            return String($0)\n\
    \        }\n    }", "    var result: [String] = []\n    if arr.isEmpty {\n   \
    \     return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let\
    \ three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six =\
    \ arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve = arr[11]\n  \
    \  let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen = arr[14]\n\
    \    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen = arr[17]\n\
    \    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty = arr[20]\n\
    \    let forty = arr[21]\n    let fifty = arr[22]\n    let sixty = arr[23]\n \
    \   let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety = arr[26]\n\
    \    let hundred = arr[27]\n    let thousand = arr[28]\n    let million = arr[29]\n\
    \    let billion = arr[30]\n    let trillion = arr[31]\n    let quadrillion =\
    \ arr[32]\n    let quintillion = arr[33]\n    let sextillion = arr[34]\n    let\
    \ septillion = arr[35]\n    let octillion = arr[36]\n    let nonillion = arr[37]\n\
    \    let decillion = arr[38]\n    let undecillion = arr[39]\n    let duodecillion\
    \ = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion = arr[42]\n\
    \    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n    let septendecillion\
    \ = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion = arr[47]\n\
    \    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n    let duovigintillion\
    \ = arr[50]\n    let trevigintillion = arr[51]\n    let quattuorvigintillion =\
    \ arr[52]\n    let quinvigintillion = arr[53]\n    let sexvigintillion = arr[54]\n\
    \    let septenvigintillion = arr[55]\n    let octovigintil", "    var result\
    \ = [String]()\n    \n    if arr.isEmpty {\n        return result\n    }\n   \
    \ \n    let min = 1\n    let max = 9\n    \n    for i in arr {\n        if min\
    \ > i {\n            min = i\n        }\n        if max < i {\n            max\
    \ = i\n        }\n    }\n    \n    var reversed: [Int] = []\n    \n    for i in\
    \ min..<max {\n        reversed.append(i)\n    }\n    \n    for i in reversed\
    \ {\n        let index = min..<max\n        let name = index.firstIndex(of: i)\n\
    \        \n        if name != nil {\n            result.append(name!)\n      \
    \  }\n    }\n    \n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    let ten = arr[9]\n    let hundred = arr[10]\n    let thousand =\
    \ arr[11]\n    let ten_thousand = arr[12]\n    let hundred_thousand = arr[13]\n\
    \    let thousand_thousand = arr[14]\n    let hundred_thousand_thousand = arr[15]\n\
    \    let thousand_thousand_thousand = arr[16]\n    let hundred_thousand_thousand_thousand\
    \ = arr[17]\n    let thousand_thousand_thousand_thousand = arr[18]\n    let hundred_thousand_thousand_thousand_thousand\
    \ = arr[19]\n    let thousand_thousand_thousand_thousand_thousand = arr[20]\n\
    \    let hundred_thousand_thousand_thousand_thousand_thousand = arr[21]\n    let\
    \ thousand_thousand_thousand_thousand_thousand_thousand = arr[22]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[23]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[24]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[25]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[26]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[27]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[28]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[29]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[30]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[31]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[32]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thous",
  "    var result: [String] = []\n    for number in arr {\n        if number > 9 ||\
    \ number < 1 {\n            continue\n        }\n        let digit = String(number)\n\
    \        let name = digit.substringFromIndex(digit.startIndex.advancedBy(1))\n\
    \        result.append(name)\n    }\n    return result.reverse()", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let min\
    \ = arr[0]\n    let max = arr[0]\n    for number in arr {\n        if number >\
    \ max {\n            max = number\n        }\n        if number < min {\n    \
    \        min = number\n        }\n    }\n    let minDigit = String(min).characters.first!\n\
    \    let maxDigit = String(max).characters.first!\n    let minDigitName = ones[minDigit]\n\
    \    let maxDigitName = ones[maxDigit]\n    for number in arr {\n        let digit\
    \ = String(number).characters.first!\n        let digitName = ones[digit]\n  \
    \      if digit == minDigit {\n            result.append(minDigitName)\n     \
    \   } else if digit == maxDigit {\n            result.append(maxDigitName)\n \
    \       } else {\n            result.append(digitName)\n        }\n    }\n   \
    \ return result", "    var result = [String]()\n    if arr.isEmpty {\n       \
    \ return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n    for i\
    \ in arr {\n        if i < min {\n            min = i\n        }\n        if i\
    \ > max {\n            max = i\n        }\n    }\n    let reversedArray = Array(arr[min..<max])\n\
    \    for i in reversedArray {\n        let index = reversedArray.index(i)\n  \
    \      result.append(names[index])\n    }\n    return result", "    var result\
    \ = [String]()\n    \n    if arr.isEmpty {\n        return result\n    }\n   \
    \ \n    let one = Int(One)\n    let two = Int(Two)\n    let three = Int(Three)\n\
    \    let four = Int(Four)\n    let five = Int(Five)\n    let six = Int(Six)\n\
    \    let seven = Int(Seven)\n    let eight = Int(Eight)\n    let nine = Int(Nine)\n\
    \    \n    let minLength = min(arr.count, 9)\n    \n    for i in minLength..<arr.count\
    \ {\n        let digit = arr[i]\n        \n        if digit < one {\n        \
    \    result.append(String(digit))\n        } else if digit < two {\n         \
    \   result.append(String(digit))\n        } else if digit < three {\n        \
    \    result.append(String(digit))\n        } else if digit < four {\n        \
    \    result.append(String(digit))\n        } else if digit < five {\n        \
    \    result.append(String(digit))\n        } else if digit < six {\n         \
    \   result.append(String(digit))\n        } else if digit < seven {\n        \
    \    result.append(String(digit))\n        } else if digit < eight {\n       \
    \     result.append(String(digit))\n        } else if digit < nine {\n       \
    \     result.append(String(digit))\n        }\n    }\n    \n    for i in minLength..<arr.count\
    \ {\n        let digit = arr[i]\n        \n        if digit > one {\n        \
    \    result.append(String(digit))\n        } else if digit > two {\n         \
    \   result.append(String(digit))\n        } else if digit > three {\n        \
    \    result.append(String(digit))\n        } else if digit > four {\n        \
    \    result.append(String(digit))\n        } else if digit > five {\n        \
    \    result.append(String(digit))\n        } else if digit > six {\n         \
    \   result.append(String(digit))\n        } else if digit > seven {\n        \
    \    result.append(String(digit))\n        } else if digit > eight {\n       \
    \     result.append(String(digit))\n        } else if digit > nine {\n       \
    \     result.append(String(digit))\n        }\n    }\n    \n    for i in minLength..<arr.count\
    \ {\n        let digit = arr[i]\n        \n        if digit == one {\n       \
    \     result.append(String(one))\n        } else if digit == two {\n         \
    \   result.append(String(two))\n        } else if digit == three {\n         \
    \   result.append(String(three))\n        } else if digit == four {\n        \
    \    result.append(String(four))\n        } else if digit == five {\n        \
    \    result.append(String(five))\n        } else if digit == six {\n         \
    \   result.append(String(six))\n        ", "    guard arr.count > 0 else { return\
    \ [] }\n    \n    var result: [String] = []\n    \n    for i in 0..<arr.count\
    \ {\n        let num = arr[i]\n        \n        if num < 1 || num > 9 {\n   \
    \         continue\n        }\n        \n        let digit = num - 10\n      \
    \  \n        if digit < 0 {\n            digit = digit + 10\n        }\n     \
    \   \n        let name = digitToName(digit)\n        \n        result.append(name)\n\
    \    }\n    \n    return result.reverse()", "    var result = [String]()\n   \
    \ if arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n    let\
    \ max = arr[0]\n    for number in arr {\n        if number < min {\n         \
    \   min = number\n        } else if number > max {\n            max = number\n\
    \        }\n    }\n    let length = max - min + 1\n    for number in arr {\n \
    \       if number < min {\n            number = 9\n        } else if number >\
    \ max {\n            number = 1\n        }\n        let index = number - min\n\
    \        result.append(String(format: \"%0\\(length)d\", index))\n    }\n    return\
    \ result", "    var result = [String]()\n    for n in arr {\n        switch n\
    \ {\n        case 1, 10, 11:\n            result.append(String(format: \"%@\"\
    , One))\n        case 2, 20, 21:\n            result.append(String(format: \"\
    %@\", Two))\n        case 3, 30, 31:\n            result.append(String(format:\
    \ \"%@\", Three))\n        case 4, 40, 41:\n            result.append(String(format:\
    \ \"%@\", Four))\n        case 5, 50, 51:\n            result.append(String(format:\
    \ \"%@\", Five))\n        case 6, 60, 61:\n            result.append(String(format:\
    \ \"%@\", Six))\n        case 7, 70, 71:\n            result.append(String(format:\
    \ \"%@\", Seven))\n        case 8, 80, 81:\n            result.append(String(format:\
    \ \"%@\", Eight))\n        case 9, 90, 91:\n            result.append(String(format:\
    \ \"%@\", Nine))\n        default:\n            continue\n        }\n    }\n \
    \   return result.reverse().map { String(format: \"%@\", $0) }", "    var result\
    \ = [String]()\n    for number in arr {\n        if number >= 1 && number <= 9\
    \ {\n            result.append(name[number])\n        } else {\n            result.append(String(number))\n\
    \        }\n    }\n    return result.reverse().map { $0.replaceFirst(\"^[0-9]\"\
    , \"\") }", "    guard arr.count > 0 else { return [] }\n    \n    let one = \"\
    One\"\n    let two = \"Two\"\n    let three = \"Three\"\n    let four = \"Four\"\
    \n    let five = \"Five\"\n    let six = \"Six\"\n    let seven = \"Seven\"\n\
    \    let eight = \"Eight\"\n    let nine = \"Nine\"\n    \n    var result = [String]()\n\
    \    \n    for n in arr {\n        switch n {\n        case 1:\n            result.append(one)\n\
    \        case 2:\n            result.append(two)\n        case 3:\n          \
    \  result.append(three)\n        case 4:\n            result.append(four)\n  \
    \      case 5:\n            result.append(five)\n        case 6:\n           \
    \ result.append(six)\n        case 7:\n            result.append(seven)\n    \
    \    case 8:\n            result.append(eight)\n        case 9:\n            result.append(nine)\n\
    \        default:\n            break\n        }\n    }\n    \n    return result.reversed()",
  "    var result: [String] = []\n    var index = 0\n    for number in arr {\n   \
    \     if number > 9 {\n            number = number - 10\n        }\n        if\
    \ number < 1 {\n            number = 10 + number\n        }\n        result[index]\
    \ = String(number)\n        index++\n    }\n    return result", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    var numbers\
    \ = arr.sorted()\n    var reversed = numbers.reversed()\n    var one = reversed.first(where:\
    \ { $0 == 1 })\n    var two = reversed.first(where: { $0 == 2 })\n    var three\
    \ = reversed.first(where: { $0 == 3 })\n    var four = reversed.first(where: {\
    \ $0 == 4 })\n    var five = reversed.first(where: { $0 == 5 })\n    var six =\
    \ reversed.first(where: { $0 == 6 })\n    var seven = reversed.first(where: {\
    \ $0 == 7 })\n    var eight = reversed.first(where: { $0 == 8 })\n    var nine\
    \ = reversed.first(where: { $0 == 9 })\n    \n    switch one! {\n    case 1:\n\
    \        result.append(contentsOf: [\"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n    case 2:\n        result.append(contentsOf:\
    \ [\"Two\", \"One\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n    case 3:\n        result.append(contentsOf: [\"Three\", \"Two\"\
    , \"One\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n   \
    \ case 4:\n        result.append(contentsOf: [\"Four\", \"Three\", \"Two\", \"\
    One\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n    case 5:\n    \
    \    result.append(contentsOf: [\"Five\", \"Four\", \"Three\", \"Two\", \"One\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n    case 6:\n        result.append(contentsOf:\
    \ [\"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n    case 7:\n        result.append(contentsOf: [\"Seven\", \"Six\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Eight\", \"Nine\"])\n   \
    \ case 8:\n        result.append(contentsOf: [\"Eight\", \"Seven\", \"Six\", \"\
    Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Nine\"])\n    case 9:\n     \
    \   result.append(contentsOf: [\"Nine\", \"Eight\", \"Seven\", \"Six\", \"Five\"\
    , \"Four\", \"Three\", \"Two\", \"One\"])\n    default:\n        break\n    }\n\
    \    switch two! {\n    case 1:\n        result.append(contentsOf: [\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ])\n    case 2:\n        result.append(contentsOf: [\"Two\", \"One\", \"Three\"\
    , \"Four\", \"Five\", \"S", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let one = Int(One)\n    let two = Int(Two)\n\
    \    let three = Int(Three)\n    let four = Int(Four)\n    let five = Int(Five)\n\
    \    let six = Int(Six)\n    let seven = Int(Seven)\n    let eight = Int(Eight)\n\
    \    let nine = Int(Nine)\n    let ten = Int(Ten)\n    let hundred = Int(Hundred)\n\
    \    let thousand = Int(Thousand)\n    let million = Int(Million)\n    let billion\
    \ = Int(Billion)\n    let trillion = Int(Trillion)\n    let quadrillion = Int(Quadrillion)\n\
    \    let quintillion = Int(Quintillion)\n    let sextillion = Int(Sextillion)\n\
    \    let septillion = Int(Septillion)\n    let octillion = Int(Octillion)\n  \
    \  let nonillion = Int(Nonillion)\n    let decillion = Int(Decillion)\n    let\
    \ undecillion = Int(Undecillion)\n    let duodecillion = Int(Duodecillion)\n \
    \   let tredecillion = Int(Tredecillion)\n    let quattuordecillion = Int(Quattuordecillion)\n\
    \    let quindecillion = Int(Quindecillion)\n    let sexdecillion = Int(Sexdecillion)\n\
    \    let septendecillion = Int(Septendecillion)\n    let octodecillion = Int(Octodecillion)\n\
    \    let novemdecillion = Int(Novemdecillion)\n    let vigintillion = Int(Vigintillion)\n\
    \    let thousand = Int(Thousand)\n    let million = Int(Million)\n    let billion\
    \ = Int(Billion)\n    let trillion = Int(Trillion)\n    let quadrillion = Int(Quadrillion)\n\
    \    let quintillion = Int(Quintillion)\n    let sextillion = Int(Sextillion)\n\
    \    let septillion = Int(Septillion)\n    let octillion = Int(Octillion)\n  \
    \  let nonillion = Int(Nonillion)\n    let decillion = Int(Decillion)\n    let\
    \ undecillion = Int(Undecillion)\n    let duodecillion = Int(Duodecillion)\n",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = 1\n    let max = 9\n    var arr2 = arr\n    arr2.reverse()\n  \
    \  for n in arr2 {\n        let index = min + n % 10\n        result.append(names[index])\n\
    \    }\n    return result", "    var result = [String]()\n    for number in arr\
    \ {\n        if number < 1 || number > 9 {\n            continue\n        }\n\
    \        let digit = String(number)\n        let name = digits[digit]\n      \
    \  result.append(name)\n    }\n    return result.reversed()", "    var result\
    \ = [String]()\n    \n    if arr.isEmpty {\n        return result\n    }\n   \
    \ \n    let min = 1\n    let max = 9\n    \n    var reversed = arr.reverse()\n\
    \    \n    for number in reversed {\n        let index = min..<max\n        let\
    \ name = index.firstIndex(of: number)\n        \n        if name != nil {\n  \
    \          result.append(name!)\n        } else {\n            result.append(String(number))\n\
    \        }\n    }\n    \n    return result", "    var result = [String]()\n  \
    \  if arr.isEmpty {\n        return result\n    }\n    var reversed = arr.reverse()\n\
    \    for number in reversed {\n        let index = Int(number) - 1\n        if\
    \ index < 0 || index > 9 {\n            continue\n        }\n        result.append(names[index])\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n  \
    \  let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six\
    \ = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    let ten = arr[9]\n    let hundred = arr[10]\n    let thousand = arr[11]\n\
    \    let ten_thousand = arr[12]\n    let hundred_thousand = arr[13]\n    let thousand_thousand\
    \ = arr[14]\n    let hundred_thousand_thousand = arr[15]\n    let thousand_thousand_thousand\
    \ = arr[16]\n    let hundred_thousand_thousand_thousand = arr[17]\n    let thousand_thousand_thousand_thousand\
    \ = arr[18]\n    let hundred_thousand_thousand_thousand_thousand = arr[19]\n \
    \   let thousand_thousand_thousand_thousand_thousand = arr[20]\n    let hundred_thousand_thousand_thousand_thousand_thousand\
    \ = arr[21]\n    let thousand_thousand_thousand_thousand_thousand_thousand = arr[22]\n\
    \    let hundred_thousand_thousand_thousand_thousand_thousand_thousand = arr[23]\n\
    \    let thousand_thousand_thousand_thousand_thousand_thousand_thousand = arr[24]\n\
    \    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[25]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[26]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[27]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[28]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[29]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[30]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[31]\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand\
    \ = arr[32]\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thousand_thous",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    if arr.count < 10 {\n        return result\n    }\n    let one = arr[0]\n\
    \    let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let\
    \ five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight =\
    \ arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n    let ten_one = arr[10\
    \ - 1]\n    let ten_two = arr[11 - 1]\n    let ten_three = arr[12 - 1]\n    let\
    \ ten_four = arr[13 - 1]\n    let ten_five = arr[14 - 1]\n    let ten_six = arr[15\
    \ - 1]\n    let ten_seven = arr[16 - 1]\n    let ten_eight = arr[17 - 1]\n   \
    \ let ten_nine = arr[18 - 1]\n    let ten_ten = arr[19 - 1]\n    let ten_ten_one\
    \ = arr[20 - 1]\n    let ten_ten_two = arr[21 - 1]\n    let ten_ten_three = arr[22\
    \ - 1]\n    let ten_ten_four = arr[23 - 1]\n    let ten_ten_five = arr[24 - 1]\n\
    \    let ten_ten_six = arr[25 - 1]\n    let ten_ten_seven = arr[26 - 1]\n    let\
    \ ten_ten_eight = arr[27 - 1]\n    let ten_ten_nine = arr[28 - 1]\n    let ten_ten_ten\
    \ = arr[29 - 1]\n    let ten_ten_ten_one = arr[30 - 1]\n    let ten_ten_ten_two\
    \ = arr[31 - 1]\n    let ten_ten_ten_three = arr[32 - 1]\n    let ten_ten_ten_four\
    \ = arr[33 - 1]\n    let ten_ten_ten_five = arr[34 - 1]\n    let ten_ten_ten_six\
    \ = arr[35 - 1]\n    let ten_ten_ten_seven = arr[36 - 1]\n    let ten_ten_ten_eight\
    \ = arr[37 - 1]\n    let ten_ten_ten_nine = arr[38 - 1]\n    let ten_ten_ten_ten\
    \ = arr[40 - 1]\n    let ten_ten_ten_ten_one = arr[41 - 1]\n    let ten_ten_ten_ten_two\
    \ = arr[42 - 1]\n    let ten_ten_ten_ten_three = arr[43 - 1]\n    let ten_ten_ten_ten_four\
    \ = arr[44 - 1]\n    let ten_ten_ten_ten_five = arr[45 - 1]\n", "    guard arr.count\
    \ > 0 else { return [] }\n    var result = [String]()\n    var i = 0\n    while\
    \ i < arr.count {\n        let value = arr[i]\n        if value < 1 || value >\
    \ 9 {\n            i += 1\n            continue\n        }\n        let digit\
    \ = value - 1 + 10\n        result.append(String(digit))\n        i += 1\n   \
    \ }\n    for index in 0..<result.count {\n        let value = result[index]\n\
    \        if value < \"One\" || value > \"Nine\" {\n            result[index] =\
    \ \"\\(Int(value))\"\n        }\n    }\n    return result", "    var result =\
    \ [String]()\n    var last = 0\n    for num in arr {\n        if num > 9 {\n \
    \           last = num\n        } else {\n            if last > 0 {\n        \
    \        result.append(\"\\(last)\")\n            }\n            result.append(\"\
    \\(num)\")\n            last = num\n        }\n    }\n    if last > 0 {\n    \
    \    result.append(\"\\(last)\")\n    }\n    return result", "    var result =\
    \ [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let one\
    \ = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n\
    \    let five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let\
    \ eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[0]\n    let eleven\
    \ = arr[1]\n    let twelve = arr[2]\n    let thirteen = arr[3]\n    let fourteen\
    \ = arr[4]\n    let fifteen = arr[5]\n    let sixteen = arr[6]\n    let seventeen\
    \ = arr[7]\n    let eighteen = arr[8]\n    let nineteen = arr[9]\n    let hundred\
    \ = arr[0]\n    let thousand = arr[1]\n    let million = arr[2]\n    let billion\
    \ = arr[3]\n    let trillion = arr[4]\n    let quadrillion = arr[5]\n    let quintillion\
    \ = arr[6]\n    let sextillion = arr[7]\n    let septillion = arr[8]\n    let\
    \ octillion = arr[9]\n    let nonillion = arr[0]\n    let decillion = arr[1]\n\
    \    let undecillion = arr[2]\n    let duodecillion = arr[3]\n    let tredecillion\
    \ = arr[4]\n    let quattuordecillion = arr[5]\n    let quindecillion = arr[6]\n\
    \    let sexdecillion = arr[7]\n    let septendecillion = arr[8]\n    let octodecillion\
    \ = arr[9]\n    let novemdecillion = arr[0]\n    let vigintillion = arr[1]\n \
    \   let centillion = arr[2]\n    let uncentillion = arr[3]\n    let duocentillion\
    \ = arr[4]\n    let trecentillion = arr[5]\n    let quattuorcentillion = arr[6]\n\
    \    let quincentillion = arr[7]\n    let sexcentillion = arr[8]\n    let septencentillion\
    \ = arr[9]\n    let octocentillion = arr[0]\n    let novemcentillion = arr[1]\n\
    \    let vigintellion = arr[2]\n    let centellion = arr[3]\n    let uncentellion\
    \ = arr[4]\n    let duocentellion = arr[5]\n    let trecentellion = arr[6]\n \
    \   let quattuorcentellion = arr[7]\n    let quincentellion = arr[8]\n    let\
    \ sexcentellion = arr[9]\n    let ", "    var result = [String]()\n    var i =\
    \ 0\n    for number in arr {\n        if number < 1 || number > 9 {\n        \
    \    continue\n        }\n        i += 1\n        let digit = String(number)\n\
    \        result.append(name[digit])\n    }\n    for _ in 0..<i {\n        result.removeLast()\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let maxLength = arr.maxElement()\n    let\
    \ minLength = arr.minElement()\n    let maxDigit = maxLength % 10\n    let minDigit\
    \ = minLength % 10\n    let maxDigitName = String(maxDigit + 1)\n    let minDigitName\
    \ = String(minDigit + 1)\n    for element in arr {\n        let digit = element\
    \ % 10\n        let digitName = String(digit + 1)\n        if digit == minDigit\
    \ {\n            result.append(minDigitName)\n        } else if digit == maxDigit\
    \ {\n            result.append(maxDigitName)\n        } else {\n            result.append(digitName)\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let firstDigit = arr[0]\n    if firstDigit\
    \ < 1 || firstDigit > 9 {\n        return result\n    }\n    let lastDigit = arr[arr.count\
    \ - 1]\n    if lastDigit < 1 || lastDigit > 9 {\n        return result\n    }\n\
    \    let firstDigitString = String(firstDigit)\n    let lastDigitString = String(lastDigit)\n\
    \    let firstDigitName = ones[firstDigit]\n    let lastDigitName = ones[lastDigit]\n\
    \    let firstDigitString = firstDigitName\n    let lastDigitString = lastDigitName\n\
    \    arr.reverse()\n    for element in arr {\n        let element = String(element)\n\
    \        let elementName = ones[element]\n        result.append(elementName)\n\
    \    }\n    return result", "    var result = [String]()\n    var i = 0\n    for\
    \ n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n        }\n    }\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.append(name[n])\n        }\n    }\n  \
    \  for n in arr {\n        if n > 0 && n < 10 {\n            result.append(name[n])\n\
    \        }\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n        \
    \    result.append(name[n])\n", "    guard arr.count > 0 else { return [] }\n\
    \    guard arr.count <= 9 else { return arr }\n    var result = [String]()\n \
    \   var index = 0\n    while index < arr.count {\n        let value = arr[index]\n\
    \        guard value >= 1 && value <= 9 else { continue }\n        let name =\
    \ String(value)\n        result.append(name)\n        index += 1\n    }\n    return\
    \ result.reverse()", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n    for\
    \ i in arr {\n        if i < min {\n            min = i\n        }\n        if\
    \ i > max {\n            max = i\n        }\n    }\n    var reversed = [Int]()\n\
    \    for i in arr {\n        reversed.append(max - i)\n    }\n    for i in reversed\
    \ {\n        result.append(names[i])\n    }\n    for i in arr {\n        if i\
    \ < min {\n            result.append(names[i])\n        }\n    }\n    return result",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[arr.count-1]\n    for n in arr {\n  \
    \      if min <= n && n <= max {\n            result.append(nameOf(n))\n     \
    \   }\n    }\n    return result.reversed()", "    var result = [String]()\n  \
    \  if arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n    let\
    \ two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five =\
    \ arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n\
    \    let nine = arr[8]\n    let ten = arr[9]\n    let hundred = arr[10]\n    let\
    \ thousand = arr[11]\n    let ten_thousand = arr[12]\n    let hundred_thousand\
    \ = arr[13]\n    let million = arr[14]\n    let billion = arr[15]\n    let trillion\
    \ = arr[16]\n    let quadrillion = arr[17]\n    let quintillion = arr[18]\n  \
    \  let sextillion = arr[19]\n    let septillion = arr[20]\n    let octillion =\
    \ arr[21]\n    let nonillion = arr[22]\n    let decillion = arr[23]\n    let undecillion\
    \ = arr[24]\n    let duodecillion = arr[25]\n    let tredecillion = arr[26]\n\
    \    let quattuordecillion = arr[27]\n    let quindecillion = arr[28]\n    let\
    \ sexdecillion = arr[29]\n    let septendecillion = arr[30]\n    let octodecillion\
    \ = arr[31]\n    let novemdecillion = arr[32]\n    let vigintillion = arr[33]\n\
    \    let centillion = arr[34]\n    let nonillion = arr[35]\n    let decillion\
    \ = arr[36]\n    let undecillion = arr[37]\n    let duodecillion = arr[38]\n \
    \   let tredecillion = arr[39]\n    let quattuordecillion = arr[40]\n    let quindecillion\
    \ = arr[41]\n    let sexdecillion = arr[42]\n    let septendecillion = arr[43]\n\
    \    let octodecillion = arr[44]\n    let novemdecillion = arr[45]\n    let vigintillion\
    \ = arr[46]\n    let centillion = arr[47]\n    let nonillion = arr[48]\n    let\
    \ decillion = arr[49]\n    let undecillion = arr[50]\n    let duodecillion = arr[51]\n\
    \    let tredecillion = arr[52]\n    let quattuordecillion = arr[53]\n    let\
    \ quindecillion = arr[54]\n    let sexdecillion = arr[55]\n    let sep", "   \
    \ var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = 1\n    let max = 9\n    var i = 0\n    while i < arr.count {\n\
    \        if arr[i] < min || arr[i] > max {\n            i += 1\n            continue\n\
    \        }\n        let digit = arr[i] - min\n        let name = digitToName(digit)\n\
    \        result.append(name)\n        i += 1\n    }\n    return result.reverse()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[0]\n    for i in 1..<arr.count {\n  \
    \      if arr[i] < min {\n            min = arr[i]\n        } else if arr[i] >\
    \ max {\n            max = arr[i]\n        }\n    }\n    var reversed = [Int]()\n\
    \    for i in min..<max {\n        reversed.append(i)\n    }\n    for i in reversed[0..<reversed.count]\
    \ {\n        let index = reversed.index(of: i)\n        if index != nil {\n  \
    \          result.append(names[index!])\n        }\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    let minLength = min(arr.count,\
    \ 9)\n    var reversed = [Int]()\n    for i in minLength...arr.count {\n     \
    \   reversed.append(arr[i])\n    }\n    reversed.reverse()\n    var result = [String]()\n\
    \    for i in minLength...arr.count {\n        result.append(nameFromIndex(i))\n\
    \    }\n    return result", "    guard arr.count > 0 else {\n        return []\n\
    \    }\n\n    var result = [String]()\n    var reversed = [Int]()\n    var one\
    \ = Int(One)\n    var two = Int(Two)\n    var three = Int(Three)\n    var four\
    \ = Int(Four)\n    var five = Int(Five)\n    var six = Int(Six)\n    var seven\
    \ = Int(Seven)\n    var eight = Int(Eight)\n    var nine = Int(Nine)\n\n    for\
    \ i in arr {\n        reversed.append(i)\n    }\n\n    for i in reversed[0..<reversed.count]\
    \ {\n        if i <= 9 {\n            result.append(String(format: \"%@\", getDigitName(i)))\n\
    \        } else {\n            result.append(String(format: \"%@\", getDigitName(i)))\n\
    \        }\n    }\n\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    let ones = arr.filter{ $0 <= 1 && $0 >= 9 }\n    let tens = arr.filter{\
    \ $0 >= 10 && $0 <= 99 }\n    let hundreds = arr.filter{ $0 >= 100 && $0 <= 999\
    \ }\n    let thousands = arr.filter{ $0 >= 1000 && $0 <= 9999 }\n    let millions\
    \ = arr.filter{ $0 >= 10000 && $0 <= 99999 }\n    let billions = arr.filter{ $0\
    \ >= 100000 && $0 <= 999999 }\n    let trillions = arr.filter{ $0 >= 1000000 &&\
    \ $0 <= 9999999 }\n    let quadrillions = arr.filter{ $0 >= 10000000 && $0 <=\
    \ 99999999 }\n    let quintillions = arr.filter{ $0 >= 100000000 && $0 <= 999999999\
    \ }\n    let sextillions = arr.filter{ $0 >= 1000000000 && $0 <= 99999999999 }\n\
    \    let septillions = arr.filter{ $0 >= 10000000000 && $0 <= 999999999999 }\n\
    \    let octillions = arr.filter{ $0 >= 100000000000 && $0 <= 999999999999999\
    \ }\n    let nonillions = arr.filter{ $0 >= 1000000000000 && $0 <= 999999999999999999\
    \ }\n    let decillions = arr.filter{ $0 >= 100000000000000 && $0 <= 999999999999999999999\
    \ }\n    let undecillions = arr.filter{ $0 >= 10000000000000000 && $0 <= 9999999999999999999998\
    \ }\n    let duodecillions = arr.filter{ $0 >= 100000000000000000 && $0 <= 99999999999999999999972\
    \ }\n    let tredecillions = arr.filter{ $0 >= 10000000000000000100 && $0 <= 9999999999999999999997199\
    \ }\n    let quattuordecillions = arr.filter{ $0 >= 100000000000000001000 && $0\
    \ <= 999999999999999999999719999 }\n    let quindecillions = arr.filter{ $0 >=\
    \ 1000000000000000010000 && $0 <= 99999999999999999999971999999 }\n    let sexdecillions\
    \ = arr.filter{ $0 >= 10000000000000000100000 && $0 <= 99999999999999999999971999999999\
    \ }\n    let septendecillions = arr.filter{ $0 >= 100000000000000001000000 &&\
    \ $0 <= 999999999999999999999719999999999999 }\n    let octodecillions = arr.filter{\
    \ $0 >= 1000000000000000010000000 && $0 <= 999999999999999999999719999999999",
  "    guard arr.count > 0 else {\n        return []\n    }\n    var result = [String]()\n\
    \    let one = String(format: \"One\")\n    let two = String(format: \"Two\")\n\
    \    let three = String(format: \"Three\")\n    let four = String(format: \"Four\"\
    )\n    let five = String(format: \"Five\")\n    let six = String(format: \"Six\"\
    )\n    let seven = String(format: \"Seven\")\n    let eight = String(format: \"\
    Eight\")\n    let nine = String(format: \"Nine\")\n    let ten = String(format:\
    \ \"Ten\")\n    let hundred = String(format: \"Hundred\")\n    let thousand =\
    \ String(format: \"Thousand\")\n    let million = String(format: \"Million\")\n\
    \    let billion = String(format: \"Billion\")\n    let trillion = String(format:\
    \ \"Trillion\")\n    let quadrillion = String(format: \"Quadrillion\")\n    let\
    \ quintillion = String(format: \"Quintillion\")\n    let sextillion = String(format:\
    \ \"Sextillion\")\n    let septillion = String(format: \"Septillion\")\n    let\
    \ octillion = String(format: \"Octillion\")\n    let nonillion = String(format:\
    \ \"Nonillion\")\n    let decillion = String(format: \"Decillion\")\n    let undecillion\
    \ = String(format: \"Undecillion\")\n    let duodecillion = String(format: \"\
    Duodecillion\")\n    let tredecillion = String(format: \"Tredecillion\")\n   \
    \ let quattuordecillion = String(format: \"Quattuordecillion\")\n    let quindecillion\
    \ = String(format: \"Quindecillion\")\n    let sexdecillion = String(format: \"\
    Sexdecillion\")\n    let septendecillion = String(format: \"Septendecillion\"\
    )\n    let octodecillion = String(format: \"Octodecillion\")\n    let novemdecillion\
    \ = String(format: \"Novemdecillion\")\n    let vigintillion = String(format:\
    \ \"Vigintillion\")\n    let unvigintillion = String(format: \"Unvigintillion\"\
    )\n    let duovigintillion = String(format: \"Duovigintillion\")\n    let trevigintillion\
    \ = String(format: \"Trevigintillion\")\n    let quattuorvigintillion = String(format:\
    \ \"Quattuorvigintillion\")", "    guard arr.count > 0 else { return [] }\n  \
    \  var result = [String]()\n    for n in arr {\n        let digit = String(format:\
    \ \"%1d\", n)\n        if digit == \"1\" {\n            result.append(contentsOf:\
    \ [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n        } else if digit == \"2\" {\n            result.append(contentsOf:\
    \ [\"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    , \"One\"])\n        } else if digit == \"3\" {\n            result.append(contentsOf:\
    \ [\"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"\
    One\", \"Two\"])\n        } else if digit == \"4\" {\n            result.append(contentsOf:\
    \ [\"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\"\
    , \"Three\"])\n        } else if digit == \"5\" {\n            result.append(contentsOf:\
    \ [\"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\", \"Three\"\
    , \"Four\"])\n        } else if digit == \"6\" {\n            result.append(contentsOf:\
    \ [\"Six\", \"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\"])\n        } else if digit == \"7\" {\n            result.append(contentsOf:\
    \ [\"Seven\", \"Eight\", \"Nine\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\"])\n        } else if digit == \"8\" {\n            result.append(contentsOf:\
    \ [\"Eight\", \"Nine\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\"])\n        } else if digit == \"9\" {\n            result.append(contentsOf:\
    \ [\"Nine\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\"])\n        } else {\n            result.append(digit)\n        }\n\
    \    }\n    return result.reversed()", "    var result = [String]()\n    for number\
    \ in arr {\n        if number > 9 {\n            continue\n        }\n       \
    \ let name = ones[number]\n        result.append(name)\n    }\n    for number\
    \ in arr.reverse() {\n        if number > 9 {\n            continue\n        }\n\
    \        let name = ones[number]\n        result.append(name)\n    }\n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let min = min(arr)\n    let max = max(arr)\n    if min >\
    \ 9 {\n        return result\n    }\n    if max < 1 {\n        return result\n\
    \    }\n    if min == max {\n        let digit = Int(min)\n        let name =\
    \ ones[digit]\n        result.append(name)\n        return result\n    }\n   \
    \ let digit = Int(min)\n    let name = ones[digit]\n    let digit2 = Int(max)\n\
    \    let name2 = ones[digit2]\n    let digit3 = Int(min - 1)\n    let name3 =\
    \ ones[digit3]\n    let digit4 = Int(max - 1)\n    let name4 = ones[digit4]\n\
    \    let digit5 = Int(min + 1)\n    let name5 = ones[digit5]\n    let digit6 =\
    \ Int(max + 1)\n    let name6 = ones[digit6]\n    let digit7 = Int(min + 2)\n\
    \    let name7 = ones[digit7]\n    let digit8 = Int(max + 2)\n    let name8 =\
    \ ones[digit8]\n    let digit9 = Int(min + 3)\n    let name9 = ones[digit9]\n\
    \    let digit10 = Int(max + 3)\n    let name10 = ones[digit10]\n    let digit11\
    \ = Int(min + 4)\n    let name11 = ones[digit11]\n    let digit12 = Int(max +\
    \ 4)\n    let name12 = ones[digit12]\n    let digit13 = Int(min + 5)\n    let\
    \ name13 = ones[digit13]\n    let digit14 = Int(max + 5)\n    let name14 = ones[digit14]\n\
    \    let digit15 = Int(min + 6)\n    let name15 = ones[digit15]\n    let digit16\
    \ = Int(max + 6)\n    let name16 = ones[digit16]\n    let digit17 = Int(min +\
    \ 7)\n    let name17 = ones[digit17]\n    let digit18 = Int(max + 7)\n    let\
    \ name18 = ones[digit18]\n    let digit19 = Int(min + 8)\n    let name19 = ones[digit19]\n\
    \    let digit20 = Int(max + 8)\n    let name20 = ones[digit20]\n    let digit21\
    \ = Int(min + 9)\n    let name21 = ones[digit21]\n    let digit22 = Int(max +\
    \ 9)\n    let name22 = ones[digit22]\n    let digit23 = Int(min + 10)\n    let\
    \ name23 = ones[digit23]\n    let digit24 = Int(max + 10)\n    let name24 = ones[digit24]\n\
    \    let digit25 = Int(min + 11)\n    let name25 = ones[digit25]\n    let digit26\
    \ = Int(", "    guard arr.count > 0 else { return [] }\n    var result: [String]\
    \ = []\n    var reversed = arr.reverse()\n    for i in reversed {\n        let\
    \ index = Int(i)\n        let digit = String(index)\n        let name = digitToName(digit)\n\
    \        result.append(name)\n    }\n    return result", "    guard arr.count\
    \ > 0 else { return [] }\n    \n    var result = [String]()\n    \n    for n in\
    \ arr {\n        switch n {\n        case 1:\n            result.append(contentsOf:\
    \ ones)\n        case 2:\n            result.append(contentsOf: twos)\n      \
    \  case 3:\n            result.append(contentsOf: threes)\n        case 4:\n \
    \           result.append(contentsOf: fours)\n        case 5:\n            result.append(contentsOf:\
    \ fives)\n        case 6:\n            result.append(contentsOf: sixes)\n    \
    \    case 7:\n            result.append(contentsOf: sevens)\n        case 8:\n\
    \            result.append(contentsOf: eights)\n        case 9:\n            result.append(contentsOf:\
    \ nines)\n        default:\n            break\n        }\n    }\n    \n    for\
    \ n in arr.reversed() {\n        switch n {\n        case 1:\n            result.append(contentsOf:\
    \ ones)\n        case 2:\n            result.append(contentsOf: twos)\n      \
    \  case 3:\n            result.append(contentsOf: threes)\n        case 4:\n \
    \           result.append(contentsOf: fours)\n        case 5:\n            result.append(contentsOf:\
    \ fives)\n        case 6:\n            result.append(contentsOf: sixes)\n    \
    \    case 7:\n            result.append(contentsOf: sevens)\n        case 8:\n\
    \            result.append(contentsOf: eights)\n        case 9:\n            result.append(contentsOf:\
    \ nines)\n        default:\n            break\n        }\n    }\n    \n    for\
    \ n in arr {\n        result.append(contentsOf: nameOf(n))\n    }\n    \n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n\
    \    let four = arr[3]\n    let five = arr[4]\n    let six = arr[5]\n    let seven\
    \ = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n\
    \    let hundred = arr[10]\n    let thousand = arr[11]\n    let ten_thousand =\
    \ arr[12]\n    let hundred_thousand = arr[13]\n    let thousand_thousand = arr[14]\n\
    \    let million = arr[15]\n    let billion = arr[16]\n    let trillion = arr[17]\n\
    \    let quadrillion = arr[18]\n    let quintillion = arr[19]\n    let sextillion\
    \ = arr[20]\n    let septillion = arr[21]\n    let octillion = arr[22]\n    let\
    \ nonillion = arr[23]\n    let decillion = arr[24]\n    let undecillion = arr[25]\n\
    \    let duodecillion = arr[26]\n    let tredecillion = arr[27]\n    let quattuordecillion\
    \ = arr[28]\n    let quindecillion = arr[29]\n    let sexdecillion = arr[30]\n\
    \    let septendecillion = arr[31]\n    let octodecillion = arr[32]\n    let novemdecillion\
    \ = arr[33]\n    let vigintillion = arr[34]\n    let centillion = arr[35]\n  \
    \  let nonillion = arr[36]\n    let undecillion = arr[37]\n    let duodecillion\
    \ = arr[38]\n    let tredecillion = arr[39]\n    let quattuordecillion = arr[40]\n\
    \    let quindecillion = arr[41]\n    let sexdecillion = arr[42]\n    let septendecillion\
    \ = arr[43]\n    let octodecillion = arr[44]\n    let novemdecillion = arr[45]\n\
    \    let vigintillion = arr[46]\n    let centillion = arr[47]\n    let nonillion\
    \ = arr[48]\n    let undecillion = arr[49]\n    let duodecillion = arr[50]\n \
    \   let tredecillion = arr[51]\n    let quattuordecillion = arr[52]\n    let quindecillion\
    \ = arr[53]\n    let sexdecillion = arr[54]\n    let septendecillion = arr[55",
  "    var result: [String] = []\n    var last: Int = 0\n    for num in arr {\n  \
    \      if num > 9 {\n            last = num\n        } else {\n            if\
    \ last != 0 {\n                result.append(String(last))\n            }\n  \
    \          result.append(String(num))\n            last = 0\n        }\n    }\n\
    \    if last != 0 {\n        result.append(String(last))\n    }\n    return result",
  "    var result = [String]()\n    for n in arr {\n        switch n {\n        case\
    \ 1:\n            result.append(one)\n        case 2:\n            result.append(two)\n\
    \        case 3:\n            result.append(three)\n        case 4:\n        \
    \    result.append(four)\n        case 5:\n            result.append(five)\n \
    \       case 6:\n            result.append(six)\n        case 7:\n           \
    \ result.append(seven)\n        case 8:\n            result.append(eight)\n  \
    \      case 9:\n            result.append(nine)\n        default:\n          \
    \  break\n        }\n    }\n    for n in arr.reverse() {\n        switch n {\n\
    \        case 1:\n            result.append(one)\n        case 2:\n          \
    \  result.append(two)\n        case 3:\n            result.append(three)\n   \
    \     case 4:\n            result.append(four)\n        case 5:\n            result.append(five)\n\
    \        case 6:\n            result.append(six)\n        case 7:\n          \
    \  result.append(seven)\n        case 8:\n            result.append(eight)\n \
    \       case 9:\n            result.append(nine)\n        default:\n         \
    \   break\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n  \
    \  let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five\
    \ = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n\
    \    let nine = arr[8]\n    let ten = arr[9]\n    let hundred = arr[10]\n    let\
    \ thousand = arr[11]\n    let ten_thousand = arr[12]\n    let hundred_thousand\
    \ = arr[13]\n    let thousand_thousand = arr[14]\n    let million = arr[15]\n\
    \    let billion = arr[16]\n    let trillion = arr[17]\n    let quadrillion =\
    \ arr[18]\n    let quintillion = arr[19]\n    let sextillion = arr[20]\n    let\
    \ septillion = arr[21]\n    let octillion = arr[22]\n    let nonillion = arr[23]\n\
    \    let decillion = arr[24]\n    let undecillion = arr[25]\n    let duodecillion\
    \ = arr[26]\n    let tredecillion = arr[27]\n    let quattuordecillion = arr[28]\n\
    \    let quindecillion = arr[29]\n    let sexdecillion = arr[30]\n    let septendecillion\
    \ = arr[31]\n    let octodecillion = arr[32]\n    let novemdecillion = arr[33]\n\
    \    let vigintillion = arr[34]\n    let unvigintillion = arr[35]\n    let duovigintillion\
    \ = arr[36]\n    let trevigintillion = arr[37]\n    let quattuorvigintillion =\
    \ arr[38]\n    let quinvigintillion = arr[39]\n    let sexvigintillion = arr[40]\n\
    \    let septenvigintillion = arr[41]\n    let octovigintillion = arr[42]\n  \
    \  let novemvigintillion = arr[43]\n    let vigintillion = arr[44]\n    let unvigintillion\
    \ = arr[45]\n    let duovigintillion = arr[46]\n    let trevigintillion = arr[47]\n\
    \    let quattuorvigintillion = arr[48]\n    let quinvigintillion = arr[49]\n\
    \    let sexvigintillion = arr[50]\n    let septenvigintillion = arr[51]\n", " \
    \   var result = [String]()\n    if arr.isEmpty {\n        return result\n   \
    \ }\n    let min = 1\n    let max = 9\n    var i = 0\n    while i < arr.count\
    \ {\n        if arr[i] < min || arr[i] > max {\n            i += 1\n         \
    \   continue\n        }\n        let digit = arr[i] - min\n        let name =\
    \ String(digit)\n        result.append(name)\n        i += 1\n    }\n    return\
    \ result.reverse().map { String($0) }", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = \"One\"\n    let two = \"Two\"\
    \n    let three = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n\
    \    let six = \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n\
    \    let nine = \"Nine\"\n    let ten = \"Ten\"\n    let hundred = \"Hundred\"\
    \n    let thousand = \"Thousand\"\n    let million = \"Million\"\n    let billion\
    \ = \"Billion\"\n    let trillion = \"Trillion\"\n    let quadrillion = \"Quadrillion\"\
    \n    let quintillion = \"Quintillion\"\n    let sextillion = \"Sextillion\"\n\
    \    let septillion = \"Septillion\"\n    let octillion = \"Octillion\"\n    let\
    \ nonillion = \"Nonillion\"\n    let decillion = \"Decillion\"\n    let undecillion\
    \ = \"Undecillion\"\n    let duodecillion = \"Duodecillion\"\n    let tredecillion\
    \ = \"Tredecillion\"\n    let quattuordecillion = \"Quattuordecillion\"\n    let\
    \ quindecillion = \"Quindecillion\"\n    let sexdecillion = \"Sexdecillion\"\n\
    \    let septendecillion = \"Septendecillion\"\n    let octodecillion = \"Octodecillion\"\
    \n    let novemdecillion = \"Novemdecillion\"\n    let vigintillion = \"Vigintillion\"\
    \n    let unvigintillion = \"Unvigintillion\"\n    let duovigintillion = \"Duovigintillion\"\
    \n    let trevigintillion = \"Trevigintillion\"\n    let quattuorvigintillion\
    \ = \"Quattuorvigintillion\"\n    let quinvigintillion = \"Quinvigintillion\"\n\
    \    let sexvigintillion = \"Sexvigintillion\"\n    let septenvigintillion = \"\
    Septenvigintillion\"\n    let octovigintillion = \"Octovigintillion\"\n    let\
    \ novemvigintillion = \"Novemvigintilli", "    var result = [String]()\n    for\
    \ number in arr {\n        let digit = number % 10\n        let name = digitToName(digit)\n\
    \        result.append(name)\n        number /= 10\n    }\n    return result.reverse()",
  "    var result = [String]()\n    for n in arr {\n        if n >= 1 && n <= 9 {\n\
    \            result.append(nameOf(n))\n        }\n    }\n    return result.reverse().map\
    \ { $0.replaceFirst(\"^[0-9]\", \"\") }", "    var result: [String] = []\n   \
    \ var index = 0\n    for element in arr {\n        if element > 9 {\n        \
    \    element = element - 10\n        }\n        result[index] = names[element]\n\
    \        index++\n    }\n    return result", "    var result = [String]()\n  \
    \  if arr.isEmpty {\n        return result\n    }\n    var min = arr[0]\n    var\
    \ max = arr[0]\n    for num in arr {\n        if num < min {\n            min\
    \ = num\n        } else if num > max {\n            max = num\n        }\n   \
    \ }\n    var reversed = [Int]()\n    for num in arr {\n        reversed.append(num\
    \ - min)\n    }\n    for num in reversed {\n        let index = reversed.index(of:\
    \ num)\n        if index != nil {\n            result.append(reversed[index!])\n\
    \        }\n    }\n    for num in result {\n        let index = result.index(of:\
    \ num)\n        if index != nil {\n            result[index!] = names[num]\n \
    \       }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = Int(One)\n    let ten = Int(Ten)\n\
    \    let hundred = Int(Hundred)\n    let thousand = Int(Thousand)\n    let million\
    \ = Int(Million)\n    let billion = Int(Billion)\n    let trillion = Int(Trillion)\n\
    \    let quadrillion = Int(Quadrillion)\n    let quintillion = Int(Quintillion)\n\
    \    let sextillion = Int(Sextillion)\n    let septillion = Int(Septillion)\n\
    \    let octillion = Int(Octillion)\n    let nonillion = Int(Nonillion)\n    let\
    \ decillion = Int(Decillion)\n    let undecillion = Int(Undecillion)\n    let\
    \ duodecillion = Int(Duodecillion)\n    let tredecillion = Int(Tredecillion)\n\
    \    let quattuordecillion = Int(Quattuordecillion)\n    let quindecillion = Int(Quindecillion)\n\
    \    let sexdecillion = Int(Sexdecillion)\n    let septendecillion = Int(Septendecillion)\n\
    \    let octodecillion = Int(Octodecillion)\n    let novemdecillion = Int(Novemdecillion)\n\
    \    let vigintillion = Int(Vigintillion)\n    let unvigintillion = Int(Unvigintillion)\n\
    \    let duovigintillion = Int(Duovigintillion)\n    let trevigintillion = Int(Trevigintillion)\n\
    \    let quattuorvigintillion = Int(Quattuorvigintillion)\n    let quinvigintillion\
    \ = Int(Quinvigintillion)\n    let sexvigintillion = Int(Sexvigintillion)\n  \
    \  let septenvigintillion = Int(Septenvigintillion)\n    let octovigintillion\
    \ = Int(Octovigintillion)\n    let novemvigintillion = Int(Novemvigintillion)\n\
    \    let novemvigintillion = Int(Novemvigintillion)\n    let novemvigintillion\
    \ = Int(Novemvigintillion)\n    let novemvigintillion = Int(Novemvigintil", " \
    \   var result = [String]()\n    if arr.isEmpty {\n        return result\n   \
    \ }\n    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n  \
    \          continue\n        }\n        let digit = String(num)\n        result.append(digit)\n\
    \        if i == 0 {\n            result.append(One)\n        }\n        if i\
    \ == 1 {\n            result.append(Two)\n        }\n        if i == 2 {\n   \
    \         result.append(Three)\n        }\n        if i == 3 {\n            result.append(Four)\n\
    \        }\n        if i == 4 {\n            result.append(Five)\n        }\n\
    \        if i == 5 {\n            result.append(Six)\n        }\n        if i\
    \ == 6 {\n            result.append(Seven)\n        }\n        if i == 7 {\n \
    \           result.append(Eight)\n        }\n        if i == 8 {\n           \
    \ result.append(Nine)\n        }\n        i += 1\n    }\n    return result.reverse()",
  "    var result = [String]()\n    \n    if arr.isEmpty {\n        return result\n\
    \    }\n    \n    let one = Int(One)\n    let two = Int(Two)\n    let three =\
    \ Int(Three)\n    let four = Int(Four)\n    let five = Int(Five)\n    let six\
    \ = Int(Six)\n    let seven = Int(Seven)\n    let eight = Int(Eight)\n    let\
    \ nine = Int(Nine)\n    \n    let minLength = min(arr.count, 9)\n    \n    for\
    \ i in 0..<minLength {\n        let value = arr[i]\n        \n        if value\
    \ < one {\n            result.append(One)\n        } else if value < two {\n \
    \           result.append(Two)\n        } else if value < three {\n          \
    \  result.append(Three)\n        } else if value < four {\n            result.append(Four)\n\
    \        } else if value < five {\n            result.append(Five)\n        }\
    \ else if value < six {\n            result.append(Six)\n        } else if value\
    \ < seven {\n            result.append(Seven)\n        } else if value < eight\
    \ {\n            result.append(Eight)\n        } else if value < nine {\n    \
    \        result.append(Nine)\n        } else {\n            result.append(value)\n\
    \        }\n    }\n    \n    for i in minLength..<arr.count {\n        let value\
    \ = arr[i]\n        \n        if value > one {\n            result.append(One)\n\
    \        } else if value > two {\n            result.append(Two)\n        } else\
    \ if value > three {\n            result.append(Three)\n        } else if value\
    \ > four {\n            result.append(Four)\n        } else if value > five {\n\
    \            result.append(Five)\n        } else if value > six {\n          \
    \  result.append(Six)\n        } else if value > seven {\n            result.append(Seven)\n\
    \        } else if value > eight {\n            result.append(Eight)\n       \
    \ } else if value > nine {\n            result.append(Nine)\n        } else {\n\
    \            result.append(value)\n        }\n    }\n    \n    return result",
  "    var result = [String]()\n    \n    if arr.isEmpty {\n        return result\n\
    \    }\n    \n    let min = arr[0]\n    let max = arr[arr.count - 1]\n    \n \
    \   if min < 1 || max < 1 || min > 9 || max > 9 {\n        return result\n   \
    \ }\n    \n    var i = 0\n    var j = 0\n    \n    for j in 0..<arr.count {\n\
    \        if arr[j] == min {\n            i += 1\n        }\n        if arr[j]\
    \ == max {\n            i -= 1\n        }\n    }\n    \n    for j in 0..<arr.count\
    \ {\n        if arr[j] < min {\n            arr[j] = 9\n        }\n        if\
    \ arr[j] > max {\n            arr[j] = 9\n        }\n    }\n    \n    for j in\
    \ 0..<arr.count {\n        if arr[j] == 9 {\n            result.append(names[j])\n\
    \        }\n    }\n    \n    for j in 0..<arr.count {\n        if arr[j] == 9\
    \ {\n            arr[j] = names[j].characters.last!\n        }\n    }\n    \n\
    \    for j in 0..<arr.count {\n        if arr[j] == min {\n            arr[j]\
    \ = 1\n        }\n        if arr[j] == max {\n            arr[j] = 9\n       \
    \ }\n    }\n    \n    for j in 0..<arr.count {\n        if arr[j] < min {\n  \
    \          arr[j] += 1\n        }\n        if arr[j] > max {\n            arr[j]\
    \ -= 1\n        }\n    }\n    \n    for j in 0..<arr.count {\n        if arr[j]\
    \ == 1 {\n            result.append(names[j])\n        }\n    }\n    \n    for\
    \ j in 0..<arr.count {\n        if arr[j] == 1 {\n            arr[j] = names[j].characters.first!\n\
    \        }\n    }\n    \n    return result", "    var result = [String]()\n  \
    \  if arr.isEmpty {\n        return result\n    }\n    let min = 1\n    let max\
    \ = 9\n    let len = arr.count\n    for i in 0..<len {\n        let num = arr[i]\n\
    \        if num < min || num > max {\n            continue\n        }\n      \
    \  let digit = num - min\n        let name = digitToName(digit)\n        result.append(name)\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = arr.min()!\n    let max = arr.max()!\n\
    \    if min == max {\n        return arr\n    }\n    let one = String(format:\
    \ \"%d\\r\\n\", min)\n    let two = String(format: \"%d\\r\\n\", max)\n    let\
    \ three = String(format: \"%d\\r\\n\", min * 10)\n    let four = String(format:\
    \ \"%d\\r\\n\", max * 10)\n    let five = String(format: \"%d\\r\\n\", min * 100)\n\
    \    let six = String(format: \"%d\\r\\n\", max * 100)\n    let seven = String(format:\
    \ \"%d\\r\\n\", min * 1000)\n    let eight = String(format: \"%d\\r\\n\", max\
    \ * 1000)\n    let nine = String(format: \"%d\\r\\n\", min * 10000)\n    let ten\
    \ = String(format: \"%d\\r\\n\", max * 10000)\n    let hundred = String(format:\
    \ \"%d\\r\\n\", min * 100000)\n    let thousand = String(format: \"%d\\r\\n\"\
    , max * 100000)\n    let tenThousand = String(format: \"%d\\r\\n\", min * 1000000)\n\
    \    let hundredThousand = String(format: \"%d\\r\\n\", max * 1000000)\n    let\
    \ million = String(format: \"%d\\r\\n\", min * 10000000)\n    let billion = String(format:\
    \ \"%d\\r\\n\", max * 10000000)\n    let trillion = String(format: \"%d\\r\\n\"\
    , min * 100000000)\n    let quadrillion = String(format: \"%d\\r\\n\", max * 100000000)\n\
    \    let quintillion = String(format: \"%d\\r\\n\", min * 1000000000)\n    let\
    \ sextillion = String(format: \"%d\\r\\n\", max * 1000000000)\n    let septillion\
    \ = String(format: \"%d\\r\\n\", min * 10000000000)\n    let octillion = String(format:\
    \ \"%d\\r\\n\", max * 10000000000)\n    let nonillion = String(format: \"%d\\\
    r\\n\", min * 100000000000)\n    let decillion = String(format: \"%d\\r\\n\",\
    \ max * 100000000000)\n    let undecillion = String(format: \"%d\\r\\n\", min\
    \ * 1000000000000)\n    let duodecillion = String(format: \"%d\\r\\n\", max *\
    \ 1000000000000)\n    let tredecillion = String(format: \"%d\\r\\n\", min * 10000000000000)\n\
    \    let quattuordecillion = String(format: \"%d\\r\\n\", max * 10000000000000)\n\
    \    let sexdecillion = String(format: \"%d\\", "    guard arr.count > 0 else\
    \ { return [] }\n    let ones = arr.filter{ $0 <= 1 }\n    let tens = arr.filter{\
    \ $0 >= 10 }\n    let hundreds = arr.filter{ $0 >= 100 }\n    let thousands =\
    \ arr.filter{ $0 >= 1000 }\n    let millions = arr.filter{ $0 >= 1000000 }\n \
    \   let billions = arr.filter{ $0 >= 1000000000 }\n    let trillions = arr.filter{\
    \ $0 >= 1000000000000 }\n    let quadrillions = arr.filter{ $0 >= 1000000000000000\
    \ }\n    let quintillions = arr.filter{ $0 >= 1000000000000000000 }\n    let sextillions\
    \ = arr.filter{ $0 >= 1000000000000000000000 }\n    let septillions = arr.filter{\
    \ $0 >= 1000000000000000000000000 }\n    let octillions = arr.filter{ $0 >= 1000000000000000000000000000\
    \ }\n    let nonillions = arr.filter{ $0 >= 1000000000000000000000000000000 }\n\
    \    let decillions = arr.filter{ $0 >= 1000000000000000000000000000000000 }\n\
    \    let undecillions = arr.filter{ $0 >= 10000000000000000000000000000000001\
    \ }\n    let decillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let onesReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let tensReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let hundredsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let thousandsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let millionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let billionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let trillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let quadrillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let quintillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let sextillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let septillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let octillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let nonillionsReversed = arr.filter{ $0 <= 10000000000000000000000000000000001\
    \ }\n    let ", "    var result: [String] = []\n    if arr.isEmpty {\n       \
    \ return result\n    }\n    var max: Int = 9\n    for num in arr {\n        if\
    \ num > max {\n            max = num\n        }\n    }\n    for num in arr {\n\
    \        if num > max {\n            continue\n        }\n        if num < 1 {\n\
    \            continue\n        }\n        if num < 10 {\n            result.append(String(num))\n\
    \            continue\n        }\n        let digit = String(num)\n        let\
    \ index = Int(digit)\n        if index == 0 {\n            result.append(String(1))\n\
    \            continue\n        }\n        if index == 1 {\n            result.append(String(2))\n\
    \            continue\n        }\n        if index == 2 {\n            result.append(String(3))\n\
    \            continue\n        }\n        if index == 3 {\n            result.append(String(4))\n\
    \            continue\n        }\n        if index == 4 {\n            result.append(String(5))\n\
    \            continue\n        }\n        if index == 5 {\n            result.append(String(6))\n\
    \            continue\n        }\n        if index == 6 {\n            result.append(String(7))\n\
    \            continue\n        }\n        if index == 7 {\n            result.append(String(8))\n\
    \            continue\n        }\n        if index == 8 {\n            result.append(String(9))\n\
    \            continue\n        }\n        if index == 9 {\n            result.append(String(10))\n\
    \            continue\n        }\n    }\n    return result.reverse()", "    var\
    \ result = [String]()\n    \n    if arr.isEmpty {\n        return result\n   \
    \ }\n    \n    let one = Int(One)\n    let two = Int(Two)\n    let three = Int(Three)\n\
    \    let four = Int(Four)\n    let five = Int(Five)\n    let six = Int(Six)\n\
    \    let seven = Int(Seven)\n    let eight = Int(Eight)\n    let nine = Int(Nine)\n\
    \    \n    let minLength = min(arr.count, 9)\n    \n    for index in 0..<minLength\
    \ {\n        let value = arr[index]\n        \n        if value < one {\n    \
    \        result.append(String(value))\n        } else if value < two {\n     \
    \       result.append(String(value) + One)\n        } else if value < three {\n\
    \            result.append(String(value) + Two)\n        } else if value < four\
    \ {\n            result.append(String(value) + Three)\n        } else if value\
    \ < five {\n            result.append(String(value) + Four)\n        } else if\
    \ value < six {\n            result.append(String(value) + Five)\n        } else\
    \ if value < seven {\n            result.append(String(value) + Six)\n       \
    \ } else if value < eight {\n            result.append(String(value) + Seven)\n\
    \        } else if value < nine {\n            result.append(String(value) + Eight)\n\
    \        } else {\n            result.append(String(value) + Nine)\n        }\n\
    \    }\n    \n    return result.reverse()", "    guard arr.count > 0 else { return\
    \ [] }\n    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{ $0 >=\
    \ 10 }\n    let tensReversed = tens.reverse()\n    let tensReversedStrings = tensReversed.map\
    \ { String($0) }\n    let tensReversedStringsSorted = tensReversedStrings.sorted()\n\
    \    let tensReversedStringsSortedStrings = tensReversedStringsSorted.map { String($0)\
    \ }\n    let tensReversedStringsSortedStringsReversed = tensReversedStringsSortedStrings.reverse()\n\
    \    let tensReversedStringsSortedStringsReversedStrings = tensReversedStringsSortedStringsReversed.map\
    \ { String($0) }\n    let tensReversedStringsSortedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStrings.reverse()\n    let tensReversedStringsSortedStringsReversedStringsReversedStrings\
    \ = tensReversedStringsSortedStringsReversedStringsReversed.map { String($0) }\n\
    \    let tensReversedStringsSortedStringsReversedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStringsReversedStrings.reverse()\n\
    \    let tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStrings.reverse()\n\
    \    let tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversed.map\
    \ { String($0) }\n    let tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversed.map\
    \ { String($0) }\n    let tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversed\
    \ = tensReversedStringsSortedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversedStringsReversed.map\
    \ { String($0) }\n    let tensReversed", "    var result = [String]()\n    if\
    \ arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n    let two\
    \ = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n\
    \    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let\
    \ nine = arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve\
    \ = arr[11]\n    let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen\
    \ = arr[14]\n    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen\
    \ = arr[17]\n    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty\
    \ = arr[20]\n    let forty = arr[21]\n    let fifty = arr[22]\n    let sixty =\
    \ arr[23]\n    let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety\
    \ = arr[26]\n    let hundred = arr[27]\n    let thousand = arr[28]\n    let million\
    \ = arr[29]\n    let billion = arr[30]\n    let trillion = arr[31]\n    let onehundred\
    \ = arr[32]\n    let onethousand = arr[33]\n    let onemillion = arr[34]\n   \
    \ let onebillion = arr[35]\n    let onetrillion = arr[36]\n    let onehundredandone\
    \ = arr[37]\n    let onethousandandone = arr[38]\n    let onemillionandone = arr[39]\n\
    \    let onebillionandone = arr[40]\n    let onetrillionandone = arr[41]\n   \
    \ let onehundredandoneandone = arr[42]\n    let onethousandandoneandone = arr[43]\n\
    \    let onemillionandoneandone = arr[44]\n    let onebillionandoneandone = arr[45]\n\
    \    let onetrillionandoneandone = arr[46]\n    let onehundredandoneandoneandone\
    \ = arr[47]\n    let onethousandandoneandoneandone = arr[48]\n    let onemillionandoneandoneandone\
    \ = arr[49]\n    let onebillionandoneandoneandone = arr[50]\n    let onetrillionandoneandoneandone\
    \ = arr[51]\n    let onehundred", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n\
    \    for num in arr {\n        if num < min {\n            min = num\n       \
    \ } else if num > max {\n            max = num\n        }\n    }\n    let one\
    \ = String(format: \"%@\", One)\n    let two = String(format: \"%@\", Two)\n \
    \   let three = String(format: \"%@\", Three)\n    let four = String(format: \"\
    %@\", Four)\n    let five = String(format: \"%@\", Five)\n    let six = String(format:\
    \ \"%@\", Six)\n    let seven = String(format: \"%@\", Seven)\n    let eight =\
    \ String(format: \"%@\", Eight)\n    let nine = String(format: \"%@\", Nine)\n\
    \    let ten = String(format: \"%@\", Ten)\n    let hundred = String(format: \"\
    %@\", Hundred)\n    let thousand = String(format: \"%@\", Thousand)\n    let million\
    \ = String(format: \"%@\", Million)\n    let billion = String(format: \"%@\",\
    \ Billion)\n    let trillion = String(format: \"%@\", Trillion)\n    let quadrillion\
    \ = String(format: \"%@\", Quadrillion)\n    let quintillion = String(format:\
    \ \"%@\", Quintillion)\n    let sextillion = String(format: \"%@\", Sextillion)\n\
    \    let septillion = String(format: \"%@\", Septillion)\n    let octillion =\
    \ String(format: \"%@\", Octillion)\n    let nonillion = String(format: \"%@\"\
    , Nonillion)\n    let decillion = String(format: \"%@\", Decillion)\n    let undecillion\
    \ = String(format: \"%@\", Undecillion)\n    let duodecillion = String(format:\
    \ \"%@\", Duodecillion)\n    let tredecillion = String(format: \"%@\", Tredecillion)\n\
    \    let quattuordecillion = String(format: \"%@\", Quattuordecillion)\n    let\
    \ quindecillion = String(format: \"%@\", Quindecillion)\n    let sexdecillion\
    \ = String(format: \"%@\", Sexdecillion)\n    let septendecillion = String(format:\
    \ \"%@\", Septendecillion)\n    let oc", "    var result = [String]()\n    for\
    \ number in arr {\n        if number >= 1 && number <= 9 {\n            result.append(numbers[number])\n\
    \        } else {\n            continue\n        }\n    }\n    for number in arr.reverse()\
    \ {\n        if number >= 1 && number <= 9 {\n            result.append(numbers[number])\n\
    \        } else {\n            continue\n        }\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    let ones = arr.filter{ $0 < 10\
    \ }\n    let tens = arr.filter{ $0 >= 10 && $0 < 20 }\n    let hundreds = arr.filter{\
    \ $0 >= 20 }\n    let thousands = arr.filter{ $0 >= 100 && $0 < 1000 }\n    let\
    \ millions = arr.filter{ $0 >= 1000 && $0 < 10000 }\n    let billions = arr.filter{\
    \ $0 >= 10000 && $0 < 100000 }\n    let trillions = arr.filter{ $0 >= 100000 &&\
    \ $0 < 1000000 }\n    let quadrillions = arr.filter{ $0 >= 1000000 && $0 < 10000000\
    \ }\n    let quintillions = arr.filter{ $0 >= 10000000 && $0 < 100000000 }\n \
    \   let sextillions = arr.filter{ $0 >= 100000000 && $0 < 1000000000 }\n    let\
    \ septillions = arr.filter{ $0 >= 1000000000 && $0 < 10000000000 }\n    let octillions\
    \ = arr.filter{ $0 >= 10000000000 && $0 < 100000000000 }\n    let nonillions =\
    \ arr.filter{ $0 >= 100000000000 && $0 < 1000000000000 }\n    let decillions =\
    \ arr.filter{ $0 >= 1000000000000 && $0 < 10000000000000 }\n    let undecillions\
    \ = arr.filter{ $0 >= 10000000000000 && $0 < 100000000000000 }\n    let duodecillions\
    \ = arr.filter{ $0 >= 100000000000000 && $0 < 1000000000000000 }\n    let tredecillions\
    \ = arr.filter{ $0 >= 1000000000000000 && $0 < 10000000000000000 }\n    let quattuordecillions\
    \ = arr.filter{ $0 >= 10000000000000000 && $0 < 100000000000000000 }\n    let\
    \ quindecillions = arr.filter{ $0 >= 100000000000000000 && $0 < 1000000000000000000\
    \ }\n    let sexdecillions = arr.filter{ $0 >= 1000000000000000000 && $0 < 10000000000000000000\
    \ }\n    let septendecillions = arr.filter{ $0 >= 10000000000000000000 && $0 <\
    \ 100000000000000000000 }\n    let octodecillions = arr.filter{ $0 >= 100000000000000000000\
    \ && $0 < 1000000000000000000000 }\n    let novemdecillions = arr.filter{ $0 >=\
    \ 1000000000000000000000 && $0 < 10000000000000000000000 }\n    let vigintillions\
    \ = arr.filter{ $0 >= 10000000000000000000000 && ", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = arr.min()!\n\
    \    let max = arr.max()!\n    if min == max {\n        return arr\n    }\n  \
    \  let one = String(format: \"%d\\tOne\", min)\n    let two = String(format: \"\
    %d\\tTwo\", min)\n    let three = String(format: \"%d\\tThree\", min)\n    let\
    \ four = String(format: \"%d\\tFour\", min)\n    let five = String(format: \"\
    %d\\tFive\", min)\n    let six = String(format: \"%d\\tSix\", min)\n    let seven\
    \ = String(format: \"%d\\tSeven\", min)\n    let eight = String(format: \"%d\\\
    tEight\", min)\n    let nine = String(format: \"%d\\tNine\", min)\n    let ten\
    \ = String(format: \"%d\\tTen\", min)\n    let eleven = String(format: \"%d\\\
    tEleven\", min)\n    let twelve = String(format: \"%d\\tTwelve\", min)\n    let\
    \ thirteen = String(format: \"%d\\tThirteen\", min)\n    let fourteen = String(format:\
    \ \"%d\\tFourteen\", min)\n    let fifteen = String(format: \"%d\\tFifteen\",\
    \ min)\n    let sixteen = String(format: \"%d\\tSixteen\", min)\n    let seventeen\
    \ = String(format: \"%d\\tSeventeen\", min)\n    let eighteen = String(format:\
    \ \"%d\\tEighteen\", min)\n    let nineteen = String(format: \"%d\\tNineteen\"\
    , min)\n    let twenty = String(format: \"%d\\tTwenty\", min)\n    let thirty\
    \ = String(format: \"%d\\tThirty\", min)\n    let forty = String(format: \"%d\\\
    tForty\", min)\n    let fifty = String(format: \"%d\\tFifty\", min)\n    let sixty\
    \ = String(format: \"%d\\tSixty\", min)\n    let seventy = String(format: \"%d\\\
    tSeventy\", min)\n    let eighty = String(format: \"%d\\tEighty\", min)\n    let\
    \ ninety = String(format: \"%d\\tNinety\", min)\n    let hundred = String(format:\
    \ \"%d\\tHundred\", min)\n    let thousand = String(format: \"%d\\tThousand\"\
    , min)\n    let million = String(format: \"%d\\tMillion\", min)\n    let billion\
    \ = String(format: \"%d\\tBillion\", min)\n", "    var result = [String]()\n \
    \   var last = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n    \
    \        continue\n        }\n        let digit = String(num)\n        result.append(digit)\n\
    \        last = num\n    }\n    for num in result {\n        let digit = String(num)\n\
    \        if digit == \"0\" {\n            continue\n        }\n        let index\
    \ = last.distance(from: last.successor())\n        let name = digits[index - 1]\n\
    \        result[result.index(num)] = name\n    }\n    return result", "    var\
    \ result = [String]()\n    for n in arr {\n        let digit = Int(n) % 10\n \
    \       if digit == 0 {\n            result.append(String(format: \"%d\\\"\",\
    \ n))\n        } else {\n            result.append(String(format: \"%d\\\"\",\
    \ digit - 1))\n        }\n    }\n    return result.reverse().map { String(format:\
    \ \"%d\\\"\", Int($0)) }", "    guard arr.count > 0 else {\n        return []\n\
    \    }\n    let reversed = arr.reverse()\n    var result = [String]()\n    for\
    \ number in reversed {\n        let index = Int(number) - 1\n        if index\
    \ < 0 || index > 9 {\n            continue\n        }\n        result.append(names[index])\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    var one = arr[0]\n    var two = arr[1]\n  \
    \  var three = arr[2]\n    var four = arr[3]\n    var five = arr[4]\n    var six\
    \ = arr[5]\n    var seven = arr[6]\n    var eight = arr[7]\n    var nine = arr[8]\n\
    \    var ten = arr[9]\n    var ten_one = arr[10 - 1]\n    var ten_two = arr[11\
    \ - 1]\n    var ten_three = arr[12 - 1]\n    var ten_four = arr[13 - 1]\n    var\
    \ ten_five = arr[14 - 1]\n    var ten_six = arr[15 - 1]\n    var ten_seven = arr[16\
    \ - 1]\n    var ten_eight = arr[17 - 1]\n    var ten_nine = arr[18 - 1]\n    var\
    \ eleven = arr[19 - 1]\n    var twelve = arr[20 - 1]\n    var thirteen = arr[21\
    \ - 1]\n    var fourteen = arr[22 - 1]\n    var fifteen = arr[23 - 1]\n    var\
    \ sixteen = arr[24 - 1]\n    var seventeen = arr[25 - 1]\n    var eighteen = arr[26\
    \ - 1]\n    var nineteen = arr[27 - 1]\n    var twenty = arr[28 - 1]\n    var\
    \ twenty_one = arr[29 - 1]\n    var twenty_two = arr[30 - 1]\n    var twenty_three\
    \ = arr[31 - 1]\n    var twenty_four = arr[32 - 1]\n    var twenty_five = arr[33\
    \ - 1]\n    var twenty_six = arr[34 - 1]\n    var twenty_seven = arr[35 - 1]\n\
    \    var twenty_eight = arr[36 - 1]\n    var twenty_nine = arr[37 - 1]\n    var\
    \ thirty = arr[40 - 1]\n    var thirty_one = arr[41 - 1]\n    var thirty_two =\
    \ arr[42 - 1]\n    var thirty_three = arr[43 - 1]\n    var thirty_four = arr[44\
    \ - 1]\n    var thirty_five = arr[45 - 1]\n    var thirty_six = arr[46 - 1]\n\
    \    var thirty_seven = arr[47 - 1]\n    var thirty_eight = arr[48 - 1]\n    var\
    \ thirty_nine = arr[49 - 1]\n    var forty = arr[50] - 1\n    var forty_one =\
    \ arr[51] - 1\n    var forty_two = arr[52] + 1\n    var forty_three = arr[53]\
    \ + 1\n    var forty_four = arr[54] + 1\n    var forty_five = arr[55] + 1\n  \
    \  var forty_six = arr[", "    guard arr.count > 0 else {\n        return []\n\
    \    }\n\n    var result = [String]()\n    var reversed = [Int]()\n    var one\
    \ = Int(One)\n    var two = Int(Two)\n    var three = Int(Three)\n    var four\
    \ = Int(Four)\n    var five = Int(Five)\n    var six = Int(Six)\n    var seven\
    \ = Int(Seven)\n    var eight = Int(Eight)\n    var nine = Int(Nine)\n\n    for\
    \ i in arr {\n        reversed.append(i)\n    }\n\n    for i in reversed[0..<reversed.count]\
    \ {\n        if i < one {\n            result.append(String(One))\n        } else\
    \ if i < two {\n            result.append(String(Two))\n        } else if i <\
    \ three {\n            result.append(String(Three))\n        } else if i < four\
    \ {\n            result.append(String(Four))\n        } else if i < five {\n \
    \           result.append(String(Five))\n        } else if i < six {\n       \
    \     result.append(String(Six))\n        } else if i < seven {\n            result.append(String(Seven))\n\
    \        } else if i < eight {\n            result.append(String(Eight))\n   \
    \     } else if i < nine {\n            result.append(String(Nine))\n        }\
    \ else {\n            result.append(String(Zero))\n        }\n    }\n\n    return\
    \ result", "    var result = [String]()\n    \n    if arr.isEmpty {\n        return\
    \ result\n    }\n    \n    if arr.count < 10 {\n        return result\n    }\n\
    \    \n    let min = 1\n    let max = 9\n    \n    for i in arr {\n        if\
    \ min > i {\n            min = i\n        }\n        \n        if max < i {\n\
    \            max = i\n        }\n    }\n    \n    let minStr = String(min)\n \
    \   let maxStr = String(max)\n    \n    for i in arr {\n        let str = String(i)\n\
    \        \n        if str == minStr {\n            result.append(One)\n      \
    \  }\n        \n        if str == maxStr {\n            result.append(Nine)\n\
    \        }\n        \n        if str == String(min) + String(max) {\n        \
    \    result.append(Two)\n        }\n        \n        if str == String(min) -\
    \ String(max) {\n            result.append(Three)\n        }\n        \n     \
    \   if str == String(min) * String(max) {\n            result.append(Four)\n \
    \       }\n        \n        if str == String(min) / String(max) {\n         \
    \   result.append(Five)\n        }\n        \n        if str == String(min) %\
    \ String(max) {\n            result.append(Six)\n        }\n        \n       \
    \ if str == String(min) + String(max) + String(min) + String(max) {\n        \
    \    result.append(Seven)\n        }\n        \n        if str == String(min)\
    \ + String(max) + String(min) - String(max) {\n            result.append(Eight)\n\
    \        }\n    }\n    \n    return result", "    var result = [String]()\n  \
    \  for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        let index = number - 10\n        let name = ones[index] +\
    \ twos[index] + threes[index] + fours[index] + fives[index] + sixes[index] + sevens[index]\
    \ + eights[index] + nines[index]\n        result.append(name)\n    }\n    return\
    \ result", "    var result = [String]()\n    for number in arr {\n        if number\
    \ >= 1 && number <= 9 {\n            let name = ones[number-1]\n            result.append(name)\n\
    \        } else {\n            result.append(String(number))\n        }\n    }\n\
    \    return result.reversed()", "    guard arr.count > 0 else { return [] }\n\
    \    let min = arr[0]\n    let max = arr[0]\n    for i in 1..<arr.count {\n  \
    \      if arr[i] < min { min = arr[i] }\n        if arr[i] > max { max = arr[i]\
    \ }\n    }\n    let arr2 = arr.map { $0 }\n    let arr3 = arr2.reverse()\n   \
    \ let arr4 = arr3.map { $0.description }\n    return arr4", "    var result =\
    \ [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let one\
    \ = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n\
    \    let five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let\
    \ eight = arr[7]\n    let nine = arr[8]\n    let ten = arr[9]\n    let eleven\
    \ = arr[10]\n    let twelve = arr[11]\n    let thirteen = arr[12]\n    let fourteen\
    \ = arr[13]\n    let fifteen = arr[14]\n    let sixteen = arr[15]\n    let seventeen\
    \ = arr[16]\n    let eighteen = arr[17]\n    let nineteen = arr[18]\n    let twenty\
    \ = arr[19]\n    let thirty = arr[20]\n    let forty = arr[21]\n    let fifty\
    \ = arr[22]\n    let sixty = arr[23]\n    let seventy = arr[24]\n    let eighty\
    \ = arr[25]\n    let ninety = arr[26]\n    let hundred = arr[27]\n    let thousand\
    \ = arr[28]\n    let million = arr[29]\n    let billion = arr[30]\n    let trillion\
    \ = arr[31]\n    let quadrillion = arr[32]\n    let quintillion = arr[33]\n  \
    \  let sextillion = arr[34]\n    let septillion = arr[35]\n    let octillion =\
    \ arr[36]\n    let nonillion = arr[37]\n    let decillion = arr[38]\n    let undecillion\
    \ = arr[39]\n    let duodecillion = arr[40]\n    let tredecillion = arr[41]\n\
    \    let quattuordecillion = arr[42]\n    let quindecillion = arr[43]\n    let\
    \ sexdecillion = arr[44]\n    let septendecillion = arr[45]\n    let octodecillion\
    \ = arr[46]\n    let novemdecillion = arr[47]\n    let vigintillion = arr[48]\n\
    \    let unvigintillion = arr[49]\n    let duovigintillion = arr[50]\n    let\
    \ trevigintillion = arr[51]\n    let quattuorvigintillion = arr[52]\n    let quinvigintillion\
    \ = arr[53]\n    let sexvigintillion = arr[54]\n    let septenvigintillion = arr[55]\n\
    \    let octovigin", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n    let\
    \ three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let six =\
    \ arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine = arr[8]\n\
    \    let ten = arr[9]\n    let hundred = arr[10]\n    let thousand = arr[11]\n\
    \    let ten_thousand = arr[12]\n    let hundred_thousand = arr[13]\n    let thousand_thousand\
    \ = arr[14]\n    let million = arr[15]\n    let billion = arr[16]\n    let trillion\
    \ = arr[17]\n    let quadrillion = arr[18]\n    let quintillion = arr[19]\n  \
    \  let sextillion = arr[20]\n    let septillion = arr[21]\n    let octillion =\
    \ arr[22]\n    let nonillion = arr[23]\n    let decillion = arr[24]\n    let undecillion\
    \ = arr[25]\n    let duodecillion = arr[26]\n    let tredecillion = arr[27]\n\
    \    let quattuordecillion = arr[28]\n    let quindecillion = arr[29]\n    let\
    \ sexdecillion = arr[30]\n    let septendecillion = arr[31]\n    let octodecillion\
    \ = arr[32]\n    let novemdecillion = arr[33]\n    let vigintillion = arr[34]\n\
    \    let centillion = arr[35]\n    let uncentillion = arr[36]\n    let duocentillion\
    \ = arr[37]\n    let trecentillion = arr[38]\n    let quattuorcentillion = arr[39]\n\
    \    let quincentillion = arr[40]\n    let sexcentillion = arr[41]\n    let septencentillion\
    \ = arr[42]\n    let octocentillion = arr[43]\n    let novemcentillion = arr[44]\n\
    \    let vintillion = arr[45]\n    let unvintillion = arr[46]\n    let duodecillion\
    \ = arr[47]\n    let tredecillion = arr[48]\n    let quattuordecillion = arr[49]\n\
    \    let quindecillion = arr[50]\n    let sexdecillion = arr[51]\n    let septendecillion\
    \ = arr[52]\n    let octodecillion = arr[53]\n    let novemdec", "    var result\
    \ = [String]()\n    var reversed = [Int]()\n    for number in arr {\n        if\
    \ number < 1 || number > 9 {\n            continue\n        }\n        reversed.append(number)\n\
    \    }\n    reversed.reverse()\n    for number in reversed {\n        let index\
    \ = Int(number) - 1\n        if index < 0 {\n            continue\n        }\n\
    \        result.append(String(index))\n    }\n    return result", "    guard arr.count\
    \ > 0 else {\n        return []\n    }\n    var result = [String]()\n    var i\
    \ = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        result.append(String(num))\n    }\n    for num in arr.reverse()\
    \ {\n        if num < 1 || num > 9 {\n            continue\n        }\n      \
    \  result.append(String(num))\n    }\n    for num in arr {\n        if num < 1\
    \ || num > 9 {\n            continue\n        }\n        result.append(String(num))\n\
    \    }\n    return result", "    var result = [String]()\n    for n in arr {\n\
    \        let digit = String(format: \"%2d\", n)\n        if digit == \"1\" {\n\
    \            result.append(\"One\")\n        } else if digit == \"2\" {\n    \
    \        result.append(\"Two\")\n        } else if digit == \"3\" {\n        \
    \    result.append(\"Three\")\n        } else if digit == \"4\" {\n          \
    \  result.append(\"Four\")\n        } else if digit == \"5\" {\n            result.append(\"\
    Five\")\n        } else if digit == \"6\" {\n            result.append(\"Six\"\
    )\n        } else if digit == \"7\" {\n            result.append(\"Seven\")\n\
    \        } else if digit == \"8\" {\n            result.append(\"Eight\")\n  \
    \      } else if digit == \"9\" {\n            result.append(\"Nine\")\n     \
    \   } else {\n            result.append(digit)\n        }\n    }\n    return result.reversed()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = 1\n    let max = 9\n    var i = 0\n    while i < arr.count {\n\
    \        if arr[i] < min || arr[i] > max {\n            i += 1\n            continue\n\
    \        }\n        let digit = arr[i] - min\n        let name = digitToName(digit)\n\
    \        result.append(name)\n        i += 1\n    }\n    return result.reverse()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[0]\n    for number in arr {\n       \
    \ if number > max {\n            max = number\n        }\n        if number <\
    \ min {\n            min = number\n        }\n    }\n    let range = (max - min)\
    \ + 1\n    var reversed = [Int]()\n    for number in arr {\n        reversed.append(number\
    \ - min)\n    }\n    for number in reversed {\n        let index = reversed.index(of:\
    \ number)\n        result.append(String(format: \"%@\", names[index]))\n    }\n\
    \    return result", "    var result = [String]()\n    for number in arr {\n \
    \       if number >= 1 && number <= 9 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 10 && number\
    \ <= 99 {\n            result.append(String(number))\n        }\n    }\n    for\
    \ number in arr {\n        if number >= 100 && number <= 999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 1000 && number\
    \ <= 9999 {\n            result.append(String(number))\n        }\n    }\n   \
    \ for number in arr {\n        if number >= 10000 && number <= 99999 {\n     \
    \       result.append(String(number))\n        }\n    }\n    for number in arr\
    \ {\n        if number >= 100000 && number <= 999999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 1000000 && number\
    \ <= 9999999 {\n            result.append(String(number))\n        }\n    }\n\
    \    for number in arr {\n        if number >= 10000000 && number <= 99999999\
    \ {\n            result.append(String(number))\n        }\n    }\n    for number\
    \ in arr {\n        if number >= 100000000 && number <= 999999999 {\n        \
    \    result.append(String(number))\n        }\n    }\n    for number in arr {\n\
    \        if number >= 1000000000 && number <= 99999999999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 10000000000 &&\
    \ number <= 999999999999 {\n            result.append(String(number))\n      \
    \  }\n    }\n    for number in arr {\n        if number >= 100000000000 && number\
    \ <= 999999999999999 {\n            result.append(String(number))\n        }\n\
    \    }\n    for number in arr {\n        if number >= 1000000000000 && number\
    \ <= 999999999999999999 {\n            result.append(String(number))\n       \
    \ }\n    }\n    for number in arr {\n        if number >= 100000000000000 && number\
    \ <= 999999999999999999999 {\n            result.append(String(number))\n    \
    \    }\n    }\n    for number in arr {\n        if number >= 1000000000000000\
    \ && number <= 999999999999999999999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 10000000000000000\
    \ && number <= 999999999999999999999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 100000000000000000\
    \ && number <= 999999999999999999999 {\n            result.append(String(number))\n\
    \        }\n    }\n    for number in arr {\n        if number >= 1000000000000000000\
    \ && number <= 999999999999999999999 {\n            result.append(String(number))",
  "    var result = [String]()\n    for number in arr {\n        if number < 1 ||\
    \ number > 9 {\n            continue\n        }\n        let digit = String(number)\n\
    \        let index = Int(digit)\n        if index == 0 {\n            result.append(\"\
    One\")\n        } else if index == 1 {\n            result.append(\"Two\")\n \
    \       } else if index == 2 {\n            result.append(\"Three\")\n       \
    \ } else if index == 3 {\n            result.append(\"Four\")\n        } else\
    \ if index == 4 {\n            result.append(\"Five\")\n        } else if index\
    \ == 5 {\n            result.append(\"Six\")\n        } else if index == 6 {\n\
    \            result.append(\"Seven\")\n        } else if index == 7 {\n      \
    \      result.append(\"Eight\")\n        } else if index == 8 {\n            result.append(\"\
    Nine\")\n        } else {\n            result.append(digit)\n        }\n    }\n\
    \    return result.reverse()", "    guard arr.count > 0 else { return [] }\n \
    \   let min = arr[0]\n    let max = arr[0]\n    for i in 1..<arr.count {\n   \
    \     if arr[i] < min {\n            min = arr[i]\n        }\n        if arr[i]\
    \ > max {\n            max = arr[i]\n        }\n    }\n    var result = [String]()\n\
    \    for i in min..<max {\n        let index = Int(i) - 1\n        result.append(names[index])\n\
    \    }\n    return result.reversed()", "    var result: [String] = []\n    for\
    \ number in arr {\n        if number >= 1 && number <= 9 {\n            let name\
    \ = String(number)\n            result.append(name)\n        }\n    }\n    for\
    \ number in arr {\n        if number >= 10 && number <= 99 {\n            let\
    \ name = String(number)\n            result.append(name)\n        }\n    }\n \
    \   for number in arr {\n        if number >= 100 && number <= 999 {\n       \
    \     let name = String(number)\n            result.append(name)\n        }\n\
    \    }\n    for number in arr {\n        if number >= 1000 && number <= 9999 {\n\
    \            let name = String(number)\n            result.append(name)\n    \
    \    }\n    }\n    for number in arr {\n        if number >= 10000 && number <=\
    \ 99999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 100000 && number\
    \ <= 999999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 1000000 && number\
    \ <= 9999999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 10000000 && number\
    \ <= 99999999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 100000000 &&\
    \ number <= 999999999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 1000000000 &&\
    \ number <= 99999999999 {\n            let name = String(number)\n           \
    \ result.append(name)\n        }\n    }\n    for number in arr {\n        if number\
    \ >= 10000000000 && number <= 999999999999 {\n            let name = String(number)\n\
    \            result.append(name)\n        }\n    }\n    for number in arr {\n\
    \        if number >= 100000000000 && number <= 999999999999999 {\n          \
    \  let name = String(number)\n            result.append(name)\n        }\n   \
    \ }\n    for number in arr {\n        if number >= 1000000000000 && number <=\
    \ 999999999999999999 {\n            let name = String(number)\n            result.append(name)\n\
    \        }\n    }\n    for number in arr {\n        if number >= 100000000000000\
    \ && number <= 999999999999999999999 {\n            let name = String(number)\n\
    \            result.append(name)\n        }\n    }\n    for number in arr {\n\
    \        if number >= 1000000000000000 && number <= 999999999999999999999 {\n\
    \            let name = String(number)\n            result.append(name)\n    \
    \    }\n    }\n    for number in arr {\n        if number >= 10000000000000000\
    \ && number <= 999999999999999999999 {\n            let name = String(number)\n\
    \            result.append(name)\n        }\n    }\n    for number in arr {\n\
    \        if number >= ", "    guard arr.count > 0 else { return [] }\n    var\
    \ result = [String]()\n    let one = \"One\"\n    let two = \"Two\"\n    let three\
    \ = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n    let six =\
    \ \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n    let nine\
    \ = \"Nine\"\n    let ten = \"Ten\"\n    let hundred = \"Hundred\"\n    let thousand\
    \ = \"Thousand\"\n    let million = \"Million\"\n    let billion = \"Billion\"\
    \n    let trillion = \"Trillion\"\n    let quadrillion = \"Quadrillion\"\n   \
    \ let quintillion = \"Quintillion\"\n    let sextillion = \"Sextillion\"\n   \
    \ let septillion = \"Septillion\"\n    let octillion = \"Octillion\"\n    let\
    \ nonillion = \"Nonillion\"\n    let decillion = \"Decillion\"\n    let undecillion\
    \ = \"Undecillion\"\n    let duodecillion = \"Duodecillion\"\n    let tredecillion\
    \ = \"Tredecillion\"\n    let quattuordecillion = \"Quattuordecillion\"\n    let\
    \ quindecillion = \"Quindecillion\"\n    let sexdecillion = \"Sexdecillion\"\n\
    \    let septendecillion = \"Septendecillion\"\n    let octodecillion = \"Octodecillion\"\
    \n    let novemdecillion = \"Novemdecillion\"\n    let vigintillion = \"Vigintillion\"\
    \n    let unvigintillion = \"Unvigintillion\"\n    let duovigintillion = \"Duovigintillion\"\
    \n    let trevigintillion = \"Trevigintillion\"\n    let quattuorvigintillion\
    \ = \"Quattuorvigintillion\"\n    let quinvigintillion = \"Quinvigintillion\"\n\
    \    let sexvigintillion = \"Sexvigintillion\"\n    let septenvigintillion = \"\
    Septenvigintillion\"\n    let octovigintillion = \"Octovigintillion\"\n    let\
    \ novemvigintillion = \"Novemvigintil", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = 1\n    let max = 9\n    var i\
    \ = 0\n    while i < arr.count {\n        let num = arr[i]\n        if num < min\
    \ || num > max {\n            i += 1\n            continue\n        }\n      \
    \  let digit = String(num)\n        let name = digits[digit]\n        result.append(name)\n\
    \        i += 1\n    }\n    return result.reverse()", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = min(arr)\n\
    \    let max = max(arr)\n    let range = max - min + 1\n    let digits = Int(pow(10.0,\
    \ Double(range)))\n    let digitNames = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    for i in arr {\n   \
    \     let index = i - min\n        let digit = Int(pow(10.0, Double(index)))\n\
    \        let name = digitNames[digit]\n        result.append(name)\n    }\n  \
    \  return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n\
    \    for n in arr {\n        if n > max {\n            max = n\n        }\n  \
    \      if n < min {\n            min = n\n        }\n    }\n    for n in arr {\n\
    \        if n > max {\n            max = n\n        }\n        if n < min {\n\
    \            min = n\n        }\n    }\n    let one = String(format: \"%0*d\"\
    , 0, min)\n    let two = String(format: \"%0*d\", 0, max)\n    var reversed =\
    \ [Int]()\n    for n in arr {\n        reversed.append(n)\n    }\n    reversed.reverse()\n\
    \    for n in reversed {\n        let index = reversed.index(of: n)\n        if\
    \ index != nil {\n            let name = one[index!]\n            result.append(name)\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = \"One\"\n    let two = \"Two\"\
    \n    let three = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n\
    \    let six = \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n\
    \    let nine = \"Nine\"\n    let ten = \"Ten\"\n    let hundred = \"Hundred\"\
    \n    let thousand = \"Thousand\"\n    let million = \"Million\"\n    let billion\
    \ = \"Billion\"\n    let trillion = \"Trillion\"\n    let quadrillion = \"Quadrillion\"\
    \n    let quintillion = \"Quintillion\"\n    let sextillion = \"Sextillion\"\n\
    \    let septillion = \"Septillion\"\n    let octillion = \"Octillion\"\n    let\
    \ nonillion = \"Nonillion\"\n    let decillion = \"Decillion\"\n    let undecillion\
    \ = \"Undecillion\"\n    let duodecillion = \"Duodecillion\"\n    let tredecillion\
    \ = \"Tredecillion\"\n    let quattuordecillion = \"Quattuordecillion\"\n    let\
    \ quindecillion = \"Quindecillion\"\n    let sexdecillion = \"Sexdecillion\"\n\
    \    let septendecillion = \"Septendecillion\"\n    let octodecillion = \"Octodecillion\"\
    \n    let novemdecillion = \"Novemdecillion\"\n    let vigintillion = \"Vigintillion\"\
    \n    let unvigintillion = \"Unvigintillion\"\n    let duovigintillion = \"Duovigintillion\"\
    \n    let trevigintillion = \"Trevigintillion\"\n    let quattuorvigintillion\
    \ = \"Quattuorvigintillion\"\n    let quinvigintillion = \"Quinvigintillion\"\n\
    \    let sexvigintillion = \"Sexvigintillion\"\n    let septenvigintillion = \"\
    Septenvigintillion\"\n    let octovigintillion = \"Octovigintillion\"\n    let\
    \ novemvigintillion = \"Novemvigintilli", "    var result = [String]()\n    if\
    \ arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n    let max\
    \ = arr[arr.count - 1]\n    var reversed = reverseArray(arr)\n    reversed = reverseArray(reversed)\n\
    \    for number in reversed {\n        let index = Int(number) - 1\n        if\
    \ index >= min && index <= max {\n            result.append(names[index])\n  \
    \      }\n    }\n    return result", "    var result = [String]()\n    var i =\
    \ 0\n    for num in arr {\n        if num > 0 && num < 10 {\n            result.append(name[num])\n\
    \        } else {\n            result.append(\"\")\n        }\n    }\n    for\
    \ num in arr {\n        if num > 0 && num < 10 {\n            result[i] = name[num]\n\
    \            i += 1\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n  \
    \  let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five\
    \ = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n\
    \    let nine = arr[8]\n    let ten = arr[0]\n    let eleven = arr[1]\n    let\
    \ twelve = arr[2]\n    let thirteen = arr[3]\n    let fourteen = arr[4]\n    let\
    \ fifteen = arr[5]\n    let sixteen = arr[6]\n    let seventeen = arr[7]\n   \
    \ let eighteen = arr[8]\n    let nineteen = arr[9]\n    let hundred = arr[0]\n\
    \    let thousand = arr[1]\n    let million = arr[2]\n    let billion = arr[3]\n\
    \    let trillion = arr[4]\n    let quadrillion = arr[5]\n    let quintillion\
    \ = arr[6]\n    let sextillion = arr[7]\n    let septillion = arr[8]\n    let\
    \ octillion = arr[9]\n    let nonillion = arr[0]\n    let decillion = arr[1]\n\
    \    let undecillion = arr[2]\n    let duodecillion = arr[3]\n    let tredecillion\
    \ = arr[4]\n    let quattuordecillion = arr[5]\n    let quindecillion = arr[6]\n\
    \    let sexdecillion = arr[7]\n    let septendecillion = arr[8]\n    let octodecillion\
    \ = arr[9]\n    let novemdecillion = arr[0]\n    let vigintillion = arr[1]\n \
    \   let centillion = arr[2]\n    let nonillion = arr[3]\n    let decillion = arr[4]\n\
    \    let undecillion = arr[5]\n    let duodecillion = arr[6]\n    let tredecillion\
    \ = arr[7]\n    let quattuordecillion = arr[8]\n    let quindecillion = arr[9]\n\
    \    let sexdecillion = arr[0]\n    let septendecillion = arr[1]\n    let octodecillion\
    \ = arr[2]\n    let novemdecillion = arr[3]\n    let vigintillion = arr[4]\n \
    \   let centillion = arr[5]\n    let nonillion = arr[6]\n    let decillion = arr[7]\n\
    \    let undecillion = arr[8]\n    let duodecillion = arr[9]\n    let tredecillion\
    \ = arr[0]\n    let quattuordecillion = arr[1]\n    let quindecilli", "    guard\
    \ arr.count > 0 else {\n        return []\n    }\n    \n    var result: [String]\
    \ = []\n    var lastDigit: Int = 0\n    \n    for digit in arr {\n        if digit\
    \ > 9 {\n            lastDigit = digit\n        } else {\n            result.append(String(lastDigit))\n\
    \            result.append(String(digit))\n            lastDigit = 0\n       \
    \ }\n    }\n    \n    if lastDigit > 0 {\n        result.append(String(lastDigit))\n\
    \    }\n    \n    return result.reversed()", "    var result = [String]()\n  \
    \  var i = 0\n    while i < arr.count {\n        let number = arr[i]\n       \
    \ if number >= 1 && number <= 9 {\n            result.append(String(number))\n\
    \        }\n        i += 1\n    }\n    if result.isEmpty {\n        return result\n\
    \    }\n    var reversed = result.reverse()\n    var i = 0\n    while i < reversed.count\
    \ {\n        let number = reversed[i]\n        if number >= 1 && number <= 9 {\n\
    \            reversed[i] = \"\\(number)\"\n        }\n        i += 1\n    }\n\
    \    return reversed", "    var result = [String]()\n    for number in arr {\n\
    \        if number > 9 {\n            number = number - 10\n        }\n      \
    \  if number < 1 {\n            number = 10 + number\n        }\n        result.append(name[number])\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    var i\
    \ = 0\n    for number in arr {\n        if number > 9 {\n            number =\
    \ number - 10\n        }\n        result.append(digits[number])\n    }\n    for\
    \ number in arr {\n        if number > 9 {\n            number = number - 10\n\
    \        }\n        result.append(digits[number])\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ resultReversed = [String]()\n    var resultReversedDigit = [String]()\n    var\
    \ resultDigit = [String]()\n    var resultDigitReversed = [String]()\n    var\
    \ resultDigitReversedDigit = [String]()\n    var resultDigitReversedDigitReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversed = [String]()\n\
    \    var resultDigitReversedDigitReversedReversedReversed = [String]()\n    var\
    \ resultDigitReversedDigitReversedReversedReversedReversed = [String]()\n    var\
    \ resultDigitReversedDigitReversedReversedReversedReversedReversed = [String]()\n\
    \    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = [String]()\n    var resultDigitReversedDigitReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed",
  "    var result: [String] = []\n    for number in arr {\n        if number < 1 ||\
    \ number > 9 {\n            continue\n        }\n        let digit = String(number)\n\
    \        let index = Int(digit)\n        result.append(names[index])\n    }\n\
    \    return result.reverse()", "    var result = [String]()\n    for number in\
    \ arr {\n        if number > 9 {\n            continue\n        }\n        let\
    \ name = ones[number]\n        if let index = result.index(of: name) {\n     \
    \       result[index] = name\n        } else {\n            result.append(name)\n\
    \        }\n    }\n    result.reverse()\n    for number in arr {\n        if number\
    \ > 9 {\n            continue\n        }\n        let name = ones[number]\n  \
    \      if let index = result.index(of: name) {\n            result[index] = name\n\
    \        } else {\n            result.append(name)\n        }\n    }\n    return\
    \ result", "    var result = [String]()\n    var index = 0\n    while index <\
    \ arr.count {\n        let value = arr[index]\n        if value < 1 || value >\
    \ 9 {\n            index = index + 1\n            continue\n        }\n      \
    \  let digit = String(value - 1)\n        let name = ones[digit]\n        result.append(name)\n\
    \        index = index + 1\n    }\n    return result.reverse()", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    var i\
    \ = 0\n    while i < arr.count {\n        let value = arr[i]\n        if value\
    \ < 1 || value > 9 {\n            i += 1\n            continue\n        }\n  \
    \      let index = value - 10\n        result.append(names[index])\n        i\
    \ += 1\n    }\n    return result.reversed()", "    var result = [String]()\n \
    \   if arr.isEmpty {\n        return result\n    }\n    if arr.count < 10 {\n\
    \        return result\n    }\n    let min = arr[0]\n    let max = arr[arr.count\
    \ - 1]\n    if min < 1 || max > 9 {\n        return result\n    }\n    let reversed\
    \ = arr.reverse()\n    for n in reversed {\n        let index = n % 10\n     \
    \   let name = String(index)\n        result.append(name)\n    }\n    return result",
  "    var result = [String]()\n    var index = 0\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result[index] = String(format: \"%@\", digits[Int(n)])\n\
    \            index += 1\n        }\n    }\n    if index == 0 {\n        return\
    \ arr\n    }\n    for n in arr {\n        if n > 0 && n < 10 {\n            result[index]\
    \ = String(format: \"%@\", digits[Int(n)])\n            index += 1\n        }\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    var index\
    \ = 0\n    for number in arr {\n        if number > 9 {\n            number =\
    \ number - 10\n        }\n        result[index] = String(number)\n        index++\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    if arr.count < 2 {\n        return result\n\
    \    }\n    let lower = 1\n    let upper = 9\n    var reversed = [Int]()\n   \
    \ for n in arr {\n        if n < lower || n > upper {\n            continue\n\
    \        }\n        reversed.append(n)\n    }\n    for i in reversed[0..<reversed.count]\
    \ {\n        let index = reversed.index(of: i)\n        let name = String(format:\
    \ \"%@\", arr[index])\n        result.append(name)\n    }\n    return result",
  "    var result: [String] = []\n    for number in arr {\n        let digit = number\
    \ % 10\n        let name = digitToName(digit)\n        result.append(name)\n \
    \       number /= 10\n    }\n    return result.reverse()", "    guard arr.count\
    \ > 0 else {\n        return []\n    }\n    var result = [String]()\n    var last\
    \ = 0\n    for n in arr {\n        if n < 10 {\n            result.append(String(last))\n\
    \            last = n\n        } else {\n            let index = last + 9 - n\n\
    \            result.append(String(index))\n            last = index\n        }\n\
    \    }\n    result.append(String(last))\n    return result.reverse()", "    var\
    \ result = [String]()\n    var index = 0\n    while index < arr.count {\n    \
    \    let value = arr[index]\n        if value < 1 || value > 9 {\n           \
    \ index = index + 1\n            continue\n        }\n        let digit = value\
    \ - 10\n        let name = digitToName(digit)\n        result.append(name)\n \
    \       index = index + 1\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n  \
    \  let max = arr[0]\n    for value in arr {\n        if value < min {\n      \
    \      min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    var reversed = [Int]()\n    for i in min..<max {\n    \
    \    reversed.append(i)\n    }\n    reversed.reverse()\n    for value in reversed\
    \ {\n        let index = Int(value) - 1\n        let name = ones[Int(value)]\n\
    \        result.append(name)\n    }\n    return result", "    var result = [String]()\n\
    \    for number in arr {\n        let digit = number % 10\n        let name =\
    \ digitToName(digit)\n        if name != nil {\n            result.append(name!)\n\
    \        }\n    }\n    if result.isEmpty {\n        return result\n    }\n   \
    \ let reversed = result.reverse()\n    for number in reversed {\n        let digit\
    \ = number % 10\n        let name = digitToName(digit)\n        if name != nil\
    \ {\n            result.append(name!)\n        }\n    }\n    return result", " \
    \   var result = [String]()\n    var i = 0\n    for n in arr {\n        if n <\
    \ 1 || n > 9 {\n            continue\n        }\n        result.append(String(format:\
    \ \"%@\", getName(n)))\n    }\n    for n in arr {\n        if n < 1 || n > 9 {\n\
    \            continue\n        }\n        result.append(String(format: \"%@\"\
    , getName(n)))\n    }\n    return result", "    var result = [String]()\n    for\
    \ number in arr {\n        let digit = String(number)\n        if digit == \"\
    1\" {\n            result.append(contentsOf: ones)\n        } else if digit ==\
    \ \"2\" {\n            result.append(contentsOf: twos)\n        } else if digit\
    \ == \"3\" {\n            result.append(contentsOf: threes)\n        } else if\
    \ digit == \"4\" {\n            result.append(contentsOf: fours)\n        } else\
    \ if digit == \"5\" {\n            result.append(contentsOf: fives)\n        }\
    \ else if digit == \"6\" {\n            result.append(contentsOf: sixes)\n   \
    \     } else if digit == \"7\" {\n            result.append(contentsOf: sevens)\n\
    \        } else if digit == \"8\" {\n            result.append(contentsOf: eights)\n\
    \        } else if digit == \"9\" {\n            result.append(contentsOf: nines)\n\
    \        } else {\n            continue\n        }\n    }\n    result.reverse()\n\
    \    for number in result {\n        let digit = String(number)\n        if digit\
    \ == \"1\" {\n            result.removeFirst()\n        } else if digit == \"\
    2\" {\n            result.removeFirst()\n        } else if digit == \"3\" {\n\
    \            result.removeFirst()\n        } else if digit == \"4\" {\n      \
    \      result.removeFirst()\n        } else if digit == \"5\" {\n            result.removeFirst()\n\
    \        } else if digit == \"6\" {\n            result.removeFirst()\n      \
    \  } else if digit == \"7\" {\n            result.removeFirst()\n        } else\
    \ if digit == \"8\" {\n            result.removeFirst()\n        } else if digit\
    \ == \"9\" {\n            result.removeFirst()\n        }\n    }\n    return result",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let maxLength = arr.maxElement()\n    let minLength = arr.minElement()\n\
    \    let maxDigit = maxLength % 10\n    let minDigit = minLength % 10\n    let\
    \ maxDigitName = String(maxDigit + 1)\n    let minDigitName = String(minDigit\
    \ + 1)\n    var reversedArray = arr.reverse()\n    for i in reversedArray {\n\
    \        let digit = i % 10\n        let digitName = String(digit)\n        let\
    \ digitNameReversed = digitName.reversed()\n        let digitNameReversedName\
    \ = digitNameReversed.prefix(1) + digitNameReversed\n        let digitNameReversedNameString\
    \ = digitNameReversedName.reversed()\n        let digitNameReversedNameStringReversed\
    \ = digitNameReversedNameString.reversed()\n        let digitNameReversedNameStringReversedName\
    \ = digitNameReversedNameStringReversed.prefix(1) + digitNameReversedNameStringReversed\n\
    \        let digitNameReversedNameStringReversedNameString = digitNameReversedNameStringReversedName.reversed()\n\
    \        let digitNameReversedNameStringReversedNameStringReversed = digitNameReversedNameStringReversedNameStringReversed.prefix(1)\
    \ + digitNameReversedNameStringReversedNameStringReversed\n        let digitNameReversedNameStringReversedNameStringReversedName\
    \ = digitNameReversedNameStringReversedNameStringReversedName.reversed()\n   \
    \     let digitNameReversedNameStringReversedNameStringReversedNameStringReversed\
    \ = digitNameReversedNameStringReversedNameStringReversedNameStringReversed.prefix(1)\
    \ + digitNameReversedNameStringReversedNameStringReversedNameStringReversed\n\
    \        let digitNameReversedNameStringReversedNameStringReversedNameStringReversedName\
    \ = digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversed.prefix(1)\
    \ + digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversedName\n\
    \        let digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversedName\
    \ = digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversedName.reversed()\n\
    \        let digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversed\
    \ = digitNameReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversedNameStringReversed.prefix(1)\
    \ + digitNameReversedNameStringReversedNameStringReversedNameString", "    var\
    \ result = [String]()\n    var reversed = [Int]()\n    for n in arr {\n      \
    \  reversed.append(n)\n    }\n    reversed.reverse()\n    for n in reversed {\n\
    \        let index = Int(n) - 1\n        if index >= 0 && index < 10 {\n     \
    \       result.append(names[index])\n        }\n    }\n    return result", " \
    \   guard arr.count > 0 else {\n        return []\n    }\n    \n    var result\
    \ = [String]()\n    \n    for n in arr {\n        switch n {\n        case 1:\n\
    \            result.append(contentsOf: ones)\n        case 2:\n            result.append(contentsOf:\
    \ twos)\n        case 3:\n            result.append(contentsOf: threes)\n    \
    \    case 4:\n            result.append(contentsOf: fours)\n        case 5:\n\
    \            result.append(contentsOf: fives)\n        case 6:\n            result.append(contentsOf:\
    \ sixes)\n        case 7:\n            result.append(contentsOf: sevens)\n   \
    \     case 8:\n            result.append(contentsOf: eights)\n        case 9:\n\
    \            result.append(contentsOf: nines)\n        default:\n            break\n\
    \        }\n    }\n    \n    for n in arr.reversed() {\n        switch n {\n \
    \       case 1:\n            result.append(contentsOf: ones)\n        case 2:\n\
    \            result.append(contentsOf: twos)\n        case 3:\n            result.append(contentsOf:\
    \ threes)\n        case 4:\n            result.append(contentsOf: fours)\n   \
    \     case 5:\n            result.append(contentsOf: fives)\n        case 6:\n\
    \            result.append(contentsOf: sixes)\n        case 7:\n            result.append(contentsOf:\
    \ sevens)\n        case 8:\n            result.append(contentsOf: eights)\n  \
    \      case 9:\n            result.append(contentsOf: nines)\n        default:\n\
    \            break\n        }\n    }\n    \n    return result", "    var result\
    \ = [String]()\n    for number in arr {\n        let name = getName(number)\n\
    \        if name != nil {\n            result.append(name!)\n        }\n    }\n\
    \    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve = arr[11]\n\
    \    let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen = arr[14]\n\
    \    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen = arr[17]\n\
    \    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty = arr[20]\n\
    \    let fourty = arr[21]\n    let fifty = arr[22]\n    let sixty = arr[23]\n\
    \    let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety = arr[26]\n\
    \    let hundred = arr[27]\n    let thousand = arr[28]\n    let million = arr[29]\n\
    \    let billion = arr[30]\n    let trillion = arr[31]\n    let quadrillion =\
    \ arr[32]\n    let quintillion = arr[33]\n    let sextillion = arr[34]\n    let\
    \ septillion = arr[35]\n    let octillion = arr[36]\n    let nonillion = arr[37]\n\
    \    let decillion = arr[38]\n    let undecillion = arr[39]\n    let duodecillion\
    \ = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion = arr[42]\n\
    \    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n    let septendecillion\
    \ = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion = arr[47]\n\
    \    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n    let duovigintillion\
    \ = arr[50]\n    let trevigintillion = arr[51]\n    let quattuorvigintillion =\
    \ arr[52]\n    let quinvigintillion = arr[53]\n    let sexvigintillion = arr[54]\n\
    \    let septenvigintillion = arr[55]\n    let octovigin", "    guard arr.count\
    \ > 0 else { return [] }\n    let ones = arr.filter{ $0 <= 1 && $0 > 9 }\n   \
    \ let tens = arr.filter{ $0 <= 10 && $0 > 9 }\n    let hundreds = arr.filter{\
    \ $0 <= 100 && $0 > 9 }\n    let thousands = arr.filter{ $0 <= 1000 && $0 > 9\
    \ }\n    let millions = arr.filter{ $0 <= 10000 && $0 > 9 }\n    let billions\
    \ = arr.filter{ $0 <= 100000 && $0 > 9 }\n    let trillions = arr.filter{ $0 <=\
    \ 1000000 && $0 > 9 }\n    let quadrillions = arr.filter{ $0 <= 10000000 && $0\
    \ > 9 }\n    let quintillions = arr.filter{ $0 <= 100000000 && $0 > 9 }\n    let\
    \ sextillions = arr.filter{ $0 <= 1000000000 && $0 > 9 }\n    let septillions\
    \ = arr.filter{ $0 <= 10000000000 && $0 > 9 }\n    let octillions = arr.filter{\
    \ $0 <= 100000000000 && $0 > 9 }\n    let nonillions = arr.filter{ $0 <= 1000000000000\
    \ && $0 > 9 }\n    let decillions = arr.filter{ $0 <= 100000000000000 && $0 >\
    \ 9 }\n    let undecillions = arr.filter{ $0 <= 1000000000000000 && $0 > 9 }\n\
    \    let duodecillions = arr.filter{ $0 <= 10000000000000000 && $0 > 9 }\n   \
    \ let tredecillions = arr.filter{ $0 <= 100000000000000000 && $0 > 9 }\n    let\
    \ quattuordecillions = arr.filter{ $0 <= 1000000000000000000 && $0 > 9 }\n   \
    \ let quindecillions = arr.filter{ $0 <= 10000000000000000000 && $0 > 9 }\n  \
    \  let sexdecillions = arr.filter{ $0 <= 100000000000000000000 && $0 > 9 }\n \
    \   let septendecillions = arr.filter{ $0 <= 10000000000000000000000 && $0 > 9\
    \ }\n    let octodecillions = arr.filter{ $0 <= 100000000000000000000000 && $0\
    \ > 9 }\n    let novemdecillions = arr.filter{ $0 <= 1000000000000000000000000\
    \ && $0 > 9 }\n    let vigintillions = arr.filter{ $0 <= 10000000000000000000000000\
    \ && $0 > 9 }\n    let thousandsOfThousands = arr.filter{ $0 <= 100000000000000000000000000\
    \ && $0 > 9 }\n    let milli", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    var i = 0\n    for number in arr {\n  \
    \      if number < 1 || number > 9 {\n            continue\n        }\n      \
    \  let digit = String(number)\n        result.append(digit)\n        i += 1\n\
    \        if i == 3 {\n            result.reverse()\n            i = 0\n      \
    \  }\n    }\n    return result", "    var result = [String]()\n    for number\
    \ in arr {\n        let digit = number % 10\n        if digit == 0 {\n       \
    \     continue\n        }\n        let name = digitToName(digit)\n        result.append(name)\n\
    \    }\n    return result.reverse().map { digitToName($0) }", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let min\
    \ = arr[0]\n    let max = arr[0]\n    for i in arr {\n        if i < min {\n \
    \           min = i\n        }\n        if i > max {\n            max = i\n  \
    \      }\n    }\n    let one = String(format: \"%@\", One)\n    let two = String(format:\
    \ \"%@\", Two)\n    let three = String(format: \"%@\", Three)\n    let four =\
    \ String(format: \"%@\", Four)\n    let five = String(format: \"%@\", Five)\n\
    \    let six = String(format: \"%@\", Six)\n    let seven = String(format: \"\
    %@\", Seven)\n    let eight = String(format: \"%@\", Eight)\n    let nine = String(format:\
    \ \"%@\", Nine)\n    let ten = String(format: \"%@\", Ten)\n    let hundred =\
    \ String(format: \"%@\", Hundred)\n    let thousand = String(format: \"%@\", Thousand)\n\
    \    let million = String(format: \"%@\", Million)\n    let billion = String(format:\
    \ \"%@\", Billion)\n    let trillion = String(format: \"%@\", Trillion)\n    let\
    \ quadrillion = String(format: \"%@\", Quadrillion)\n    let quintillion = String(format:\
    \ \"%@\", Quintillion)\n    let sextillion = String(format: \"%@\", Sextillion)\n\
    \    let septillion = String(format: \"%@\", Septillion)\n    let octillion =\
    \ String(format: \"%@\", Octillion)\n    let nonillion = String(format: \"%@\"\
    , Nonillion)\n    let decillion = String(format: \"%@\", Decillion)\n    let undecillion\
    \ = String(format: \"%@\", Undecillion)\n    let duodecillion = String(format:\
    \ \"%@\", Duodecillion)\n    let tredecillion = String(format: \"%@\", Tredecillion)\n\
    \    let quattuordecillion = String(format: \"%@\", Quattuordecillion)\n    let\
    \ quindecillion = String(format: \"%@\", Quindecillion)\n    let sexdecillion\
    \ = String(format: \"%@\", Sexdecillion)\n    let septendecillion = String(format:\
    \ \"%@\", Septendecillion)\n    let octodecillion = ", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let one = Int(One)\n\
    \    let two = Int(Two)\n    let three = Int(Three)\n    let four = Int(Four)\n\
    \    let five = Int(Five)\n    let six = Int(Six)\n    let seven = Int(Seven)\n\
    \    let eight = Int(Eight)\n    let nine = Int(Nine)\n    let ten = Int(Ten)\n\
    \    let hundred = Int(Hundred)\n    let thousand = Int(Thousand)\n    let million\
    \ = Int(Million)\n    let billion = Int(Billion)\n    let trillion = Int(Trillion)\n\
    \    let quadrillion = Int(Quadrillion)\n    let quintillion = Int(Quintillion)\n\
    \    let sextillion = Int(Sextillion)\n    let septillion = Int(Septillion)\n\
    \    let octillion = Int(Octillion)\n    let nonillion = Int(Nonillion)\n    let\
    \ decillion = Int(Decillion)\n    let undecillion = Int(Undecillion)\n    let\
    \ duodecillion = Int(Duodecillion)\n    let tredecillion = Int(Tredecillion)\n\
    \    let quattuordecillion = Int(Quattuordecillion)\n    let quindecillion = Int(Quindecillion)\n\
    \    let sexdecillion = Int(Sexdecillion)\n    let septendecillion = Int(Septendecillion)\n\
    \    let octodecillion = Int(Octodecillion)\n    let novemdecillion = Int(Novemdecillion)\n\
    \    let vigintillion = Int(Vigintillion)\n    let unvigintillion = Int(Unvigintillion)\n\
    \    let duovigintillion = Int(Duovigintillion)\n    let trevigintillion = Int(Trevigintillion)\n\
    \    let quattuorvigintillion = Int(Quattuorvigintillion)\n    let quinvigintillion\
    \ = Int(Quinvigintillion)\n    let sexvigintillion = Int(Sexvigintillion)\n  \
    \  let septenvigintillion = Int(Septenvigintillion)\n    let octovigintillion\
    \ = Int(Octovigintillion)\n    let novemvi", "    var result = [String]()\n  \
    \  for number in arr {\n        if number > 9 {\n            continue\n      \
    \  }\n        if number < 1 {\n            continue\n        }\n        let name\
    \ = ones[number]\n        result.append(name)\n    }\n    return result.reversed()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let one = arr[0]\n    let two = arr[1]\n    let three = arr[2]\n    let four\
    \ = arr[3]\n    let five = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n\
    \    let eight = arr[7]\n    let nine = arr[8]\n    if one > 9 {\n        one\
    \ = one - 10\n    }\n    if two > 9 {\n        two = two - 10\n    }\n    if three\
    \ > 9 {\n        three = three - 10\n    }\n    if four > 9 {\n        four =\
    \ four - 10\n    }\n    if five > 9 {\n        five = five - 10\n    }\n    if\
    \ six > 9 {\n        six = six - 10\n    }\n    if seven > 9 {\n        seven\
    \ = seven - 10\n    }\n    if eight > 9 {\n        eight = eight - 10\n    }\n\
    \    if nine > 9 {\n        nine = nine - 10\n    }\n    if one < 1 {\n      \
    \  one = 1\n    }\n    if two < 1 {\n        two = 1\n    }\n    if three < 1\
    \ {\n        three = 1\n    }\n    if four < 1 {\n        four = 1\n    }\n  \
    \  if five < 1 {\n        five = 1\n    }\n    if six < 1 {\n        six = 0\n\
    \    }\n    if seven < 1 {\n        seven = 0\n    }\n    if eight < 1 {\n   \
    \     eight = 0\n    }\n    if nine < 1 {\n        nine = 0\n    }\n    if one\
    \ == 0 {\n        one = \"One\"\n    }\n    if two == 0 {\n        two = \"Two\"\
    \n    }\n    if three == 0 {\n        three = \"Three\"\n    }\n    if four ==\
    \ 0 {\n        four = \"Four\"\n    }\n    if five == 0 {\n        five = \"Five\"\
    \n    }\n    if six == 0 {\n        six = \"Six\"\n    }\n    if seven == 0 {\n\
    \        seven = \"Seven\"\n    }\n    if eight == 0 {\n        eight = \"Eight\"\
    \n    }\n    if nine == 0 {\n        nine = \"Nine\"\n    }\n    if one == 1 {\n\
    \        one = \"One\"\n    }\n    if two == 1 {\n        two = \"Two\"\n    }\n\
    \    if three == 1 {\n        three = \"Three\"\n    }\n    if four == 1 {\n \
    \       four = \"Four\"\n    }\n    if five == 1 {\n", "    guard arr.count >\
    \ 0 else { return [] }\n    guard arr.count <= 9 else { return [] }\n    var result\
    \ = [String]()\n    var index = 0\n    while index < arr.count {\n        let\
    \ value = arr[index]\n        if value < 1 || value > 9 {\n            guard let\
    \ index = arr.index(of: value) else { return [] }\n            arr.remove(at:\
    \ index)\n        } else {\n            result.append(String(describing: value))\n\
    \        }\n        index += 1\n    }\n    guard arr.count > 0 else { return []\
    \ }\n    guard arr.count <= 9 else { return [] }\n    for value in arr {\n   \
    \     let index = arr.index(of: value)\n        arr.remove(at: index)\n      \
    \  result.append(String(describing: value))\n    }\n    return result.reversed()",
  "    guard arr.count > 0 else { return [] }\n    let minLength = min(arr.count,\
    \ 9)\n    let maxLength = max(arr.count, 9)\n    var result = [String]()\n   \
    \ for i in minLength...maxLength {\n        let index = arr.index(of: i)\n   \
    \     if index != nil {\n            result.append(names[index!])\n        }\n\
    \    }\n    return result.reversed()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = 1\n    let max = 9\n    let len\
    \ = arr.count\n    let digits = (0..<len).map { arr[Int($0)] }\n    let reversed\
    \ = digits.reversed()\n    let one = \"One\"\n    let two = \"Two\"\n    let three\
    \ = \"Three\"\n    let four = \"Four\"\n    let five = \"Five\"\n    let six =\
    \ \"Six\"\n    let seven = \"Seven\"\n    let eight = \"Eight\"\n    let nine\
    \ = \"Nine\"\n    let oneDigit = one\n    let twoDigit = two\n    let threeDigit\
    \ = three\n    let fourDigit = four\n    let fiveDigit = five\n    let sixDigit\
    \ = six\n    let sevenDigit = seven\n    let eightDigit = eight\n    let nineDigit\
    \ = nine\n    let oneDigitReversed = oneDigit.reversed()\n    let twoDigitReversed\
    \ = twoDigit.reversed()\n    let threeDigitReversed = threeDigit.reversed()\n\
    \    let fourDigitReversed = fourDigit.reversed()\n    let fiveDigitReversed =\
    \ fiveDigit.reversed()\n    let sixDigitReversed = sixDigit.reversed()\n    let\
    \ sevenDigitReversed = sevenDigit.reversed()\n    let eightDigitReversed = eightDigit.reversed()\n\
    \    let nineDigitReversed = nineDigit.reversed()\n    let oneDigitReversedReversed\
    \ = oneDigitReversed.reversed()\n    let twoDigitReversedReversed = twoDigitReversed.reversed()\n\
    \    let threeDigitReversedReversed = threeDigitReversed.reversed()\n    let fourDigitReversedReversed\
    \ = fourDigitReversed.reversed()\n    let fiveDigitReversedReversed = fiveDigitReversed.reversed()\n\
    \    let sixDigitReversedReversed = sixDigitReversed.reversed()\n    let sevenDigitReversedReversed\
    \ = sevenDigitReversed.reversed()\n    let eightDigitReversedReversed = eightDigitReversed.reversed()\n\
    \    let nineDigitReversedReversed = nineDigitReversed.reversed()\n    let oneDigitReversedReversedReversed\
    \ = oneDigitReversedReversed.reversed()\n    let twoDigitReversedReversedReversed\
    \ = twoDigitReversedReversed.reversed()\n    let threeDigitReversedReversedReversed\
    \ = threeDigitReversedReversed.reversed()\n    let fourDigitReversedReversedReversed\
    \ = fourDigitReversedReversed.reversed()\n    let fiveDigitReversedReversedReversed\
    \ = fiveDigitReversedReversed.reversed()\n    let sixDigitReversedReversedReversed\
    \ = six"]
stop_tokens:
- "\n}"

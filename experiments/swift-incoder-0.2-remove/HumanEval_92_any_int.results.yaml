language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && x == x + z && y == y\
    \ + z && x == z + z && y == z + z && x == z + z && y == z + z && x == z + z &&\
    \ y == z + z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbxiyhj80/tmpbxiyhj80.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b6f8bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b6c82b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b6c82988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b6c817b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbxiyhj80                        0x00005612313421c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b7177460 __libc_start_main +
    245

    6    tmpbxiyhj80                        0x0000561231341e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    if y == z {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpel9hg1r9/tmpel9hg1r9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel9hg1r9                        0x0000564063c9e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b2ec7460 __libc_start_main +
    245

    6    tmpel9hg1r9                        0x0000564063c9de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqtyxi6c2.swift:7:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmpqtyxi6c2.swift:7:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmpqtyxi6c2.swift:7:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1lvoh1no/tmp1lvoh1no.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41684ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba416541b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba416541988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4165407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1lvoh1no                        0x000055d68e62e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ba416a36460 __libc_start_main +
    245

    6    tmp1lvoh1no                        0x000055d68e62de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (Int(x) == Int(y))\
    \ && (Int(x) == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpviokdr_e/tmpviokdr_e.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff2d91c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff2a88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff2a88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff2a877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpviokdr_e                        0x0000563ebf24d254 <unavailable> + 4692

    5    libc.so.6                          0x00002b7ff2f7d460 __libc_start_main +
    245

    6    tmpviokdr_e                        0x0000563ebf24cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y || x == z {\n        return true\n\
    \    }\n    if y == z {\n        return true\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpm_felhge/tmpm_felhge.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5dfd2b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5dfcfacb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5dfcfac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5dfcfab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm_felhge                        0x000055e120c5c1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b5dfd4a1460 __libc_start_main +
    245

    6    tmpm_felhge                        0x000055e120c5be69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    if y == z {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpel9hg1r9/tmpel9hg1r9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel9hg1r9                        0x0000564063c9e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b2ec7460 __libc_start_main +
    245

    6    tmpel9hg1r9                        0x0000564063c9de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    if y == z {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpel9hg1r9/tmpel9hg1r9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel9hg1r9                        0x0000564063c9e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b2ec7460 __libc_start_main +
    245

    6    tmpel9hg1r9                        0x0000564063c9de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && x == x + z && x == y\
    \ + z && x == z + y && x == z + z && y == z + x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpzcxfd2le/tmpzcxfd2le.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b67038fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b67035f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b67035f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b67035f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzcxfd2le                        0x00005615beb031c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6703aea460 __libc_start_main +
    245

    6    tmpzcxfd2le                        0x00005615beb02e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y || x == z) && (x % 1 == 0 ||\
    \ y % 1 == 0 || z % 1 == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppd3sdkj9.swift:7:37: error: '%' is unavailable: For floating point\
    \ numbers use truncatingRemainder instead\n    return (x == y || x == z) && (x\
    \ % 1 == 0 || y % 1 == 0 || z % 1 == 0)\n                                    ^\n\
    Swift.%:2:13: note: '%' has been explicitly marked unavailable here\npublic func\
    \ % <T>(lhs: T, rhs: T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmppd3sdkj9.swift:7:51:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return (x == y || x == z) && (x % 1 == 0 || y % 1 == 0 || z % 1\
    \ == 0)\n                                                  ^\nSwift.%:2:13: note:\
    \ '%' has been explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs:\
    \ T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmppd3sdkj9.swift:7:65:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return (x == y || x == z) && (x % 1 == 0 || y % 1 == 0 || z % 1\
    \ == 0)\n                                                                ^\nSwift.%:2:13:\
    \ note: '%' has been explicitly marked unavailable here\npublic func % <T>(lhs:\
    \ T, rhs: T) -> T where T : BinaryFloatingPoint\n            ^\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z {\n        return true\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpie9emmsn/tmpie9emmsn.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b489805ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4897d55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4897d55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4897d547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpie9emmsn                        0x000055e62370b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b489824a460 __libc_start_main +
    245

    6    tmpie9emmsn                        0x000055e62370ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqtyxi6c2.swift:7:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmpqtyxi6c2.swift:7:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmpqtyxi6c2.swift:7:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y || x == z) && is_int(x) &&\
    \ is_int(y) && is_int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpgc6ywglz.swift:7:34: error: cannot find 'is_int' in scope\n   \
    \ return (x == y || x == z) && is_int(x) && is_int(y) && is_int(z)\n         \
    \                        ^~~~~~\n/tmp/tmpgc6ywglz.swift:7:47: error: cannot find\
    \ 'is_int' in scope\n    return (x == y || x == z) && is_int(x) && is_int(y) &&\
    \ is_int(z)\n                                              ^~~~~~\n/tmp/tmpgc6ywglz.swift:7:60:\
    \ error: cannot find 'is_int' in scope\n    return (x == y || x == z) && is_int(x)\
    \ && is_int(y) && is_int(z)\n                                                \
    \           ^~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    if y == z {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpel9hg1r9/tmpel9hg1r9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel9hg1r9                        0x0000564063c9e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b2ec7460 __libc_start_main +
    245

    6    tmpel9hg1r9                        0x0000564063c9de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqtyxi6c2.swift:7:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmpqtyxi6c2.swift:7:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmpqtyxi6c2.swift:7:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && y == y + z && z == z\
    \ + x) || x == x + y && y == y + z && z == z + x || x == x + y && y == y + z &&\
    \ z == z + x || x == x + y && y == y + z && z == z + x || x == x + y && y == y\
    \ + z && z == z + x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt9ohohty/tmpt9ohohty.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5658326c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b565801db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b565801d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b565801c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt9ohohty                        0x0000563278cdb1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b5658512460 __libc_start_main +
    245

    6    tmpt9ohohty                        0x0000563278cdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && x == x + z && x == y\
    \ + z && x == z + x && y == z + y && y == z + x && z == z + y)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpsdo2ksoz/tmpsdo2ksoz.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b487814ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4877e45b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4877e45988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4877e447b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdo2ksoz                        0x000055d1208af1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b487833a460 __libc_start_main +
    245

    6    tmpsdo2ksoz                        0x000055d1208aee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && y == y + z && z == z\
    \ + x) || x == x + y && y == y + z && z == z + x || x == x + y && y == y + z &&\
    \ z == z + x || x == x + y && y == y + z && z == z + x\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpv9jkt9zy/tmpv9jkt9zy.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4caaa46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4caa73db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4caa73d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4caa73c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv9jkt9zy                        0x000056015c1781c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b4caac32460 __libc_start_main +
    245

    6    tmpv9jkt9zy                        0x000056015c177e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z {\n        return true\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpie9emmsn/tmpie9emmsn.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b489805ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4897d55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4897d55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4897d547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpie9emmsn                        0x000055e62370b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b489824a460 __libc_start_main +
    245

    6    tmpie9emmsn                        0x000055e62370ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard let x = Int(x), let y = Int(y), let\
    \ z = Int(z) else { return false }\n    return x == y + z\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpgpgehg4z.swift:7:11: error: initializer for conditional binding\
    \ must have Optional type, not 'Int'\n    guard let x = Int(x), let y = Int(y),\
    \ let z = Int(z) else { return false }\n          ^       ~~~~~~\n/tmp/tmpgpgehg4z.swift:7:27:\
    \ error: initializer for conditional binding must have Optional type, not 'Int'\n\
    \    guard let x = Int(x), let y = Int(y), let z = Int(z) else { return false\
    \ }\n                          ^       ~~~~~~\n/tmp/tmpgpgehg4z.swift:7:43: error:\
    \ initializer for conditional binding must have Optional type, not 'Int'\n   \
    \ guard let x = Int(x), let y = Int(y), let z = Int(z) else { return false }\n\
    \                                          ^       ~~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z {\n        return true\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpie9emmsn/tmpie9emmsn.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b489805ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4897d55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4897d55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4897d547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpie9emmsn                        0x000055e62370b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b489824a460 __libc_start_main +
    245

    6    tmpie9emmsn                        0x000055e62370ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && y == y + z && z == z\
    \ + x) || x == x + y && y == y + z && z == z + x || x == x + y && y == y + z &&\
    \ z == z + x || x == x + y && y == y + z && z == z + x\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpv9jkt9zy/tmpv9jkt9zy.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4caaa46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4caa73db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4caa73d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4caa73c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv9jkt9zy                        0x000056015c1781c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b4caac32460 __libc_start_main +
    245

    6    tmpv9jkt9zy                        0x000056015c177e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard let x = Int(x), let y = Int(y), let\
    \ z = Int(z) else { return false }\n    return x == y + z\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpgpgehg4z.swift:7:11: error: initializer for conditional binding\
    \ must have Optional type, not 'Int'\n    guard let x = Int(x), let y = Int(y),\
    \ let z = Int(z) else { return false }\n          ^       ~~~~~~\n/tmp/tmpgpgehg4z.swift:7:27:\
    \ error: initializer for conditional binding must have Optional type, not 'Int'\n\
    \    guard let x = Int(x), let y = Int(y), let z = Int(z) else { return false\
    \ }\n                          ^       ~~~~~~\n/tmp/tmpgpgehg4z.swift:7:43: error:\
    \ initializer for conditional binding must have Optional type, not 'Int'\n   \
    \ guard let x = Int(x), let y = Int(y), let z = Int(z) else { return false }\n\
    \                                          ^       ~~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (Int(x) == Int(y))\
    \ && (Int(x) == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpviokdr_e/tmpviokdr_e.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff2d91c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff2a88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff2a88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff2a877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpviokdr_e                        0x0000563ebf24d254 <unavailable> + 4692

    5    libc.so.6                          0x00002b7ff2f7d460 __libc_start_main +
    245

    6    tmpviokdr_e                        0x0000563ebf24cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && y == y + z && z == z\
    \ + x) || x == x + y && y == y + z && z == z + x || x == x + y && y == y + z &&\
    \ z == z + x || x == x + y && y == y + z && z == z + x\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpv9jkt9zy/tmpv9jkt9zy.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4caaa46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4caa73db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4caa73d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4caa73c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv9jkt9zy                        0x000056015c1781c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b4caac32460 __libc_start_main +
    245

    6    tmpv9jkt9zy                        0x000056015c177e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && x == x + z) || (x ==\
    \ y + z && x == y + x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpfm5y_nxz/tmpfm5y_nxz.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af65502fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af654d26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af654d26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af654d257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfm5y_nxz                        0x000055c09ec551c4 <unavailable> + 4548

    5    libc.so.6                          0x00002af65521b460 __libc_start_main +
    245

    6    tmpfm5y_nxz                        0x000055c09ec54e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && y == y + z && z == z\
    \ + x) || x == x + y && y == y + z && z == z + x || x == x + y && y == y + z &&\
    \ z == z + x || x == x + y && y == y + z && z == z + x\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpv9jkt9zy/tmpv9jkt9zy.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4caaa46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4caa73db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4caa73d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4caa73c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv9jkt9zy                        0x000056015c1781c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b4caac32460 __libc_start_main +
    245

    6    tmpv9jkt9zy                        0x000056015c177e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (Int(x) == Int(y))\
    \ && (Int(x) == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpviokdr_e/tmpviokdr_e.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff2d91c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff2a88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff2a88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff2a877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpviokdr_e                        0x0000563ebf24d254 <unavailable> + 4692

    5    libc.so.6                          0x00002b7ff2f7d460 __libc_start_main +
    245

    6    tmpviokdr_e                        0x0000563ebf24cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        if x == z {\n       \
    \     return true\n        }\n        return false\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvngfh9jl/tmpvngfh9jl.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ca2896c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ca258db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ca258d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ca258c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvngfh9jl                        0x0000556c72c6f1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b3ca2a82460 __libc_start_main +
    245

    6    tmpvngfh9jl                        0x0000556c72c6ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1lvoh1no/tmp1lvoh1no.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41684ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba416541b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba416541988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4165407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1lvoh1no                        0x000055d68e62e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ba416a36460 __libc_start_main +
    245

    6    tmp1lvoh1no                        0x000055d68e62de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1lvoh1no/tmp1lvoh1no.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41684ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba416541b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba416541988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4165407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1lvoh1no                        0x000055d68e62e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ba416a36460 __libc_start_main +
    245

    6    tmp1lvoh1no                        0x000055d68e62de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard let x = Int(x),\n        let y = Int(y),\n\
    \        let z = Int(z) else {\n            return false\n    }\n    return x\
    \ == y + z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpdi2npm4e.swift:7:11: error: initializer for conditional binding\
    \ must have Optional type, not 'Int'\n    guard let x = Int(x),\n          ^ \
    \      ~~~~~~\n/tmp/tmpdi2npm4e.swift:8:9: error: initializer for conditional\
    \ binding must have Optional type, not 'Int'\n        let y = Int(y),\n      \
    \  ^       ~~~~~~\n/tmp/tmpdi2npm4e.swift:9:9: error: initializer for conditional\
    \ binding must have Optional type, not 'Int'\n        let z = Int(z) else {\n\
    \        ^       ~~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard let x = Int(x),\n        let y = Int(y),\n\
    \        let z = Int(z) else {\n            return false\n    }\n    return x\
    \ == y || x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpv22vni9c.swift:7:11: error: initializer for conditional binding\
    \ must have Optional type, not 'Int'\n    guard let x = Int(x),\n          ^ \
    \      ~~~~~~\n/tmp/tmpv22vni9c.swift:8:9: error: initializer for conditional\
    \ binding must have Optional type, not 'Int'\n        let y = Int(y),\n      \
    \  ^       ~~~~~~\n/tmp/tmpv22vni9c.swift:9:9: error: initializer for conditional\
    \ binding must have Optional type, not 'Int'\n        let z = Int(z) else {\n\
    \        ^       ~~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (Int(x) == Int(y))\
    \ && Int(x) == Int(z)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7ebjr6x5/tmp7ebjr6x5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a0245c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab99ff3cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab99ff3c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab99ff3b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7ebjr6x5                        0x0000556aa88ab254 <unavailable> + 4692

    5    libc.so.6                          0x00002ab9a0431460 __libc_start_main +
    245

    6    tmp7ebjr6x5                        0x0000556aa88aaef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return (x+y+z == (x+y+z).rounded(.towardZero))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: 'error: link command failed with exit code 1 (use -v to see invocation)

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''round''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''rint''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''trunc''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''ceil''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''floor''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''floor''

    /tmp/TemporaryDirectory.mkYeob/tmpz7wngg98-1.o:tmpz7wngg98-1.o:function $s11tmpz7wngg987any_int1x1y1zSbSd_S2dtF:
    error: undefined reference to ''ceil''

    clang-13: error: linker command failed with exit code 1 (use -v to see invocation)

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1lvoh1no/tmp1lvoh1no.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41684ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba416541b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba416541988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4165407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1lvoh1no                        0x000055d68e62e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ba416a36460 __libc_start_main +
    245

    6    tmp1lvoh1no                        0x000055d68e62de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqtyxi6c2.swift:7:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmpqtyxi6c2.swift:7:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmpqtyxi6c2.swift:7:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x == Int(x)) &&\
    \ (y == Int(y)) && (z == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqtyxi6c2.swift:7:31: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x + y) == z) && (x == Int(x))\
    \ && (y == Int(y)) && (z == Int(z))\n                              ^\n       \
    \                       Int( )\n/tmp/tmpqtyxi6c2.swift:7:48: error: cannot convert\
    \ value of type 'Double' to expected argument type 'Int'\n    return ((x + y)\
    \ == z) && (x == Int(x)) && (y == Int(y)) && (z == Int(z))\n                 \
    \                              ^\n                                           \
    \    Int( )\n/tmp/tmpqtyxi6c2.swift:7:65: error: cannot convert value of type\
    \ 'Double' to expected argument type 'Int'\n    return ((x + y) == z) && (x ==\
    \ Int(x)) && (y == Int(y)) && (z == Int(z))\n                                \
    \                                ^\n                                         \
    \                       Int( )\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y + z {\n        return true\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpie9emmsn/tmpie9emmsn.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b489805ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4897d55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4897d55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4897d547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpie9emmsn                        0x000055e62370b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b489824a460 __libc_start_main +
    245

    6    tmpie9emmsn                        0x000055e62370ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y || x == z {\n        return true\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp70jpa87a/tmp70jpa87a.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b1bee8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b1bbdfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b1bbdf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b1bbde7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70jpa87a                        0x0000561aced8d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2b1c0d4460 __libc_start_main +
    245

    6    tmp70jpa87a                        0x0000561aced8ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        return true\n    }\n\
    \    if x == z {\n        return true\n    }\n    if y == z {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpel9hg1r9/tmpel9hg1r9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1b2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1b29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1b29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1b29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel9hg1r9                        0x0000564063c9e1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad1b2ec7460 __libc_start_main +
    245

    6    tmpel9hg1r9                        0x0000564063c9de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x % 1 == 0) && (y\
    \ % 1 == 0) && (z % 1 == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp8l_u34y6.swift:7:33: error: '%' is unavailable: For floating point\
    \ numbers use truncatingRemainder instead\n    return ((x + y) == z) && (x % 1\
    \ == 0) && (y % 1 == 0) && (z % 1 == 0)\n                                ^\nSwift.%:2:13:\
    \ note: '%' has been explicitly marked unavailable here\npublic func % <T>(lhs:\
    \ T, rhs: T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmp8l_u34y6.swift:7:49:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return ((x + y) == z) && (x % 1 == 0) && (y % 1 == 0) && (z % 1\
    \ == 0)\n                                                ^\nSwift.%:2:13: note:\
    \ '%' has been explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs:\
    \ T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmp8l_u34y6.swift:7:65:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return ((x + y) == z) && (x % 1 == 0) && (y % 1 == 0) && (z % 1\
    \ == 0)\n                                                                ^\nSwift.%:2:13:\
    \ note: '%' has been explicitly marked unavailable here\npublic func % <T>(lhs:\
    \ T, rhs: T) -> T where T : BinaryFloatingPoint\n            ^\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y + z) == (x * y * z))\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9j9wkbhc/tmp9j9wkbhc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade27beec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade278e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade278e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade278e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9j9wkbhc                        0x0000559345f7b3dc <unavailable> + 5084

    5    libc.so.6                          0x00002ade27dda460 __libc_start_main +
    245

    6    tmp9j9wkbhc                        0x0000559345f7ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y || x == z {\n        return true\n\
    \    }\n    if y == z {\n        return true\n    }\n    if x < y && y < z {\n\
    \        return true\n    }\n    if x > y && y > z {\n        return true\n  \
    \  }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpctnl75pu/tmpctnl75pu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b4154bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b41242b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b41242988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b412417b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpctnl75pu                        0x000055bdfb2dd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2b41737460 __libc_start_main +
    245

    6    tmpctnl75pu                        0x000055bdfb2dce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y - z) || (x\
    \ == z + y) || (x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuqe7d97a/tmpuqe7d97a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78bcbdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78bc8d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78bc8d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78bc8d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqe7d97a                        0x000055825c3282d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b78bcdc8460 __libc_start_main +
    245

    6    tmpuqe7d97a                        0x000055825c327e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpojmnd22y.swift:8:1: error: expected expression after operator\n\
    }\n^\n/tmp/tmpojmnd22y.swift:7:2044: error: cannot convert value of type '()'\
    \ to expected argument type 'Bool'\n    return (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x\
    \ == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) ||\
    \ (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z)\
    \ || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y +\
    \ z) || (x == y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x ==\
    \ y + z) || (x == y + z) || (x == y + z) || (x == y + z) || (x"
  stdout: ''
  timestamp: 1659979129
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard x > 0 && y > 0 && z > 0 else {\n   \
    \     return false\n    }\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0bsizxxh/tmp0bsizxxh.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e332d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e32fcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e32fcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e32fcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0bsizxxh                        0x00005595b7be01c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6e334c2460 __libc_start_main +
    245

    6    tmp0bsizxxh                        0x00005595b7bdfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    if x == y {\n        if x == z {\n       \
    \     return true\n        }\n        return false\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvngfh9jl/tmpvngfh9jl.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ca2896c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ca258db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ca258d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ca258c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvngfh9jl                        0x0000556c72c6f1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b3ca2a82460 __libc_start_main +
    245

    6    tmpvngfh9jl                        0x0000556c72c6ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (Int(x) == Int(y))\
    \ && (Int(x) == Int(z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpviokdr_e/tmpviokdr_e.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff2d91c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff2a88b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff2a88988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff2a877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpviokdr_e                        0x0000563ebf24d254 <unavailable> + 4692

    5    libc.so.6                          0x00002b7ff2f7d460 __libc_start_main +
    245

    6    tmpviokdr_e                        0x0000563ebf24cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return ((x + y) == z) && (x % 1 == 0) && (y\
    \ % 1 == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpjycf10rn.swift:7:33: error: '%' is unavailable: For floating point\
    \ numbers use truncatingRemainder instead\n    return ((x + y) == z) && (x % 1\
    \ == 0) && (y % 1 == 0)\n                                ^\nSwift.%:2:13: note:\
    \ '%' has been explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs:\
    \ T) -> T where T : BinaryFloatingPoint\n            ^\n/tmp/tmpjycf10rn.swift:7:49:\
    \ error: '%' is unavailable: For floating point numbers use truncatingRemainder\
    \ instead\n    return ((x + y) == z) && (x % 1 == 0) && (y % 1 == 0)\n       \
    \                                         ^\nSwift.%:2:13: note: '%' has been\
    \ explicitly marked unavailable here\npublic func % <T>(lhs: T, rhs: T) -> T where\
    \ T : BinaryFloatingPoint\n            ^\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return (x == x + y && x == x + z && y == y\
    \ + z && x == z + y && y == z + z && z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmphc3zv8uu/tmphc3zv8uu.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8c2c4a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8c2c1a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8c2c1a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8c2c19f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphc3zv8uu                        0x00005614422d31c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b8c2c695460 __libc_start_main +
    245

    6    tmphc3zv8uu                        0x00005614422d2e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    guard let x = Double(x), let y = Double(y),\
    \ let z = Double(z) else { return false }\n    return x == y + z\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpg8inhf4n.swift:7:11: error: initializer for conditional binding\
    \ must have Optional type, not 'Double'\n    guard let x = Double(x), let y =\
    \ Double(y), let z = Double(z) else { return false }\n          ^       ~~~~~~~~~\n\
    /tmp/tmpg8inhf4n.swift:7:30: error: initializer for conditional binding must have\
    \ Optional type, not 'Double'\n    guard let x = Double(x), let y = Double(y),\
    \ let z = Double(z) else { return false }\n                             ^    \
    \   ~~~~~~~~~\n/tmp/tmpg8inhf4n.swift:7:49: error: initializer for conditional\
    \ binding must have Optional type, not 'Double'\n    guard let x = Double(x),\
    \ let y = Double(y), let z = Double(z) else { return false }\n               \
    \                                 ^       ~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y || x == z || y == z\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8171a25y/tmp8171a25y.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666227cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6661f73b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6661f73988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6661f727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8171a25y                        0x000055e4552cd1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b6662468460 __libc_start_main +
    245

    6    tmp8171a25y                        0x000055e4552cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\nfunc any_int(x: Double, y:\
    \ Double, z: Double) -> Bool {\n    return x == y + z\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpo3_326fw/tmpo3_326fw.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0872f89c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0872c80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0872c80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0872c7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3_326fw                        0x0000562e427761c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b0873175460 __libc_start_main +
    245

    6    tmpo3_326fw                        0x0000562e42775e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659979126

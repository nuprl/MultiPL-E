name: HumanEval_143_words_in_sentence
language: swift
prompt: "\n/// You are given a string representing a sentence,\n/// the sentence contains\
  \ some words separated by a space,\n/// and you have to return a string that contains\
  \ the words from the original sentence,\n/// whose lengths are prime numbers,\n\
  /// the order of the words in the new string should be the same as the original\
  \ one.\n/// Example 1:\n/// Example 2:\n/// Constraints:\n/// * 1 <= len(sentence)\
  \ <= 100\n/// * sentence contains only letters\nfunc words_in_sentence(sentence:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(words_in_sentence(sentence: \"This is a\
  \ test\") == \"is\")\nassert(words_in_sentence(sentence: \"lets go for swimming\"\
  ) == \"go for\")\nassert(words_in_sentence(sentence: \"there is no place available\
  \ here\") == \"there is no place\")\nassert(words_in_sentence(sentence: \"Hi I am\
  \ Hussein\") == \"Hi am Hussein\")\nassert(words_in_sentence(sentence: \"go for\
  \ it\") == \"go for it\")\nassert(words_in_sentence(sentence: \"here\") == \"\"\
  )\nassert(words_in_sentence(sentence: \"here is\") == \"is\")"
completions: ["    var result = \"\"\n    var primes = [1]\n    for letter in sentence.characters\
    \ {\n        if primes.contains(letter) {\n            primes.append(letter)\n\
    \        }\n    }\n    for prime in primes {\n        if prime > result.characters.count\
    \ {\n            result = result + String(prime)\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for word in sentence.split(\" \") {\n \
    \       if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var primes = [1]\n   \
    \ for letter in sentence {\n        if primes.contains(letter) {\n           \
    \ primes.append(letter)\n        } else {\n            result += letter\n    \
    \    }\n    }\n    return result", "    // write your code here\n    \n    return\
    \ \"\"", "    var result = \"\"\n    for word in sentence.split(\" \") {\n   \
    \     if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    // write your code here\n    var result:\
    \ String = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    \n    return \"\"", "    var result = \"\"\n \
    \   var primes = [1]\n    var primeIndex = 0\n    for letter in sentence {\n \
    \       if primes[primeIndex] == 0 {\n            primeIndex++\n        }\n  \
    \      if primes[primeIndex] == 1 {\n            primeIndex++\n        }\n   \
    \     if letter == \" \" {\n            primeIndex++\n        }\n        if letter\
    \ == \",\" {\n            primeIndex++\n        }\n        if letter == \".\"\
    \ {\n            primeIndex++\n        }\n        if letter == \"?\" {\n     \
    \       primeIndex++\n        }\n        if letter == \"!\" {\n            primeIndex++\n\
    \        }\n        if letter == \"-\" {\n            primeIndex++\n        }\n\
    \        if letter == \"_\" {\n            primeIndex++\n        }\n        if\
    \ letter == \":\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"\\\"\" {\n            primeIndex++\n        }\n        if letter == \"'\"\
    \ {\n            primeIndex++\n        }\n        if letter == \"(\" {\n     \
    \       primeIndex++\n        }\n        if letter == \")\" {\n            primeIndex++\n\
    \        }\n        if letter == \"[\" {\n            primeIndex++\n        }\n\
    \        if letter == \"]\" {\n            primeIndex++\n        }\n        if\
    \ letter == \"{\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"}\" {\n            primeIndex++\n        }\n        if letter == \"%\" {\n\
    \            primeIndex++\n        }\n        if letter == \"+\" {\n         \
    \   primeIndex++\n        }\n        if letter == \"*\" {\n            primeIndex++\n\
    \        }\n        if letter == \"/\" {\n            primeIndex++\n        }\n\
    \        if letter == \"^\" {\n            primeIndex++\n        }\n        if\
    \ letter == \"|\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"~\" {\n            primeIndex++\n        }\n        if letter == \"`\" {\n\
    \            primeIndex++\n        }\n        if letter == \"!\" {\n         \
    \   primeIndex++\n        }\n        if letter == \"=\" { // \"=\" is also a prime\
    \ number\n            primeIndex++\n        }\n        if letter == \"<\" {\n\
    \            primeIndex++\n        }\n        if letter == \">\" {\n         \
    \   primeIndex++\n        }\n        if letter == \"{\" {\n            primeIndex++\n\
    \        }\n        if letter == \"}\" {\n            primeIndex++\n        }\n\
    \        if letter == \"[\" {\n            primeIndex++\n        }\n        if\
    \ letter == \"]\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"(\" {\n            primeIndex", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    guard let sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n\
    \        return \"\"\n    }\n    var result = \"\"\n    var primes = [1]\n   \
    \ for letter in sentence.unicodeScalars {\n        if let index = Int(letter)\
    \ {\n            if primes.contains(index) {\n                primes.append(index\
    \ + 1)\n            }\n        }\n    }\n    for prime in primes {\n        if\
    \ prime > Int(sentence.length) {\n            break\n        }\n        let index\
    \ = Int(sentence[Int(sentence.length - prime)])\n        if index != 0 {\n   \
    \         result += String(index)\n        }\n    }\n    return result", "   \
    \ var result = \"\"\n    var primes = [1]\n    var primeIndex = 0\n    for char\
    \ in sentence {\n        if char == \" \" {\n            primeIndex++\n      \
    \  }\n        if primes[primeIndex] == 0 {\n            primes[primeIndex] = 1\n\
    \            if char == \"a\" || char == \"e\" || char == \"i\" || char == \"\
    o\" || char == \"u\" {\n                result += char\n            }\n      \
    \  }\n    }\n    return result", "    // write your code here\n    var result\
    \ = \"\"\n    for word in sentence.split(\" \") {\n        if isPrimeNumber(word)\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    \n    let words = sentence.components(separatedBy:\
    \ \" \")\n    var resultString = \"\"\n    \n    for word in words {\n       \
    \ let length = word.characters.count\n        \n        if isPrime(length) ==\
    \ true {\n            resultString += word\n        }\n    }\n    \n    return\
    \ resultString", "    var result = \"\"\n    for word in sentence.split(\" \"\
    ) {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n   \
    \     }\n    }\n    return result", "    // write your code here\n    var result\
    \ = \"\"\n    for word in sentence.split(\" \") {\n        if isPrimeNumber(word)\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var newString = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            newString += \" \" + word\n\
    \        }\n    }\n    return newString", "    var result = \"\"\n    for word\
    \ in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    guard let sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n\
    \        return \"No words\"\n    }\n    guard let words = sentence.components(separatedBy:\
    \ \" \") else {\n        return \"No words\"\n    }\n    var result = \"\"\n \
    \   for word in words {\n        guard let word = word.trimmingCharacters(in:\
    \ .whitespaces) else {\n            continue\n        }\n        guard let number\
    \ = Int(word) else {\n            continue\n        }\n        if number == 1\
    \ {\n            result += word\n        }\n    }\n    return result", "    var\
    \ result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    \n    return \"\"", "    // write your code here\n\
    \    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for letter in sentence {\n        if letter == \" \"\
    \ {\n            result += letter\n        } else {\n            result += String(letter)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var primes\
    \ = [1]\n    for char in sentence {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            primes.append(char.unicodeScalars.count)\n        }\n    }\n\
    \    for prime in primes {\n        if prime > 1 {\n            for char in sentence\
    \ {\n                if char.unicodeScalars.count == prime {\n               \
    \     result += char\n                }\n            }\n        }\n    }\n   \
    \ return result", "    // write your code here\n    var newString = \"\"\n   \
    \ for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n     \
    \       newString += \" \" + word\n        }\n    }\n    return newString", " \
    \   if sentence == \"\" {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    var primeIndex = 0\n    var primeCount = 0\n    for\
    \ letter in sentence {\n        if letter == \" \" {\n            primes = primes[0..<primeIndex]\n\
    \            primeIndex = 0\n            primeCount = 0\n        } else {\n  \
    \          primes[primeIndex] = primes[primeIndex] + 1\n            if primes[primeIndex]\
    \ == 2 {\n                primeIndex += 1\n                primeCount += 1\n \
    \           }\n        }\n    }\n    for prime in primes {\n        if prime >\
    \ 1 {\n            if primeCount > 1 {\n                result += String(prime)\n\
    \                result += \" \"\n                primeCount -= 1\n          \
    \  } else {\n                result += String(prime)\n            }\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrimeNumber(word) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", '    return wordsInSentence(sentence,
    "")', "    var result = \"\"\n    for word in sentence.split(\" \") {\n      \
    \  if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n  \
    \  }\n    return result", '    return words_in_sentence_(sentence)', "    var\
    \ result = \"\"\n    var primes = [1]\n    for letter in sentence {\n        if\
    \ primes.contains(letter) {\n            primes.append(letter)\n        } else\
    \ {\n            result += letter\n        }\n    }\n    return result", "   \
    \ var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    if sentence == \"\" {\n        return\
    \ \"\"\n    }\n    var result = \"\"\n    var primes = [1]\n    var primeIndex\
    \ = 0\n    for char in sentence {\n        if char == \" \" {\n            primeIndex++\n\
    \        }\n        if primes[primeIndex] == 0 {\n            primes[primeIndex]\
    \ = 1\n            if primeIndex == len(primes) {\n                result += char\n\
    \            }\n        }\n    }\n    return result", "    // write your code\
    \ here\n    var result = \"\"\n    for word in sentence.split(\" \") {\n     \
    \   if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n \
    \   }\n    return result", "    guard let sentence = sentence.trimmingCharacters(in:\
    \ .whitespaces) else {\n        return \"No words\"\n    }\n    var result = \"\
    \"\n    for word in sentence.components(separatedBy: \" \") {\n        if isPrime(word:\
    \ word) {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrimeNumber(word)\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    if sentence == \"\" {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    var primeIndex = 0\n    var currentPrime = 1\n    for\
    \ char in sentence {\n        if char == \" \" {\n            primes[primeIndex]\
    \ = currentPrime\n            primeIndex++\n            currentPrime = 1\n   \
    \     } else {\n            currentPrime = currentPrime * primes[primeIndex]\n\
    \        }\n    }\n    for prime in primes {\n        if prime > 100 {\n     \
    \       break\n        }\n        if prime == 1 {\n            result += char\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var primes\
    \ = [1]\n    var primeIndex = 0\n    for char in sentence {\n        if char ==\
    \ \" \" {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if primeIndex == len(primes)\
    \ {\n                result += char\n            }\n        }\n    }\n    return\
    \ result", "    // write your code here\n    var result = \"\"\n    var primes\
    \ = [Int]()\n    for letter in sentence {\n        if primes.contains(Int(letter))\
    \ {\n            result += String(letter)\n        } else {\n            primes.append(Int(letter))\n\
    \        }\n    }\n    return result", "    // write your code here\n    var result\
    \ = \"\"\n    for char in sentence.characters {\n        if isPrimeNumber(char)\
    \ {\n            result += String(char)\n        }\n    }\n    return result",
  "    if sentence == \"\" {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    for letter in sentence.characters {\n        if primes.contains(letter)\
    \ {\n            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        if prime > 1 {\n            for letter in sentence.characters {\n\
    \                if prime == letter {\n                    result += String(letter)\n\
    \                }\n            }\n        }\n    }\n    return result", "   \
    \ var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    if sentence.isEmpty {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    var primeIndex = 0\n    for letter in sentence.characters\
    \ {\n        if primes[primeIndex] == 0 {\n            primeIndex++\n        }\n\
    \        if primes[primeIndex] == 1 {\n            primeIndex++\n        }\n \
    \       if primes[primeIndex] == 2 {\n            primeIndex++\n        }\n  \
    \      if primes[primeIndex] == 3 {\n            primeIndex++\n        }\n   \
    \     if primes[primeIndex] == 4 {\n            primeIndex++\n        }\n    \
    \    if primes[primeIndex] == 5 {\n            primeIndex++\n        }\n     \
    \   if primes[primeIndex] == 6 {\n            primeIndex++\n        }\n      \
    \  if primes[primeIndex] == 7 {\n            primeIndex++\n        }\n       \
    \ if primes[primeIndex] == 8 {\n            primeIndex++\n        }\n        if\
    \ primes[primeIndex] == 9 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 10 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 11 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 12 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 13 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 14 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 15 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 16 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 17 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 18 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 19 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 20 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 21 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 22 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 23 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 24 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 25 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 26 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 27 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 28 {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 29 {\n            primeIndex++\n        }\n        if primes[primeIndex",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", '    return words_in_sentence_(sentence,
    "")', "    var result = \"\"\n    for word in sentence.split(\" \") {\n      \
    \  if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n  \
    \  }\n    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    guard let sentence = sentence.lowercased(),\
    \ let words = sentence.components(separatedBy: \" \") else {\n        return \"\
    No words\"\n    }\n    var result = \"\"\n    for word in words {\n        if\
    \ let number = Int(word) {\n            if number > 1 {\n                result\
    \ += String(number)\n            } else {\n                result += word\n  \
    \          }\n        } else {\n            result += word\n        }\n    }\n\
    \    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrimeNumber(word) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    guard let sentence\
    \ = sentence.trimmingCharacters(in: .whitespaces) else {\n        return \"\"\n\
    \    }\n    var result = \"\"\n    var primes = [1]\n    var primeIndex = 0\n\
    \    var currentWord = \"\"\n    for char in sentence {\n        if char.isLetter\
    \ {\n            currentWord = String(char)\n            primeIndex += 1\n   \
    \         if primeIndex == primes.count {\n                primes.append(1)\n\
    \                primeIndex = 0\n            }\n        } else {\n           \
    \ if currentWord.isEmpty {\n                result += currentWord\n          \
    \  } else {\n                result += currentWord + \" \"\n                currentWord\
    \ = \"\"\n            }\n        }\n    }\n    if currentWord.isEmpty {\n    \
    \    result += currentWord\n    }\n    return result", "    var result = \"\"\n\
    \    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n  \
    \          result += \" \" + word\n        }\n    }\n    return result", "   \
    \ guard let sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n\
    \        return \"\"\n    }\n    let words = sentence.components(separatedBy:\
    \ \" \")\n    var result = \"\"\n    for word in words {\n        if isPrime(word:\
    \ word) {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    // write your code here\n    \n  \
    \  return \"\"", "    // write your code here\n    var result: String = \"\"\n\
    \    for word in sentence.split(\" \") {\n        if isPrimeNumber(word) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  if sentence == \"\" {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    var primeIndex = 0\n    var currentPrime = 1\n    for\
    \ char in sentence {\n        if char == \" \" {\n            primes[primeIndex]\
    \ = currentPrime\n            primeIndex++\n            currentPrime++\n     \
    \   } else {\n            currentPrime = primes[primeIndex]\n        }\n    }\n\
    \    for prime in primes {\n        if prime > 100 {\n            return \"\"\n\
    \        }\n        if prime == 1 {\n            result += char\n        } else\
    \ {\n            result += char + \" \"\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    var primes = [1]\n    for letter in sentence {\n        if primes.contains(letter)\
    \ {\n            primes.append(letter)\n        } else {\n            result +=\
    \ letter\n        }\n    }\n    return result", "    // write your code here\n\
    \    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  '    return words_in_sentence_(sentence, "")', "    // write your code here\n  \
    \  var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    var primeIndex = 0\n    var currentPrime\
    \ = 1\n    for letter in sentence {\n        if primes[primeIndex] == 1 {\n  \
    \          primeIndex++\n            currentPrime++\n        }\n        if letter\
    \ == \" \" {\n            primes[primeIndex] = 1\n            primeIndex++\n \
    \           currentPrime++\n        }\n    }\n    for letter in sentence {\n \
    \       if letter == \" \" {\n            primes[primeIndex] = 1\n           \
    \ primeIndex++\n            currentPrime++\n        }\n    }\n    for prime in\
    \ primes {\n        if prime == 1 {\n            result += String(letter)\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    for letter in\
    \ sentence {\n        if letter == \" \" {\n            result += letter\n   \
    \     }\n    }\n    var primes = [1]\n    for letter in result {\n        if primes.contains(letter)\
    \ {\n            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        result = result.replacingOccurrences(of: String(prime), with: \"\"\
    )\n    }\n    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    // write your code\
    \ here\n    var result = \"\"\n    for char in sentence {\n        if char.unicodeScalars.isPrime()\
    \ {\n            result += char\n        }\n    }\n    return result", "    var\
    \ result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for char in sentence {\n\
    \        if char == \" \" {\n            result += char\n        } else {\n  \
    \          result += char\n        }\n    }\n    for char in result {\n      \
    \  if char.isPrime() {\n            result += char\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for word in sentence.split(\" \") {\n \
    \       if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n\
    \    }\n    return result", "    // write your code here\n    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    var primeIndex = 0\n    for letter\
    \ in sentence.characters {\n        if primes[primeIndex] == 0 {\n           \
    \ primeIndex++\n        }\n        if primes[primeIndex] == 1 {\n            primeIndex++\n\
    \        }\n        if letter == \" \" {\n            primeIndex++\n        }\n\
    \        primes[primeIndex] = primes[primeIndex] + 1\n    }\n    for prime in\
    \ primes {\n        if prime > 1 {\n            for letter in sentence.characters\
    \ {\n                if prime == 1 {\n                    result = result + String(letter)\n\
    \                } else {\n                    result = result + String(letter)\
    \ + \" \"\n                }\n            }\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    for letter in sentence {\n   \
    \     if primes.contains(letter) {\n            primes.append(letter)\n      \
    \  }\n    }\n    for prime in primes {\n        for letter in sentence {\n   \
    \         if prime == letter {\n                result += letter\n           \
    \ }\n        }\n    }\n    return result", "    var result = \"\"\n    for word\
    \ in sentence.split(\" \") {\n        if isPrimeNumber(word) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var primes\
    \ = [1]\n    for letter in sentence {\n        if primes.contains(letter) {\n\
    \            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        for letter in sentence {\n            if prime == letter {\n    \
    \            result += letter\n            }\n        }\n    }\n    return result",
  '    return words_in_sentence_helper(sentence, "", "", "")', '    return Solution().wordsInSentence(sentence)',
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    var primes = [1]\n    for char in sentence {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            primes.append(char.unicodeScalars.count)\n        } else {\n\
    \            result += char\n        }\n    }\n    return result", "    // write\
    \ your code here\n    var result = \"\"\n    for word in sentence.split(\" \"\
    ) {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n   \
    \     }\n    }\n    return result", "    // write your code here\n    \n    return\
    \ \"\"", "    // write your code here\n    var newString = \"\"\n    for char\
    \ in sentence.characters {\n        if isPrime(Int(char)) {\n            newString\
    \ += String(char)\n        }\n    }\n    return newString", "    var result =\
    \ \"\"\n    for letter in sentence.characters {\n        if isPrime(Int(letter))\
    \ {\n            result += String(letter)\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    for word in sentence.split(\"\
    \ \") {\n        if primes.contains(word.characters.count) {\n            result\
    \ += \" \" + word\n            primes.append(word.characters.count)\n        }\n\
    \    }\n    return result", "    // write your code here\n    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  guard let sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n\
    \        return \"No words\"\n    }\n    var result = \"\"\n    var primes = [1]\n\
    \    var primeIndex = 0\n    for letter in sentence {\n        if letter.isLetter\
    \ {\n            if primeIndex == primes.count {\n                primes.append(1)\n\
    \                primeIndex += 1\n            }\n            primes[primeIndex]\
    \ += 1\n        }\n    }\n    for prime in primes {\n        if prime > 1 {\n\
    \            result += String(repeating: \" \", count: prime - 1)\n        }\n\
    \        result += String(repeating: \"#\", count: prime)\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    for char in sentence {\n     \
    \   if primes.contains(char.unicodeScalars.count) {\n            primes.append(1)\n\
    \        } else {\n            primes.append(primes.last! + 1)\n        }\n  \
    \  }\n    for char in sentence {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            result += String(char)\n        }\n    }\n    return result",
  '    return words_in_sentence_helper(sentence, "")', "    var result = \"\"\n  \
    \  for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n    \
    \        result += \" \" + word\n        }\n    }\n    return result", "    guard\
    \ let sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n      \
    \  return \"\"\n    }\n    guard let words = sentence.components(separatedBy:\
    \ \" \") else {\n        return \"\"\n    }\n    var result = \"\"\n    for word\
    \ in words {\n        guard let number = Int(word) else {\n            continue\n\
    \        }\n        if number == 1 {\n            result += word\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var primes = [1]\n   \
    \ for letter in sentence.characters {\n        if primes.contains(letter) {\n\
    \            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        if prime > 1 {\n            for letter in sentence.characters {\n\
    \                if prime == letters.distance(letters, letter) {\n           \
    \         result += String(letter)\n                }\n            }\n       \
    \ }\n    }\n    return result", "    // write your code here\n    \n    return\
    \ \"\"", "    var result = \"\"\n    var primes = [1]\n    for letter in sentence.characters\
    \ {\n        if primes.contains(Int(letter)) {\n            primes.append(primes.last!\
    \ + 1)\n        }\n    }\n    for prime in primes {\n        if prime > result.characters.count\
    \ {\n            result = result + String(repeating: \" \", count: prime - result.characters.count)\n\
    \        }\n        result = result + String(repeating: String(repeating: \" \"\
    , count: prime - result.characters.count), count: result.characters.count)\n \
    \   }\n    return result", "    // write your code here\n    var result = \"\"\
    \n    for char in sentence {\n        if char.isLetter() {\n            result\
    \ += char\n        }\n    }\n    for char in result {\n        if char.isLetter()\
    \ {\n            if result.contains(char) == false {\n                result +=\
    \ char\n            }\n        }\n    }\n    for char in result {\n        if\
    \ char.isLetter() {\n            if result.contains(char) == false {\n       \
    \         result += char\n            }\n        }\n    }\n    for char in result\
    \ {\n        if char.isLetter() {\n            if result.contains(char) == false\
    \ {\n                result += char\n            }\n        }\n    }\n    for\
    \ char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                result += char\n            }\n        }\n    }\n\
    \    for char in result {\n        if char.isLetter() {\n            if result.contains(char)\
    \ == false {\n                ", "    // write your code here\n    var result\
    \ = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrimeNumber(word) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", '    return words_in_sentence_(sentence,
    "")', "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    var primes = [1]\n    var primeIndex = 0\n    for char in sentence {\n \
    \       if char == \" \" {\n            primeIndex++\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if primeIndex == len(primes)\
    \ {\n                result += char\n            }\n        }\n    }\n    return\
    \ result", "    var result = \"\"\n    for word in sentence.split(\" \") {\n \
    \       if isPrime(Int(word)) {\n            result += \" \" + word\n        }\n\
    \    }\n    return result", "    // write your code here\n    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  // write your code here\n    var result = \"\"\n    for char in sentence {\n\
    \        if char == \" \" {\n            result += char\n        }\n    }\n  \
    \  for char in result {\n        if char == \"a\" || char == \"e\" || char ==\
    \ \"i\" || char == \"o\" || char == \"u\" || char == \"A\" || char == \"E\" ||\
    \ char == \"I\" || char == \"O\" || char == \"U\" {\n            continue\n  \
    \      }\n        if char == \"b\" || char == \"c\" || char == \"d\" || char ==\
    \ \"f\" || char == \"g\" || char == \"h\" || char == \"j\" || char == \"k\" ||\
    \ char == \"l\" || char == \"m\" || char == \"n\" || char == \"p\" || char ==\
    \ \"q\" || char == \"r\" || char == \"s\" || char == \"t\" || char == \"v\" ||\
    \ char == \"w\" || char == \"x\" || char == \"y\" || char == \"z\" {\n       \
    \     continue\n        }\n        if char == \"0\" {\n            continue\n\
    \        }\n        if char == \"1\" {\n            continue\n        }\n    \
    \    if char == \"2\" {\n            continue\n        }\n        if char == \"\
    3\" {\n            continue\n        }\n        if char == \"4\" {\n         \
    \   continue\n        }\n        if char == \"5\" {\n            continue\n  \
    \      }\n        if char == \"6\" {\n            continue\n        }\n      \
    \  if char == \"7\" {\n            continue\n        }\n        if char == \"\
    8\" {\n            continue\n        }\n        if char == \"9\" {\n         \
    \   continue\n        }\n        if char == \"!\" {\n            continue\n  \
    \      }\n        if char == \"?\" {\n            continue\n        }\n      \
    \  if char == \".\" {\n            continue\n        }\n        if char == \"\
    ,\" {\n            continue\n        }\n        if char == \"-\" {\n         \
    \   continue\n        }\n        if char == \"_\" {\n            continue\n  \
    \      }\n        if char == \"/\" {\n            continue\n        }\n      \
    \  if char == \"(\" {\n            continue\n        }\n        if char == \"\
    )\" {\n            continue\n        }\n        if char == \"{\" {\n         \
    \   continue\n        }\n        if char == \"}\" {\n            continue\n  \
    \      }\n        if char == \"[\" {\n            continue\n        }\n      \
    \  if char == \"]\" {\n            continue\n        }\n        if char == \"\
    {\" {\n            continue\n        }\n        if char == \"}\" {\n         \
    \   continue\n        }\n        if char == \"|\" {\n            continue\n  \
    \      }\n        if char == \"\\\\\" {\n            continue\n        }\n   \
    \     if char == \"^\" {\n            continue\n        }\n        if char ==\
    \ \"~\" {\n            continue\n        }\n        if char == \"`\" {\n     \
    \       continue\n        }\n        if char == \"-\" {\n            continue\n\
    \        }\n        if char == \"_", "    var result = \"\"\n    var primes =\
    \ [1]\n    for word in sentence.split(\" \") {\n        if primes.contains(word.characters.count)\
    \ {\n            primes.append(word.characters.count)\n            result += \"\
    \ \" + word\n        }\n    }\n    return result", "    var result = \"\"\n  \
    \  for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n    \
    \        result += \" \" + word\n        }\n    }\n    return result", "    //\
    \ write your code here\n    var newString = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrimeNumber(word) {\n            newString += \" \" + word\n\
    \        }\n    }\n    return newString", "    // write your code here\n    var\
    \ resultString = \"\"\n    for character in sentence {\n        if character ==\
    \ \" \" {\n            resultString += character\n        }\n    }\n    var primeNumbers\
    \ = \"\"\n    for character in resultString {\n        if character == \" \" {\n\
    \            primeNumbers += character\n        }\n    }\n    for character in\
    \ primeNumbers {\n        if Int(character) == Int(character) {\n            resultString\
    \ += character\n        }\n    }\n    return resultString", "    // write your\
    \ code here\n    \n    var resultString = \"\"\n    \n    for word in sentence.split(\"\
    \ \") {\n        if isPrimeNumber(word) {\n            resultString += \" \" +\
    \ word\n        }\n    }\n    \n    return resultString", "    var result = \"\
    \"\n    var primes = [1]\n    for word in sentence.split(\" \") {\n        if\
    \ primes.contains(word.characters.count) {\n            result += \" \" + word\n\
    \            primes.append(word.characters.count)\n        }\n    }\n    return\
    \ result", '    return words_in_sentence_aux(sentence, "")', "    var result =\
    \ \"\"\n    for word in sentence.split(\" \") {\n        if isPrimeNumber(word)\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    return \"\"", '    return Solution().wordsInSentence(sentence)',
  "    // write your code here\n    \n    var result = \"\"\n    \n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    \n    return result", "    var result\
    \ = \"\"\n    var primes = [1]\n    for char in sentence.characters {\n      \
    \  if primes.contains(char.unicodeScalars.count) {\n            primes.append(char.unicodeScalars.count)\n\
    \        }\n    }\n    for prime in primes {\n        result = result + String(sentence[sentence.startIndex..<sentence.startIndex.advancedBy(prime)])\n\
    \    }\n    return result", "    // write your code here\n    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  var result = \"\"\n    for letter in sentence {\n        if isPrime(Int(letter))\
    \ {\n            result += letter\n        }\n    }\n    return result", "   \
    \ var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result: String = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    if sentence == \"\
    \" {\n        return \"\"\n    }\n    var result = \"\"\n    var primes = [1]\n\
    \    for letter in sentence.characters {\n        if primes.contains(letter) {\n\
    \            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        result = result + String(prime)\n    }\n    return result", "   \
    \ if let sentence = sentence.lowercased() {\n        var result = \"\"\n     \
    \   var primes = [1]\n        for letter in sentence {\n            if let index\
    \ = Int(letter) {\n                primes[index] = primes[index] + 1\n       \
    \     }\n        }\n        for prime in primes {\n            if prime > 1 {\n\
    \                for index in 0..<prime {\n                    result = result\
    \ + String(index)\n                }\n            }\n        }\n        return\
    \ result\n    }\n    return \"\"", "    var result = \"\"\n    var primes = [1]\n\
    \    var primeIndex = 0\n    for char in sentence {\n        if char == \" \"\
    \ {\n            primes[primeIndex] = primes[primeIndex] + 1\n        }\n    \
    \    if primes[primeIndex] == 0 {\n            primeIndex = primeIndex + 1\n \
    \       }\n    }\n    for prime in primes {\n        result = result + String(prime)\n\
    \    }\n    return result", "    // write your code here\n    var result: String\
    \ = \"\"\n    var primeNumber: Int = 0\n    for character in sentence {\n    \
    \    if character == \" \" {\n            primeNumber++\n        }\n    }\n  \
    \  for character in sentence {\n        if character == \" \" {\n            if\
    \ primeNumber == 0 {\n                result += character\n            }\n   \
    \     }\n    }\n    return result", "    // write your code here\n    var result\
    \ = \"\"\n    for word in sentence.split(\" \") {\n        if isPrimeNumber(word)\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    var primeIndex = 0\n    for letter\
    \ in sentence.characters {\n        if primes[primeIndex] == 0 {\n           \
    \ primeIndex++\n        }\n        if primes[primeIndex] == 1 {\n            primeIndex++\n\
    \        }\n        if letter == \" \" {\n            primeIndex++\n        }\n\
    \        if letter == \",\" {\n            primeIndex++\n        }\n        if\
    \ letter == \".\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"?\" {\n            primeIndex++\n        }\n        if letter == \"!\" {\n\
    \            primeIndex++\n        }\n        if letter == \"-\" {\n         \
    \   primeIndex++\n        }\n        if letter == \"_\" {\n            primeIndex++\n\
    \        }\n        if letter == \"/\" {\n            primeIndex++\n        }\n\
    \        if letter == \"\\\\\" {\n            primeIndex++\n        }\n      \
    \  if letter == \"@\" {\n            primeIndex++\n        }\n        if letter\
    \ == \"$\" {\n            primeIndex++\n        }\n        if letter == \"%\"\
    \ {\n            primeIndex++\n        }\n        if letter == \"^\" {\n     \
    \       primeIndex++\n        }\n        if letter == \"&\" {\n            primeIndex++\n\
    \        }\n        if letter == \"*\" {\n            primeIndex++\n        }\n\
    \        if letter == \"(\" {\n            primeIndex++\n        }\n        if\
    \ letter == \")\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"{\" {\n            primeIndex++\n        }\n        if letter == \"}\" {\n\
    \            primeIndex++\n        }\n        if letter == \"[\" {\n         \
    \   primeIndex++\n        }\n        if letter == \"]\" {\n            primeIndex++\n\
    \        }\n        if letter == \"<\" {\n            primeIndex++\n        }\n\
    \        if letter == \">\" {\n            primeIndex++\n        }\n        if\
    \ letter == \"|\" {\n            primeIndex++\n        }\n        if letter ==\
    \ \"=\" { // this one should be last\n            primeIndex++\n        }\n  \
    \      if letter == \"~\" {\n            primeIndex++\n        }\n        if letter\
    \ == \"`\" {\n            primeIndex++\n        }\n        if letter == \"'\"\
    \ {\n            primeIndex++\n        }\n        if letter == \"%\" {\n     \
    \       primeIndex++\n        }\n        if letter == \"+\" {\n            primeIndex++\n\
    \        }\n        if letter == \"-\" {\n            primeIndex++\n        }\n\
    \        if letter == \"_\" {\n            primeIndex++\n        }\n        if\
    \ letter == \"/\" {\n            primeIndex++", "    // write your code here\n\
    \    var newString = \"\"\n    for word in sentence.split(\" \") {\n        if\
    \ isPrime(Int(word)) {\n            newString += word + \" \" \n        }\n  \
    \  }\n    return newString", "    var result = \"\"\n    var primes = [1]\n  \
    \  var primeIndex = 0\n    for char in sentence {\n        if char == \" \" {\n\
    \            primeIndex++\n        }\n        if primes[primeIndex] == 0 {\n \
    \           primes[primeIndex] = 1\n            if char == \"a\" || char == \"\
    e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n                result\
    \ += char\n            }\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    \n    return \"\"", "    // write your code here\n\
    \    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    \n    var result = \"\"\n    \n    for word in\
    \ sentence.split(\" \") {\n        if isPrimeNumber(word) {\n            result\
    \ += \" \" + word\n        }\n    }\n    \n    return result", "    // write your\
    \ code here\n    var result = \"\"\n    for word in sentence.split(\" \") {\n\
    \        if isPrime(Int(word)) {\n            result += \" \" + word\n       \
    \ }\n    }\n    return result", "    guard let sentence = sentence.trimmingCharacters(in:\
    \ .whitespaces) else {\n        return \"0\"\n    }\n    var result = \"0\"\n\
    \    for letter in sentence.unicodeScalars {\n        if let index = Int(letter)\
    \ {\n            if index > 0 {\n                let isPrime = index == 2 || index\
    \ == 3 || index == 5 || index == 7 || index == 11 || index == 13\n           \
    \     if isPrime {\n                    result += String(index)\n            \
    \    }\n            }\n        }\n    }\n    return result", "    var result =\
    \ \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    // write your code here\n    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var primes\
    \ = [1]\n    for letter in sentence.characters {\n        if primes.contains(letter)\
    \ {\n            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        if prime > result.characters.count {\n            result = result\
    \ + String(prime)\n        }\n    }\n    return result", "    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  if sentence.isEmpty {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    for char in sentence.characters {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            primes.append(1)\n        } else {\n            primes.append(0)\n\
    \        }\n    }\n    for char in sentence.characters {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = \"\"\n    for letter in sentence.characters {\n        if isPrime(Int(letter))\
    \ {\n            result += String(letter)\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    if sentence == \"\" {\n        return \"\"\n    }\n    var result = \"\"\n\
    \    var primes = [1]\n    var primeIndex = 0\n    for letter in sentence {\n\
    \        if primes[primeIndex] == 1 {\n            primeIndex++\n        }\n \
    \       if primeIndex == len(primes) {\n            primeIndex = 0\n         \
    \   primes.append(1)\n        }\n        if letter == \" \" {\n            primes[primeIndex]\
    \ = 0\n            result += letter\n        }\n    }\n    return result", " \
    \   // write your code here\n    \n    return \"\"", "    var result = \"\"\n\
    \    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n  \
    \          result += \" \" + word\n        }\n    }\n    return result", "   \
    \ // write your code here\n    var result = \"[\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += word + \" \"\n\
    \        }\n    }\n    result += \"]\"\n    return result", "    if sentence ==\
    \ \"\" {\n        return \"\"\n    }\n    var result = \"\"\n    var primes =\
    \ [1]\n    var primeIndex = 0\n    for char in sentence {\n        if char ==\
    \ \" \" {\n            primeIndex = 0\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \         primeIndex++\n            }\n        }\n    }\n    for prime in primes\
    \ {\n        if prime == 1 {\n            for char in sentence {\n           \
    \     if char == \" \" {\n                    primeIndex = 0\n               \
    \ }\n                if prime == 1 {\n                    if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \                 primeIndex++\n                    }\n                }\n   \
    \         }\n        }\n    }\n    for char in sentence {\n        if char ==\
    \ \" \" {\n            primeIndex = 0\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \         primeIndex++\n            }\n        }\n    }\n    for prime in primes\
    \ {\n        if prime == 1 {\n            for char in sentence {\n           \
    \     if char == \" \" {\n                    primeIndex = 0\n               \
    \ }\n                if prime == 1 {\n                    if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \                 primeIndex++\n                    }\n                }\n   \
    \         }\n        }\n    }\n    for char in sentence {\n        if char ==\
    \ \" \" {\n            primeIndex = 0\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \         primeIndex++\n            }\n        }\n    }\n    for prime in primes\
    \ {\n        if prime == 1 {\n            for char in sentence {\n           \
    \     if char == \" \" {\n                    primeIndex = 0\n               \
    \ }\n                if prime == 1 {\n                    if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \                 primeIndex++\n                    }\n                }\n   \
    \         }\n        }\n    }\n    for char in sentence {\n        if char ==\
    \ \" \" {\n            primeIndex = 0\n        }\n        if primes[primeIndex]\
    \ == 0 {\n            primes[primeIndex] = 1\n            if char == \"a\" ||\
    \ char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n       \
    \         primeIndex++\n            }\n", "    var result = \"\"\n    for word\
    \ in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    for word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n \
    \           result += \" \" + word\n        }\n    }\n    return result", "  \
    \  var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  '    return sentence', "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for word in\
    \ sentence.split(\" \") {\n        if isPrime(Int(word)) {\n            result\
    \ += \" \" + word\n        }\n    }\n    return result", "    var result = \"\"\
    \n    var primes = [1]\n    for letter in sentence.characters {\n        if primes.contains(letter)\
    \ {\n            primes.append(letter)\n        }\n    }\n    for prime in primes\
    \ {\n        for letter in sentence.characters {\n            if prime == letter\
    \ {\n                result += String(letter)\n            }\n        }\n    }\n\
    \    return result", "    var result = \"\"\n    for word in sentence.split(\"\
    \ \") {\n        if isPrime(Int(word)) {\n            result += \" \" + word\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var primes\
    \ = [1]\n    for char in sentence {\n        if primes.contains(char.unicodeScalars.count)\
    \ {\n            primes.append(char.unicodeScalars.count)\n        }\n    }\n\
    \    for prime in primes {\n        if prime > 1 {\n            for char in sentence\
    \ {\n                if char.unicodeScalars.count == prime {\n               \
    \     result += char\n                }\n            }\n        }\n    }\n   \
    \ return result", "    // write your code here\n    \n    return \"\"", "    var\
    \ result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for letter in sentence {\n        if letter == \" \"\
    \ {\n            result += letter\n        } else {\n            result += letter\
    \ + \" \"\n        }\n    }\n    return result", "    var result = \"\"\n    for\
    \ word in sentence.split(\" \") {\n        if isPrime(Int(word)) {\n         \
    \   result += \" \" + word\n        }\n    }\n    return result", "    guard let\
    \ sentence = sentence.trimmingCharacters(in: .whitespaces) else {\n        return\
    \ \"No words\"\n    }\n    var result = \"\"\n    var primes = [1]\n    for letter\
    \ in sentence.characters {\n        if primes.contains(letter) {\n           \
    \ primes.append(letter)\n        }\n    }\n    for prime in primes {\n       \
    \ if prime > result.characters.count {\n            result = result + String(repeating:\
    \ String(repeating: \" \", count: prime - result.characters.count), count: result.characters.count\
    \ + 1)\n        }\n        result = result + String(repeating: String(repeating:\
    \ \" \", count: prime - result.characters.count), count: result.characters.count\
    \ + 1)\n    }\n    return result", "    var result = \"\"\n    var primes = [1]\n\
    \    for letter in sentence {\n        if primes.contains(letter) {\n        \
    \    primes.append(letter)\n        }\n    }\n    for prime in primes {\n    \
    \    for letter in sentence {\n            if prime == letter {\n            \
    \    result += letter\n            }\n        }\n    }\n    return result", " \
    \   var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for letter in sentence {\n        if isPrime(letter)\
    \ {\n            result += letter\n        }\n    }\n    return result", "   \
    \ var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    for letter in sentence.characters\
    \ {\n        if primes.contains(letter) {\n            primes.append(letter)\n\
    \        }\n    }\n    for prime in primes {\n        for letter in sentence.characters\
    \ {\n            if prime == letter {\n                result += String(letter)\n\
    \            }\n        }\n    }\n    return result", "    // write your code\
    \ here\n    \n    return \"\"", '    return words_in_sentence_(sentence)', " \
    \   var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    for word in sentence.split(\" \") {\n        if isPrime(Int(word))\
    \ {\n            result += \" \" + word\n        }\n    }\n    return result",
  "    var result = \"\"\n    var primes = [1]\n    for letter in sentence {\n   \
    \     if primes.contains(letter) {\n            primes.append(letter)\n      \
    \  }\n    }\n    for prime in primes {\n        for letter in sentence {\n   \
    \         if prime == letter {\n                result += letter\n           \
    \ }\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

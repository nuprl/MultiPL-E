language: swift
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1q1r2h5g.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp1q1r2h5g.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 1 // first term\n    var b = 1 // second term\n    for _ in 0..<n {\n  \
    \      let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp7f_v3rr/tmpp7f_v3rr.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc37f94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc37c8bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc37c8b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc37c8a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp7f_v3rr                        0x000056409176e335 <unavailable> + 4917

    5    libc.so.6                          0x00002acc38180460 __libc_start_main +
    245

    6    tmpp7f_v3rr                        0x000056409176dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpy_3_7_hg.swift:4:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0, 1)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1q1r2h5g.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp1q1r2h5g.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1 // Fibonacci numbers start with 0 and 1.\n    for _ in 0..<n {\n\
    \        let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ fib1 = 1\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2,\
    \ fib1 + fib2\n    }\n    return fib2\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp2nldcsvb.swift:7:13: error: consecutive statements on a line must\
    \ be separated by ';'\n        fib1, fib2 = fib2, fib1 + fib2\n            ^\n\
    \            ;\n/tmp/tmp2nldcsvb.swift:7:13: error: expected expression\n    \
    \    fib1, fib2 = fib2, fib1 + fib2\n            ^\n/tmp/tmp2nldcsvb.swift:7:9:\
    \ warning: variable is unused\n        fib1, fib2 = fib2, fib1 + fib2\n      \
    \  ^~~~\n/tmp/tmp2nldcsvb.swift:4:9: warning: variable 'fib1' was never mutated;\
    \ consider changing to 'let' constant\n    var fib1 = 1\n    ~~~ ^\n    let\n\
    /tmp/tmp2nldcsvb.swift:5:9: warning: variable 'fib2' was never mutated; consider\
    \ changing to 'let' constant\n    var fib2 = 1\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 1 // first number\n    var b = 1 // second number\n    for _ in 0..<n {\n\
    \        let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpf9a4di57/tmpf9a4di57.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab82e1a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab82dea0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab82dea0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab82de9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf9a4di57                        0x0000560f5bd91335 <unavailable> + 4917

    5    libc.so.6                          0x00002ab82e395460 __libc_start_main +
    245

    6    tmpf9a4di57                        0x0000560f5bd90fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpks2m3t16.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpks2m3t16.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1, next\n    for next in 1...n {\n        let tmp = a\n        a\
    \ = b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmph_o6mt_u.swift:4:23: error: type annotation missing in pattern\n\
    \    var a = 0, b = 1, next\n                      ^\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ fib1: Int = 0\n    var fib2: Int = 0\n    var fib3: Int = 0\n    var fib4: Int\
    \ = 0\n    var fib5: Int = 0\n    var fib6: Int = 0\n    var fib7: Int = 0\n \
    \   var fib8: Int = 0\n    var fib9: Int = 0\n    var fib10: Int = 0\n    var\
    \ fib11: Int = 0\n    var fib12: Int = 0\n    var fib13: Int = 0\n    var fib14:\
    \ Int = 0\n    var fib15: Int = 0\n    var fib16: Int = 0\n    var fib17: Int\
    \ = 0\n    var fib18: Int = 0\n    var fib19: Int = 0\n    var fib20: Int = 0\n\
    \    var fib21: Int = 0\n    var fib22: Int = 0\n    var fib23: Int = 0\n    var\
    \ fib24: Int = 0\n    var fib25: Int = 0\n    var fib26: Int = 0\n    var fib27:\
    \ Int = 0\n    var fib28: Int = 0\n    var fib29: Int = 0\n    var fib30: Int\
    \ = 0\n    var fib31: Int = 0\n    var fib32: Int = 0\n    var fib33: Int = 0\n\
    \    var fib34: Int = 0\n    var fib35: Int = 0\n    var fib36: Int = 0\n    var\
    \ fib37: Int = 0\n    var fib38: Int = 0\n    var fib39: Int = 0\n    var fib40:\
    \ Int = 0\n    var fib41: Int = 0\n    var fib42: Int = 0\n    var fib43: Int\
    \ = 0\n    var fib44: Int = 0\n    var fib45: Int = 0\n    var fib46: Int = 0\n\
    \    var fib47: Int = 0\n    var fib48: Int = 0\n    var fib49: Int = 0\n    var\
    \ fib50: Int = 0\n    var fib51: Int = 0\n    var fib52: Int = 0\n    var fib53:\
    \ Int = 0\n    var fib54: Int = 0\n    var fib55: Int = 0\n    var fib56: Int\
    \ = 0\n    var fib57: Int = 0\n    var fib58: Int = 0\n    var fib59: Int = 0\n\
    \    var fib60: Int = 0\n    var fib61: Int = 0\n    var fib62: Int = 0\n    var\
    \ fib63: Int = 0\n    var fib64: Int = 0\n    var fib65: Int = 0\n    var fib66:\
    \ Int = 0\n    var fib67: Int = 0\n    var fib68: Int = 0\n    var fib69: Int\
    \ = 0\n    var fib70: Int = 0\n    var fib71: Int = 0\n    var fib72: Int = 0\n\
    \    var fib73: Int = 0\n    var fib74: Int = 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp5n5qlxo3.swift:4:9: warning: variable 'fib1' was never used; consider\
    \ replacing with '_' or removing it\n    var fib1: Int = 0\n        ^~~~\n   \
    \     _\n/tmp/tmp5n5qlxo3.swift:5:9: warning: variable 'fib2' was never used;\
    \ consider replacing with '_' or removing it\n    var fib2: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:6:9: warning: variable 'fib3' was never used;\
    \ consider replacing with '_' or removing it\n    var fib3: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:7:9: warning: variable 'fib4' was never used;\
    \ consider replacing with '_' or removing it\n    var fib4: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:8:9: warning: variable 'fib5' was never used;\
    \ consider replacing with '_' or removing it\n    var fib5: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:9:9: warning: variable 'fib6' was never used;\
    \ consider replacing with '_' or removing it\n    var fib6: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:10:9: warning: variable 'fib7' was never used;\
    \ consider replacing with '_' or removing it\n    var fib7: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:11:9: warning: variable 'fib8' was never used;\
    \ consider replacing with '_' or removing it\n    var fib8: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:12:9: warning: variable 'fib9' was never used;\
    \ consider replacing with '_' or removing it\n    var fib9: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp5n5qlxo3.swift:13:9: warning: variable 'fib10' was never used;\
    \ consider replacing with '_' or removing it\n    var fib10: Int = 0\n       \
    \ ^~~~~\n        _\n/tmp/tmp5n5qlxo3.swift:14:9: warning: variable 'fib11' was\
    \ never used; consider replacing with '_' or removing it\n    var fib11: Int =\
    \ 0\n        ^~~~~\n        _\n/tmp/tmp5n5qlxo3.swift:15:9: warning: variable\
    \ 'fib12' was never used; consider replacing with '_' or removing it\n    var\
    \ fib12: Int = 0\n        ^~~~~\n        _\n/tmp/tmp5n5qlxo3.swift:16:9: warning:\
    \ variable 'fib13' was never used; consider replacing with '_' or removing it\n\
    \    var fib13: Int = 0\n        ^~~~"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1 // Fibonacci numbers grow on both sides.\n    for _ in 0..<n {\n\
    \        let next = a\n        a = b\n        b = next\n    }\n    return b\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmp2sm66lu6/tmp2sm66lu6.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9eefd4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9eeccbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9eeccb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9eecca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2sm66lu6                        0x000055df728ae335 <unavailable> + 4917

    5    libc.so.6                          0x00002ba9ef1c0460 __libc_start_main +
    245

    6    tmp2sm66lu6                        0x000055df728adfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1 // first two numbers\n    for _ in 0..<n { // loop n times\n  \
    \      let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 1 // first Fibonacci number\n    var b = 1 // second Fibonacci number\n\
    \    for _ in 0..<n {\n        // Update next Fibonacci number\n        let next\
    \ = a\n        a = b\n        b = next\n    }\n    return a\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpdj4o4y5q/tmpdj4o4y5q.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace282eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace27fe1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace27fe1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace27fe07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdj4o4y5q                        0x000055a8e67d8335 <unavailable> + 4917

    5    libc.so.6                          0x00002ace284d6460 __libc_start_main +
    245

    6    tmpdj4o4y5q                        0x000055a8e67d7fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ fib1 = 0\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2,\
    \ fib1 + fib2\n    }\n    return fib2\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprui7izsg.swift:7:13: error: consecutive statements on a line must\
    \ be separated by ';'\n        fib1, fib2 = fib2, fib1 + fib2\n            ^\n\
    \            ;\n/tmp/tmprui7izsg.swift:7:13: error: expected expression\n    \
    \    fib1, fib2 = fib2, fib1 + fib2\n            ^\n/tmp/tmprui7izsg.swift:7:9:\
    \ warning: variable is unused\n        fib1, fib2 = fib2, fib1 + fib2\n      \
    \  ^~~~\n/tmp/tmprui7izsg.swift:4:9: warning: variable 'fib1' was never mutated;\
    \ consider changing to 'let' constant\n    var fib1 = 0\n    ~~~ ^\n    let\n\
    /tmp/tmprui7izsg.swift:5:9: warning: variable 'fib2' was never mutated; consider\
    \ changing to 'let' constant\n    var fib2 = 1\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n   \
    \     b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpdw_9buoz.swift:4:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpdw_9buoz.swift:4:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1q1r2h5g.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp1q1r2h5g.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 1 // first number\n    var b = 1 // second number\n    for _ in 0..<n {\n\
    \        let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpf9a4di57/tmpf9a4di57.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab82e1a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab82dea0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab82dea0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab82de9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf9a4di57                        0x0000560f5bd91335 <unavailable> + 4917

    5    libc.so.6                          0x00002ab82e395460 __libc_start_main +
    245

    6    tmpf9a4di57                        0x0000560f5bd90fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ fib1: Int = 0\n    var fib2: Int = 0\n    for _ in 0..<n {\n        fib1 = fib1\
    \ + fib2\n        fib2 = fib1 - fib2\n    }\n    return fib1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpz72n_6i1/tmpz72n_6i1.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b14d2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b14a23b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b14a23988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b14a227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz72n_6i1                        0x000055b090209335 <unavailable> + 4917

    5    libc.so.6                          0x00002b2b14f18460 __libc_start_main +
    245

    6    tmpz72n_6i1                        0x000055b090208fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 1 // first Fibonacci number\n    var b = 1 // second Fibonacci number\n\
    \    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n\
    \    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpz423wtue/tmpz423wtue.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8fd26d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8fd23c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8fd23c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8fd23c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz423wtue                        0x000055e6aa62d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b8fd28bd460 __libc_start_main +
    245

    6    tmpz423wtue                        0x000055e6aa62cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmppdv0251t.swift:4:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmppdv0251t.swift:4:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n   \
    \     b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpdw_9buoz.swift:4:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpdw_9buoz.swift:4:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1q1r2h5g.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp1q1r2h5g.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1q1r2h5g.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp1q1r2h5g.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmppdv0251t.swift:4:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0, b = 1, next: Int\n    for _ in 0..<n {\n        next = a\n        a =\
    \ b\n        b = next\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpuc_nd03u/tmpuc_nd03u.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd658cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd655c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd655c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd655c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuc_nd03u                        0x000055972d739335 <unavailable> + 4917

    5    libc.so.6                          0x00002acd65ab6460 __libc_start_main +
    245

    6    tmpuc_nd03u                        0x000055972d738fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpp44meg3j/tmpp44meg3j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81ef614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81ef30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81ef30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81ef30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp44meg3j                        0x000055acd3264335 <unavailable> + 4917

    5    libc.so.6                          0x00002b81ef800460 __libc_start_main +
    245

    6    tmpp44meg3j                        0x000055acd3263fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978584
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpccl4xubu.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpccl4xubu.swift:7:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659978584

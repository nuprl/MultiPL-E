name: HumanEval_9_rolling_max
language: swift
prompt: "\n/// From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n/// in the sequence.\nfunc rolling_max(numbers: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == []\
  \ as [Int])\nassert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
  \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
  \ == [3, 3, 3, 100, 100])"
completions: ["    var max = [Int]()\n    var maxIndex = 0\n    var currentMax = numbers[0]\n\
    \    for number in numbers {\n        if number > currentMax {\n            max\
    \ = [number]\n            maxIndex = number\n        } else {\n            max\
    \ = append(max, number)\n        }\n        currentMax = number\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var result\
    \ = [Int]()\n    var max = 0\n    for number in numbers {\n        if number >\
    \ max {\n            max = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number > max {\n            result.append(number)\n        }\n\
    \    }\n    return result", "    var max = numbers[0]\n    var rolling_max = numbers[0]\n\
    \    for i in 1..<numbers.count {\n        if numbers[i] > max {\n           \
    \ max = numbers[i]\n            rolling_max = max\n        } else {\n        \
    \    rolling_max = max(rolling_max, numbers[i])\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max_rolling_numbers = [Int]()\n    var max_rolling_number = 0\n    for number\
    \ in numbers {\n        if number > max_rolling_number {\n            max_rolling_number\
    \ = number\n        }\n    }\n    for number in numbers {\n        if number >\
    \ max_rolling_number {\n            max_rolling_numbers.append(number)\n     \
    \   }\n    }\n    return max_rolling_numbers", "    var max = [Int]()\n    for\
    \ number in numbers {\n        if number > max[0] {\n            max = [number]\n\
    \        } else {\n            max = append(max, number)\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    var currentMax\
    \ = numbers[0]\n    for number in numbers {\n        if number > currentMax {\n\
    \            currentMax = number\n            maxIndex = number\n        }\n \
    \   }\n    max = append(max, currentMax)\n    for number in numbers {\n      \
    \  if number > currentMax {\n            currentMax = number\n            maxIndex\
    \ = number\n        }\n    }\n    max = append(max, currentMax)\n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    var currentMax = numbers[0]\n    for number in numbers\
    \ {\n        if number > currentMax {\n            currentMax = number\n     \
    \       maxIndex = number\n        }\n    }\n    max[maxIndex] = currentMax\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = numbers[0]\n    var\
    \ max_index = -1\n    for number in numbers {\n        if number > max {\n   \
    \         max = number\n            max_index = -1\n        }\n        if number\
    \ == max {\n            max_index += 1\n        }\n    }\n    return Array(numbers[0..<max_index])",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    for\
    \ number in numbers {\n        if number > max[0] {\n            max = [number]\n\
    \        } else {\n            max = append(max, number)\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if number > max[0] {\n            max =\
    \ [number]\n        } else {\n            max = append(max, number)\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex++\n        }\n \
    \   }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    var currentMax = numbers[0]\n    for number in numbers\
    \ {\n        if number > currentMax {\n            max = [number]\n          \
    \  maxIndex = number\n        } else {\n            max.append(number)\n     \
    \   }\n        currentMax = number\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    var\
    \ currentMax = numbers[0]\n    for i in 1..<numbers.count {\n        if numbers[i]\
    \ > currentMax {\n            currentMax = numbers[i]\n            maxIndex =\
    \ i\n        }\n    }\n    max = append(max, currentMax)\n    for _ in 1..<maxIndex\
    \ {\n        currentMax = numbers[maxIndex]\n        for i in maxIndex+1..<numbers.count\
    \ {\n            if numbers[i] > currentMax {\n                currentMax = numbers[i]\n\
    \                maxIndex = i\n            }\n        }\n        max = append(max,\
    \ currentMax)\n    }\n    return max", "    var max_so_far = numbers[0]\n    var\
    \ max_so_far_index = 0\n    for number in numbers {\n        if number > max_so_far\
    \ {\n            max_so_far = number\n            max_so_far_index = number\n\
    \        }\n    }\n    var rolling_max_so_far = max_so_far\n    var rolling_max_so_far_index\
    \ = max_so_far_index\n    for number in numbers {\n        if number > rolling_max_so_far\
    \ {\n            rolling_max_so_far = number\n            rolling_max_so_far_index\
    \ = number\n        }\n    }\n    var rolling_max_so_far_2 = max_so_far\n    var\
    \ rolling_max_so_far_index_2 = max_so_far_index\n    for number in numbers {\n\
    \        if number > rolling_max_so_far_2 {\n            rolling_max_so_far_2\
    \ = number\n            rolling_max_so_far_index_2 = number\n        }\n    }\n\
    \    var rolling_max_so_far_3 = max_so_far\n    var rolling_max_so_far_index_3\
    \ = max_so_far_index\n    for number in numbers {\n        if number > rolling_max_so_far_3\
    \ {\n            rolling_max_so_far_3 = number\n            rolling_max_so_far_index_3\
    \ = number\n        }\n    }\n    var rolling_max_so_far_4 = max_so_far\n    var\
    \ rolling_max_so_far_index_4 = max_so_far_index\n    for number in numbers {\n\
    \        if number > rolling_max_so_far_4 {\n            rolling_max_so_far_4\
    \ = number\n            rolling_max_so_far_index_4 = number\n        }\n    }\n\
    \    var rolling_max_so_far_5 = max_so_far\n    var rolling_max_so_far_index_5\
    \ = max_so_far_index\n    for number in numbers {\n        if number > rolling_max_so_far_5\
    \ {\n            rolling_max_so_far_5 = number\n            rolling_max_so_far_index_5\
    \ = number\n        }\n    }\n    var rolling_max_so_far_6 = max_so_far\n    var\
    \ rolling_max_so_far_index_6 = max_so_far_index\n    for number in numbers {\n\
    \        if number > rolling_max_so_far_6 {\n            rolling_max_so_far_6\
    \ = number\n            rolling_max_so_far_index_6 = number\n        }\n    }\n\
    \    var rolling_max_so_far_7 = max_so_far\n    var rolling_max_so_far_index_7\
    \ = max_so_far_index\n    for number in numbers {\n        if number > rolling_max_so_f",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var currentMax = numbers[0]\n\
    \    for number in numbers {\n        if number > currentMax {\n            currentMax\
    \ = number\n        }\n    }\n    max = append(max, currentMax)\n    for number\
    \ in numbers {\n        if number > currentMax {\n            currentMax = number\n\
    \        }\n    }\n    max = append(max, currentMax)\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max_numbers = [Int]()\n  \
    \  var max_number = numbers[0]\n    for number in numbers {\n        if number\
    \ > max_number {\n            max_number = number\n        }\n    }\n    max_numbers.append(max_number)\n\
    \    return max_numbers", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if number > max[0] {\n            max =\
    \ [number]\n        } else {\n            max = append(max, number)\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n   \
    \     if number > max[maxIndex] {\n            max[maxIndex] = number\n      \
    \      maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n   \
    \     if number > max[maxIndex] {\n            max[maxIndex] = number\n      \
    \      maxIndex += 1\n        }\n    }\n    return max", "    var max_elements\
    \ = [Int]()\n    var max_number = numbers[0]\n    for number in numbers {\n  \
    \      if number > max_number {\n            max_elements.append(max_number)\n\
    \            max_number = number\n        } else {\n            max_number = number\n\
    \        }\n    }\n    max_elements.append(max_number)\n    return max_elements",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex++\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex++\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    for number in numbers {\n        if number > max[0] {\n \
    \           max = [number]\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var result = [Int]()\n    var max: Int = 0\n   \
    \ for number in numbers {\n        if number > max {\n            max = number\n\
    \        }\n    }\n    for number in numbers {\n        if number > max {\n  \
    \          result.append(number)\n        }\n    }\n    return result", "    var\
    \ max = numbers[0]\n    var rolling_max = numbers[0]\n    for i in 1..<numbers.count\
    \ {\n        if numbers[i] > max {\n            max = numbers[i]\n           \
    \ rolling_max = numbers[i]\n        } else {\n            rolling_max = max(rolling_max,\
    \ numbers[i])\n        }\n    }\n    return [rolling_max]", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = numbers[0]\n    var maxIndex = -1\n  \
    \  for number in numbers {\n        if number > max {\n            max = number\n\
    \            maxIndex = numbers.indexOf(max)\n        }\n    }\n    return maxIndex\
    \ == -1 ? [] : numbers[maxIndex..<numbers.count]", "    var max = [Int]()\n  \
    \  var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = numbers[0]\n\
    \    var rolling_max = numbers[0]\n    for i in 1..<numbers.count {\n        if\
    \ numbers[i] > max {\n            max = numbers[i]\n            rolling_max =\
    \ numbers[i]\n        } else {\n            rolling_max = max(rolling_max, numbers[i])\n\
    \        }\n    }\n    return [rolling_max]", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    var\
    \ maxValue = numbers[0]\n    for number in numbers {\n        if number > maxValue\
    \ {\n            maxValue = number\n            maxIndex = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == maxValue {\n       \
    \     max.append(maxIndex)\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    for number in numbers {\n        if number > max[0] {\n       \
    \     max = [number]\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    for number in\
    \ numbers {\n        if max != nil {\n            if number > max[0] {\n     \
    \           max = [number]\n            } else {\n                max.append(number)\n\
    \            }\n        } else {\n            max = [number]\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var currentMax = numbers[0]\n  \
    \  for number in numbers {\n        if number > currentMax {\n            currentMax\
    \ = number\n        }\n    }\n    max = append(max, currentMax)\n    for number\
    \ in numbers {\n        if number > currentMax {\n            currentMax = number\n\
    \        }\n    }\n    max = append(max, currentMax)\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    for number\
    \ in numbers {\n        if number > max[0] {\n            max = [number]\n   \
    \     } else {\n            max = append(max, number)\n        }\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if number\
    \ > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max_so_far = numbers[0]\n\
    \    var max_so_far_rolling_max = numbers[0]\n    for number in numbers {\n  \
    \      if number > max_so_far {\n            max_so_far = number\n           \
    \ max_so_far_rolling_max = number\n        }\n        if number > max_so_far_rolling_max\
    \ {\n            max_so_far_rolling_max = number\n        }\n    }\n    return\
    \ [max_so_far_rolling_max, max_so_far]", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    var maxValue\
    \ = numbers[0]\n    for i in numbers {\n        if i > maxValue {\n          \
    \  maxValue = i\n            maxIndex = i\n        }\n    }\n    for i in numbers\
    \ {\n        if i == maxValue {\n            max[maxIndex] = i\n            maxIndex++\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if number > max[0] {\n            max =\
    \ [number]\n        } else {\n            max = append(max, number)\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n   \
    \     if number > max[maxIndex] {\n            max[maxIndex] = number\n      \
    \      maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var currentMax = 0\n    for\
    \ number in numbers {\n        if number > currentMax {\n            currentMax\
    \ = number\n        }\n    }\n    max = append(max, currentMax)\n    for number\
    \ in numbers {\n        if number > currentMax {\n            currentMax = number\n\
    \        }\n    }\n    max = append(max, currentMax)\n    return max", "    var\
    \ max = numbers[0]\n    var maxIndex = 0\n    for index in 1..<numbers.count {\n\
    \        if numbers[index] > max {\n            max = numbers[index]\n       \
    \     maxIndex = index\n        }\n    }\n    return Array(numbers[0..<maxIndex])",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    var\
    \ maxValue = numbers[0]\n    for number in numbers {\n        if number > maxValue\
    \ {\n            maxValue = number\n            maxIndex = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == maxValue {\n       \
    \     max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n  \
    \  return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex++\n        }\n    }\n    return max", "    var\
    \ result: [Int] = []\n    var max: Int = 0\n    for number in numbers {\n    \
    \    if number > max {\n            max = number\n        }\n    }\n    for number\
    \ in numbers {\n        if number > max {\n            result.append(max)\n  \
    \      }\n        max = number\n    }\n    return result", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var currentMax = 0\n    for number in numbers {\n  \
    \      if number > currentMax {\n            currentMax = number\n        }\n\
    \    }\n    max = append(max, currentMax)\n    for number in numbers {\n     \
    \   if number > currentMax {\n            currentMax = number\n        }\n   \
    \     if number == currentMax {\n            max = append(max, currentMax)\n \
    \       }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result: [Int]\
    \ = []\n    var max: Int = 0\n    for number in numbers {\n        if number >\
    \ max {\n            max = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number > max {\n            result.append(max)\n            max\
    \ = number\n        }\n    }\n    return result", "    var max = [Int]()\n   \
    \ var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result: [Int]\
    \ = []\n    var max: Int = 0\n    for number in numbers {\n        if number >\
    \ max {\n            max = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number == max {\n            result.append(number)\n        }\n\
    \    }\n    return result", "    var max = [Int]()\n    var maxIndex = 0\n   \
    \ for number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max_so_far = numbers[0]\n    var max_so_far_index = 0\n    var max_so_far_rolling_max\
    \ = numbers[0]\n    for index in 1..<numbers.count {\n        if numbers[index]\
    \ > max_so_far {\n            max_so_far = numbers[index]\n            max_so_far_index\
    \ = index\n            max_so_far_rolling_max = numbers[index]\n        } else\
    \ {\n            max_so_far_rolling_max = max(numbers[index], max_so_far_rolling_max)\n\
    \        }\n    }\n    return [max_so_far, max_so_far_index, max_so_far_rolling_max]",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var currentMax = 0\n    for number in numbers {\n        if number > currentMax\
    \ {\n            currentMax = number\n        }\n    }\n    max = append(max,\
    \ currentMax)\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n\
    \    for number in numbers {\n        if number > max[maxIndex] {\n          \
    \  max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if number\
    \ > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var currentMax = 0\n    for number\
    \ in numbers {\n        if number > currentMax {\n            currentMax = number\n\
    \        }\n        if number == currentMax {\n            max.append(number)\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = numbers[0]\n    var maxIndex = 0\n    for number in numbers {\n \
    \       if number > max {\n            max = number\n            maxIndex = numbers.indexOf(max)\n\
    \        }\n    }\n    return Array(numbers[0..<maxIndex])", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n   \
    \     if number > max[maxIndex] {\n            max[maxIndex] = number\n      \
    \      maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n   \
    \     if number > max[maxIndex] {\n            max[maxIndex] = number\n      \
    \      maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result: [Int]\
    \ = []\n    var max: Int = 0\n    for number in numbers {\n        if number >\
    \ max {\n            max = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number > max {\n            result.append(number)\n        }\n\
    \    }\n    return result", "    var max = [Int]()\n    var maxIndex = 0\n   \
    \ for number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = numbers[0]\n    var rolling_max = numbers[0]\n    for number in numbers\
    \ {\n        if number > max {\n            max = number\n        }\n        if\
    \ number > rolling_max {\n            rolling_max = number\n        }\n    }\n\
    \    return [rolling_max, max]", "    var max = [Int]()\n    for number in numbers\
    \ {\n        if max != nil {\n            if number > max[0] {\n             \
    \   max = [number]\n            } else {\n                max = [number] + max\n\
    \            }\n        } else {\n            max = [number]\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    for number in numbers {\n      \
    \  if number > max[0] {\n            max = [number]\n        } else {\n      \
    \      max = append(max, number)\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result: [Int]\
    \ = []\n    var max: Int = 0\n    for number in numbers {\n        if number >\
    \ max {\n            max = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number > max {\n            result.append(max)\n            max\
    \ = number\n        }\n    }\n    return result", "    var max = numbers[0]\n\
    \    var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > max {\n            max = number\n        }\n        if number > rolling_max\
    \ {\n            rolling_max = number\n        }\n    }\n    return rolling_max",
  "    var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    var\
    \ maxValue = numbers[0]\n    for number in numbers {\n        if number > maxValue\
    \ {\n            maxValue = number\n            maxIndex = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == maxValue {\n       \
    \     max = append(max, maxIndex)\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    var maxValue = numbers[0]\n    for number in numbers\
    \ {\n        if number > maxValue {\n            maxValue = number\n         \
    \   maxIndex = number\n        }\n    }\n    max = append(max, maxValue)\n   \
    \ for number in numbers {\n        if number == maxValue {\n            max =\
    \ append(max, maxValue)\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var currentMax = 0\n    for number in numbers {\n        currentMax = max(currentMax,\
    \ number)\n        max = append(max, currentMax)\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var result = [Int]()\n    var\
    \ max = 0\n    for number in numbers {\n        if number > max {\n          \
    \  max = number\n        }\n    }\n    for number in numbers {\n        if number\
    \ == max {\n            result.append(number)\n        }\n    }\n    return result",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex++\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = numbers[0]\n    var rolling_max = numbers[0]\n\
    \    for i in 1..<numbers.count {\n        if numbers[i] > max {\n           \
    \ max = numbers[i]\n            rolling_max = max\n        } else {\n        \
    \    rolling_max = max(rolling_max, max)\n        }\n    }\n    return rolling_max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    var currentMax = 0\n    for number in numbers {\n \
    \       if number > currentMax {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n            currentMax = number\n        } else {\n     \
    \       currentMax = number\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if number\
    \ > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max"]
stop_tokens:
- "\n}"

name: HumanEval_152_compare
language: swift
prompt: "\n/// I think we all remember that feeling when the result of some long-awaited\n\
  /// event is finally known. The feelings and thoughts you have at that moment are\n\
  /// definitely worth noting down and comparing.\n/// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n/// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n/// Return an array of the same length denoting how far off each guess was.\
  \ If they have guessed correctly,\n/// the value is 0, and if not, the value is\
  \ the absolute difference between the guess and the score.\n/// example:\nfunc compare(game:\
  \ [Int], guess: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(compare(game: [1, 2, 3, 4, 5, 1], guess:\
  \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\nassert(compare(game: [0, 0, 0, 0,\
  \ 0, 0], guess: [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\nassert(compare(game:\
  \ [1, 2, 3], guess: [-1, -2, -3]) == [2, 4, 6])\nassert(compare(game: [1, 2, 3,\
  \ 5], guess: [-1, 2, 3, 4]) == [2, 0, 0, 1])"
completions: ["    var result = [Int]()\n    for i in 0..<guess.count {\n        let\
    \ guess = guess[i]\n        let score = game[i]\n        let diff = abs(guess\
    \ - score)\n        result.append(diff)\n    }\n    return result", "    var result\
    \ = [Int]()\n    \n    for index in 0..<guess.count {\n        let score = game[index]\n\
    \        let guess = guess[index]\n        \n        if guess == score {\n   \
    \         result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    var score = 0\n    var guess = 0\n    \n    for _ in 0..<guess.count {\n\
    \        guess = Int(arc4random_uniform(UInt32(game.count)))\n        \n     \
    \   if guess == game[guess] {\n            score += 1\n        } else {\n    \
    \        score += abs(guess - game[guess])\n        }\n        \n        result.append(score)\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    for index in\
    \ 0..<guess.count {\n        let score = game[index]\n        let guess = guess[index]\n\
    \        let difference = abs(guess - score)\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int](count: guess.length, repeatedValue:\
    \ 0)\n    for i in 0..<guess.length {\n        if game[i] == guess[i] {\n    \
    \        result[i] = 0\n        } else {\n            result[i] = abs(game[i]\
    \ - guess[i])\n        }\n    }\n    return result", '    ', "    var result =\
    \ [Int]()\n    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let guess = guess[index]\n      \
    \  let score = game[index]\n        let difference = abs(guess - score)\n    \
    \    result.append(difference)\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let guess = guess[index]\n      \
    \  let score = game[index]\n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        if game[index] == guess[index] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[index] - guess[index]))\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in 0..<guess.count {\n        let guess = guess[i]\n        let score = game[i]\n\
    \        if guess == score {\n            result.append(0)\n        } else {\n\
    \            result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let difference = abs(game[index]\
    \ - guess[index])\n        result.append(difference)\n    }\n    return result",
  "    var result = [Int]()\n    var scores = [Int]()\n    var guesses = [Int]()\n\
    \    \n    for _ in 0..<guess.count {\n        result.append(0)\n        scores.append(0)\n\
    \        guesses.append(0)\n    }\n    \n    for _ in 0..<game.count {\n     \
    \   if game[_] == guess[_] {\n            scores[_] = 0\n            guesses[_]\
    \ = 0\n            result[_] = 0\n        } else {\n            scores[_] = abs(game[_]\
    \ - guess[_])\n            guesses[_] = abs(game[_] - guess[_])\n            result[_]\
    \ = abs(game[_] - guess[_])\n        }\n    }\n    \n    return result", "   \
    \ var result = [Int]()\n    for index in 0..<guess.count {\n        let difference\
    \ = abs(game[index] - guess[index])\n        result.append(difference)\n    }\n\
    \    return result", "    var result: [Int] = [0]\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let difference = abs(guess - score)\n        result.append(difference)\n \
    \   }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    \n    for index in\
    \ 0..<guess.count {\n        let score = game[index]\n        let guess = guess[index]\n\
    \        \n        if guess == score {\n            result.append(0)\n       \
    \ } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    \n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let diff = abs(guess - score)\n        result.append(diff)\n    }\n    return\
    \ result", "    var result = [Int]()\n    for index in 0..<guess.count {\n   \
    \     let score = game[index]\n        let guess = guess[index]\n        let diff\
    \ = abs(guess - score)\n        result.append(diff)\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0..<guess.count {\n        let diff = abs(game[i]\
    \ - guess[i])\n        result.append(diff)\n    }\n    return result", "    var\
    \ result = [Int]()\n    var i = 0\n    while i < game.count {\n        if guess[i]\
    \ == game[i] {\n            result.append(0)\n        } else {\n            result.append(abs(guess[i]\
    \ - game[i]))\n        }\n        i += 1\n    }\n    return result", "    var\
    \ result = [Int]()\n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        let difference = abs(guess - score)\n\
    \        result.append(difference)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var scores = [Int]()\n    var guesses = [Int]()\n    \n    for\
    \ i in 0..<game.count {\n        guesses.append(guess[i])\n        scores.append(game[i])\n\
    \    }\n    \n    for i in 0..<guesses.count {\n        let difference = abs(guesses[i]\
    \ - scores[i])\n        result.append(difference)\n    }\n    \n    return result",
  "    var result = [Int]()\n    \n    for index in 0..<guess.count {\n        if\
    \ game[index] == guess[index] {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(game[index] - guess[index]))\n        }\n \
    \   }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    var guesses = [Int]()\n    \n    for i in 0..<game.count {\n        guesses.append(guess[i])\n\
    \        scores.append(game[i])\n    }\n    \n    for i in 0..<guesses.count {\n\
    \        if guesses[i] == scores[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(guesses[i] - scores[i]))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    \n    for i in\
    \ 0..<guess.count {\n        let guess = guess[i]\n        let score = game[i]\n\
    \        \n        if guess == score {\n            result.append(0)\n       \
    \ } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    \n    return result", "    var result = [Int]()\n    for i in 0..<guess.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   let difference = abs(guess - score)\n        result.append(difference)\n \
    \   }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for index in 0..<guess.count {\n        let score = game[index]\n       \
    \ let guess = guess[index]\n        result[index] = abs(guess - score)\n    }\n\
    \    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let difference = abs(game[index] - guess[index])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for index in 0..<guess.count {\n        if game[index] == guess[index] {\n\
    \            result[index] = 0\n        } else {\n            result[index] =\
    \ abs(game[index] - guess[index])\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    for i in 0..<guess.count {\n        let guess = guess[i]\n\
    \        let score = game[i]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   if guess == score {\n            result.append(0)\n        } else {\n    \
    \        result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result: [Int] = []\n    for i in 0..<guess.count {\n        let score\
    \ = game[i]\n        let guess = guess[i]\n        if score == guess {\n     \
    \       result.append(0)\n        } else {\n            result.append(abs(score\
    \ - guess))\n        }\n    }\n    return result", '    ', "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let score = game[index]\n \
    \       let guess = guess[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int](count:\
    \ guess.count, repeatedValue: 0)\n    for i in 0..<guess.count {\n        let\
    \ score = game[i]\n        let guess = guess[i]\n        result[i] = abs(guess\
    \ - score)\n    }\n    return result", "    var result = [Int](repeating: 0, count:\
    \ guess.count)\n    for i in 0..<guess.count {\n        result[i] = abs(game[i]\
    \ - guess[i])\n    }\n    return result", "    var result = [Int]()\n    for index\
    \ in 0..<guess.count {\n        let guess = guess[index]\n        let score =\
    \ game[index]\n        let difference = abs(guess - score)\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    for i in 0..<guess.count {\n        scores[i] = game[i]\n    }\n    for i\
    \ in 0..<guess.count {\n        result.append(abs(guess[i] - scores[i]))\n   \
    \ }\n    return result", "    var result = [Int]()\n    \n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   \n        if guess == score {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(guess - score))\n        }\n    }\n    \n \
    \   return result", "    var result = [Int]()\n    var score = 0\n    for i in\
    \ 0..<guess.count {\n        if game[i] == guess[i] {\n            score += game[i]\n\
    \        } else {\n            result.append(abs(score - guess[i]))\n        \
    \    score = 0\n        }\n    }\n    result.append(abs(score - guess[guess.count]))\n\
    \    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    var correct = 0\n \
    \   var wrong = 0\n    for index in 0..<guess.count {\n        if game[index]\
    \ == guess[index] {\n            result.append(0)\n            correct += 1\n\
    \        } else {\n            result.append(abs(game[index] - guess[index]))\n\
    \            wrong += 1\n        }\n    }\n    return result + [wrong]", "   \
    \ var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result: [Int] = []\n    for index in 0..<guess.count {\n        let difference\
    \ = abs(game[index] - guess[index])\n        result.append(difference)\n    }\n\
    \    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    var i = 0\n    while\
    \ i < game.count {\n        if guess[i] == game[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess[i] - game[i]))\n      \
    \  }\n        i += 1\n    }\n    return result", "    var result = [Int]()\n \
    \   for index in 0..<guess.count {\n        let score = game[index]\n        let\
    \ guess = guess[index]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let difference = abs(game[index] - guess[index])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", '    ', "    var result = [Int]()\n    for i in 0..<guess.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var scores = [Int]()\n   \
    \ for i in 0..<guess.count {\n        scores[i] = abs(game[i] - guess[i])\n  \
    \  }\n    for i in 0..<guess.count {\n        if scores[i] == 0 {\n          \
    \  result.append(0)\n        } else {\n            result.append(scores[i])\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for index\
    \ in 0..<guess.count {\n        let guess = guess[index]\n        let score =\
    \ game[index]\n        if guess == score {\n            result.append(0)\n   \
    \     } else {\n            result.append(abs(guess - score))\n        }\n   \
    \ }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for index in 0..<guess.count {\n        if game[index] == guess[index] {\n\
    \            result[index] = 0\n        } else {\n            result[index] =\
    \ abs(game[index] - guess[index])\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        let diff = abs(guess\
    \ - score)\n        result.append(diff)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var scores = [Int]()\n    for i in 0..<guess.count {\n      \
    \  scores[i] = abs(game[i] - guess[i])\n    }\n    for i in 0..<guess.count {\n\
    \        if scores[i] == 0 {\n            result.append(0)\n        } else {\n\
    \            result.append(scores[i])\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    for index in 0..<guess.count {\n        let score\
    \ = game[index]\n        let guess = guess[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<guess.count {\n        let guess = guess[i]\n        let score\
    \ = game[i]\n        if guess == score {\n            result.append(0)\n     \
    \   } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var score = 0\n    for index\
    \ in 0..<guess.count {\n        if game[index] == guess[index] {\n           \
    \ score += 0\n        } else {\n            score += abs(game[index] - guess[index])\n\
    \        }\n        result.append(score)\n    }\n    return result", "    var\
    \ result = [Int]()\n    var i = 0\n    while i < game.count {\n        if guess[i]\
    \ == game[i] {\n            result.append(0)\n        } else {\n            result.append(abs(guess[i]\
    \ - game[i]))\n        }\n        i += 1\n    }\n    return result", "    var\
    \ result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        let difference = abs(game[i] - guess[i])\n        result[i] = difference\n\
    \    }\n    return result", '    ', "    var result = [Int]()\n    var scores\
    \ = [Int]()\n    var guesses = [Int]()\n    var correct = 0\n    var wrong = 0\n\
    \    for _ in 0..<guess.count {\n        guesses.append(0)\n    }\n    for _ in\
    \ 0..<game.count {\n        scores.append(0)\n    }\n    for _ in 0..<guess.count\
    \ {\n        guesses.append(0)\n    }\n    for _ in 0..<game.count {\n       \
    \ scores.append(0)\n    }\n    for index in 0..<guess.count {\n        if game[index]\
    \ == guess[index] {\n            guesses[index] += 1\n            scores[index]\
    \ += 1\n            correct += 1\n        } else {\n            wrong += 1\n \
    \       }\n    }\n    for index in 0..<game.count {\n        if game[index] !=\
    \ guess[index] {\n            guesses[index] += 1\n            scores[index] +=\
    \ 1\n            wrong += 1\n        }\n    }\n    for index in 0..<guess.count\
    \ {\n        if guesses[index] == 0 {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(guess[index] - scores[index]))\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    \n    for index\
    \ in 0..<guess.count {\n        let guess = guess[index]\n        let score =\
    \ game[index]\n        \n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    \n    for index\
    \ in 0..<guess.count {\n        let guess = guess[index]\n        let score =\
    \ game[index]\n        \n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    var i = 0\n \
    \   while i < game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n        i += 1\n    }\n    return result", "    var result = [Int]()\n \
    \   for index in 0..<guess.count {\n        let score = game[index]\n        let\
    \ guess = guess[index]\n        let difference = abs(guess - score)\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    var correct = 0\n \
    \   var wrong = 0\n    for index in 0..<guess.count {\n        if game[index]\
    \ == guess[index] {\n            result.append(0)\n            correct += 1\n\
    \        } else {\n            result.append(abs(game[index] - guess[index]))\n\
    \            wrong += 1\n        }\n    }\n    return [correct, wrong]", "   \
    \ var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result: [Int] = []\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var index = 0\n    while index < game.count {\n        if game[index] ==\
    \ guess[index] {\n            result.append(0)\n        } else {\n           \
    \ result.append(abs(guess[index] - game[index]))\n        }\n        index +=\
    \ 1\n    }\n    return result", "    var result: [Int] = []\n    var score = 0\n\
    \    var guess = 0\n    for _ in 0..<guess.count {\n        guess = Int(arc4random_uniform(UInt32(game.count)))\n\
    \        score = abs(guess - game[guess])\n        result.append(score)\n    }\n\
    \    return result", "    var result = [Int]()\n    var scores = [Int]()\n   \
    \ var guesses = [Int]()\n    \n    for i in 0..<game.count {\n        guesses.append(guess[i])\n\
    \        scores.append(game[i])\n    }\n    \n    for i in 0..<guesses.count {\n\
    \        let diff = abs(guesses[i] - scores[i])\n        result.append(diff)\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    var scores =\
    \ [Int]()\n    var guesses = [Int]()\n    \n    for i in 0..<game.count {\n  \
    \      guesses.append(guess[i])\n        scores.append(game[i])\n    }\n    \n\
    \    for i in 0..<guesses.count {\n        let difference = abs(guesses[i] - scores[i])\n\
    \        result.append(difference)\n    }\n    \n    return result", "    var\
    \ result = [Int]()\n    for index in 0..<guess.count {\n        let score = game[index]\n\
    \        let guess = guess[index]\n        let diff = abs(guess - score)\n   \
    \     result.append(diff)\n    }\n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        if game[index] == guess[index]\
    \ {\n            result.append(0)\n        } else {\n            result.append(abs(game[index]\
    \ - guess[index]))\n        }\n    }\n    \n    return result", "    var result\
    \ = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count {\n\
    \        if game[i] == guess[i] {\n            result[i] = 0\n        } else {\n\
    \            result[i] = abs(game[i] - guess[i])\n        }\n    }\n    return\
    \ result", "    var result = [Int](repeating: 0, count: guess.count)\n    for\
    \ i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n    }\n\
    \    return result", "    var result = [Int]()\n    \n    for i in 0..<guess.count\
    \ {\n        let difference = abs(game[i] - guess[i])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int]()\n    var i = 0\n    for\
    \ _ in 0..<guess.count {\n        result.append(0)\n    }\n    for _ in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result[i] += 1 // correct\n\
    \        } else {\n            result[i] += abs(game[i] - guess[i]) // wrong\n\
    \        }\n        i += 1\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let score = game[index]\n \
    \       let guess = guess[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let score = game[index]\n \
    \       let guess = guess[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<guess.count {\n        let guess = guess[i]\n        let score\
    \ = game[i]\n        if guess == score {\n            result.append(0)\n     \
    \   } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var scores = [Int]()\n   \
    \ var guesses = [Int]()\n    var score = 0\n    var guess = 0\n    \n    for i\
    \ in 0..<game.count {\n        score += game[i]\n        scores.append(score)\n\
    \    }\n    \n    for i in 0..<guess.count {\n        guess += guess[i]\n    \
    \    guesses.append(guess)\n    }\n    \n    for i in 0..<guess.count {\n    \
    \    if guess == scores[i] {\n            result.append(0)\n        } else {\n\
    \            result.append(abs(guess - scores[i]))\n        }\n    }\n    \n \
    \   return result", "    var result = [Int]()\n    \n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   \n        if guess == score {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(guess - score))\n        }\n    }\n    \n \
    \   return result", '    ', "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   if guess == score {\n            result.append(0)\n        } else {\n    \
    \        result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    for i in 0..<guess.count {\n        let score = game[i]\n        let guess\
    \ = guess[i]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let diff = abs(guess - score)\n        result.append(diff)\n    }\n    return\
    \ result", "    var result: [Int] = []\n    for index in 0..<guess.count {\n \
    \       let guess = guess[index]\n        let score = game[index]\n        let\
    \ diff = abs(guess - score)\n        result.append(diff)\n    }\n    return result",
  "    var result = [Int]()\n    var scores = [Int]()\n    var guesses = [Int]()\n\
    \    var score = 0\n    var guess = 0\n    \n    for i in 0..<game.count {\n \
    \       guesses.append(guess[i])\n        scores.append(game[i])\n    }\n    \n\
    \    for i in 0..<guesses.count {\n        guess = guesses[i]\n        score =\
    \ scores[i]\n        \n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    \n    for i in\
    \ 0..<guess.count {\n        let difference = abs(guess[i] - game[i])\n      \
    \  result.append(difference)\n    }\n    \n    return result", "    var result:\
    \ [Int] = []\n    for index in 0..<guess.count {\n        let score = game[index]\n\
    \        let guess = guess[index]\n        let difference = abs(guess - score)\n\
    \        if guess == score {\n            result.append(0)\n        } else {\n\
    \            result.append(difference)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    var scores = [Int]()\n    var guesses = [Int]()\n    var i = 0\n    var j\
    \ = 0\n    while i < game.count && j < guess.count {\n        if game[i] == guess[j]\
    \ {\n            scores.append(game[i])\n            guesses.append(guess[j])\n\
    \            i += 1\n            j += 1\n        } else {\n            j += 1\n\
    \        }\n    }\n    if i == game.count {\n        result.append(0)\n    } else\
    \ {\n        result.append(abs(guesses[i] - scores[i]))\n    }\n    return result",
  "    var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result = [Int]()\n    var index = 0\n    while index < game.count {\n\
    \        if game[index] == guess[index] {\n            result.append(0)\n    \
    \    } else {\n            result.append(abs(guess[index] - game[index]))\n  \
    \      }\n        index += 1\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<guess.count {\n        let guess = guess[i]\n        let score\
    \ = game[i]\n        if guess == score {\n            result.append(0)\n     \
    \   } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    return result", "    var result: [Int] = [0]\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let difference = abs(guess - score)\n        result.append(difference)\n \
    \   }\n    return result", "    var result: [Int] = [0]\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   if guess == score {\n            result[index] = 0\n        } else {\n   \
    \         result[index] = abs(guess - score)\n        }\n    }\n    return result",
  '    ', "    var result = [Int](repeating: 0, count: guess.count)\n    for i in\
    \ 0..<guess.count {\n        if game[i] == guess[i] {\n            result[i] =\
    \ 0\n        } else {\n            result[i] = abs(game[i] - guess[i])\n     \
    \   }\n    }\n    return result", "    var result = [Int](repeating: 0, count:\
    \ guess.count)\n    \n    for index in 0..<guess.count {\n        result[index]\
    \ = abs(game[index] - guess[index])\n    }\n    \n    return result", "    var\
    \ result = [Int]()\n    \n    for i in 0..<guess.count {\n        let diff = abs(guess[i]\
    \ - game[i])\n        result.append(diff)\n    }\n    return result", "    var\
    \ result = [Int]()\n    var score = 0\n    var guess = 0\n    for _ in 0..<guess.count\
    \ {\n        guess = Int(arc4random_uniform(UInt32(game.count)))\n        score\
    \ += game[guess]\n        result.append(abs(guess - score))\n    }\n    return\
    \ result", "    var result = [Int](repeating: 0, count: guess.count)\n    for\
    \ i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n    }\n\
    \    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let diff = abs(guess - score)\n        result.append(diff)\n    }\n    return\
    \ result", "    var result = [Int]()\n    for index in 0..<guess.count {\n   \
    \     let difference = abs(game[index] - guess[index])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    var guesses = [Int]()\n    \n    for i in 0..<game.count {\n        guesses.append(guess[i])\n\
    \        scores.append(game[i])\n    }\n    \n    for i in 0..<guesses.count {\n\
    \        if guesses[i] == scores[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(guesses[i] - scores[i]))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    for i in 0..<guess.count\
    \ {\n        let guess = guess[i]\n        let score = game[i]\n        if guess\
    \ == score {\n            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let guess = guess[index]\n      \
    \  let score = game[index]\n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        if game[index] == guess[index]\
    \ {\n            scores.append(0)\n        } else {\n            scores.append(abs(game[index]\
    \ - guess[index]))\n        }\n    }\n    \n    for index in 0..<guess.count {\n\
    \        if game[index] == guess[index] {\n            result.append(0)\n    \
    \    } else {\n            result.append(abs(game[index] - guess[index]))\n  \
    \      }\n    }\n    \n    return result", "    var result = [Int]()\n    var\
    \ scores = [Int]()\n    var guesses = [Int]()\n    for _ in 0..<guess.count {\n\
    \        result.append(0)\n        scores.append(0)\n        guesses.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        if game[_] == guess[_] {\n    \
    \        scores[_] += 1\n            result[_] = 0\n        } else {\n       \
    \     guesses[_] += 1\n            result[_] = abs(game[_] - guess[_])\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var i = 0\n \
    \   while i < game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n        i += 1\n    }\n    return result", "    var result = [Int]()\n \
    \   for i in 0..<guess.count {\n        let score = game[i]\n        let guess\
    \ = guess[i]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    var guesses = [Int]()\n    var score = 0\n    var guess = 0\n    var i =\
    \ 0\n    var j = 0\n    for _ in 0..<game.count {\n        score += game[i]\n\
    \        scores.append(score)\n        guesses.append(guess[i])\n        i +=\
    \ 1\n    }\n    for _ in 0..<guess.count {\n        guess += guess[i]\n      \
    \  i += 1\n    }\n    for _ in 0..<guess.count {\n        if guess == scores {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - scores))\n        }\n        i += 1\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0..<guess.count {\n        let guess = guess[i]\n  \
    \      let score = game[i]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", '    ', "    var result = [Int](repeating: 0, count:\
    \ guess.count)\n    for i in 0..<guess.count {\n        result[i] = abs(game[i]\
    \ - guess[i])\n    }\n    return result", "    var result = [Int]()\n    var scores\
    \ = [Int]()\n    var guesses = [Int]()\n    var i = 0\n    var j = 0\n    var\
    \ k = 0\n    var m = 0\n    var n = 0\n    var correct = 0\n    var wrong = 0\n\
    \    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<game.count {\n        guesses.append(0)\n        scores.append(0)\n\
    \    }\n    for _ in 0..<guess.count {\n        gues", "    var result = [Int]()\n\
    \    var i = 0\n    var j = 0\n    while i < game.count && j < guess.count {\n\
    \        if game[i] == guess[j] {\n            result.append(0)\n            i\
    \ += 1\n            j += 1\n        } else if game[i] > guess[j] {\n         \
    \   result.append(abs(game[i] - guess[j]))\n            i += 1\n        } else\
    \ {\n            result.append(abs(guess[j] - game[i]))\n            j += 1\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ 0..<guess.count {\n        let difference = abs(guess[i] - game[i])\n      \
    \  result.append(difference)\n    }\n    return result", "    var result = [Int](count:\
    \ guess.count, repeatedValue: 0)\n    for i in 0..<guess.count {\n        if game[i]\
    \ == guess[i] {\n            result[i] = 0\n        } else {\n            result[i]\
    \ = abs(game[i] - guess[i])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0..<guess.count {\n        let guess = guess[i]\n  \
    \      let score = game[i]\n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    return result", "    var result = [Int](count: guess.count, repeatedValue:\
    \ 0)\n    for i in 0..<guess.count {\n        if game[i] == guess[i] {\n     \
    \       result[i] = 0\n        } else {\n            result[i] = abs(game[i] -\
    \ guess[i])\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        if game[index] == guess[index] {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(game[index]\
    \ - guess[index]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var scores = [Int]()\n    \n    for index in 0..<guess.count {\n        if\
    \ game[index] == guess[index] {\n            scores.append(0)\n        } else\
    \ {\n            scores.append(abs(game[index] - guess[index]))\n        }\n \
    \   }\n    \n    for index in 0..<guess.count {\n        if scores[index] == 0\
    \ {\n            result.append(0)\n        } else {\n            result.append(scores[index])\n\
    \        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    \n    for i in 0..<guess.count {\n        let score\
    \ = game[i]\n        let guess = guess[i]\n        \n        if guess == score\
    \ {\n            result[i] = 0\n        } else {\n            result[i] = abs(guess\
    \ - score)\n        }\n    }\n    \n    return result", "    var result: [Int]\
    \ = []\n    var score = 0\n    for index in 0..<guess.count {\n        score +=\
    \ abs(game[index] - guess[index])\n    }\n    for index in 0..<guess.count {\n\
    \        if game[index] == guess[index] {\n            result.append(0)\n    \
    \    } else {\n            result.append(abs(game[index] - guess[index]))\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var scores\
    \ = [Int]()\n    for index in 0..<guess.count {\n        scores[index] = game[index]\n\
    \    }\n    for index in 0..<guess.count {\n        if guess[index] == scores[index]\
    \ {\n            result.append(0)\n        } else {\n            result.append(abs(guess[index]\
    \ - scores[index]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let score = game[index]\n       \
    \ let guess = guess[index]\n        let difference = abs(guess - score)\n    \
    \    result.append(difference)\n    }\n    return result", "    var result = [Int]()\n\
    \    var scores = [Int]()\n    for index in 0..<guess.count {\n        if game[index]\
    \ == guess[index] {\n            scores.append(0)\n        } else {\n        \
    \    scores.append(abs(game[index] - guess[index]))\n        }\n    }\n    for\
    \ index in 0..<guess.count {\n        if scores[index] == 0 {\n            result.append(0)\n\
    \        } else {\n            result.append(scores[index])\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    \n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   \n        if guess == score {\n            result.append(0)\n        } else\
    \ {\n            result.append(abs(guess - score))\n        }\n    }\n    \n \
    \   return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   if guess == score {\n            result.append(0)\n        } else {\n    \
    \        result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in 0..<guess.count {\n        let guess =\
    \ guess[i]\n        let score = game[i]\n        if guess == score {\n       \
    \     result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        \n        if guess == score {\n    \
    \        result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    \n    for i in 0..<guess.count {\n        let score = game[i]\n        let\
    \ guess = guess[i]\n        \n        if score == guess {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(score - guess))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int](repeating: 0, count:\
    \ guess.count)\n    for index in 0..<guess.count {\n        let guess = guess[index]\n\
    \        let score = game[index]\n        result[index] = abs(guess - score)\n\
    \    }\n    return result", "    var result = [Int](count: guess.count, repeatedValue:\
    \ 0)\n    for i in 0..<guess.count {\n        result[i] = abs(game[i] - guess[i])\n\
    \    }\n    return result", "    var result = [Int]()\n    var scores = [Int]()\n\
    \    var guesses = [Int]()\n    \n    for i in 0..<game.count {\n        guesses.append(guess[i])\n\
    \        scores.append(game[i])\n    }\n    \n    for i in 0..<guesses.count {\n\
    \        let guess = guesses[i]\n        let score = scores[i]\n        \n   \
    \     if guess == score {\n            result.append(0)\n        } else {\n  \
    \          result.append(abs(guess - score))\n        }\n    }\n    \n    return\
    \ result", "    var result = [Int]()\n    for i in 0..<guess.count {\n       \
    \ let difference = abs(game[i] - guess[i])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let difference = abs(game[index] - guess[index])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   if guess == score {\n            result.append(0)\n        } else {\n    \
    \        result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result = [Int]()\n    \n    for index in 0..<guess.count {\n        let\
    \ guess = guess[index]\n        let score = game[index]\n        \n        if\
    \ guess == score {\n            result.append(0)\n        } else {\n         \
    \   result.append(abs(guess - score))\n        }\n    }\n    \n    return result",
  "    var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        let difference = abs(guess\
    \ - score)\n        result.append(difference)\n    }\n    return result", "  \
    \  var result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        result[i] = abs(game[i] - guess[i])\n    }\n    return result", " \
    \   var result = [Int](repeating: 0, count: guess.count)\n    for index in 0..<guess.count\
    \ {\n        if game[index] == guess[index] {\n            result[index] = 0\n\
    \        } else {\n            result[index] = abs(game[index] - guess[index])\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var i =\
    \ 0\n    var j = 0\n    while i < game.count && j < guess.count {\n        if\
    \ game[i] == guess[j] {\n            result.append(0)\n            i += 1\n  \
    \          j += 1\n        } else if game[i] > guess[j] {\n            result.append(abs(game[i]\
    \ - guess[j]))\n            i += 1\n        } else {\n            result.append(abs(guess[j]\
    \ - game[i]))\n            j += 1\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    \n    for index in 0..<guess.count {\n        let\
    \ score = game[index]\n        let guess = guess[index]\n        \n        if\
    \ guess == score {\n            result.append(0)\n        } else {\n         \
    \   result.append(abs(guess - score))\n        }\n    }\n    \n    return result",
  "    var result = [Int]()\n    var scores = [Int]()\n    var guesses = [Int]()\n\
    \    var correct = 0\n    var wrong = 0\n    var total = 0\n    for _ in 0..<game.count\
    \ {\n        total += 1\n    }\n    for _ in 0..<guess.count {\n        total\
    \ += 1\n    }\n    for _ in 0..<game.count {\n        guesses.append(guess[_])\n\
    \    }\n    for _ in 0..<guess.count {\n        scores.append(game[_])\n    }\n\
    \    for _ in 0..<game.count {\n        if guesses[_] == scores[_] {\n       \
    \     correct += 1\n        } else {\n            wrong += 1\n        }\n    }\n\
    \    for _ in 0..<game.count {\n        result.append(wrong)\n    }\n    return\
    \ result", "    var result = [Int](repeating: 0, count: guess.count)\n    for\
    \ i in 0..<guess.count {\n        let diff = abs(game[i] - guess[i])\n       \
    \ result[i] = diff\n    }\n    return result", "    var result: [Int] = []\n \
    \   for index in 0..<guess.count {\n        let guess = guess[index]\n       \
    \ let score = game[index]\n        let difference = abs(guess - score)\n     \
    \   result.append(difference)\n    }\n    return result", "    var result: [Int]\
    \ = []\n    for index in 0..<guess.count {\n        let score = game[index]\n\
    \        let guess = guess[index]\n        let diff = abs(guess - score)\n   \
    \     result.append(diff)\n    }\n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<guess.count {\n        let guess = guess[i]\n        let score\
    \ = game[i]\n        if guess == score {\n            result.append(0)\n     \
    \   } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let guess = guess[index]\n        let score = game[index]\n     \
    \   if guess == score {\n            result.append(0)\n        } else {\n    \
    \        result.append(abs(guess - score))\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        if guess == score {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let guess = guess[index]\n      \
    \  let score = game[index]\n        if guess == score {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(guess - score))\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in 0..<guess.count\
    \ {\n        let guess = guess[i]\n        let score = game[i]\n        if guess\
    \ == score {\n            result.append(0)\n        } else {\n            result.append(abs(guess\
    \ - score))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var i = 0\n    while i < game.count {\n        if guess[i] == game[i] {\n\
    \            result.append(0)\n        } else {\n            result.append(abs(guess[i]\
    \ - game[i]))\n        }\n        i += 1\n    }\n    return result", "    var\
    \ result = [Int](repeating: 0, count: guess.count)\n    for i in 0..<guess.count\
    \ {\n        if game[i] == guess[i] {\n            result[i] = 0\n        } else\
    \ {\n            result[i] = abs(game[i] - guess[i])\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var i = 0\n    while i < game.count\
    \ {\n        if game[i] == guess[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(game[i] - guess[i]))\n        }\n    \
    \    i += 1\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ 0..<guess.count {\n        let guess = guess[i]\n        let score = game[i]\n\
    \        let diff = abs(guess - score)\n        result.append(diff)\n    }\n \
    \   return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    \n    for i in 0..<guess.count {\n        if game[i] == guess[i] {\n    \
    \        result[i] = 0\n        } else {\n            result[i] = abs(game[i]\
    \ - guess[i])\n        }\n    }\n    \n    return result", "    var result = [Int]()\n\
    \    for index in 0..<guess.count {\n        let score = game[index]\n       \
    \ let guess = guess[index]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let difference = abs(game[index] - guess[index])\n        result.append(difference)\n\
    \    }\n    return result", "    var result = [Int](repeating: 0, count: guess.count)\n\
    \    for i in 0..<guess.count {\n        let score = game[i]\n        let guess\
    \ = guess[i]\n        if guess == score {\n            result[i] = 0\n       \
    \ } else {\n            result[i] = abs(guess - score)\n        }\n    }\n   \
    \ return result", "    var result = [Int]()\n    \n    for index in 0..<guess.count\
    \ {\n        if game[index] == guess[index] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[index] - guess[index]))\n\
    \        }\n    }\n    \n    return result", "    var result = [Int](repeating:\
    \ 0, count: guess.count)\n    for i in 0..<guess.count {\n        result[i] =\
    \ abs(game[i] - guess[i])\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<guess.count {\n        let guess = guess[i]\n        let score\
    \ = game[i]\n        if guess == score {\n            result.append(0)\n     \
    \   } else {\n            result.append(abs(guess - score))\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for index in 0..<guess.count\
    \ {\n        let score = game[index]\n        let guess = guess[index]\n     \
    \   let diff = abs(guess - score)\n        result.append(diff)\n    }\n    return\
    \ result", "    var result = [Int]()\n    for index in 0..<guess.count {\n   \
    \     let guess = guess[index]\n        let score = game[index]\n        let diff\
    \ = abs(guess - score)\n        result.append(diff)\n    }\n    return result",
  "    var result = [Int]()\n    for index in 0..<guess.count {\n        let guess\
    \ = guess[index]\n        let score = game[index]\n        let diff = abs(guess\
    \ - score)\n        result.append(diff)\n    }\n    return result", "    var result\
    \ = [Int]()\n    \n    for i in 0..<guess.count {\n        if game[i] == guess[i]\
    \ {\n            result.append(0)\n        } else {\n            result.append(abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    \n    return result", "    var result =\
    \ [Int]()\n    for i in 0..<guess.count {\n        let score = game[i]\n     \
    \   let guess = guess[i]\n        let diff = abs(guess - score)\n        result.append(diff)\n\
    \    }\n    return result"]
stop_tokens:
- "\n}"

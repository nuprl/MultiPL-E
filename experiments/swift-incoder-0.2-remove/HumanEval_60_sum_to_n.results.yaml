language: swift
name: HumanEval_60_sum_to_n
results:
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 0
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for number in 1...n {\n        sum += number\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i := 1; i <= n; i++ {\n        sum +=\
    \ i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n:\
    \ 1) == 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmpf28lvno6.swift:5:12: error: expected type\n    for i := 1; i <=\
    \ n; i++ {\n           ^\n            <#type#>\n/tmp/tmpf28lvno6.swift:5:12: error:\
    \ expected 'in' after for-each pattern\n    for i := 1; i <= n; i++ {\n      \
    \     ^\n/tmp/tmpf28lvno6.swift:5:12: error: expected Sequence expression for\
    \ for-each loop\n    for i := 1; i <= n; i++ {\n           ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprt5a4rct/tmprt5a4rct.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61928c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61925beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61925be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61925bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprt5a4rct                        0x0000558ade45d3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002b6192ab3460 __libc_start_main +
    245

    6    tmprt5a4rct                        0x0000558ade45cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: -4
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 0..<n {\n        sum += n\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: Exception
  stderr: 'tmprmodps8n/tmprmodps8n.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c7a1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c7711b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c7711988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c77107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmodps8n                        0x000055b36530f3b0 <unavailable> + 5040

    5    libc.so.6                          0x00002ad3c7c06460 __libc_start_main +
    245

    6    tmprmodps8n                        0x000055b36530efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405
- exit_code: 1
  program: "\n/// sum_to_n is a function that sums numbers from 1 to n.\nfunc sum_to_n(n:\
    \ Int) -> Int {\n    var sum = 0\n    for _ in 1...n {\n        sum += _\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(sum_to_n(n: 1) ==\
    \ 1)\nassert(sum_to_n(n: 6) == 21)\nassert(sum_to_n(n: 11) == 66)\nassert(sum_to_n(n:\
    \ 30) == 465)\nassert(sum_to_n(n: 100) == 5050)"
  status: SyntaxError
  stderr: "/tmp/tmp6c9pvsb_.swift:6:16: error: '_' can only appear in a pattern or\
    \ on the left side of an assignment\n        sum += _\n               ^\n"
  stdout: ''
  timestamp: 1659978405

name: HumanEval_45_triangle_area
language: swift
prompt: "\n/// Given length of a side and high return area for a triangle.\nfunc triangle_area(a:\
  \ Int, h: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 5, h: 3) == 7.5)\nassert(triangle_area(a:\
  \ 2, h: 2) == 2.0)\nassert(triangle_area(a: 10, h: 8) == 40.0)"
completions: ['    return a * h / 2', '    return sqrt(a * a + h * h) / 2.0', '    return
    (a * h) / Double(2.0 * 3.14159)', '    return a * h / 2', '    return Double(sqrt(pow(a,
    2) + pow(h / 2, 2)))', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    a * h / 2', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return Double(sqrt(pow(a,
    2) + pow(h / 2, 2)))', "    let area = a * h / 2\n    return area", '    return
    a * h / 2', '    return a * h / 2', "    let area = a * h\n    return area", '    return
    a * h / 2', '    return a * h / 2', '    return a * h / 2', '    return (a * h)
    / Double(2.0 * 3.14159)', '    return (a * h) / Double(2.0 * 3.14159)', '    return
    sqrt(pow(a, 2) + pow(h / 2, 2))', '    return a * h / 2', '    return a * h /
    2', '    return (a * h) / Double(2.0 * 3.14159)', '    return a * h / 2', '    return
    sqrt(a * a + h * h) / 2.0', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    a * h / 2', '    return a * h / 2', '    return a * h / 2', '    return a * h
    / 2', "    let area = a * h\n    return area", '    return (a * h) / Double(2.0
    * 3.14159265358979323846264338327950288)', "    let area = a * h / 2\n    return\
    \ area", '    return a * h / 2', '    return (a * h) / Double(2.0 * 3.14159)',
  '    return sqrt(a * a + h * h)', '    return sqrt(pow(a, 2) + pow(h / 2, 2))',
  '    return a * h / 2', '    return sqrt(pow(a, 2.0) + pow(h / 2.0, 2.0))', '    return
    a * h / 2', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', '    return
    a * h / 2', '    return (a * h) / Double(2.0 * 3.141592653589793)', '    return
    a * h / 2', '    return a * h / 2', '    return a * h / 2', '    return a * h
    / 2', "    let area = a * h / 2\n    return area", '    return sqrt(a * a + h
    * h) / 2.0', '    return Double(sqrt(Double(a * a + h * h)))', '    return sqrt(pow(a,
    2) + pow(h / 2, 2))', '    return (a * h) / Double(2.0 * M_PI)', '    return a
    * h / 2', '    return sqrt(pow(a, 2) + pow((h / 2), 2))', '    return a * h /
    2', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', '    return a * h /
    2', '    return a * h / 2', '    return a * h / 2', '    return Double(sqrt(Double(a
    * a + h * h)))', '    return a * h / 2', '    return a * h / 2', '    return sqrt(pow(a,
    2) + pow(h / 2, 2))', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', '    return
    a * h / 2', '    return (a * h) / Double(6)', '    return sqrt(pow(a, 2) + pow(h
    / 2, 2))', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return a * h / 2',
  '    return a * h / 2', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    (a * h) / Double(2.0 * 3.14159)', '    return (a * h) / Double(2.0 * M_PI)', '    return
    a * h / 2', "    let area = a * h / 2\n    return area", '    return sqrt(a *
    a + h * h) / 2.0', '    return (a * h) / Double(2.0 * M_PI)', '    return (a *
    h) / Double(a * a + h * h)', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))',
  '    return (a * h) / Double(2.0 * 3.14159)', '    return a * h / 2', '    return
    a * h / 2', '    return a * h / 2', "    let area = a * h / 2\n    return area",
  '    return (a * h) / Double(2.0 * 3.14159)', '    return a * h / 2', '    return
    (a * h) / Double(6)', "    let area = a * h / 2\n    return area", '    return
    (a * h) / Double(2.0 * 3.14159)', '    return sqrt(a * a + h * h) / 2.0', '    return
    Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', '    return a * h / 2', "    let area\
    \ = a * h\n    return area", "    let area = a * h\n    return area", '    return
    a * h / 2', '    return Double(sqrt(Double(a * a + h * h)))', '    return (a *
    h) / Double(2.0 * 3.14159)', '    return Double(sqrt(pow(a, 2) + pow((h / 2),
    2)))', '    return a * h / 2', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    a * h / 2', '    return Double(a * h) / Double(a * a + h * h)', '    return (a
    * h) / Double(3.0)', '    return (a * h) / Double(3.0)', '    return a * h / 2',
  '    return a * h / 2', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    (a * h) / Double(2.0 * M_PI)', '    return Double(sqrt(Double(a*a + h*h)))', " \
    \   let area = a * h / 2\n    return area", '    return (a * h) / Double(2.0 *
    3.14159)', '    return a * h / 2', '    return a * h / 2', '    return a * h /
    2', '    return a * h / 2', "    let area = a * h / 2\n    return area", '    return
    a * h / 2', '    return (a * h) / Double(2.0 * 3.14159)', '    return sqrt(pow(a,
    2) + pow(h / 2, 2))', "    let area = a * h\n    return area", '    return Double(sqrt(pow(a,
    2) + pow(h / 2, 2)))', '    return a * h / 2', "    let area = a * h / 2\n   \
    \ return area", '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return a *
    h / 2', '    return (a * h) / Double(2.0 * 3.14159)', '    return sqrt(pow(a,
    2) + pow(h / 2, 2))', '    return a * h / 2', '    return sqrt(pow(a, 2) + pow(h
    / 2, 2))', '    return (a * h) / 2', '    return a * h / 2', '    return (a *
    h) / 2', '    return (a * h) / Double(2.0 * 3.141592653589793)', '    return a
    * h / 2', '    return Double(sqrt(pow(a, 2) + pow((h / 2), 2)))', '    return
    a * h / 2', '    return a * h / 2', "    let area = a * h / 2\n    return area",
  '    return a * h / 2', '    return a * h / 2', '    return (a * h) / Double(6)',
  '    return a * h / 2', '    return sqrt(pow(a, 2) + pow(h / 2, 2))', '    return
    a * h / 2', '    return (a * h) / Double(6)', '    return a * h / 2', '    return
    a * h / 2', '    return a * h / 2', '    return (a * h) / Double(2.0 * 3.14159)',
  '    return a * h / 2', '    return sqrt(a * a + h * h) / 2.0', "    let area =\
    \ a * h / 2\n    return area", '    return Double(a * h / 2)', '    return Double(sqrt(pow(a,
    2) + pow(h / 2, 2)))', '    return a * h / 2', '    return (a * h) / Double(2.0
    * 3.14159)', '    return Double(sqrt(Double(a*a + h*h)))', "    let area = a *\
    \ h / 2\n    return area", '    return a * h / 2', '    return (a * h) / Double(2.0
    * 3.14159)', "    let area = a * h / 2\n    return area", '    return sqrt(pow(a,
    2) + pow((h / 2), 2))', '    return a * h / 2', '    return (a * h) / Double(2.0
    * M_PI)', '    return (a * h) / Double(2.0 * 3.14159)', '    return (a * h) /
    Double(2.0 * 3.14159)', "    let area = a * h / 2\n    return area", "    let\
    \ area = a * h\n    return area", '    return sqrt(pow(a, 2) + pow(h / 2, 2))',
  '    return (a * h) / Double(2.0 * M_PI)', '    return a * h / 2', '    return sqrt(pow(a,
    2) + pow(h / 2, 2))', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', " \
    \   let area = a * h / 2\n    return area", "    let area = a * h\n    return\
    \ area", "    let area = a * h\n    return area", "    let area = a * h / 2\n\
    \    return area", '    return (a * h) / Double(2.0 * 3.14159)', '    return (a
    * h) / Double(2.0 * M_PI);', '    return a * h / 2', '    return a * h / 2', '    return
    Double(sqrt(pow(a, 2) + pow((h / 2), 2)))', '    return sqrt(pow(a, 2) + pow(h
    / 2, 2))', '    return (a * h) / Double(2.0 * 3.14159)', '    return a * h / 2',
  '    return a * h / 2', '    return a * h / 2', '    return a * h / 2', '    return
    a * h / 2', '    return a * h / 2', "    let area = a * h / 2\n    return area",
  '    return a * h / 2', '    return Double(sqrt(pow(a, 2) + pow(h / 2, 2)))', '    return
    a * h / 2', '    return (a * h) / Double(2.0 * 3.14159)', '    return sqrt(pow(a,
    2.0) + pow(h / 2.0, 2.0))', "    let area = a * h\n    return area", '    return
    a * h / 2', '    return a * h / 2', '    return a * h / 2', '    return Double(sqrt(pow(a,
    2) + pow((h / 2), 2)))']
stop_tokens:
- "\n}"

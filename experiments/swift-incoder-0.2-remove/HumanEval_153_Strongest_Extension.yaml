name: HumanEval_153_Strongest_Extension
language: swift
prompt: "\n/// You will be given the name of a class (a string) and a list of extensions.\n\
  /// The extensions are to be used to load additional classes to the class. The\n\
  /// strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  /// letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n/// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n/// You should find the strongest extension and return a string in this \n///\
  \ format: ClassName.StrongestExtensionName.\n/// If there are two or more extensions\
  \ with the same strength, you should\n/// choose the one that comes first in the\
  \ list.\n/// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n/// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  /// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n/// (its strength is -1).\n/// Example:\nfunc Strongest_Extension(class_name:\
  \ String, extensions: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(Strongest_Extension(class_name: \"Watashi\"\
  , extensions: [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\nassert(Strongest_Extension(class_name:\
  \ \"Boku123\", extensions: [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
  ]) == \"Boku123.YEs.WeCaNe\")\nassert(Strongest_Extension(class_name: \"__YESIMHERE\"\
  , extensions: [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
  ]) == \"__YESIMHERE.NuLl__\")\nassert(Strongest_Extension(class_name: \"K\", extensions:\
  \ [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\nassert(Strongest_Extension(class_name:\
  \ \"__HAHA\", extensions: [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\
  )\nassert(Strongest_Extension(class_name: \"YameRore\", extensions: [\"HhAas\",\
  \ \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\
  assert(Strongest_Extension(class_name: \"finNNalLLly\", extensions: [\"Die\", \"\
  NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\nassert(Strongest_Extension(class_name:\
  \ \"_\", extensions: [\"Bb\", \"91245\"]) == \"_.Bb\")\nassert(Strongest_Extension(class_name:\
  \ \"Sp\", extensions: [\"671235\", \"Bb\"]) == \"Sp.671235\")"
completions: ["    // Your code here\n    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = class_name.characters.filter({ $0.isUppercase }).count\
    \ - class_name.characters.filter({ $0.isLowercase }).count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count - extension.lowercased().characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    return \"\"", "    // Your code here\n    var strongest = extensions[0]\n\
    \    for extension in extensions {\n        var strongestStrength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            strongestStrength -= 1\n            }\n        }\n        if strongestStrength\
    \ > strongest.count {\n            strongest = extension\n        }\n    }\n \
    \   return class_name + \".\" + strongest", "    var strongest_extension = \"\"\
    \n    var strongest_extension_strength = -1\n    var class_name_lowercase = class_name.lowercased()\n\
    \    for extension in extensions {\n        var extension_lowercase = extension.lowercased()\n\
    \        var class_name_extension_lowercase = class_name_lowercase + extension_lowercase\n\
    \        var extension_strength = class_name_extension_lowercase.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = class_name_extension_lowercase\n            strongest_extension_strength =\
    \ extension_strength\n        }\n    }\n    return strongest_extension", '    //
    Your code here', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = class_name.components(separatedBy: \".\"\
    ).count - extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components.count - class_name_components.map\
    \ { $0.isUppercase }.count\n        let extension_components_count_cap = extension_components.count\
    \ - extension_components.map { $0.isUppercase }.count\n        let class_name_components_count_sm\
    \ = class_name_components.count - class_name_components.map { $0.isLowercase }.count\n\
    \        let extension_components_count_sm = extension_components.count - extension_components.map\
    \ { $0.isLowercase }.count\n        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm)\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm)\n       \
    \ let class_name_components_count_cap_sm_ratio = class_name_components_count_cap_sm\
    \ / class_name_components_count_sm\n        let extension_components_count_cap_sm_ratio\
    \ = extension_components_count_cap_sm / extension_components_count_sm\n      \
    \  let class_name_components_count_cap_sm_ratio_power = class_name_components_count_cap_sm_ratio\
    \ * class_name_components_count_cap\n        let extension_components_count_cap_sm_ratio_power\
    \ = extension_components_count_cap_sm_ratio * extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm_ratio_power_extension_components_count\
    \ = class_name_components_count_cap_sm_ratio_power * extension_components_count\n\
    \        let extension_components_count_cap_sm_ratio_power_extension_components_count\
    \ = extension_components_count_cap_sm_ratio_power * class_name_components_count\n\
    \        let extension_components_count_cap_sm_ratio_power_extension_components_count_power\
    \ = extension_components_count_cap_sm_ratio_power_extension_components_count *\
    \ extension_components_count_cap_sm_ratio_power\n        let extension_components_count_cap_sm_ratio_power_extension_components_count_power_extension_components_count\
    \ = extension_components_count_cap_sm_ratio_power_extension_components_count *\
    \ extension_components_count_cap_sm_ratio_power_extension_components_count\n \
    \       let extension_components_count_cap_sm_ratio_power_extension", '    //
    Your code here', '    ', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var max_strength = -1\n    for\
    \ extension in extensions {\n        let cap = extension.count\n        let sm\
    \ = class_name.count\n        let strength = cap - sm\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return strongest_extension", "    \n    // Your code here\n\
    \    \n    return \"\"", "    \n    // Your code here\n    \n    return \"\"",
  '    // Your code here', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = class_name.components(separatedBy:\
    \ \".\").count - extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    \n    // Your code here\n    \n    return\
    \ \"\"", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest\
    \ = \"\"\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    \n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUpToLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    \n    if strongest_extension_strength\
    \ == -1 {\n        return class_name\n    }\n    \n    return class_name + \"\
    .\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    var class_name_lowercase = class_name.lowercased()\n    \n    for\
    \ extension in extensions {\n        var extension_lowercase = extension.lowercased()\n\
    \        var extension_strength = class_name_lowercase.count-extension_lowercase.count\n\
    \        \n        if extension_strength > strongest_extension_strength {\n  \
    \          strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    \n    return class_name + \".\"\
    \ + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    var class_name_lowercase = class_name.lowercased()\n    var extension_lowercase\
    \ = extensions[0].lowercased()\n    var extension_strength = extensions[0].count\n\
    \    for extension in extensions {\n        var extension_lowercase = extension.lowercased()\n\
    \        var extension_strength = extension.count\n        if class_name_lowercase.hasSuffix(extension_lowercase)\
    \ {\n            extension_strength -= 1\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    var max_extension = \"\"\n    for extension\
    \ in extensions {\n        let extension_strength = class_name.components(separatedBy:\
    \ \".\").count - extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  max_extension = extension\n        }\n    }\n    return class_name + \".\"\
    \ + max_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters\
    \ - extension.countLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count - extension.lowercased().characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToCapitalLetters()\
    \ - extension.countUpToLowerLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.reduce(0)\
    \ { (sum, character) -> Int in\n            return sum + Int(character.isUppercase)\n\
    \        }\n        if extension_strength > max_strength {\n            max_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n            if letter.isLowercase\
    \ {\n                extension_strength += 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.reduce(0) { (sum, character)\
    \ -> Int in\n            let character = Character(character)\n            return\
    \ sum + Int(character.isUppercase)\n        }\n        if extension_strength >\
    \ strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return class_name + \".\" + strongest_extension", '    // Your code
    here', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest = extensions[0]\n    for extension\
    \ in extensions {\n        let cap = extension.count\n        let sm = extension.lowercased().count\n\
    \        let strength = cap - sm\n        if strength > strongest.count {\n  \
    \          strongest = extension\n        }\n    }\n    return class_name + \"\
    .\" + strongest", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1 // default value\n    for extension in extensions {\n        let cap =\
    \ extension.count\n        let sm = class_name.count\n        let strength = cap\
    \ - sm\n        if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    var strongest_extension_class_name = \"\"\n    \n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        \n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ \n        if class_name_components_count == extension_components_count {\n \
    \           let class_name_components_lowercase = class_name_components.lowercased()\n\
    \            let extension_components_lowercase = extension_components.lowercased()\n\
    \            \n            let class_name_components_lowercase_index = class_name_components_lowercase.index(of:\
    \ extension_components_lowercase)\n            let extension_components_lowercase_index\
    \ = extension_components_lowercase.index(of: class_name_components_lowercase)\n\
    \            \n            if class_name_components_lowercase_index < extension_components_lowercase_index\
    \ {\n                strongest_extension_strength = class_name_components_lowercase_index\
    \ - extension_components_lowercase_index\n                strongest_extension_class_name\
    \ = class_name_components_lowercase\n            }\n        }\n    }\n    \n \
    \   if strongest_extension_strength > 0 {\n        strongest_extension = class_name\
    \ + \".\" + strongest_extension_class_name\n    }\n    \n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters\
    \ - extension.countLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    // Your code here\n    return \"\"", "  \
    \  var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = class_name.characters.filter({\
    \ $0.isUppercase }).count - class_name.characters.filter({ $0.isLowercase }).count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count - extension.lowercased().characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1\n    \n    for extension\
    \ in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        \n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ \n        if class_name_components_count == extension_components_count {\n \
    \           let class_name_components_lowercase = class_name_components.map {\
    \ $0.lowercased() }\n            let extension_components_lowercase = extension_components.map\
    \ { $0.lowercased() }\n            \n            let class_name_components_uppercase\
    \ = class_name_components.map { $0.uppercased() }\n            let extension_components_uppercase\
    \ = extension_components.map { $0.uppercased() }\n            \n            let\
    \ class_name_components_lowercase_index = class_name_components_lowercase.index(of:\
    \ extension_components_lowercase[0])\n            let extension_components_lowercase_index\
    \ = extension_components_lowercase.index(of: class_name_components_lowercase[0])\n\
    \            \n            if class_name_components_lowercase_index < extension_components_lowercase_index\
    \ {\n                strongest_extension = class_name + \".\" + extension\n  \
    \              strength = class_name_components_lowercase_index - extension_components_lowercase_index\n\
    \            }\n        }\n    }\n    \n    if strength == -1 {\n        return\
    \ class_name\n    }\n    \n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_extension_strength = class_name_components_count -\
    \ extension_components_count\n        if class_name_components_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ class_name_components_extension_strength\n            strongest_extension =\
    \ extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    ', "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = class_name.components(separatedBy: extension.lowercased()).count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest\
    \ = \"\"\n    var strength = Int()\n    for extension in extensions {\n      \
    \  let cap = extension.count\n        let sm = class_name.count\n        let strength_frac\
    \ = cap - sm\n        if strength_frac > strength {\n            strongest = extension\n\
    \            strength = strength_frac\n        }\n    }\n    return strongest",
  "    var strongest = \"\"\n    var strongest_strength = -1\n    for extension in\
    \ extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_strength {\n            strongest =\
    \ class_name\n            strongest_strength = extension_strength\n        }\n\
    \    }\n    return strongest", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_lowercase\
    \ = class_name.lowercased()\n    \n    for extension in extensions {\n       \
    \ var extension_lowercase = extension.lowercased()\n        var extension_strength\
    \ = class_name_lowercase.count{\n            char in\n            extension_lowercase.contains(char)\n\
    \        }\n        \n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    \n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    \n    for extension in\
    \ extensions {\n        let extension_strength = extension.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string_capitalized.lowercased()\n        let extension_counter_string_smallerCapitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smallerCapitalizedToUppercase\
    \ = extension_counter_string_smallerCapitalized.uppercased()\n        let extension_counter_string_smallerCapitalizedToLowercase\
    \ = extension_counter_string_smallerCapitalized.lowercased()\n        let extension_counter_string_smallerCapitalizedToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercase.uppercased()\n    \
    \    let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase",
  "    // Your code here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c.isUppercase {\n              \
    \  extension_strength -= 1\n            }\n            if c.isLowercase {\n  \
    \              extension_strength += 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string_capitalized.lowercased()\n        let extension_counter_string_smallerCapitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smallerCapitalizedToUppercase\
    \ = extension_counter_string_smallerCapitalized.uppercased()\n        let extension_counter_string_smallerCapitalizedToLowercase\
    \ = extension_counter_string_smallerCapitalized.lowercased()\n        let extension_counter_string_smallerCapitalizedToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercase.uppercased()\n    \
    \    let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_extension_strength = class_name_components_count -\
    \ extension_components_count\n        let extension_components_extension_strength\
    \ = extension_components_count - class_name_components_count\n        if class_name_components_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ class_name_components_extension_strength\n            strongest_extension =\
    \ extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    \n    for extension in\
    \ extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest\
    \ = extensions[0]\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = extension.lowercased().count\n        let strength = cap - sm\n\
    \        if strength > 0 {\n            strongest = extension\n        }\n   \
    \ }\n    return class_name + \".\" + strongest", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = extension.lowercased().count\n     \
    \   let strength = cap - sm\n        if strength > strength {\n            strongest_extension\
    \ = extension\n            strength = cap - sm\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    \n    // Your code here\n    \n    return\
    \ \"\"", '    // Your code here', "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string_capitalized.lowercased()\n        let extension_counter_string_smaller_capitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smaller_capitalized_extension\
    \ = extension_counter_string_smaller_capitalized.components(separatedBy: \".\"\
    )\n        let extension_counter_string_smaller_capitalized_extension_strength\
    \ = extension_counter_string_smaller_capitalized_extension.count\n        if extension_counter_string_smaller_capitalized_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name\n\
    \            strongest_extension_strength = extension_counter_string_smaller_capitalized_extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character >= 'A' && character <= 'Z' {\n       \
    \         extension_strength -= 1\n            }\n            if character >=\
    \ 'a' && character <= 'z' {\n                extension_strength -= 1\n       \
    \     }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    ', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest = \"\"\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    \n    for extension in\
    \ extensions {\n        let extension_strength = class_name.components(separatedBy:\
    \ \".\").count - extension.components(separatedBy: \".\").count\n        \n  \
    \      if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    if strongest_extension_strength != -1 {\n        strongest =\
    \ class_name + \".\" + strongest_extension\n    }\n    \n    return strongest",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = class_name.components(separatedBy:\
    \ \".\").count - extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var strongest_extension_class_name\
    \ = \"\"\n    \n    for extension in extensions {\n        let class_name_components\
    \ = class_name.components(separatedBy: \".\")\n        let extension_components\
    \ = extension.components(separatedBy: \".\")\n        \n        let class_name_components_count\
    \ = class_name_components.count\n        let extension_components_count = extension_components.count\n\
    \        \n        let class_name_components_count_cap = class_name_components.count\
    \ - class_name_components_count + 1\n        let extension_components_count_cap\
    \ = extension_components.count - extension_components_count + 1\n        \n  \
    \      let class_name_components_count_sm = class_name_components_count - class_name_components_count_cap\n\
    \        let extension_components_count_sm = extension_components_count - extension_components_count_cap\n\
    \        \n        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm) / 2\n   \
    \     \n        let class_name_components_count_cap_sm_sum = class_name_components_count_cap_sm\
    \ + class_name_components_count_sm\n        let extension_components_count_cap_sm_sum\
    \ = extension_components_count_cap_sm + extension_components_count_sm\n      \
    \  \n        let class_name_components_count_cap_sm_product = class_name_components_count_cap_sm\
    \ * extension_components_count_cap_sm\n        let extension_components_count_cap_sm_product\
    \ = class_name_components_count_cap_sm * extension_components_count_sm\n     \
    \   \n        let class_name_components_count_cap_sm_product_sum = class_name_components_count_cap_sm_product\
    \ + class_name_components_count_cap_sm_sum\n        let extension_components_count_cap_sm_product_sum\
    \ = extension_components_count_cap_sm_product + extension_components_count_cap_sm_sum\n\
    \        \n        let class_name_components_count_cap_sm_product_product = class_name_components_count_cap_sm_product_sum\
    \ * extension_components_count_cap_sm_product_sum\n        let extension_components_count_cap_sm_product_product\
    \ = class_name_components_count_cap_sm_product_sum * extension_components_count_cap_sm_sum\n\
    \        \n        let strength = class_name_components_count_cap_sm_product_product\
    \ / extension_components_count_cap_sm_product_product\n        \n        if strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength = ",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    var class_name_length = class_name.characters.count\n    var extension_length\
    \ = extensions.count\n    for i in 0..<class_name_length {\n        for j in 0..<extension_length\
    \ {\n            let class_name_character = class_name.characters[i]\n       \
    \     let extension_character = extensions[j].characters[i]\n            if class_name_character\
    \ == extension_character {\n                if class_name_character == class_name_character.lowercased()\
    \ {\n                    strongest_extension_strength = class_name_character.characters.count\
    \ - extension_character.characters.count\n                } else {\n         \
    \           strongest_extension_strength = class_name_character.characters.count\
    \ + extension_character.characters.count\n                }\n                if\
    \ strongest_extension_strength > strongest_extension_strength {\n            \
    \        strongest_extension = class_name\n                    strongest_extension_strength\
    \ = strongest_extension_strength\n                }\n            }\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countElements() / class_name.countElements()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string.lowercased()\n        let extension_counter_string_smaller_capitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smaller_capitalized_extension\
    \ = extension_counter_string_smaller_capitalized.components(separatedBy: \".\"\
    )\n        let extension_counter_string_smaller_capitalized_extension_counter\
    \ = extension_counter_string_smaller_capitalized_extension.count\n        let\
    \ extension_counter_string_smaller_capitalized_extension_counter_capitalized =\
    \ extension_counter_string_smaller_capitalized_extension_counter.capitalized\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller\
    \ = extension_counter_string_smaller_capitalized_extension_counter.lowercased()\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller.capitalized\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized.components(separatedBy:\
    \ \".\")\n        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension.count\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter_capitalized\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter.capitalized\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter_smaller\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter.lowercased()\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter_smaller_capitalized\
    \ = extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter_smaller.capitalized\n\
    \        let extension_counter_string_smaller_capitalized_extension_counter_smaller_capitalized_extension_counter",
  '    // Your code here', '    // Your code here', "    var strongest_extension =\
    \ \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = class_name.components(separatedBy: \".\"\
    ).count - extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for c in extension\
    \ {\n            if c.isUppercase {\n                extension_strength -= 1\n\
    \            }\n            if c.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string_capitalized.lowercased()\n        let extension_counter_string_smallerCapitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smallerCapitalizedToUppercase\
    \ = extension_counter_string_smallerCapitalized.uppercased()\n        let extension_counter_string_smallerCapitalizedToLowercase\
    \ = extension_counter_string_smallerCapitalized.lowercased()\n        let extension_counter_string_smallerCapitalizedToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToUppercase.lowercased()\n    \
    \    let extension_counter_string_smallerCapitalizedToLowercaseToUppercase = extension_counter_string_smallerCapitalizedToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercase.uppercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercaseToLowercase\
    \ = extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseToUppercase.lowercased()\n\
    \        let extension_counter_string_smallerCapitalizedToLowercaseToUppercaseToLowercaseToUppercaseToLowercaseTo",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    // Your\
    \ code here\n    \n    return \"\"", "    var strongest_extension = \"\"\n   \
    \ var strongest_extension_strength = -1\n    for extension in extensions {\n \
    \       let class_name_components = class_name.components(separatedBy: \".\")\n\
    \        let extension_components = extension.components(separatedBy: \".\")\n\
    \        let class_name_components_count = class_name_components.count\n     \
    \   let extension_components_count = extension_components.count\n        let class_name_components_count_cap\
    \ = class_name_components.count - class_name_components_count + 1\n        let\
    \ extension_components_count_cap = extension_components.count - extension_components_count\
    \ + 1\n        let class_name_components_count_sm = class_name_components_count\
    \ - class_name_components_count_cap\n        let extension_components_count_sm\
    \ = extension_components_count - extension_components_count_cap\n        let class_name_components_count_cap_sm\
    \ = (class_name_components_count_cap - class_name_components_count_sm) / 2\n \
    \       let extension_components_count_cap_sm = (extension_components_count_cap\
    \ - extension_components_count_sm) / 2\n        let class_name_components_count_cap_sm_extension_components_count_cap_sm\
    \ = class_name_components_count_cap_sm + extension_components_count_cap_sm\n \
    \       let extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ = extension_components_count_cap_sm + extension_components_count_cap_sm\n  \
    \      let class_name_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ = class_name_components_count_cap_sm_extension_components_count_cap_sm + extension_components_count_cap_sm_extension_components_count_cap_sm\n\
    \        let extension_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ = extension_components_count_cap_sm_extension_components_count_cap_sm + extension_components_count_cap_sm_extension_components_count_cap_sm\n\
    \        let class_name_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ = class_name_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ + extension_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\n\
    \        let extension_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm_extension_components_count_cap_sm\
    \ = extension_components_count_cap_sm_extension_components_count_cap", '    ',
  "    // Your code here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.filter({\
    \ $0.isUppercase }).count - extension.characters.filter({ $0.isLowercase }).count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    ', "    var strongest_extension = \"\"\n\
    \    var strength = Int()\n    for extension in extensions {\n        let cap\
    \ = extension.count\n        let sm = class_name.count\n        let strength_fraction\
    \ = cap - sm\n        if strength_fraction > strength {\n            strongest_extension\
    \ = extension\n            strength = strength_fraction\n        }\n    }\n  \
    \  return strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.reduce(0) { (sum, letter)\
    \ -> Int in\n            let letter_int = letter.unicodeScalars.reduce(0) { (sum,\
    \ scalar) -> Int in\n                let letter = Character(scalar)\n        \
    \        return sum + letter.uppercased().asciiValue - letter.lowercased().asciiValue\n\
    \            }\n            return sum + letter_int\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest\
    \ = \"\"\n    var strongestStrength = -1\n    for extension in extensions {\n\
    \        var extensionStrength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extensionStrength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extensionStrength\
    \ += 1\n            }\n        }\n        if extensionStrength > strongestStrength\
    \ {\n            strongestStrength = extensionStrength\n            strongest\
    \ = class_name\n        }\n    }\n    return strongest", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.reduce(0) { (sum, letter)\
    \ -> Int in\n            let letter_upper = letter.uppercased()\n            return\
    \ sum + Int(letter_upper)\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    var max_extension = \"\"\n    for extension in extensions {\n    \
    \    let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            max_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + max_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let class_name_extension =\
    \ class_name + extension\n        let class_name_extension_strength = class_name_extension.countUppercaseLetters()\
    \ - class_name_extension.countLowercaseLetters()\n        if class_name_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name_extension\n\
    \            strongest_extension_strength = class_name_extension_strength\n  \
    \      }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_components\
    \ = class_name.components(separatedBy: \".\")\n    var extension_components =\
    \ extensions.components(separatedBy: \".\")\n    for i in 0..<class_name_components.count\
    \ {\n        let class_name_component = class_name_components[i]\n        for\
    \ j in 0..<extension_components.count {\n            let extension_component =\
    \ extension_components[j]\n            let class_name_component = class_name_component\n\
    \            let extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_component = extension_component\n\
    \            let class_name_component = class_name_component\n            let\
    \ extension_component = extension_component\n            let class_name_component\
    \ = class_name_component\n            let extension_", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for char in extension\
    \ {\n            if char.uppercased() != char {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let frac =\
    \ cap - sm\n        if frac > strength {\n            strength = frac\n      \
    \      strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest = \"\"\n    var strongest_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_strength {\n            strongest =\
    \ class_name\n            strongest_strength = extension_strength\n        }\n\
    \    }\n    return strongest", "    \n    var strongest_extension = \"\"\n   \
    \ var strongest_extension_strength = -1\n    \n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        \n \
    \       if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character >= 'A' && character <= 'Z' {\n       \
    \         extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters - extension.countLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    ', "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    for extension in extensions {\n\
    \        let cap = extension.count\n        let sm = class_name.count\n      \
    \  let strength = cap - sm\n        if strength > 0 {\n            if strongest_extension\
    \ == \"\" {\n                strongest_extension = class_name + extension\n  \
    \          } else {\n                if strength < strongest_extension.count {\n\
    \                    strongest_extension = class_name + extension\n          \
    \      }\n            }\n        }\n    }\n    return strongest_extension", " \
    \   \n    // Your code here\n    \n    return \"\"", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n            if letter.isLowercase {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.reduce(0)\
    \ { (sum, char) -> Int in\n            let char_upper = char.uppercased()\n  \
    \          let char_lower = char.lowercased()\n            return sum + char_upper.characters.count\
    \ - char_lower.characters.count\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_components = class_name.components(separatedBy: \"\
    .\")\n        let extension_components = extension.components(separatedBy: \"\
    .\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components.count - class_name_components_count\
    \ + 1\n        let extension_components_count_cap = extension_components.count\
    \ - extension_components_count + 1\n        let class_name_components_count_sm\
    \ = class_name_components_count - class_name_components_count_cap\n        let\
    \ extension_components_count_sm = extension_components_count - extension_components_count_cap\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ - class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap - extension_components_count_sm) / 2\n   \
    \     let class_name_components_count_cap_sm_strength = class_name_components_count_cap_sm\
    \ - class_name_components_count_sm\n        let extension_components_count_cap_sm_strength\
    \ = extension_components_count_cap_sm - extension_components_count_sm\n      \
    \  if class_name_components_count_cap_sm_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = class_name_components_count_cap_sm_strength\n        }\n    }\n    return\
    \ strongest_extension", "    \n    // Your code here\n    \n    return \"\"",
  "    var strongest = extensions[0]\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = extension.lowercased().count\n     \
    \   let strength = cap - sm\n        if strength > strongest.count {\n       \
    \     strongest = extension\n        }\n    }\n    return class_name + \".\" +\
    \ strongest", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUppercase {\n    \
    \            extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.reduce(0) { (sum, character)\
    \ -> Int in\n            if character == character.lowercaseString {\n       \
    \         return sum + 1\n            } else {\n                return sum\n \
    \           }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToCapitalLetters()\
    \ - extension.countUpToLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countElements() / class_name.countElements()\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    // Your code here', "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUppercase {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    // Your code here', "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = class_name.countUpToIndex(extension.lowercased())\n       \
    \ if strength > max_strength {\n            max_strength = strength\n        \
    \    strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = class_name.components(separatedBy: \".\").count -\
    \ extension.components(separatedBy: \".\").count\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  strongest_extension = extension\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", '    //
    Your code here', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    // Your\
    \ code here\n    \n    return \"\"", '    ', "    var strongest_extension = \"\
    \"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count - extension.lowercased().characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countElements() / class_name.countElements()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let class_name_extension = class_name + extension\n        let class_name_extension_strength\
    \ = class_name_extension.characters.count\n        if class_name_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name_extension\n\
    \            strongest_extension_strength = class_name_extension_strength\n  \
    \      }\n    }\n    return strongest_extension", "    var strongest = \"\"\n\
    \    var strongest_strength = -1\n    for extension in extensions {\n        let\
    \ extension_strength = extension.countUpToLowercaseLetters()\n        if extension_strength\
    \ > strongest_strength {\n            strongest = class_name\n            strongest_strength\
    \ = extension_strength\n        }\n    }\n    return strongest", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = class_name.characters.filter({ $0.isUppercase\
    \ }).count - class_name.characters.filter({ $0.isLowercase }).count\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest = \"\"\n    var strength = Int()\n    for extension in extensions\
    \ {\n        let cap = extension.count\n        let sm = class_name.count\n  \
    \      let strength_fraction = cap - sm\n        strength = strength * strength_fraction\
    \ + strength_fraction\n        if strength > strongest.count {\n            strongest\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest", '    ',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    var extension_counter = 0\n    for extension in extensions {\n        extension_counter\
    \ += 1\n        let extension_counter_string = String(extension_counter)\n   \
    \     let extension_counter_string_capitalized = extension_counter_string.capitalized\n\
    \        let extension_counter_string_smaller = extension_counter_string_capitalized.lowercased()\n\
    \        let extension_counter_string_smaller_capitalized = extension_counter_string_smaller.capitalized\n\
    \        let extension_counter_string_smaller_capitalized_extension = extension_counter_string_smaller_capitalized.components(separatedBy:\
    \ \".\")\n        let extension_counter_string_smaller_capitalized_extension_strength\
    \ = extension_counter_string_smaller_capitalized_extension.count\n        if extension_counter_string_smaller_capitalized_extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name\n\
    \            strongest_extension_strength = extension_counter_string_smaller_capitalized_extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1 // default strength is\
    \ -1\n    for extension in extensions {\n        var cap = extension.count\n \
    \       var sm = extension.lowercased().count\n        strength = cap - sm\n \
    \       if strength > 0 {\n            strongest_extension = class_name + extension\n\
    \            break\n        }\n    }\n    return strongest_extension", "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character >= 'A' && character\
    \ <= 'Z' {\n                extension_strength -= 1\n            }\n         \
    \   if character >= 'a' && character <= 'z' {\n                extension_strength\
    \ += 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    ', "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     let extension_strength = extension.characters.count - extension.lowercased().characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = extension\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters() -\
    \ extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    ', "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = class_name.characters.filter({ $0.isUppercase\
    \ }).count - class_name.characters.filter({ $0.isLowercase }).count\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = class_name.components(separatedBy: extension.lowercased()).count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c >= 'A' && c <= 'Z' {\n       \
    \         extension_strength = extension_strength * 26 + c - 'A' + 1\n       \
    \     } else if c >= 'a' && c <= 'z' {\n                extension_strength = extension_strength\
    \ * 26 + c - 'a' + 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    // Your\
    \ code here\n    \n    return \"\"", "    var strongest_extension = \"\"\n   \
    \ var strongest_extension_strength = -1\n    for extension in extensions {\n \
    \       let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    \n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    \n    for extension in\
    \ extensions {\n        var extension_strength = extension.count\n        for\
    \ letter in extension {\n            if letter.isUppercase {\n               \
    \ extension_strength -= 1\n            }\n            if letter.isLowercase {\n\
    \                extension_strength += 1\n            }\n        }\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_uppercase\
    \ = class_name.uppercased()\n    var class_name_lowercase = class_name.lowercased()\n\
    \    for extension in extensions {\n        var extension_uppercase = extension.uppercased()\n\
    \        var extension_lowercase = extension.lowercased()\n        var extension_strength\
    \ = class_name_uppercase.distance(class_name_lowercase)\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    var extension_counter = 0\n  \
    \  for extension in extensions {\n        extension_counter += 1\n        let\
    \ extension_counter_string = String(extension_counter)\n        let extension_counter_string_capitalized\
    \ = extension_counter_string.capitalized\n        let extension_counter_string_smaller\
    \ = extension_counter_string_capitalized.lowercased()\n        let extension_counter_string_smallerCapitalized\
    \ = extension_counter_string_smaller.capitalized\n        let extension_counter_string_smallerCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalized.capitalizedAndCapitalized()\n\
    \        let extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalizedAndCapitalized.capitalizedAndCapitalizedAndCapitalized()\n\
    \        let extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalized.capitalizedAndCapitalizedAndCapitalizedAndCapitalized()\n\
    \        let extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalized.capitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized()\n\
    \        let extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized.capitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized()\n\
    \        let extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized\
    \ = extension_counter_string_smallerCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalizedAndCapitalized()",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension"]
stop_tokens:
- "\n}"

name: HumanEval_89_encrypt
language: swift
prompt: "\n/// Create a function encrypt that takes a string as an argument and\n\
  /// returns a string encrypted with the alphabet being rotated. \n/// The alphabet\
  \ should be rotated in a manner such that the letters \n/// shift down by two multiplied\
  \ to two places.\n/// For example:\nfunc encrypt(s: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(encrypt(s: \"hi\") == \"lm\")\nassert(encrypt(s:\
  \ \"asdfghjkl\") == \"ewhjklnop\")\nassert(encrypt(s: \"gf\") == \"kj\")\nassert(encrypt(s:\
  \ \"et\") == \"ix\")\nassert(encrypt(s: \"faewfawefaewg\") == \"jeiajeaijeiak\"\
  )\nassert(encrypt(s: \"hellomyfriend\") == \"lippsqcjvmirh\")\nassert(encrypt(s:\
  \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
  )\nassert(encrypt(s: \"a\") == \"e\")"
completions: ["    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetArray\
    \ = Array(alphabet)\n    var alphabetArrayLength = alphabetArray.length\n    var\
    \ alphabetArrayLength = alphabetArrayLength / 2\n    var alphabetArrayLength =\
    \ alphabetArrayLength * 2\n    var alphabetArrayLength = alphabetArrayLength +\
    \ 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n    var alphabetArrayLength = alphabetArrayLength + 2\n    var alphabetArrayLength\
    \ = alphabetArrayLength + 2\n    var alphabetArrayLength = alphabetArrayLength\
    \ + 2\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var newString\
    \ = \"\"\n    for c in s.characters {\n        newString += alphabet[alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.index(alphabet, startIndex: alphabet.characters.index(alphabet,\
    \ startIndex: alphabet.characters.", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetArray = Array(alphabet)\n    var alphabetArrayReversed = Array(alphabet.reverse())\n\
    \    var alphabetArrayRotated: Array<String> = []\n    var alphabetArrayRotatedReversed:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed2: Array<String> = []\n\
    \    var alphabetArrayRotatedReversed3: Array<String> = []\n    var alphabetArrayRotatedReversed4:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed5: Array<String> = []\n\
    \    var alphabetArrayRotatedReversed6: Array<String> = []\n    var alphabetArrayRotatedReversed7:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed8: Array<String> = []\n\
    \    var alphabetArrayRotatedReversed9: Array<String> = []\n    var alphabetArrayRotatedReversed10:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed11: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed12: Array<String> = []\n    var alphabetArrayRotatedReversed13:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed14: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed15: Array<String> = []\n    var alphabetArrayRotatedReversed16:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed17: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed18: Array<String> = []\n    var alphabetArrayRotatedReversed19:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed20: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed21: Array<String> = []\n    var alphabetArrayRotatedReversed22:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed23: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed24: Array<String> = []\n    var alphabetArrayRotatedReversed25:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed26: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed27: Array<String> = []\n    var alphabetArrayRotatedReversed28:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed29: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed30: Array<String> = []\n    var alphabetArrayRotatedReversed31:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed32: Array<String> =\
    \ []\n    var alphabetArrayRotatedReversed33: Array<String> = []\n    var alphabetArrayRotatedReversed34:\
    \ Array<String> = []\n    var ", "    var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet = [Character]()\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n    var\
    \ alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var encryptedString = \"\"\n    for char in s.characters\
    \ {\n        var index = alphabet.index(of: char)\n        index = index! + 2\n\
    \        index = index % alphabetLength\n        encryptedString += alphabetRotated[index]\n\
    \    }\n    return encryptedString", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    for _ in 0..<s.count {\n        newAlphabet\
    \ = alphabet[newAlphabet.startIndex.advancedBy(2)]\n    }\n    return newAlphabet",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var newAlphabet = \"\"\n    var newAlphabetLength = alphabet.count\n    var\
    \ newAlphabetIndex = 0\n    var newAlphabetIndex2 = 0\n    var newAlphabetIndex3\
    \ = 0\n    var newAlphabetIndex4 = 0\n    var newAlphabetIndex5 = 0\n    var newAlphabetIndex6\
    \ = 0\n    var newAlphabetIndex7 = 0\n    var newAlphabetIndex8 = 0\n    var newAlphabetIndex9\
    \ = 0\n    var newAlphabetIndex10 = 0\n    var newAlphabetIndex11 = 0\n    var\
    \ newAlphabetIndex12 = 0\n    var newAlphabetIndex13 = 0\n    var newAlphabetIndex14\
    \ = 0\n    var newAlphabetIndex15 = 0\n    var newAlphabetIndex16 = 0\n    var\
    \ newAlphabetIndex17 = 0\n    var newAlphabetIndex18 = 0\n    var newAlphabetIndex19\
    \ = 0\n    var newAlphabetIndex20 = 0\n    var newAlphabetIndex21 = 0\n    var\
    \ newAlphabetIndex22 = 0\n    var newAlphabetIndex23 = 0\n    var newAlphabetIndex24\
    \ = 0\n    var newAlphabetIndex25 = 0\n    var newAlphabetIndex26 = 0\n    var\
    \ newAlphabetIndex27 = 0\n    var newAlphabetIndex28 = 0\n    var newAlphabetIndex29\
    \ = 0\n    var newAlphabetIndex30 = 0\n    var newAlphabetIndex31 = 0\n    var\
    \ newAlphabetIndex32 = 0\n    var newAlphabetIndex33 = 0\n    var newAlphabetIndex34\
    \ = 0\n    var newAlphabetIndex35 = 0\n    var newAlphabetIndex36 = 0\n    var\
    \ newAlphabetIndex37 = 0\n    var newAlphabetIndex38 = 0\n    var newAlphabetIndex39\
    \ = 0\n    var newAlphabetIndex40 = 0\n    var newAlphabetIndex41 = 0\n    var\
    \ newAlphabetIndex42 = 0\n    var newAlphabetIndex43 = 0\n    var newAlphabetIndex44\
    \ = 0\n    var newAlphabetIndex45 = 0\n    var newAlphabetIndex46 = 0\n    var\
    \ newAlphabetIndex47 = 0\n    var newAlphabetIndex48 = 0\n    var newAlphabetIndex49\
    \ = 0\n    var newAlphabetIndex50 = 0\n    var newAlphabetIndex51 = 0\n    var\
    \ newAlphabetIndex52 = 0\n    var newAlphabetIndex53 = 0\n    var newAlphabetIndex54\
    \ = 0\n    var newAlphabetIndex55 = 0\n    var newAlphabetIndex56 = 0\n    var\
    \ newAlphabetIndex57 = 0\n    var newAlphabetIndex58 = 0\n    var newAlphabetIndex59\
    \ = 0\n    var newAlphab", "    var alphabet: [Character] = [\"a\", \"b\", \"\
    c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var encrypted: [Character] = []\n    for letter in s {\n    \
    \    encrypted.append(alphabet[alphabet.index(letter, offsetBy: 2)])\n    }\n\
    \    return String(encrypted)", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetIndex = 0\n    var\
    \ encryptedString = \"\"\n    for letter in s {\n        encryptedString += alphabet[alphabetIndex\
    \ % alphabetLength]\n        alphabetIndex++\n    }\n    return encryptedString",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var encryptedString = \"\"\n    for character in\
    \ s {\n        var index = alphabet.index(of: character)!\n        index = index\
    \ + 2\n        index = index % alphabetLength\n        encryptedString += alphabetRotated[index]\n\
    \    }\n    return encryptedString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+1]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+2]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+3]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+4]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+5]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+6]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+7]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+8]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+9]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+10]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+11]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+12]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+13]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+14]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+15]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+16]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+17]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+18]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+19]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+20]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+21]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+22]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+23]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+24]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+25]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+26]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+27]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+28]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+29]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+30]))\n    alphabet.append(Character(s.characters[s.characters.startIndex",
  "    var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    \n    var result = [Character]()\n    \n    for char in s {\n     \
    \   var index = alphabet.index(of: char)!\n        var newIndex = index * 2\n\
    \        \n        if newIndex > 26 {\n            newIndex -= 26\n        }\n\
    \        \n        result.append(alphabet[newIndex])\n    }\n    \n    return\
    \ String(result)", "    var result = \"\"\n    for letter in s {\n        let\
    \ index = alphabet.index(of: letter)!\n        let newIndex = index + 2\n    \
    \    let newLetter = alphabet[newIndex]\n        result += newLetter\n    }\n\
    \    return result", "    var alphabet = [String]()\n    alphabet.append(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    alphabet.append(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    alphabet.append(\"\
    0123456789\")\n    alphabet.append(\"!@#$%^&*()\")\n    alphabet.append(\"~`-_=+[]{}\\\
    \\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\"\
    )\n    alphabet.append(\"~`-_=+[]{}\\\\|;:'\\\",<>?\")\n    alphabet.append(\"\
    ~`-_=+[]{}\\\\|;:'", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characters[s.characters.startIndex]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+1]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+2]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+3]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+4]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+5]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+6]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+7]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+8]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+9]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+10]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+11]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+12]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+13]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+14]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+15]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+16]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+17]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+18]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+19]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+20]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+21]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+22]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+23]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+24]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+25]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+26]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+27]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+28]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+29]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+30]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex", "    var\
    \ result = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += newChar\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetReversed = alphabet.reversed()\n\
    \    var alphabetReversedLength = alphabetReversed.count\n    var alphabetReversedString\
    \ = \"\"\n    for _ in 0..<s.count {\n        alphabetReversedString += alphabetReversed[Int(arc4random_uniform(UInt32(alphabetReversedLength)))]\n\
    \    }\n    var alphabetReversedStringLength = alphabetReversedString.count\n\
    \    var alphabetReversedStringString = \"\"\n    for _ in 0..<s.count {\n   \
    \     alphabetReversedStringString += alphabetReversedString[Int(arc4random_uniform(UInt32(alphabetReversedStringLength)))]\n\
    \    }\n    var alphabetReversedStringStringLength = alphabetReversedStringString.count\n\
    \    var alphabetReversedStringStringString = \"\"\n    for _ in 0..<s.count {\n\
    \        alphabetReversedStringStringString += alphabetReversedStringString[Int(arc4random_uniform(UInt32(alphabetReversedStringStringLength)))]\n\
    \    }\n    var alphabetReversedStringStringStringLength = alphabetReversedStringStringString.count\n\
    \    var alphabetReversedStringStringStringString = \"\"\n    for _ in 0..<s.count\
    \ {\n        alphabetReversedStringStringStringString += alphabetReversedStringStringString[Int(arc4random_uniform(UInt32(alphabetReversedStringStringStringLength)))]\n\
    \    }\n    var alphabetReversedStringStringStringStringLength = alphabetReversedStringStringStringString.count\n\
    \    var alphabetReversedStringStringStringStringString = \"\"\n    for _ in 0..<s.count\
    \ {\n        alphabetReversedStringStringStringStringString += alphabetReversedStringStringStringString[Int(arc4random_uniform(UInt32(alphabetReversedStringStringStringStringLength)))]\n\
    \    }\n    var alphabetReversedStringStringStringStringStringLength = alphabetReversedStringStringStringStringString.count\n\
    \    var alphabetReversedStringStringStringStringStringString = \"\"\n    for\
    \ _ in 0..<s.count {\n        alphabetReversedStringStringStringStringStringString\
    \ += alphabetReversedStringStringStringStringString[Int(arc4random_uniform(UInt32(alphabetReversedStringStringStringStringStringLength)))]\n\
    \    }\n    var alphabetReversedStringStringStringStringStringStringLength = alphabetReversedStringStringStringStringStringStringString.count\n\
    \    var alphabetReversedStringStringStringStringStringStringString = \"\"\n \
    \   for _ in 0..<s.count {\n        alphabetReversedStringStringStringStringStringStringString\
    \ += alphabetReversedStringStringStringStringStringString[Int(arc4random_uniform(UInt32(alphabetReversedStringStringString",
  "    var alphabet = [Character]()\n    for c in s.characters {\n        alphabet.append(c)\n\
    \    }\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"A\"))))\n \
    \   alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"B\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"C\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"D\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"E\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"F\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"G\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"H\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"I\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"J\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"K\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"L\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"M\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"N\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"O\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"P\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Q\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"R\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"S\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"T\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"U\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"V\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"W\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"X\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Y\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Z\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"a\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"b\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"c\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"d\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"", " \
    \   var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var result = \"\"\n   \
    \ for c in s {\n        let index = alphabet.characters.indexOf(c)\n        let\
    \ newIndex = index + 2\n        result += alphabet[newIndex]\n    }\n    return\
    \ result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetLength = alphabet.count\n    var alphabetLength\
    \ = alphabet.count", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ alphabetLength = alphabet.count\n    var alphabetIndex = 0\n    var encryptedString\
    \ = \"\"\n    for character in s {\n        encryptedString += alphabet[alphabetIndex\
    \ % alphabetLength]\n        alphabetIndex++\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    alphabet.append(Character(\"A\"))\n    alphabet.append(Character(\"\
    B\"))\n    alphabet.append(Character(\"C\"))\n    alphabet.append(Character(\"\
    D\"))\n    alphabet.append(Character(\"E\"))\n    alphabet.append(Character(\"\
    F\"))\n    alphabet.append(Character(\"G\"))\n    alphabet.append(Character(\"\
    H\"))\n    alphabet.append(Character(\"I\"))\n    alphabet.append(Character(\"\
    J\"))\n    alphabet.append(Character(\"K\"))\n    alphabet.append(Character(\"\
    L\"))\n    alphabet.append(Character(\"M\"))\n    alphabet.append(Character(\"\
    N\"))\n    alphabet.append(Character(\"O\"))\n    alphabet.append(Character(\"\
    P\"))\n    alphabet.append(Character(\"Q\"))\n    alphabet.append(Character(\"\
    R\"))\n    alphabet.append(Character(\"S\"))\n    alphabet.append(Character(\"\
    T\"))\n    alphabet.append(Character(\"U\"))\n    alphabet.append(Character(\"\
    V\"))\n    alphabet.append(Character(\"W\"))\n    alphabet.append(Character(\"\
    X\"))\n    alphabet.append(Character(\"Y\"))\n    alphabet.append(Character(\"\
    Z\"))\n    \n    var result = [Character]()\n    \n    for char in s {\n     \
    \   var index = alphabet.index(of: char)!\n        let newIndex = index + 2\n\
    \        let newChar = alphabet[newIndex]\n        result.append(newChar)\n  \
    \  }\n    \n    return String(result)", "    var alphabet = [Character]()\n  \
    \  for _ in 0..<26 {\n        alphabet.append(Character(UnicodeScalar(UInt8(UInt8(0xE3)\
    \ + UInt8(i)))))\n    }\n    \n    var result = \"\"\n    for char in s {\n  \
    \      let index = alphabet.index(of: char)!\n        let newIndex = index + 2\n\
    \        let newChar = alphabet[newIndex]\n        result += String(UnicodeScalar(newChar))\n\
    \    }\n    return result", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // first letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(24))))\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(25))))\n\
    \    alphabet.append(Character(s.character", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var newAlphabet = String()\n  \
    \  var newAlphabetLength = newAlphabet.count\n    var newAlphabetIndex = 0\n \
    \   var newAlphabetIndex2 = 0\n    var newAlphabetIndex3 = 0\n    var newAlphabetIndex4\
    \ = 0\n    var newAlphabetIndex5 = 0\n    var newAlphabetIndex6 = 0\n    var newAlphabetIndex7\
    \ = 0\n    var newAlphabetIndex8 = 0\n    var newAlphabetIndex9 = 0\n    var newAlphabetIndex10\
    \ = 0\n    var newAlphabetIndex11 = 0\n    var newAlphabetIndex12 = 0\n    var\
    \ newAlphabetIndex13 = 0\n    var newAlphabetIndex14 = 0\n    var newAlphabetIndex15\
    \ = 0\n    var newAlphabetIndex16 = 0\n    var newAlphabetIndex17 = 0\n    var\
    \ newAlphabetIndex18 = 0\n    var newAlphabetIndex19 = 0\n    var newAlphabetIndex20\
    \ = 0\n    var newAlphabetIndex21 = 0\n    var newAlphabetIndex22 = 0\n    var\
    \ newAlphabetIndex23 = 0\n    var newAlphabetIndex24 = 0\n    var newAlphabetIndex25\
    \ = 0\n    var newAlphabetIndex26 = 0\n    var newAlphabetIndex27 = 0\n    var\
    \ newAlphabetIndex28 = 0\n    var newAlphabetIndex29 = 0\n    var newAlphabetIndex30\
    \ = 0\n    var newAlphabetIndex31 = 0\n    var newAlphabetIndex32 = 0\n    var\
    \ newAlphabetIndex33 = 0\n    var newAlphabetIndex34 = 0\n    var newAlphabetIndex35\
    \ = 0\n    var newAlphabetIndex36 = 0\n    var newAlphabetIndex37 = 0\n    var\
    \ newAlphabetIndex38 = 0\n    var newAlphabetIndex39 = 0\n    var newAlphabetIndex40\
    \ = 0\n    var newAlphabetIndex41 = 0\n    var newAlphabetIndex42 = 0\n    var\
    \ newAlphabetIndex43 = 0\n    var newAlphabetIndex44 = 0\n    var newAlphabetIndex45\
    \ = 0\n    var newAlphabetIndex46 = 0\n    var newAlphabetIndex47 = 0\n    var\
    \ newAlphabetIndex48 = 0\n    var newAlphabetIndex49 = 0\n    var newAlphabetIndex50\
    \ = 0\n    var newAlphabetIndex51 = 0\n    var newAlphabetIndex52 = 0\n    var\
    \ newAlphabetIndex53 = 0\n    var newAlphabetIndex54 = 0\n    var newAlphabetIndex55\
    \ = 0\n    var newAlphabetIndex56 = 0\n    var newAlphabetIndex57 = 0\n    var\
    \ newAlphabetIndex58 = 0\n    var newAlphabetIndex59 = 0\n", "    var alphabet\
    \ = [Character]()\n    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = [Character]()\n    for char\
    \ in s.characters {\n        alphabet.append(char.uppercased())\n    }\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 4)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 6)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 8)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 10)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 12)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 14)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 16)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 18)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 20)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 22)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 24)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 26)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 28)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 30)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 32)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 34)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 36)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 38)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 40)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 42)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 44)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 46)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 48)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 50)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.",
  "    var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    \n    var result = \"\"\n    for letter in s {\n        var index =\
    \ alphabet.index(letter)\n        index = index + 2\n        index = index % alphabet.count\n\
    \        result = result + alphabet[index]\n    }\n    return result", "    var\
    \ alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetArray = Array(alphabet)\n    var alphabetArrayReversed = Array(alphabet)\n\
    \    for var i = 0; i < alphabetArray.count; i++ {\n        alphabetArrayReversed[i]\
    \ = alphabetArray[alphabetArray.count - i - 1]\n    }\n    var result = \"\"\n\
    \    for var i = 0; i < s.count; i++ {\n        var index = alphabet.index(s.characters[i])\n\
    \        index = alphabetArrayReversed[index % alphabet.count]\n        result\
    \ += String(index)\n    }\n    return result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetReversed = alphabet.reversed()\n    var alphabetReversedLength\
    \ = alphabetReversed.count\n    var alphabetReversedString = \"\"\n    for _ in\
    \ 0..<alphabetReversedLength {\n        alphabetReversedString += alphabetReversed\n\
    \    }\n    var alphabetReversedStringLength = alphabetReversedString.count\n\
    \    var alphabetReversedStringArray = Array(alphabetReversedString)\n    var\
    \ alphabetReversedStringArrayLength = alphabetReversedStringArray.count\n    var\
    \ alphabetReversedStringArrayReversed = Array(alphabetReversedStringArray.reversed())\n\
    \    var alphabetReversedStringArrayReversedLength = alphabetReversedStringArrayReversed.count\n\
    \    var alphabetReversedStringArrayReversedString = \"\"\n    for _ in 0..<alphabetReversedStringArrayReversedLength\
    \ {\n        alphabetReversedStringArrayReversedString += alphabetReversedStringArrayReversed\n\
    \    }\n    var alphabetReversedStringArrayReversedStringLength = alphabetReversedStringArrayReversedString.count\n\
    \    var alphabetReversedStringArrayReversedStringArray = Array(alphabetReversedStringArrayReversedString)\n\
    \    var alphabetReversedStringArrayReversedStringArrayLength = alphabetReversedStringArrayReversedStringArray.count\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversed = Array(alphabetReversedStringArrayReversedStringArray.reversed())\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversedLength = alphabetReversedStringArrayReversedStringArrayReversed.count\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversedString = \"\"\n\
    \    for _ in 0..<alphabetReversedStringArrayReversedStringArrayLength {\n   \
    \     alphabetReversedStringArrayReversedStringArrayReversedString += alphabetReversedStringArrayReversedStringArrayReversed\n\
    \    }\n    var alphabetReversedStringArrayReversedStringArrayReversedStringLength\
    \ = alphabetReversedStringArrayReversedStringArrayReversedString.count\n    var\
    \ alphabetReversedStringArrayReversedStringArrayReversedStringArray = Array(alphabetReversedStringArrayReversedStringArrayReversedString)\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversedStringArrayLength\
    \ = alphabetReversedStringArrayReversedStringArrayReversedStringArray.count\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversedStringArrayReversed\
    \ = Array(alphabetReversedStringArrayReversedStringArrayReversedStringArray.reversed())\n\
    \    var alphabetReversedStringArrayReversedStringArrayReversedStringArrayReversedLength\
    \ = alphabetReversedStringArrayReversedStringArrayReversedStringArrayReverse",
  "    var alphabet = [Character]()\n    alphabet.append (\"a\")\n    alphabet.append\
    \ (\"b\")\n    alphabet.append (\"c\")\n    alphabet.append (\"d\")\n    alphabet.append\
    \ (\"e\")\n    alphabet.append (\"f\")\n    alphabet.append (\"g\")\n    alphabet.append\
    \ (\"h\")\n    alphabet.append (\"i\")\n    alphabet.append (\"j\")\n    alphabet.append\
    \ (\"k\")\n    alphabet.append (\"l\")\n    alphabet.append (\"m\")\n    alphabet.append\
    \ (\"n\")\n    alphabet.append (\"o\")\n    alphabet.append (\"p\")\n    alphabet.append\
    \ (\"q\")\n    alphabet.append (\"r\")\n    alphabet.append (\"s\")\n    alphabet.append\
    \ (\"t\")\n    alphabet.append (\"u\")\n    alphabet.append (\"v\")\n    alphabet.append\
    \ (\"w\")\n    alphabet.append (\"x\")\n    alphabet.append (\"y\")\n    alphabet.append\
    \ (\"z\")\n    \n    var newString = \"\"\n    for char in s {\n        var index\
    \ = alphabet.index(char)\n        index = index + 2\n        index = index % alphabet.count\n\
    \        newString = newString + alphabet[index]\n    }\n    return newString",
  "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // first letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // second letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // third letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // fourth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // fifth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // sixth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // seventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // eighth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // ninth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // tenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // eleventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // twelfth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // thirteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // fourteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // fifteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // sixteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // seventeenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // eighteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // nineteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // twentieth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // twenty-first letter\n    alphabet.append(Character(s.characterAt", "    var\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\
    \n    var encryptedString = \"\"\n    for letter in s {\n        encryptedString\
    \ += alphabetRotated[alphabet.index(letter)! + 2]\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    \n    var encryptedString = \"\"\n    for char in s {\n        encryptedString\
    \ += alphabet[alphabet.index(char.lowercased())!]\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = [Character]()\n    alphabet.append(Character(\"\
    a\"))\n    alphabet.append(Character(\"b\"))\n    alphabet.append(Character(\"\
    c\"))\n    alphabet.append(Character(\"d\"))\n    alphabet.append(Character(\"\
    e\"))\n    alphabet.append(Character(\"f\"))\n    alphabet.append(Character(\"\
    g\"))\n    alphabet.append(Character(\"h\"))\n    alphabet.append(Character(\"\
    i\"))\n    alphabet.append(Character(\"j\"))\n    alphabet.append(Character(\"\
    k\"))\n    alphabet.append(Character(\"l\"))\n    alphabet.append(Character(\"\
    m\"))\n    alphabet.append(Character(\"n\"))\n    alphabet.append(Character(\"\
    o\"))\n    alphabet.append(Character(\"p\"))\n    alphabet.append(Character(\"\
    q\"))\n    alphabet.append(Character(\"r\"))\n    alphabet.append(Character(\"\
    s\"))\n    alphabet.append(Character(\"t\"))\n    alphabet.append(Character(\"\
    u\"))\n    alphabet.append(Character(\"v\"))\n    alphabet.append(Character(\"\
    w\"))\n    alphabet.append(Character(\"x\"))\n    alphabet.append(Character(\"\
    y\"))\n    alphabet.append(Character(\"z\"))\n    \n    var encryptedString =\
    \ \"\"\n    for char in s {\n        var index = alphabet.index(of: char)\n  \
    \      index = index + 2\n        index = index % alphabet.count\n        encryptedString\
    \ += alphabet[index]\n    }\n    return encryptedString", "    var alphabet =\
    \ [String]()\n    alphabet.append(s.characters)\n    alphabet.append(s.characters.reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed())\n    alphabet.append(s.characters.reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reverse",
  "    var result = \"\"\n    for c in s.characters {\n        let index = alphabet.indexOf(c)\n\
    \        let newIndex = index + 2\n        if newIndex < alphabet.count {\n  \
    \          result += alphabet[newIndex]\n        } else {\n            result\
    \ += alphabet[0]\n        }\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetArray = Array(alphabet)\n    var\
    \ alphabetArrayReversed = Array(alphabet)\n    for i in 0..<alphabetArray.count\
    \ {\n        alphabetArrayReversed[i] = alphabetArray[alphabetArray.count - i\
    \ - 1]\n    }\n    var result = \"\"\n    for i in 0..<s.count {\n        var\
    \ index = alphabet.index(s.characters[i])\n        index = alphabetArrayReversed[index]\n\
    \        result += String(index)\n    }\n    return result", "    var alphabet\
    \ = [String]()\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n    alphabet.append(s)\n\
    \    alphabet.append(s)\n    alphabet.append(s)\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var result = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)!\n        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characters[s.startIndex]))\n    alphabet.append(Character(s.characters[s.startIndex+1]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+2]))\n    alphabet.append(Character(s.characters[s.startIndex+3]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+4]))\n    alphabet.append(Character(s.characters[s.startIndex+5]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+6]))\n    alphabet.append(Character(s.characters[s.startIndex+7]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+8]))\n    alphabet.append(Character(s.characters[s.startIndex+9]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+10]))\n    alphabet.append(Character(s.characters[s.startIndex+11]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+12]))\n    alphabet.append(Character(s.characters[s.startIndex+13]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+14]))\n    alphabet.append(Character(s.characters[s.startIndex+15]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+16]))\n    alphabet.append(Character(s.characters[s.startIndex+17]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+18]))\n    alphabet.append(Character(s.characters[s.startIndex+19]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+20]))\n    alphabet.append(Character(s.characters[s.startIndex+21]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+22]))\n    alphabet.append(Character(s.characters[s.startIndex+23]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+24]))\n    alphabet.append(Character(s.characters[s.startIndex+25]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+26]))\n    alphabet.append(Character(s.characters[s.startIndex+27]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+28]))\n    alphabet.append(Character(s.characters[s.startIndex+29]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+30]))\n    alphabet.append(Character(s.characters[s.startIndex+31]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+32]))\n    alphabet.append(Character(s.characters[s.startIndex+33",
  "    var result = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)\n        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n    var\
    \ alphabetRotated = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var encryptedString = \"\"\n    var encryptedStringLength\
    \ = s.count\n    for i in 0..<encryptedStringLength {\n        var encryptedChar\
    \ = alphabet[Int(arc4random_uniform(UInt32(alphabetLength)))]\n        encryptedString\
    \ += encryptedChar\n        encryptedString += alphabet[Int(arc4random_uniform(UInt32(alphabetRotatedLength)))]\n\
    \    }\n    return encryptedString", "    var result = \"\"\n    for c in s {\n\
    \        let index = alphabet.indexOf(c)\n        let newIndex = index + 2\n \
    \       let newChar = alphabet[newIndex]\n        result += newChar\n    }\n \
    \   return result", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    let\
    \ alphabetLength = alphabet.characters.count\n    let alphabetLength = alphabetLength\
    \ * 2\n    let alphabetLength = alphabetLength + 2\n    var newString = \"\"\n\
    \    for character in s.characters {\n        let index = alphabet.characters.index(of:\
    \ character)!\n        let newIndex = index % alphabetLength\n        newString\
    \ = newString + alphabet[newIndex]\n    }\n    return newString", "    var result\
    \ = \"\"\n    for c in s {\n        let index = alphabet.indexOf(c)\n        let\
    \ newIndex = index + 2\n        if newIndex < alphabet.count {\n            result\
    \ += alphabet[newIndex]\n        } else {\n            result += c\n        }\n\
    \    }\n    return result", "    var alphabet = [Character]()\n    alphabet.insert(Character(UnicodeScalar(UInt8(97)).value),\
    \ at: 0)\n    alphabet.insert(Character(UnicodeScalar(UInt8(98)).value), at: 1)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(99)).value), at: 2)\n    alphabet.insert(Character(UnicodeScalar(UInt8(100)).value),\
    \ at: 3)\n    alphabet.insert(Character(UnicodeScalar(UInt8(101)).value), at:\
    \ 4)\n    alphabet.insert(Character(UnicodeScalar(UInt8(102)).value), at: 5)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(103)).value), at: 6)\n    alphabet.insert(Character(UnicodeScalar(UInt8(104)).value),\
    \ at: 7)\n    alphabet.insert(Character(UnicodeScalar(UInt8(105)).value), at:\
    \ 8)\n    alphabet.insert(Character(UnicodeScalar(UInt8(106)).value), at: 9)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(107)).value), at: 10)\n   \
    \ alphabet.insert(Character(UnicodeScalar(UInt8(108)).value), at: 11)\n    alphabet.insert(Character(UnicodeScalar(UInt8(109)).value),\
    \ at: 12)\n    alphabet.insert(Character(UnicodeScalar(UInt8(110)).value), at:\
    \ 13)\n    alphabet.insert(Character(UnicodeScalar(UInt8(111)).value), at: 14)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(112)).value), at: 15)\n   \
    \ alphabet.insert(Character(UnicodeScalar(UInt8(113)).value), at: 16)\n    alphabet.insert(Character(UnicodeScalar(UInt8(114)).value),\
    \ at: 17)\n    alphabet.insert(Character(UnicodeScalar(UInt8(115)).value), at:\
    \ 18)\n    alphabet.insert(Character(UnicodeScalar(UInt8(116)).value), at: 19)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(117)).value), at: 20)\n   \
    \ alphabet.insert(Character(UnicodeScalar(UInt8(118)).value), at: 21)\n    alphabet.insert(Character(UnicodeScalar(UInt8(119)).value),\
    \ at: 22)\n    alphabet.insert(Character(UnicodeScalar(UInt8(120)).value), at:\
    \ 23)\n    alphabet.insert(Character(UnicodeScalar(UInt8(121)).value), at: 24)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(122)).value), at: 25)\n   \
    \ alphabet.insert(Character(UnicodeScalar(UInt", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\
    \n    var alphabetRotatedLength = alphabetRotated.count\n    var encryptedString\
    \ = \"\"\n    for character in s {\n        encryptedString += alphabet[alphabet.index(alphabet,\
    \ character) + alphabetRotated.index(alphabetRotated, character)]\n    }\n   \
    \ return encryptedString", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    newAlphabet = alphabet[newAlphabet.count\
    \ - 2] + alphabet[newAlphabet.count - 1]\n    return newAlphabet", "    var alphabet\
    \ = [Character]()\n    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var result = \"\"\n    for c in s.characters {\n        let index = alphabet.characters.indexOf(c)\n\
    \        let newIndex = index + 2\n        result += alphabet[newIndex]\n    }\n\
    \    return result", "    var alphabet = [Character : Character]()\n    alphabet[\"\
    A\"] = \"Z\"\n    alphabet[\"B\"] = \"Y\"\n    alphabet[\"C\"] = \"X\"\n    alphabet[\"\
    D\"] = \"W\"\n    alphabet[\"E\"] = \"V\"\n    alphabet[\"F\"] = \"U\"\n    alphabet[\"\
    G\"] = \"T\"\n    alphabet[\"H\"] = \"S\"\n    alphabet[\"I\"] = \"R\"\n    alphabet[\"\
    J\"] = \"Q\"\n    alphabet[\"K\"] = \"P\"\n    alphabet[\"L\"] = \"O\"\n    alphabet[\"\
    M\"] = \"N\"\n    alphabet[\"N\"] = \"M\"\n    alphabet[\"O\"] = \"L\"\n    alphabet[\"\
    P\"] = \"K\"\n    alphabet[\"Q\"] = \"J\"\n    alphabet[\"R\"] = \"I\"\n    alphabet[\"\
    S\"] = \"H\"\n    alphabet[\"T\"] = \"G\"\n    alphabet[\"U\"] = \"F\"\n    alphabet[\"\
    V\"] = \"E\"\n    alphabet[\"W\"] = \"D\"\n    alphabet[\"X\"] = \"C\"\n    alphabet[\"\
    Y\"] = \"B\"\n    alphabet[\"Z\"] = \"A\"\n    var newString = \"\"\n    for c\
    \ in s {\n        newString += alphabet[c]\n    }\n    return newString", "  \
    \  var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n  \
    \  alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // A\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // B\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // C\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // D\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // E\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // F\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // G\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // H\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // I\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // J\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // K\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // L\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // M\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // N\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // O\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // P\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // Q\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // R\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // S\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // T\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // U\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21))))\
    \ // V\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22))))\
    \ // W\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23))))\
    \ // X\n    alphabet.append(Charact", "    var alphabet = [Character]()\n    alphabet.append(Character(\"\
    a\"))\n    alphabet.append(Character(\"b\"))\n    alphabet.append(Character(\"\
    c\"))\n    alphabet.append(Character(\"d\"))\n    alphabet.append(Character(\"\
    e\"))\n    alphabet.append(Character(\"f\"))\n    alphabet.append(Character(\"\
    g\"))\n    alphabet.append(Character(\"h\"))\n    alphabet.append(Character(\"\
    i\"))\n    alphabet.append(Character(\"j\"))\n    alphabet.append(Character(\"\
    k\"))\n    alphabet.append(Character(\"l\"))\n    alphabet.append(Character(\"\
    m\"))\n    alphabet.append(Character(\"n\"))\n    alphabet.append(Character(\"\
    o\"))\n    alphabet.append(Character(\"p\"))\n    alphabet.append(Character(\"\
    q\"))\n    alphabet.append(Character(\"r\"))\n    alphabet.append(Character(\"\
    s\"))\n    alphabet.append(Character(\"t\"))\n    alphabet.append(Character(\"\
    u\"))\n    alphabet.append(Character(\"v\"))\n    alphabet.append(Character(\"\
    w\"))\n    alphabet.append(Character(\"x\"))\n    alphabet.append(Character(\"\
    y\"))\n    alphabet.append(Character(\"z\"))\n    \n    var encryptedString =\
    \ \"\"\n    for letter in s {\n        encryptedString += alphabet[alphabet.index(letter)!\
    \ + 2]\n    }\n    return encryptedString", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabetLength / 2\n    let alphabetLength = alphabetLength * 2\n    var newString\
    \ = \"\"\n    for char in s.characters {\n        newString += alphabet[alphabet.characters.index(of:\
    \ char) + alphabetLength]\n    }\n    return newString", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n    var\
    \ alphabetIndex = 0\n    var newString = \"\"\n    for letter in s {\n       \
    \ newString += alphabet[alphabetIndex % alphabetLength]\n        alphabetIndex++\n\
    \    }\n    return newString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(0)))\n\
    \    alphabet.append(Character(s.characterAtIndex(1)))\n    alphabet.append(Character(s.characterAtIndex(2)))\n\
    \    alphabet.append(Character(s.characterAtIndex(3)))\n    alphabet.append(Character(s.characterAtIndex(4)))\n\
    \    alphabet.append(Character(s.characterAtIndex(5)))\n    alphabet.append(Character(s.characterAtIndex(6)))\n\
    \    alphabet.append(Character(s.characterAtIndex(7)))\n    alphabet.append(Character(s.characterAtIndex(8)))\n\
    \    alphabet.append(Character(s.characterAtIndex(9)))\n    alphabet.append(Character(s.characterAtIndex(10)))\n\
    \    alphabet.append(Character(s.characterAtIndex(11)))\n    alphabet.append(Character(s.characterAtIndex(12)))\n\
    \    alphabet.append(Character(s.characterAtIndex(13)))\n    alphabet.append(Character(s.characterAtIndex(14)))\n\
    \    alphabet.append(Character(s.characterAtIndex(15)))\n    alphabet.append(Character(s.characterAtIndex(16)))\n\
    \    alphabet.append(Character(s.characterAtIndex(17)))\n    alphabet.append(Character(s.characterAtIndex(18)))\n\
    \    alphabet.append(Character(s.characterAtIndex(19)))\n    alphabet.append(Character(s.characterAtIndex(20)))\n\
    \    alphabet.append(Character(s.characterAtIndex(21)))\n    alphabet.append(Character(s.characterAtIndex(22)))\n\
    \    alphabet.append(Character(s.characterAtIndex(23)))\n    alphabet.append(Character(s.characterAtIndex(24)))\n\
    \    alphabet.append(Character(s.characterAtIndex(25)))\n    alphabet.append(Character(s.characterAtIndex(26)))\n\
    \    alphabet.append(Character(s.characterAtIndex(27)))\n    alphabet.append(Character(s.characterAtIndex(28)))\n\
    \    alphabet.append(Character(s.characterAtIndex(29)))\n    alphabet.append(Character(s.characterAtIndex(30)))\n\
    \    alphabet.append(Character(s.characterAtIndex(31)))\n    alphabet.append(Character(s.characterAtIndex(32)))\n\
    \    alphabet.append(Character(s.characterAtIndex(33)))\n    alphabet.append(Character(s.characterAtIndex(34)))\n\
    \    alphabet.append(Character(s.characterAtIndex(35)))\n    alphabet.append(Character(s.characterAtIndex(36)))\n\
    \    alphabet.append(Character(s.characterAtIndex(37)))\n    alphabet.append(Character(s.characterAtIndex(38)))\n\
    \    alphabet.append(Character(s.characterAtIndex(39)))\n    alphabet.append(Character(s.characterAtIndex(40)))\n\
    \    alphabet.append(Character(s.characterAtIndex(41)))\n    alphabet.append(Character(",
  "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\
    \n    var alphabetRotatedLength = alphabetRotated.count\n    var encryptedString\
    \ = \"\"\n    for character in s {\n        var index = alphabet.index(of: character)!\n\
    \        var encryptedIndex = alphabetRotated.index(of: alphabet[index])!\n  \
    \      encryptedString += alphabetRotated[encryptedIndex]\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    for _ in 0..<26 {\n        alphabet.append(Character(UnicodeScalar(UInt32(97\
    \ + _))))\n    }\n    \n    var result = \"\"\n    for c in s {\n        let index\
    \ = alphabet.index(of: c)!\n        let newIndex = index + 2\n        result +=\
    \ alphabet[newIndex]\n    }\n    return result", "    var result = \"\"\n    for\
    \ c in s.characters {\n        let index = alphabet.indexOf(c)\n        let newIndex\
    \ = index + 2\n        if newIndex < alphabet.count {\n            result += alphabet[newIndex]\n\
    \        } else {\n            result += alphabet[alphabet.count - 1]\n      \
    \  }\n    }\n    return result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"b\"))\n\
    \    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"d\"))\n\
    \    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"f\"))\n\
    \    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"h\"))\n\
    \    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"j\"))\n\
    \    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"l\"))\n\
    \    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"n\"))\n\
    \    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"p\"))\n\
    \    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"r\"))\n\
    \    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"t\"))\n\
    \    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"v\"))\n\
    \    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"x\"))\n\
    \    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"z\"))\n\
    \    \n    var encryptedString = \"\"\n    for character in s {\n        var index\
    \ = alphabet.index(of: character)!\n        index = index + 2\n        index =\
    \ index % 26\n        encryptedString += alphabet[index]\n    }\n    return encryptedString",
  "    var alphabet = [Character : Character]()\n    alphabet[\"A\"] = \"Z\"\n   \
    \ alphabet[\"B\"] = \"Y\"\n    alphabet[\"C\"] = \"X\"\n    alphabet[\"D\"] =\
    \ \"W\"\n    alphabet[\"E\"] = \"V\"\n    alphabet[\"F\"] = \"U\"\n    alphabet[\"\
    G\"] = \"T\"\n    alphabet[\"H\"] = \"S\"\n    alphabet[\"I\"] = \"R\"\n    alphabet[\"\
    J\"] = \"Q\"\n    alphabet[\"K\"] = \"P\"\n    alphabet[\"L\"] = \"O\"\n    alphabet[\"\
    M\"] = \"N\"\n    alphabet[\"N\"] = \"M\"\n    alphabet[\"O\"] = \"L\"\n    alphabet[\"\
    P\"] = \"K\"\n    alphabet[\"Q\"] = \"J\"\n    alphabet[\"R\"] = \"I\"\n    alphabet[\"\
    S\"] = \"H\"\n    alphabet[\"T\"] = \"G\"\n    alphabet[\"U\"] = \"F\"\n    alphabet[\"\
    V\"] = \"E\"\n    alphabet[\"W\"] = \"D\"\n    alphabet[\"X\"] = \"C\"\n    alphabet[\"\
    Y\"] = \"B\"\n    alphabet[\"Z\"] = \"A\"\n    var newString = \"\"\n    for char\
    \ in s {\n        newString += alphabet[char]\n    }\n    return newString", " \
    \   var result = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetIndex = 0\n    var encryptedString = \"\"\n    for char in s\
    \ {\n        encryptedString += alphabet[(alphabetIndex + alphabet.count - alphabet.count\
    \ / 2) % alphabetLength]\n        alphabetIndex++\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    \n    var result = \"\"\n    for c in s {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index % alphabet.count\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var newAlphabet = Array(alphabet[0 ..< alphabetLength])\n    var newAlphabetLength\
    \ = newAlphabet.count\n    var newAlphabetCount = newAlphabet.count\n    var newAlphabetString\
    \ = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n    var newAlphabetStringCount\
    \ = newAlphabetString.count\n    var newAlphabetString = \"\"\n    var newAlphabetStringLength\
    \ = newAlphabetString.count\n    var newAlphabetStringCount = newAlphabetString.count\n\
    \    var newAlphabetString = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n\
    \    var newAlphabetStringCount = newAlphabetString.count\n    var newAlphabetString\
    \ = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n    var newAlphabetStringCount\
    \ = newAlphabetString.count\n    var newAlphabetString = \"\"\n    var newAlphabetStringLength\
    \ = newAlphabetString.count\n    var newAlphabetStringCount = newAlphabetString.count\n\
    \    var newAlphabetString = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n\
    \    var newAlphabetStringCount = newAlphabetString.count\n    var newAlphabetString\
    \ = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n    var newAlphabetStringCount\
    \ = newAlphabetString.count\n    var newAlphabetString = \"\"\n    var newAlphabetStringLength\
    \ = newAlphabetString.count\n    var newAlphabetStringCount = newAlphabetString.count\n\
    \    var newAlphabetString = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n\
    \    var newAlphabetStringCount = newAlphabetString.count\n    var newAlphabetString\
    \ = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n    var newAlphabetStringCount\
    \ = newAlphabetString.count\n    var newAlphabetString = \"\"\n    var newAlphabetStringLength\
    \ = newAlphabetString.count\n    var newAlphabetStringCount = newAlphabetString.count\n\
    \    var newAlphabetString = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n\
    \    var newAlphabetStringCount = newAlphabetString.count\n    var newAlphabetString\
    \ = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n    var newAlphabetStringCount\
    \ = newAlphabetString.count\n    var newAlphabetString = \"\"\n    var newAlphabetStringLength\
    \ = newAlphabetString.count\n    var newAlphabetStringCount = newAlphabetString.count\n\
    \    var newAlphabetString = \"\"\n    var newAlphabetStringLength = newAlphabetString.count\n\
    \    var ", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // first letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // second letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // third letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // fourth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // fifth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // sixth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // seventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // eighth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // ninth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // tenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // eleventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // twelfth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // thirteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // fourteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // fifteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // sixteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // seventeenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // eighteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // nineteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // twentieth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // twenty-first letter\n    alphabet.append(Character(s.characterAt", "    var\
    \ alphabet = [Character]()\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"b\"))\n\
    \    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"d\"))\n\
    \    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"f\"))\n\
    \    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"h\"))\n\
    \    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"j\"))\n\
    \    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"l\"))\n\
    \    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"n\"))\n\
    \    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"p\"))\n\
    \    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"r\"))\n\
    \    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"t\"))\n\
    \    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"v\"))\n\
    \    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"x\"))\n\
    \    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"z\"))\n\
    \    \n    var result = [Character]()\n    \n    for char in s {\n        var\
    \ index = alphabet.index(of: char)!\n        index = index * 2\n        index\
    \ = index + 2\n        index = index % alphabet.count\n        result.append(alphabet[index])\n\
    \    }\n    \n    return String(result)", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetLength = alphabet.count\n    var result = \"\"\n    for c in\
    \ s.characters {\n        let index = alphabet.index(of: c)!\n        let newIndex\
    \ = index % alphabetLength\n        let newChar = alphabet[newIndex]\n       \
    \ result += newChar\n    }\n    return result", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // first letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // second letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // third letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // fourth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // fifth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // sixth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // seventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // eighth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // ninth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // tenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // eleventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // twelfth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // thirteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // fourteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // fifteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // sixteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // seventeenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // eighteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // nineteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // twentieth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // twenty-first letter\n    alphabet.append(Character(s.characterAt", "    var\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var resultString = \"\"\n    for letter in s {\n\
    \        let index = alphabet.index(of: letter)!\n        let indexRotated = alphabetRotated.index(of:\
    \ alphabet[index])!\n        resultString += alphabetRotated[indexRotated]\n \
    \   }\n    return resultString", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabetLength * 2\n    let alphabetLength = alphabetLength + alphabetLength\n\
    \    let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = alphabetLength + alphabetLength\n    let alphabetLength\
    \ = alphabetLength + alphabetLength\n    let alphabetLength = alphabetLength +\
    \ alphabetLength\n    let alphabetLength = alphabetLength + alphabetLength\n \
    \   let alphabetLength = ", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var result = [Character]()\n    for c in s {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        result.append(alphabet[newIndex])\n\
    \    }\n    return String(result)", "    var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var encryptedString = \"\"\n    for letter in s\
    \ {\n        var index = alphabet.index(letter)\n        index = index + 2\n \
    \       index = index % alphabetLength\n        encryptedString = encryptedString\
    \ + alphabetRotated[index]\n    }\n    return encryptedString", "    var alphabet\
    \ = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // first letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // second letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // third letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // fourth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // fifth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // sixth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // seventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // eighth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // ninth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // tenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // eleventh letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // twelfth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // thirteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // fourteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // fifteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // sixteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // seventeenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // eighteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // nineteenth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // twentieth letter\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // twenty-first letter\n    alphabet.append(Character(s.characterAt", "    var\
    \ result = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var result = \"\"\n    for letter in s\
    \ {\n        let index = alphabet.index(of: letter)!\n        let newIndex = index\
    \ + 2\n        result += alphabet[newIndex]\n    }\n    return result", "    var\
    \ result = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var newString = \"\"\n    for letter in\
    \ s {\n        newString += alphabet[(alphabet.index(letter, offsetBy: 2)) % (alphabet.count)]\n\
    \    }\n    return newString", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.characters.count\n    var alphabetArray =\
    \ Array(alphabet)\n    var alphabetArrayLength = alphabetArray.count\n    var\
    \ alphabetIndex = 0\n    var alphabetIndex2 = 0\n    var alphabetIndex3 = 0\n\
    \    var alphabetIndex4 = 0\n    var alphabetIndex5 = 0\n    var alphabetIndex6\
    \ = 0\n    var alphabetIndex7 = 0\n    var alphabetIndex8 = 0\n    var alphabetIndex9\
    \ = 0\n    var alphabetIndex10 = 0\n    var alphabetIndex11 = 0\n    var alphabetIndex12\
    \ = 0\n    var alphabetIndex13 = 0\n    var alphabetIndex14 = 0\n    var alphabetIndex15\
    \ = 0\n    var alphabetIndex16 = 0\n    var alphabetIndex17 = 0\n    var alphabetIndex18\
    \ = 0\n    var alphabetIndex19 = 0\n    var alphabetIndex20 = 0\n    var alphabetIndex21\
    \ = 0\n    var alphabetIndex22 = 0\n    var alphabetIndex23 = 0\n    var alphabetIndex24\
    \ = 0\n    var alphabetIndex25 = 0\n    var alphabetIndex26 = 0\n    var alphabetIndex27\
    \ = 0\n    var alphabetIndex28 = 0\n    var alphabetIndex29 = 0\n    var alphabetIndex30\
    \ = 0\n    var alphabetIndex31 = 0\n    var alphabetIndex32 = 0\n    var alphabetIndex33\
    \ = 0\n    var alphabetIndex34 = 0\n    var alphabetIndex35 = 0\n    var alphabetIndex36\
    \ = 0\n    var alphabetIndex37 = 0\n    var alphabetIndex38 = 0\n    var alphabetIndex39\
    \ = 0\n    var alphabetIndex40 = 0\n    var alphabetIndex41 = 0\n    var alphabetIndex42\
    \ = 0\n    var alphabetIndex43 = 0\n    var alphabetIndex44 = 0\n    var alphabetIndex45\
    \ = 0\n    var alphabetIndex46 = 0\n    var alphabetIndex47 = 0\n    var alphabetIndex48\
    \ = 0\n    var alphabetIndex49 = 0\n    var alphabetIndex50 = 0\n    var alphabetIndex51\
    \ = 0\n    var alphabetIndex52 = 0\n    var alphabetIndex53 = 0\n    var alphabetIndex54\
    \ = 0\n    var alphabetIndex55 = 0\n    var alphabetIndex56 = 0\n    var alphabetIndex57\
    \ = 0\n    var alphabetIndex58 = 0\n    var alphabetIndex59 = 0\n    var alphabetIndex60\
    \ = 0\n    var alphabetIndex61 = 0\n    var alphabetIndex62 = 0\n    var alphabetIndex63\
    \ = 0\n    var alphabetIndex64 = 0\n    var alphabetIndex65 = 0\n    var alphabetIndex66\
    \ = 0\n    var alphabetIndex67 = 0\n    var alphabetIndex68 = 0\n    var alphabetIndex69\
    \ = 0\n    var alphabetIndex70 = 0\n    var alphabetIndex71 = 0\n    var alphabetIndex72\
    \ = 0\n    var alphabetIndex73 = 0\n    var alphabetIndex74 = 0\n    var alphabetIndex75\
    \ = 0\n    var alphabetIndex76 = 0\n    var alphabetIndex77 = 0\n    var alphabetIndex78\
    \ = 0\n    var alphabetIndex79 = 0", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.characters.count\n    var alphabetIndex =\
    \ 0\n    var encryptedString = \"\"\n    for character in s {\n        encryptedString\
    \ += alphabet[alphabetIndex % alphabetLength]\n        alphabetIndex++\n    }\n\
    \    return encryptedString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0))))\
    \ // A\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1))))\
    \ // B\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2))))\
    \ // C\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3))))\
    \ // D\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4))))\
    \ // E\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5))))\
    \ // F\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6))))\
    \ // G\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7))))\
    \ // H\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8))))\
    \ // I\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9))))\
    \ // J\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10))))\
    \ // K\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11))))\
    \ // L\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12))))\
    \ // M\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13))))\
    \ // N\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14))))\
    \ // O\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15))))\
    \ // P\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16))))\
    \ // Q\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17))))\
    \ // R\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18))))\
    \ // S\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19))))\
    \ // T\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20))))\
    \ // U\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21))))\
    \ // V\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22))))\
    \ // W\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23))))\
    \ // X\n    alphabet.append(Charact", "    var alphabet = [Character : Int]()\n\
    \    alphabet[\"a\"] = 2\n    alphabet[\"b\"] = 3\n    alphabet[\"c\"] = 4\n \
    \   alphabet[\"d\"] = 5\n    alphabet[\"e\"] = 6\n    alphabet[\"f\"] = 7\n  \
    \  alphabet[\"g\"] = 8\n    alphabet[\"h\"] = 9\n    alphabet[\"i\"] = 1\n   \
    \ alphabet[\"j\"] = 2\n    alphabet[\"k\"] = 3\n    alphabet[\"l\"] = 4\n    alphabet[\"\
    m\"] = 5\n    alphabet[\"n\"] = 6\n    alphabet[\"o\"] = 7\n    alphabet[\"p\"\
    ] = 8\n    alphabet[\"q\"] = 9\n    alphabet[\"r\"] = 1\n    alphabet[\"s\"] =\
    \ 2 \n    alphabet[\"t\"] = 3\n    alphabet[\"u\"] = 4\n    alphabet[\"v\"] =\
    \ 5\n    alphabet[\"w\"] = 6\n    alphabet[\"x\"] = 7\n    alphabet[\"y\"] = 8\n\
    \    alphabet[\"z\"] = 9\n    \n    var result = \"\"\n    for char in s {\n \
    \       var index = alphabet.index(char)\n        index = index + 2\n        index\
    \ = index % alphabet.count\n        result = result + alphabet[index]\n    }\n\
    \    return result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ result = \"\"\n    for char in s {\n        let index = alphabet.index(of: char)!\n\
    \        let newIndex = index * 2\n        let newChar = alphabet[newIndex]\n\
    \        result += newChar\n    }\n    return result", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    newAlphabet = rotate(newAlphabet, 2)\n \
    \   return s.characters.map { newAlphabet[$0] }", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    for _ in 0..<s.count {\n        newAlphabet\
    \ = alphabet[newAlphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of", "    var alphabet =\
    \ [String]()\n    alphabet.append(\"a\")\n    alphabet.append(\"b\")\n    alphabet.append(\"\
    c\")\n    alphabet.append(\"d\")\n    alphabet.append(\"e\")\n    alphabet.append(\"\
    f\")\n    alphabet.append(\"g\")\n    alphabet.append(\"h\")\n    alphabet.append(\"\
    i\")\n    alphabet.append(\"j\")\n    alphabet.append(\"k\")\n    alphabet.append(\"\
    l\")\n    alphabet.append(\"m\")\n    alphabet.append(\"n\")\n    alphabet.append(\"\
    o\")\n    alphabet.append(\"p\")\n    alphabet.append(\"q\")\n    alphabet.append(\"\
    r\")\n    alphabet.append(\"s\")\n    alphabet.append(\"t\")\n    alphabet.append(\"\
    u\")\n    alphabet.append(\"v\")\n    alphabet.append(\"w\")\n    alphabet.append(\"\
    x\")\n    alphabet.append(\"y\")\n    alphabet.append(\"z\")\n    \n    var newString\
    \ = \"\"\n    for char in s {\n        newString += alphabet[alphabet.index(char)\
    \ + 2]\n    }\n    return newString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(0)))\n\
    \    alphabet.append(Character(s.characterAtIndex(1)))\n    alphabet.append(Character(s.characterAtIndex(2)))\n\
    \    alphabet.append(Character(s.characterAtIndex(3)))\n    alphabet.append(Character(s.characterAtIndex(4)))\n\
    \    alphabet.append(Character(s.characterAtIndex(5)))\n    alphabet.append(Character(s.characterAtIndex(6)))\n\
    \    alphabet.append(Character(s.characterAtIndex(7)))\n    alphabet.append(Character(s.characterAtIndex(8)))\n\
    \    alphabet.append(Character(s.characterAtIndex(9)))\n    alphabet.append(Character(s.characterAtIndex(10)))\n\
    \    alphabet.append(Character(s.characterAtIndex(11)))\n    alphabet.append(Character(s.characterAtIndex(12)))\n\
    \    alphabet.append(Character(s.characterAtIndex(13)))\n    alphabet.append(Character(s.characterAtIndex(14)))\n\
    \    alphabet.append(Character(s.characterAtIndex(15)))\n    alphabet.append(Character(s.characterAtIndex(16)))\n\
    \    alphabet.append(Character(s.characterAtIndex(17)))\n    alphabet.append(Character(s.characterAtIndex(18)))\n\
    \    alphabet.append(Character(s.characterAtIndex(19)))\n    alphabet.append(Character(s.characterAtIndex(20)))\n\
    \    alphabet.append(Character(s.characterAtIndex(21)))\n    alphabet.append(Character(s.characterAtIndex(22)))\n\
    \    alphabet.append(Character(s.characterAtIndex(23)))\n    alphabet.append(Character(s.characterAtIndex(24)))\n\
    \    alphabet.append(Character(s.characterAtIndex(25)))\n    alphabet.append(Character(s.characterAtIndex(26)))\n\
    \    alphabet.append(Character(s.characterAtIndex(27)))\n    alphabet.append(Character(s.characterAtIndex(28)))\n\
    \    alphabet.append(Character(s.characterAtIndex(29)))\n    alphabet.append(Character(s.characterAtIndex(30)))\n\
    \    alphabet.append(Character(s.characterAtIndex(31)))\n    alphabet.append(Character(s.characterAtIndex(32)))\n\
    \    alphabet.append(Character(s.characterAtIndex(33)))\n    alphabet.append(Character(s.characterAtIndex(34)))\n\
    \    alphabet.append(Character(s.characterAtIndex(35)))\n    alphabet.append(Character(s.characterAtIndex(36)))\n\
    \    alphabet.append(Character(s.characterAtIndex(37)))\n    alphabet.append(Character(s.characterAtIndex(38)))\n\
    \    alphabet.append(Character(s.characterAtIndex(39)))\n    alphabet.append(Character(s.characterAtIndex(40)))\n\
    \    alphabet.append(Character(s.characterAtIndex(41)))\n    alphabet.append(Character(",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetIndex = 0\n    var encryptedString = \"\"\n    for character\
    \ in s {\n        encryptedString += alphabet[alphabetIndex % alphabetLength]\n\
    \        alphabetIndex += 2\n    }\n    return encryptedString", "    var alphabet\
    \ = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    alphabet.append(Character(\"A\"))\n    alphabet.append(Character(\"\
    B\"))\n    alphabet.append(Character(\"C\"))\n    alphabet.append(Character(\"\
    D\"))\n    alphabet.append(Character(\"E\"))\n    alphabet.append(Character(\"\
    F\"))\n    alphabet.append(Character(\"G\"))\n    alphabet.append(Character(\"\
    H\"))\n    alphabet.append(Character(\"I\"))\n    alphabet.append(Character(\"\
    J\"))\n    alphabet.append(Character(\"K\"))\n    alphabet.append(Character(\"\
    L\"))\n    alphabet.append(Character(\"M\"))\n    alphabet.append(Character(\"\
    N\"))\n    alphabet.append(Character(\"O\"))\n    alphabet.append(Character(\"\
    P\"))\n    alphabet.append(Character(\"Q\"))\n    alphabet.append(Character(\"\
    R\"))\n    alphabet.append(Character(\"S\"))\n    alphabet.append(Character(\"\
    T\"))\n    alphabet.append(Character(\"U\"))\n    alphabet.append(Character(\"\
    V\"))\n    alphabet.append(Character(\"W\"))\n    alphabet.append(Character(\"\
    X\"))\n    alphabet.append(Character(\"Y\"))\n    alphabet.append(Character(\"\
    Z\"))\n    \n    var encryptedString = \"\"\n    for character in s {\n      \
    \  encryptedString += alphabet[alphabet.index(character)! + 2]\n    }\n    return\
    \ encryptedString", "    var alphabet = [String]()\n    alphabet.append(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    alphabet.append(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    alphabet.append(\"\
    0123456789\")\n    alphabet.append(\"!@#$%^&*()\")\n    \n    var result = [String]()\n\
    \    for letter in s {\n        var index = alphabet.index(letter)\n        var\
    \ newIndex = index + 2\n        if newIndex > alphabet.count {\n            newIndex\
    \ = 0\n        }\n        result.append(alphabet[newIndex])\n    }\n    return\
    \ result.joined(separator: \"\")", "    var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var result = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)!\n        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var result = \"\"\
    \n    for c in s.characters {\n        let index = alphabet.index(of: c)!\n  \
    \      let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n  \
    \      result += String(newChar)\n    }\n    return result", "    let alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabetLength * 2\n    var newString = \"\"\n    for\
    \ letter in s.characters {\n        let index = alphabet.index(of: letter)!\n\
    \        let newIndex = index - alphabetLength\n        newString += alphabet[newIndex]\n\
    \    }\n    return newString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet: [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"\
    g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var alphabet2:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var alphabet3: [Character] =\
    \ [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var alphabet4: [Character] = [\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var alphabet5: [Character] = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    var alphabet6: [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"\
    , \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var alphabet7:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var alphabet8: [Character] =\
    \ [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var alphabet9: [Character] = [\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var alphabet10: [Character] = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    var alphabet11: [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"",
  "    var result = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)!\n        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var result = \"\"\n    for c in s {\n      \
    \  result += alphabet[(alphabet.indexOf(c) + 2) % 26]\n    }\n    return result",
  "    var result = \"\"\n    for c in s.characters {\n        let index = alphabet.indexOf(c)\n\
    \        let newIndex = index + 2\n        if newIndex < alphabet.count {\n  \
    \          result += alphabet[newIndex]\n        } else {\n            result\
    \ += alphabet[0]\n        }\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var newAlphabet = alphabet\n    for _ in 0..<s.count\
    \ {\n        newAlphabet = alphabet[newAlphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of",
  "    var alphabet = [Character]()\n    for c in s.characters {\n        alphabet.append(c)\n\
    \    }\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 4)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 6)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 8)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 10)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 12)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 14)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 16)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 18)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 20)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 22)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 24)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 26)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 28)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 30)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 32)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 34)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 36)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 38)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 40)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 42)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 44)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 46)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 48)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 50)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 52)))", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength\
    \ = alphabet.count\n    var alphabetIndex = 0\n    var encryptedString = \"\"\n\
    \    for letter in s {\n        encryptedString += alphabet[alphabetIndex % alphabetLength]\n\
    \        alphabetIndex++\n    }\n    return encryptedString", "    var result\
    \ = \"\"\n    for letter in s {\n        let index = alphabet.index(of: letter)!\n\
    \        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetArray = Array(alphabet)\n    var\
    \ alphabetArrayReversed = Array(alphabet.reverse())\n    var alphabetArrayRotated:\
    \ Array<String> = []\n    var alphabetArrayRotatedReversed: Array<String> = []\n\
    \    \n    for i in 0..<s.count {\n        let index = alphabet.index(s.characters[i])\n\
    \        let indexRotated = alphabetArrayReversed.index(alphabetArray[index])\n\
    \        let indexRotatedRotated = alphabetArrayRotated.index(alphabetArrayRotated[indexRotated])\n\
    \        alphabetArrayRotated.append(alphabetArray[indexRotatedRotated])\n   \
    \     alphabetArrayRotatedReversed.append(alphabetArrayRotated[index])\n    }\n\
    \    \n    var resultString = \"\"\n    for i in 0..<alphabetArrayRotated.count\
    \ {\n        resultString += alphabetArrayRotatedReversed[i]\n    }\n    return\
    \ resultString", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var newAlphabet\
    \ = alphabet\n    for _ in 0..<s.count {\n        newAlphabet = alphabet[newAlphabet.startIndex.advancedBy(2)]\n\
    \    }\n    return s.characters.map { alphabet[alphabet.index(alphabet, $0)] }\n\
    \        .joined()", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n \
    \   var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    for _ in 0..<s.count {\n        newAlphabet\
    \ = alphabet[newAlphabet.startIndex.advancedBy(2)]\n    }\n    return newAlphabet",
  "    var alphabet = [Character]()\n    for c in s.characters {\n        alphabet.append(c)\n\
    \    }\n    alphabet.removeLast()\n    alphabet.insert(contentsOf: alphabet.dropLast())\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.insert(contentsOf: alphabet)\n\
    \    alphabet.insert(contentsOf: alphabet)\n    alphabet.", "    var result =\
    \ \"\"\n    for c in s.characters {\n        let index = alphabet.index(of: c)\n\
    \        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var alphabet\
    \ = [Character : Character]()\n    alphabet[\"a\"] = \"b\"\n    alphabet[\"b\"\
    ] = \"a\"\n    alphabet[\"c\"] = \"d\"\n    alphabet[\"d\"] = \"c\"\n    alphabet[\"\
    e\"] = \"f\"\n    alphabet[\"f\"] = \"e\"\n    alphabet[\"g\"] = \"h\"\n    alphabet[\"\
    h\"] = \"g\"\n    alphabet[\"i\"] = \"j\"\n    alphabet[\"j\"] = \"i\"\n    alphabet[\"\
    k\"] = \"l\"\n    alphabet[\"l\"] = \"k\"\n    alphabet[\"m\"] = \"n\"\n    alphabet[\"\
    n\"] = \"m\"\n    alphabet[\"o\"] = \"p\"\n    alphabet[\"p\"] = \"o\"\n    alphabet[\"\
    q\"] = \"r\"\n    alphabet[\"r\"] = \"q\"\n    alphabet[\"s\"] = \"t\"\n    alphabet[\"\
    t\"] = \"s\"\n    alphabet[\"u\"] = \"v\"\n    alphabet[\"v\"] = \"u\"\n    alphabet[\"\
    w\"] = \"x\"\n    alphabet[\"x\"] = \"w\"\n    alphabet[\"y\"] = \"z\"\n    alphabet[\"\
    z\"] = \"y\"\n    \n    var result = \"\"\n    for c in s.characters {\n     \
    \   result += alphabet[Character(c)]\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\
    \n    var result = \"\"\n    for c in s {\n        result = alphabetRotated[alphabet.indexOf(c)\
    \ + alphabetRotated.indexOf(c) + 2]\n    }\n    return result", "    var result\
    \ = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)!\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var result\
    \ = \"\"\n    for letter in s {\n        result += alphabet.index(letter)!\n \
    \   }\n    return result", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabetLength * 2\n    let alphabetLength = alphabetLength + 2\n    var newString\
    \ = \"\"\n    for char in s.characters {\n        let index = alphabet.characters.index(of:\
    \ char)!\n        let newIndex = index % alphabetLength\n        newString +=\
    \ alphabet[newIndex]\n    }\n    return newString", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.first!))",
  "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = alphabet\n    newAlphabet = rotate(newAlphabet, 2)\n \
    \   return newAlphabet", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var alphabetLength = alphabetLength + 2\n    var alphabetLength = alphabetLength\
    \ * 2\n    var ", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ alphabetLength = alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n\
    \    var alphabetLength = alphabet.characters.count\n    var alphabetLength =\
    \ alphabet.characters.count\n    var alphabetLength = alphabet.characters.count\n",
  "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var result = \"\"\n    for\
    \ letter in s.characters {\n        let index = alphabet.index(of: letter)!\n\
    \        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += String(newLetter)\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetArray = Array(alphabet)\n\
    \    var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n    var alphabetArrayLength\
    \ = alphabetArray.count\n    var alphabetArrayLength = alphabetArray.count\n \
    \   var alphabetArrayLength = alphabetArray.count\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.characters.count\n    var alphabetRotation\
    \ = alphabet.characters.map { $0.characters.count }\n    var alphabetRotation2\
    \ = alphabet.characters.map { $0.characters.count * 2 }\n    var alphabetRotation3\
    \ = alphabet.characters.map { $0.characters.count * 3 }\n    var alphabetRotation4\
    \ = alphabet.characters.map { $0.characters.count * 4 }\n    var alphabetRotation5\
    \ = alphabet.characters.map { $0.characters.count * 5 }\n    var alphabetRotation6\
    \ = alphabet.characters.map { $0.characters.count * 6 }\n    var alphabetRotation7\
    \ = alphabet.characters.map { $0.characters.count * 7 }\n    var alphabetRotation8\
    \ = alphabet.characters.map { $0.characters.count * 8 }\n    var alphabetRotation9\
    \ = alphabet.characters.map { $0.characters.count * 9 }\n    var alphabetRotation10\
    \ = alphabet.characters.map { $0.characters.count * 10 }\n    var alphabetRotation11\
    \ = alphabet.characters.map { $0.characters.count * 11 }\n    var alphabetRotation12\
    \ = alphabet.characters.map { $0.characters.count * 12 }\n    var alphabetRotation13\
    \ = alphabet.characters.map { $0.characters.count * 13 }\n    var alphabetRotation14\
    \ = alphabet.characters.map { $0.characters.count * 14 }\n    var alphabetRotation15\
    \ = alphabet.characters.map { $0.characters.count * 15 }\n    var alphabetRotation16\
    \ = alphabet.characters.map { $0.characters.count * 16 }\n    var alphabetRotation17\
    \ = alphabet.characters.map { $0.characters.count * 17 }\n    var alphabetRotation18\
    \ = alphabet.characters.map { $0.characters.count * 18 }\n    var alphabetRotation19\
    \ = alphabet.characters.map { $0.characters.count * 19 }\n    var alphabetRotation20\
    \ = alphabet.characters.map { $0.characters.count * 20 }\n    var alphabetRotation21\
    \ = alphabet.characters.map { $0.characters.count * 21 }\n    var alphabetRotation22\
    \ = alphabet.characters.map { $0.characters.count * 22 }\n    var alphabetRotation23\
    \ = alphabet.characters.map { $0.characters.count * 23 }\n    var alphabetRotation24\
    \ = alphabet.characters.map { $0.characters.count * 24 }\n    var alphabetRotation25\
    \ = alphabet.characters.map { $0.characters.count * 25 }\n    var alphabetRotation26\
    \ = alphabet.characters.map { $0.characters.count * 26 }\n    var alphabetRotation27\
    \ = alphabet.characters.map { $0.characters.count * 27 }\n    var alphabetRotation28\
    \ = alphabet.characters.map { $0.characters.count * 28", "    var result = \"\"\
    \n    for c in s.characters {\n        let index = alphabet.indexOf(c)\n     \
    \   let newIndex = index + 2\n        if newIndex < alphabet.count {\n       \
    \     result += alphabet[newIndex]\n        } else {\n            result += alphabet[alphabet.count\
    \ - 1]\n        }\n    }\n    return result", "    var result = \"\"\n    for\
    \ letter in s.characters {\n        result += alphabet.characters[alphabet.characters.index(letter)\
    \ + 2]\n    }\n    return result", "    var result = \"\"\n    for letter in s\
    \ {\n        result += alphabet.index(letter)!\n    }\n    return result", " \
    \   var alphabet = [Character]()\n    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"\
    b\"))\n    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"\
    d\"))\n    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"\
    f\"))\n    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"\
    h\"))\n    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"\
    j\"))\n    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"\
    l\"))\n    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"\
    n\"))\n    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"\
    p\"))\n    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"\
    r\"))\n    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"\
    t\"))\n    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"\
    v\"))\n    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"\
    x\"))\n    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"\
    z\"))\n    \n    var encryptedString = \"\"\n    \n    for letter in s {\n   \
    \     encryptedString += alphabet[alphabet.index(letter)! + 2]\n    }\n    \n\
    \    return encryptedString", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetArray = Array(alphabet)\n    var alphabetArrayReversed = Array(alphabet)\n\
    \    for i in 0..<alphabetArray.count {\n        alphabetArrayReversed[i] = alphabetArray[alphabetArray.count-i-1]\n\
    \    }\n    var alphabetArrayReversedArray = Array(alphabetArrayReversed)\n  \
    \  var alphabetArrayReversedArrayReversed = Array(alphabetArrayReversed)\n   \
    \ for i in 0..<alphabetArrayReversed.count {\n        alphabetArrayReversedArrayReversed[i]\
    \ = alphabetArrayReversed[alphabetArrayReversed.count-i-1]\n    }\n    var alphabetArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversed)\n    var alphabetArrayReversedArrayReversedArrayReversed\
    \ = Array(alphabetArrayReversedArrayReversedArray)\n    var alphabetArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversed)\n    var alphabetArrayReversedArrayReversedArrayReversedArrayReversed\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArray)\n    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversed)\n    var\
    \ alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed =\
    \ Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArray)\n \
    \   var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArray)\n\
    \    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed)\n\
    \    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed)\n\
    \    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray)\n\
    \    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversed)\n\
    \    var alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray\
    \ = Array(alphabetArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArrayReversedArray)\n",
  "    var alphabet = [Character]()\n    alphabet.insert(Character(\"a\"), at: 0)\n\
    \    alphabet.insert(Character(\"b\"), at: 1)\n    alphabet.insert(Character(\"\
    c\"), at: 2)\n    alphabet.insert(Character(\"d\"), at: 3)\n    alphabet.insert(Character(\"\
    e\"), at: 4)\n    alphabet.insert(Character(\"f\"), at: 5)\n    alphabet.insert(Character(\"\
    g\"), at: 6)\n    alphabet.insert(Character(\"h\"), at: 7)\n    alphabet.insert(Character(\"\
    i\"), at: 8)\n    alphabet.insert(Character(\"j\"), at: 9)\n    alphabet.insert(Character(\"\
    k\"), at: 10)\n    alphabet.insert(Character(\"l\"), at: 11)\n    alphabet.insert(Character(\"\
    m\"), at: 12)\n    alphabet.insert(Character(\"n\"), at: 13)\n    alphabet.insert(Character(\"\
    o\"), at: 14)\n    alphabet.insert(Character(\"p\"), at: 15)\n    alphabet.insert(Character(\"\
    q\"), at: 16)\n    alphabet.insert(Character(\"r\"), at: 17)\n    alphabet.insert(Character(\"\
    s\"), at: 18)\n    alphabet.insert(Character(\"t\"), at: 19)\n    alphabet.insert(Character(\"\
    u\"), at: 20)\n    alphabet.insert(Character(\"v\"), at: 21)\n    alphabet.insert(Character(\"\
    w\"), at: 22)\n    alphabet.insert(Character(\"x\"), at: 23)\n    alphabet.insert(Character(\"\
    y\"), at: 24)\n    alphabet.insert(Character(\"z\"), at: 25)\n    alphabet.insert(Character(\"\
    A\"), at: 26)\n    alphabet.insert(Character(\"B\"), at: 27)\n    alphabet.insert(Character(\"\
    C\"), at: 28)\n    alphabet.insert(Character(\"D\"), at: 29)\n    alphabet.insert(Character(\"\
    E\"), at: 30)\n    alphabet.insert(Character(\"F\"), at: 31)\n    alphabet.insert(Character(\"\
    G\"), at: 32)\n    alphabet.insert(Character(\"H\"), at: 33)\n    alphabet.insert(Character(\"\
    I\"), at: 34)\n    alphabet.insert(Character(\"J\"), at: 35)\n    alphabet.insert(Character(\"\
    K\"), at: 36)\n    alphabet.insert(Character(\"L\"), at: 37)\n    alphabet.insert(Character(\"\
    M\"), at: 38)\n    alphabet.insert(Character(\"N\"), at: 39)\n    alphabet.insert(Character(\"\
    O\"), at: 40)", "    var result = \"\"\n    for c in s.characters {\n        let\
    \ index = alphabet.index(of: c)\n        let newIndex = index + 2\n        let\
    \ newChar = alphabet[newIndex]\n        result += String(newChar)\n    }\n   \
    \ return result", "    var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n \
    \   alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(s.first!))\n\
    \    alphabet.append(Character(s.last!))\n    alphabet.append(Character(", " \
    \   var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetArray = Array(alphabet)\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n    var alphabetArrayLength\
    \ = alphabetArray.length\n    var alphabetArrayLength = alphabetArray.length\n\
    \    var alphabetArrayLength = alphabetArray.length\n", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"b\"))\n\
    \    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"d\"))\n\
    \    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"f\"))\n\
    \    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"h\"))\n\
    \    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"j\"))\n\
    \    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"l\"))\n\
    \    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"n\"))\n\
    \    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"p\"))\n\
    \    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"r\"))\n\
    \    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"t\"))\n\
    \    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"v\"))\n\
    \    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"x\"))\n\
    \    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"z\"))\n\
    \    \n    var result = [Character]()\n    var index = 0\n    for char in s {\n\
    \        result.append(alphabet[(alphabet.index(of: char) + 2) % alphabet.count])\n\
    \    }\n    return String(result)", "    var alphabet = [Character]()\n    for\
    \ c in s.characters {\n        alphabet.append(c)\n    }\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 4)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 6)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 8)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 10)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 12)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 14)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 16)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 18)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 20)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 22)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 24)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 26)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 28)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 30)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 32)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 34)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 36)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 38)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 40)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 42)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 44)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 46)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 48)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 50)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt8(UInt8.max)\
    \ + 52)))", "    var result = \"\"\n    for letter in s {\n        let index =\
    \ alphabet.index(of: letter)!\n        let newIndex = index + 2\n        let newLetter\
    \ = alphabet[newIndex]\n        result += newLetter\n    }\n    return result",
  "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n    let alphabetLength =\
    \ alphabet.characters.count\n    let alphabetLength = alphabet.characters.count\n\
    \    let alphabetLength = alphabet.characters.count\n", "    var result = \"\"\
    \n    for letter in s {\n        let index = alphabet.index(of: letter)!\n   \
    \     let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n \
    \       result += newLetter\n    }\n    return result", "    var alphabet = [Character]()\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(97))), at: 0)\n    alphabet.insert(Character(UnicodeScalar(UInt8(98))),\
    \ at: 1)\n    alphabet.insert(Character(UnicodeScalar(UInt8(99))), at: 2)\n  \
    \  alphabet.insert(Character(UnicodeScalar(UInt8(100))), at: 3)\n    alphabet.insert(Character(UnicodeScalar(UInt8(101))),\
    \ at: 4)\n    alphabet.insert(Character(UnicodeScalar(UInt8(102))), at: 5)\n \
    \   alphabet.insert(Character(UnicodeScalar(UInt8(103))), at: 6)\n    alphabet.insert(Character(UnicodeScalar(UInt8(104))),\
    \ at: 7)\n    alphabet.insert(Character(UnicodeScalar(UInt8(105))), at: 8)\n \
    \   alphabet.insert(Character(UnicodeScalar(UInt8(106))), at: 9)\n    alphabet.insert(Character(UnicodeScalar(UInt8(107))),\
    \ at: 10)\n    alphabet.insert(Character(UnicodeScalar(UInt8(108))), at: 11)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(109))), at: 12)\n    alphabet.insert(Character(UnicodeScalar(UInt8(110))),\
    \ at: 13)\n    alphabet.insert(Character(UnicodeScalar(UInt8(111))), at: 14)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(112))), at: 15)\n    alphabet.insert(Character(UnicodeScalar(UInt8(113))),\
    \ at: 16)\n    alphabet.insert(Character(UnicodeScalar(UInt8(114))), at: 17)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(115))), at: 18)\n    alphabet.insert(Character(UnicodeScalar(UInt8(116))),\
    \ at: 19)\n    alphabet.insert(Character(UnicodeScalar(UInt8(117))), at: 20)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(118))), at: 21)\n    alphabet.insert(Character(UnicodeScalar(UInt8(119))),\
    \ at: 22)\n    alphabet.insert(Character(UnicodeScalar(UInt8(120))), at: 23)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(121))), at: 24)\n    alphabet.insert(Character(UnicodeScalar(UInt8(122))),\
    \ at: 25)\n    alphabet.insert(Character(UnicodeScalar(UInt8(123))), at: 26)\n\
    \    alphabet.insert(Character(UnicodeScalar(UInt8(124))), at: 27", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var newAlphabet = alphabet\n    for _\
    \ in 0..<s.count {\n        newAlphabet = alphabet[newAlphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of:\
    \ alphabet[alphabet.index(of: alphabet[alphabet.index(of: alphabet[alphabet.index(of",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetIndex = 0\n    var encryptedString = \"\"\n    for letter in\
    \ s {\n        encryptedString += alphabet[alphabetIndex % alphabetLength]\n \
    \       alphabetIndex++\n    }\n    return encryptedString", "    var result =\
    \ \"\"\n    for c in s.characters {\n        let index = alphabet.indexOf(c)\n\
    \        let newIndex = index + 2\n        if newIndex < alphabet.count {\n  \
    \          result += alphabet[newIndex]\n        } else {\n            result\
    \ += c\n        }\n    }\n    return result", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"b\"))\n\
    \    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"d\"))\n\
    \    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"f\"))\n\
    \    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"h\"))\n\
    \    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"j\"))\n\
    \    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"l\"))\n\
    \    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"n\"))\n\
    \    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"p\"))\n\
    \    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"r\"))\n\
    \    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"t\"))\n\
    \    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"v\"))\n\
    \    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"x\"))\n\
    \    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"z\"))\n\
    \    \n    var result = [Character]()\n    \n    for char in s.characters {\n\
    \        var index = alphabet.index(of: char)!\n        var newIndex = index +\
    \ 2\n        if newIndex < alphabet.count {\n            result.append(alphabet[newIndex])\n\
    \        } else {\n            result.append(alphabet[0])\n        }\n    }\n\
    \    \n    return String(result)", "    var result = \"\"\n    for c in s.characters\
    \ {\n        let index = alphabet.index(of: c)!\n        let newIndex = index\
    \ + 2\n        let newChar = alphabet[newIndex]\n        result += newChar\n \
    \   }\n    return result", "    var alphabet = [Character]()\n    alphabet.append(Character(\"\
    a\"))\n    alphabet.append(Character(\"b\"))\n    alphabet.append(Character(\"\
    c\"))\n    alphabet.append(Character(\"d\"))\n    alphabet.append(Character(\"\
    e\"))\n    alphabet.append(Character(\"f\"))\n    alphabet.append(Character(\"\
    g\"))\n    alphabet.append(Character(\"h\"))\n    alphabet.append(Character(\"\
    i\"))\n    alphabet.append(Character(\"j\"))\n    alphabet.append(Character(\"\
    k\"))\n    alphabet.append(Character(\"l\"))\n    alphabet.append(Character(\"\
    m\"))\n    alphabet.append(Character(\"n\"))\n    alphabet.append(Character(\"\
    o\"))\n    alphabet.append(Character(\"p\"))\n    alphabet.append(Character(\"\
    q\"))\n    alphabet.append(Character(\"r\"))\n    alphabet.append(Character(\"\
    s\"))\n    alphabet.append(Character(\"t\"))\n    alphabet.append(Character(\"\
    u\"))\n    alphabet.append(Character(\"v\"))\n    alphabet.append(Character(\"\
    w\"))\n    alphabet.append(Character(\"x\"))\n    alphabet.append(Character(\"\
    y\"))\n    alphabet.append(Character(\"z\"))\n    alphabet.append(Character(\"\
    A\"))\n    alphabet.append(Character(\"B\"))\n    alphabet.append(Character(\"\
    C\"))\n    alphabet.append(Character(\"D\"))\n    alphabet.append(Character(\"\
    E\"))\n    alphabet.append(Character(\"F\"))\n    alphabet.append(Character(\"\
    G\"))\n    alphabet.append(Character(\"H\"))\n    alphabet.append(Character(\"\
    I\"))\n    alphabet.append(Character(\"J\"))\n    alphabet.append(Character(\"\
    K\"))\n    alphabet.append(Character(\"L\"))\n    alphabet.append(Character(\"\
    M\"))\n    alphabet.append(Character(\"N\"))\n    alphabet.append(Character(\"\
    O\"))\n    alphabet.append(Character(\"P\"))\n    alphabet.append(Character(\"\
    Q\"))\n    alphabet.append(Character(\"R\"))\n    alphabet.append(Character(\"\
    S\"))\n    alphabet.append(Character(\"T\"))\n    alphabet.append(Character(\"\
    U\"))\n    alphabet.append(Character(\"V\"))\n    alphabet.append(Character(\"\
    W\"))\n    alphabet.append(Character(\"X\"))\n    alphabet.append(Character(\"\
    Y\"))\n    alphabet.append(Character(\"Z\"))\n    \n    var result = [Character]()\n\
    \    for char in s {\n        var index = alphabet.index(of: char)!\n        result.insert(char,\
    \ at: index)\n    }\n    return String(result)", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(\"a\"))\n    alphabet.append(Character(\"b\"))\n\
    \    alphabet.append(Character(\"c\"))\n    alphabet.append(Character(\"d\"))\n\
    \    alphabet.append(Character(\"e\"))\n    alphabet.append(Character(\"f\"))\n\
    \    alphabet.append(Character(\"g\"))\n    alphabet.append(Character(\"h\"))\n\
    \    alphabet.append(Character(\"i\"))\n    alphabet.append(Character(\"j\"))\n\
    \    alphabet.append(Character(\"k\"))\n    alphabet.append(Character(\"l\"))\n\
    \    alphabet.append(Character(\"m\"))\n    alphabet.append(Character(\"n\"))\n\
    \    alphabet.append(Character(\"o\"))\n    alphabet.append(Character(\"p\"))\n\
    \    alphabet.append(Character(\"q\"))\n    alphabet.append(Character(\"r\"))\n\
    \    alphabet.append(Character(\"s\"))\n    alphabet.append(Character(\"t\"))\n\
    \    alphabet.append(Character(\"u\"))\n    alphabet.append(Character(\"v\"))\n\
    \    alphabet.append(Character(\"w\"))\n    alphabet.append(Character(\"x\"))\n\
    \    alphabet.append(Character(\"y\"))\n    alphabet.append(Character(\"z\"))\n\
    \    \n    var encryptedString = \"\"\n    for char in s.characters {\n      \
    \  encryptedString += alphabet[alphabet.index(char) + 2]\n    }\n    return encryptedString",
  "    var alphabet = [Character]()\n    alphabet.insert(Character(s.characters.first!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.first!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!), at: 0)\n    alphabet.insert(Character(s.characters.last!),\
    \ at: 0)\n    alphabet.insert(Character(s.characters.last!", "    var result =\
    \ \"\"\n    for c in s.characters {\n        let index = alphabet.indexOf(c)\n\
    \        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += String(newChar)\n    }\n    return result", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n\
    \    var alphabetIndex = 0\n    var encryptedString = \"\"\n    for letter in\
    \ s {\n        encryptedString += alphabet[alphabetIndex % alphabetLength]\n \
    \       alphabetIndex++\n    }\n    return encryptedString", "    var alphabet\
    \ = [Character]()\n    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characters[s.characters.startIndex]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+1]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+2]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+3]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+4]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+5]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+6]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+7]))\n   \
    \ alphabet.append(Character(s.characters[s.characters.startIndex+8]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+9]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+10]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+11]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+12]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+13]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+14]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+15]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+16]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+17]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+18]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+19]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+20]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+21]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+22]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+23]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+24]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+25]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+26]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+27]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex+28]))\n  \
    \  alphabet.append(Character(s.characters[s.characters.startIndex+29]))\n    alphabet.append(Character(s.characters[s.characters.startIndex+30]))\n\
    \    alphabet.append(Character(s.characters[s.characters.startIndex", "    let\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    let alphabetLength = alphabet.count\n\
    \    var newString = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)!\n        let newIndex = index * 2\n        let newLetter = alphabet[newIndex]\n\
    \        newString += newLetter\n    }\n    return newString", "    var alphabet\
    \ = [Character]()\n    alphabet.insert(Character(\" \"), at: 0)\n    alphabet.insert(Character(\"\
    \ \"), at: 1)\n    alphabet.insert(Character(\" \"), at: 2)\n    alphabet.insert(Character(\"\
    \ \"), at: 3)\n    alphabet.insert(Character(\" \"), at: 4)\n    alphabet.insert(Character(\"\
    \ \"), at: 5)\n    alphabet.insert(Character(\" \"), at: 6)\n    alphabet.insert(Character(\"\
    \ \"), at: 7)\n    alphabet.insert(Character(\" \"), at: 8)\n    alphabet.insert(Character(\"\
    \ \"), at: 9)\n    alphabet.insert(Character(\" \"), at: 10)\n    alphabet.insert(Character(\"\
    \ \"), at: 11)\n    alphabet.insert(Character(\" \"), at: 12)\n    alphabet.insert(Character(\"\
    \ \"), at: 13)\n    alphabet.insert(Character(\" \"), at: 14)\n    alphabet.insert(Character(\"\
    \ \"), at: 15)\n    alphabet.insert(Character(\" \"), at: 16)\n    alphabet.insert(Character(\"\
    \ \"), at: 17)\n    alphabet.insert(Character(\" \"), at: 18)\n    alphabet.insert(Character(\"\
    \ \"), at: 19)\n    alphabet.insert(Character(\" \"), at: 20)\n    alphabet.insert(Character(\"\
    \ \"), at: 21)\n    alphabet.insert(Character(\" \"), at: 22)\n    alphabet.insert(Character(\"\
    \ \"), at: 23)\n    alphabet.insert(Character(\" \"), at: 24)\n    alphabet.insert(Character(\"\
    \ \"), at: 25)\n    alphabet.insert(Character(\" \"), at: 26)\n    alphabet.insert(Character(\"\
    \ \"), at: 27)\n    alphabet.insert(Character(\" \"), at: 28)\n    alphabet.insert(Character(\"\
    \ \"), at: 29)\n    alphabet.insert(Character(\" \"), at: 30)\n    alphabet.insert(Character(\"\
    \ \"), at: 31)\n    alphabet.insert(Character(\" \"), at: 32)\n    alphabet.insert(Character(\"\
    \ \"), at: 33)\n    alphabet.insert(Character(\" \"), at: 34)\n    alphabet.insert(Character(\"\
    \ \"), at: 35)\n    alphabet.insert(Character(\" \"), at: 36)\n    alphabet.insert(Character(\"\
    \ \"), at: 37)\n    alphabet.insert(Character(\" \"), at: 38)\n    alphabet.insert(Character(\"\
    \ \"), at: 39)\n    alphabet.insert(Character(\" \"), at: 40)", "    var result\
    \ = \"\"\n    for c in s.characters {\n        let index = alphabet.index(of:\
    \ c)\n        let newIndex = index + 2\n        let newChar = alphabet[newIndex]\n\
    \        result += newChar\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n    var\
    \ newAlphabet = \"\"\n    var newAlphabetLength = alphabet.count\n    var newAlphabetIndex\
    \ = 0\n    var newAlphabetIndex2 = 0\n    var newAlphabetIndex3 = 0\n    var newAlphabetIndex4\
    \ = 0\n    var newAlphabetIndex5 = 0\n    var newAlphabetIndex6 = 0\n    var newAlphabetIndex7\
    \ = 0\n    var newAlphabetIndex8 = 0\n    var newAlphabetIndex9 = 0\n    var newAlphabetIndex10\
    \ = 0\n    var newAlphabetIndex11 = 0\n    var newAlphabetIndex12 = 0\n    var\
    \ newAlphabetIndex13 = 0\n    var newAlphabetIndex14 = 0\n    var newAlphabetIndex15\
    \ = 0\n    var newAlphabetIndex16 = 0\n    var newAlphabetIndex17 = 0\n    var\
    \ newAlphabetIndex18 = 0\n    var newAlphabetIndex19 = 0\n    var newAlphabetIndex20\
    \ = 0\n    var newAlphabetIndex21 = 0\n    var newAlphabetIndex22 = 0\n    var\
    \ newAlphabetIndex23 = 0\n    var newAlphabetIndex24 = 0\n    var newAlphabetIndex25\
    \ = 0\n    var newAlphabetIndex26 = 0\n    var newAlphabetIndex27 = 0\n    var\
    \ newAlphabetIndex28 = 0\n    var newAlphabetIndex29 = 0\n    var newAlphabetIndex30\
    \ = 0\n    var newAlphabetIndex31 = 0\n    var newAlphabetIndex32 = 0\n    var\
    \ newAlphabetIndex33 = 0\n    var newAlphabetIndex34 = 0\n    var newAlphabetIndex35\
    \ = 0\n    var newAlphabetIndex36 = 0\n    var newAlphabetIndex37 = 0\n    var\
    \ newAlphabetIndex38 = 0\n    var newAlphabetIndex39 = 0\n    var newAlphabetIndex40\
    \ = 0\n    var newAlphabetIndex41 = 0\n    var newAlphabetIndex42 = 0\n    var\
    \ newAlphabetIndex43 = 0\n    var newAlphabetIndex44 = 0\n    var newAlphabetIndex45\
    \ = 0\n    var newAlphabetIndex46 = 0\n    var newAlphabetIndex47 = 0\n    var\
    \ newAlphabetIndex48 = 0\n    var newAlphabetIndex49 = 0\n    var newAlphabetIndex50\
    \ = 0\n    var newAlphabetIndex51 = 0\n    var newAlphabetIndex52 = 0\n    var\
    \ newAlphabetIndex53 = 0\n    var newAlphabetIndex54 = 0\n    var newAlphabetIndex55\
    \ = 0\n    var newAlphabetIndex56 = 0\n    var newAlphabetIndex57 = 0\n    var\
    \ newAlphabetIndex58 = 0\n    var newAlphabetIndex59 = 0\n    var newAlphab",
  "    var alphabet = [Character]()\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))\n    alphabet.append(Character(s.characters.last!))\n\
    \    alphabet.append(Character(s.characters.first!))\n    alphabet.append(Character(s.characters.first!))\n\
    \    alphabet.append(Character(s.characters.last!))", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characters[s.startIndex]))\n    alphabet.append(Character(s.characters[s.startIndex+1]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+2]))\n    alphabet.append(Character(s.characters[s.startIndex+3]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+4]))\n    alphabet.append(Character(s.characters[s.startIndex+5]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+6]))\n    alphabet.append(Character(s.characters[s.startIndex+7]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+8]))\n    alphabet.append(Character(s.characters[s.startIndex+9]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+10]))\n    alphabet.append(Character(s.characters[s.startIndex+11]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+12]))\n    alphabet.append(Character(s.characters[s.startIndex+13]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+14]))\n    alphabet.append(Character(s.characters[s.startIndex+15]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+16]))\n    alphabet.append(Character(s.characters[s.startIndex+17]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+18]))\n    alphabet.append(Character(s.characters[s.startIndex+19]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+20]))\n    alphabet.append(Character(s.characters[s.startIndex+21]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+22]))\n    alphabet.append(Character(s.characters[s.startIndex+23]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+24]))\n    alphabet.append(Character(s.characters[s.startIndex+25]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+26]))\n    alphabet.append(Character(s.characters[s.startIndex+27]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+28]))\n    alphabet.append(Character(s.characters[s.startIndex+29]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+30]))\n    alphabet.append(Character(s.characters[s.startIndex+31]))\n\
    \    alphabet.append(Character(s.characters[s.startIndex+32]))\n    alphabet.append(Character(s.characters[s.startIndex+33",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var alphabet2 = \"nopqrstuvwxyzabcdefghijklm\"\
    \n    var alphabet3 = \"nopqrstuvwxyzabcdefghijklmno\"\n    var alphabet4 = \"\
    nopqrstuvwxyzabcdefghijklmnopq\"\n    var alphabet5 = \"nopqrstuvwxyzabcdefghijklmnopqrst\"\
    \n    var alphabet6 = \"nopqrstuvwxyzabcdefghijklmnopqrstuv\"\n    var alphabet7\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvw\"\n    var alphabet8 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxy\"\
    \n    var alphabet9 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\n    var alphabet10\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzab\"\n    var alphabet11 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabce\"\
    \n    var alphabet12 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefg\"\n   \
    \ var alphabet13 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefgh\"\n    var\
    \ alphabet14 = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghij\"\n    var alphabet15\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijkl\"\n    var alphabet16\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijklm\"\n    var alphabet17\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijklmno\"\n    var alphabet18\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijklmnopq\"\n    var alphabet19\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijklmnopqrst\"\n    var alphabet20\
    \ = \"nopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcefghijklmnopqrstuv\"\n    var\
    \ alphabet21 = \"nopqrstuvwxyzabcdefghij", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    let alphabetLength = alphabet.characters.count\n    let alphabetLengthHalf\
    \ = alphabetLength / 2\n    var newString = \"\"\n    for char in s.characters\
    \ {\n        let index = alphabet.index(of: char)!\n        let newIndex = index\
    \ - alphabetLengthHalf\n        newString += alphabet[newIndex]\n    }\n    return\
    \ newString", "    var result = \"\"\n    for c in s {\n        let index = alphabet.indexOf(c)\n\
    \        let newIndex = index + 2\n        result = result + alphabet[newIndex]\n\
    \    }\n    return result", "    var result = \"\"\n    for c in s.characters\
    \ {\n        let index = alphabet.indexOf(c)\n        let newIndex = index + 2\n\
    \        if newIndex < alphabet.count {\n            result += alphabet[newIndex]\n\
    \        } else {\n            result += alphabet[alphabet.count - 1]\n      \
    \  }\n    }\n    return result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count\n    var alphabetLength = alphabet.count\n\
    \    var alphabetLength = alphabet.count", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\
    \n    var alphabetRotatedLength = alphabetRotated.count\n    var result = \"\"\
    \n    for letter in s {\n        var index = alphabet.index(letter)\n        index\
    \ = index + alphabetRotatedLength\n        index = index % alphabetLength\n  \
    \      result = result + alphabetRotated[index]\n    }\n    return result", " \
    \   var alphabet = [Character]()\n    for c in s.characters {\n        alphabet.append(c)\n\
    \    }\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Character.UnicodeScalar(UInt32(alphabet.count)\
    \ - 2)))\n    alphabet.append(Character(Charact", "    var alphabet = [Character]()\n\
    \    for c in s.characters {\n        alphabet.append(c)\n    }\n    alphabet.sort()\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Z\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"A\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"B\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"C\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"D\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"E\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"F\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"G\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"H\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"I\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"J\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"K\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"L\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"M\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"N\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"O\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"P\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Q\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"R\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"S\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"T\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"U\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"V\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"W\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"X\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"Y\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"Z\"))))\n\
    \    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"a\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii:\
    \ \"b\"))))\n    alphabet.append(Character(UnicodeScalar(UInt8(ascii: \"c\"))))\n\
    \    alphabet.append(Character(UnicodeScalar", "    var alphabet: [Character]\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var newAlphabet: [Character] = [\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    var newAlphabet2: [Character] = [\"a\", \"b\", \"c\",\
    \ \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var newAlphabet3: [Character] = [\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var newAlphabet4: [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"\
    , \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var newAlphabet5:\
    \ [Character] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var newAlphabet6: [Character]\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var newAlphabet7: [Character] = [\"a\",\
    \ \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var newAlphabet8: [Character] = [\"a\", \"b\", \"\
    c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var newAlphabet9: [Character] = [\"a\", \"b\", \"c\", \"d\",\
    \ \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"", "    var\
    \ alphabet = [Character]()\n    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(s.first!))\n    alphabet.append(Character(s.last!))\n\
    \    alphabet.append(Character(", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var result = \"\"\n    for c in s.characters\
    \ {\n        let index = alphabet.index(of: c)!\n        let newIndex = index\
    \ + 2\n        let newChar = alphabet[newIndex]\n        result += String(newChar)\n\
    \    }\n    return result", "    var alphabet = [String]()\n    alphabet.append(s.lowercaseString)\n\
    \    alphabet.append(s.uppercaseString)\n    alphabet.append(s.capitalizedString)\n\
    \    \n    var result = [String]()\n    for letter in alphabet {\n        var\
    \ rotatedLetter = letter\n        \n        for _ in 0..<2 {\n            rotatedLetter\
    \ = alphabet[(alphabet.index(of: rotatedLetter) + 2) % alphabet.count]\n     \
    \   }\n        \n        result.append(rotatedLetter)\n    }\n    \n    return\
    \ result.joined()", "    var alphabet = [Character]()\n    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = [Character : Character]()\n\
    \    alphabet[\"A\"] = \"Z\"\n    alphabet[\"B\"] = \"Y\"\n    alphabet[\"C\"\
    ] = \"X\"\n    alphabet[\"D\"] = \"W\"\n    alphabet[\"E\"] = \"V\"\n    alphabet[\"\
    F\"] = \"U\"\n    alphabet[\"G\"] = \"T\"\n    alphabet[\"H\"] = \"S\"\n    alphabet[\"\
    I\"] = \"R\"\n    alphabet[\"J\"] = \"Q\"\n    alphabet[\"K\"] = \"P\"\n    alphabet[\"\
    L\"] = \"O\"\n    alphabet[\"M\"] = \"N\"\n    alphabet[\"N\"] = \"M\"\n    alphabet[\"\
    O\"] = \"L\"\n    alphabet[\"P\"] = \"K\"\n    alphabet[\"Q\"] = \"J\"\n    alphabet[\"\
    R\"] = \"I\"\n    alphabet[\"S\"] = \"H\"\n    alphabet[\"T\"] = \"G\"\n    alphabet[\"\
    U\"] = \"F\"\n    alphabet[\"V\"] = \"E\"\n    alphabet[\"W\"] = \"D\"\n    alphabet[\"\
    X\"] = \"C\"\n    alphabet[\"Y\"] = \"B\"\n    alphabet[\"Z\"] = \"A\"\n    \n\
    \    var encryptedString = \"\"\n    for char in s {\n        encryptedString\
    \ += alphabet[char]\n    }\n    return encryptedString", "    var alphabet = [Character]()\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(0)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(1)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(2)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(3)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(4)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(5)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(6)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(7)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(8)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(9)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(10)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(11)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(12)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(13)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(14)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(15)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(16)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(17)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(18)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(19)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(20)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(21)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(22)))!)\n\
    \    alphabet.append(Character(s.characterAtIndex(s.startIndex.advancedBy(23)))!)\n\
    \    alphabet.append(Charact", "    var alphabet = [String]()\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n    alphabet.append(\"\")\n    alphabet.append(\"\
    \")\n    alphabet.append(\"\")\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var result = \"\"\n    for letter in s {\n        let index = alphabet.index(of:\
    \ letter)!\n        let newIndex = index + 2\n        let newLetter = alphabet[newIndex]\n\
    \        result += newLetter\n    }\n    return result", "    var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    var alphabetLength = alphabet.count\n    var\
    \ alphabetRotated = \"zyxwvutsrqponmlkjihgfedcba\"\n    var alphabetRotatedLength\
    \ = alphabetRotated.count\n    var encryptedString = \"\"\n    for char in s.characters\
    \ {\n        var index = alphabet.index(of: char)!\n        index = index + 2\n\
    \        index = index % alphabetLength\n        encryptedString += alphabetRotated[index]\n\
    \    }\n    return encryptedString", "    var result = \"\"\n    for c in s.characters\
    \ {\n        let index = alphabet.indexOf(c)\n        let newIndex = index + 2\n\
    \        let newChar = alphabet[newIndex]\n        result += newChar\n    }\n\
    \    return result", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var\
    \ alphabetLength = alphabet.characters.count\n    var alphabetRotation = alphabet.characters.map\
    \ { $0.unicodeScalars.first }\n    var alphabetRotationLength = alphabetRotation.count\n\
    \    var alphabetRotationIndex = alphabetRotationLength - 1\n    var alphabetRotationIndex2\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex3 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex4 = alphabetRotationIndex - 1\n    var alphabetRotationIndex5\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex6 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex7 = alphabetRotationIndex - 1\n    var alphabetRotationIndex8\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex9 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex10 = alphabetRotationIndex - 1\n    var alphabetRotationIndex11\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex12 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex13 = alphabetRotationIndex - 1\n    var alphabetRotationIndex14\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex15 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex16 = alphabetRotationIndex - 1\n    var alphabetRotationIndex17\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex18 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex19 = alphabetRotationIndex - 1\n    var alphabetRotationIndex20\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex21 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex22 = alphabetRotationIndex - 1\n    var alphabetRotationIndex23\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex24 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex25 = alphabetRotationIndex - 1\n    var alphabetRotationIndex26\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex27 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex28 = alphabetRotationIndex - 1\n    var alphabetRotationIndex29\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex30 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex31 = alphabetRotationIndex - 1\n    var alphabetRotationIndex32\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex33 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex34 = alphabetRotationIndex - 1\n    var alphabetRotationIndex35\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex36 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex37 = alphabetRotationIndex - 1\n    var alphabetRotationIndex38\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex39 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex40 = alphabetRotationIndex - 1\n    var alphabetRotationIndex41\
    \ = alphabetRotationIndex - 1\n    var alphabetRotationIndex42 = alphabetRotationIndex\
    \ - 1\n    var alphabetRotationIndex43 = alphabetRotationIndex - 1\n    var alphabet",
  "    var alphabet = [String]()\n    alphabet.append(s.characters)\n    alphabet.append(s.characters.reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed())\n    alphabet.append(s.characters.reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed())\n\
    \    alphabet.append(s.characters.reversed().reversed().reversed().reversed().reversed().reversed().reversed().reversed().reverse",
  "    var alphabet = [Character]()\n    for c in s.characters {\n        alphabet.append(c)\n\
    \    }\n    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n    alphabet.removeLast()\n    alphabet.removeLast()\n\
    \    alphabet.removeLast()\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var newAlphabet = \"\"\n    for letter in alphabet {\n        newAlphabet\
    \ += String(letter.characters.dropLast())\n    }\n    var newAlphabetArray = newAlphabet.characters.map\
    \ { String($0) }\n    var newAlphabetArrayReversed = newAlphabetArray.reversed()\n\
    \    var newAlphabetArrayReversedString = \"\"\n    for letter in newAlphabetArrayReversed\
    \ {\n        newAlphabetArrayReversedString += String(letter)\n    }\n    var\
    \ newAlphabetArrayReversedStringArray = newAlphabetArrayReversedString.characters.map\
    \ { String($0) }\n    var newAlphabetArrayReversedStringArrayReversed = newAlphabetArrayReversedStringArray.reversed()\n\
    \    var newAlphabetArrayReversedStringArrayReversedString = \"\"\n    for letter\
    \ in newAlphabetArrayReversedStringArrayReversed {\n        newAlphabetArrayReversedStringArrayReversedString\
    \ += String(letter)\n    }\n    var newAlphabetArrayReversedStringArrayReversedStringArray\
    \ = newAlphabetArrayReversedStringArrayReversedString.characters.map { String($0)\
    \ }\n    var newAlphabetArrayReversedStringArrayReversedStringArrayReversed =\
    \ newAlphabetArrayReversedStringArrayReversedStringArray.reversed()\n    var newAlphabetArrayReversedStringArrayReversedStringArrayReversedString\
    \ = \"\"\n    for letter in newAlphabetArrayReversedStringArrayReversedStringArrayReversed\
    \ {\n        newAlphabetArrayReversedStringArrayReversedStringArrayReversedString\
    \ += String(letter)\n    }\n    var newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArray\
    \ = newAlphabetArrayReversedStringArrayReversedStringArrayReversedString.characters.map\
    \ { String($0) }\n    var newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArrayReversed\
    \ = newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArray.reversed()\n\
    \    var newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedString\
    \ = \"\"\n    for letter in newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArrayReversed\
    \ {\n        newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedString\
    \ += String(letter)\n    }\n    var newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedStringArray\
    \ = newAlphabetArrayReversedStringArrayReversedStringArrayReversedStringArray",
  "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    var newAlphabet = \"\"\n\
    \    var newString = \"\"\n    for char in alphabet {\n        newAlphabet +=\
    \ char\n    }\n    for char in s {\n        newString += newAlphabet[(alphabet.index(char)\
    \ + 2) % 26]\n    }\n    return newString", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    var alphabetLength = alphabet.count\n    var alphabetIndex = 0\n    var\
    \ encryptedString = \"\"\n    for letter in s {\n        encryptedString += alphabet[alphabetIndex\
    \ % alphabetLength]\n        alphabetIndex++\n    }\n    return encryptedString"]
stop_tokens:
- "\n}"

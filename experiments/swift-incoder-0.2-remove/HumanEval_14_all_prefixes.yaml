name: HumanEval_14_all_prefixes
language: swift
prompt: "\n/// Return list of all prefixes from shortest to longest of the input string\n\
  func all_prefixes(string: String) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(all_prefixes(string: \"\") == [] as [String])\n\
  assert(all_prefixes(string: \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"\
  asdfg\", \"asdfgh\"])\nassert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"\
  WWW\"])"
completions: ["    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for\
    \ character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix[currentPrefix.startIndex] {\n     \
    \       currentPrefix = currentPrefix.dropLast()\n        } else {\n         \
    \   prefixes.append(currentPrefix)\n            currentPrefix = String(character)\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string.unicodeScalars\
    \ {\n        if c.value > 0 {\n            currentPrefix = String(currentPrefix)\
    \ + String(c.value)\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      continue\n        }\n        currentPrefix = character\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      continue\n        }\n        currentPrefix = character\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = character\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for ch in string {\n        if ch == prefix {\n         \
    \   prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n   \
    \         prefix += ch\n        }\n    }\n    prefixes.append(prefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = \"\"\n    for c\
    \ in string {\n        current += String(c)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        if c == currentPrefix {\n           \
    \ prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = c\n        }\n    }\n    return prefixes", "    var prefixes = [String]()\n\
    \    var currentPrefix = \"\"\n    for c in string {\n        if c == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        if c.isLetter {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += String(c)\n\
    \        }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == \".\" {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        } else {\n            currentPrefix\
    \ += String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        if currentPrefix == \"\" {\n          \
    \  currentPrefix = c\n        } else {\n            if c == currentPrefix {\n\
    \                prefixes.append(currentPrefix)\n                currentPrefix\
    \ = \"\"\n            } else {\n                currentPrefix = \"\"\n       \
    \     }\n        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = character\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for ch in string {\n        if ch == prefix {\n         \
    \   prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n   \
    \         prefix += ch\n        }\n    }\n    prefixes.append(prefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = \"\"\n    for c\
    \ in string.unicodeScalars {\n        current += String(c)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix += character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix: String = \"\
    \"\n    for character in string {\n        if character == currentPrefix {\n \
    \           prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for c in string {\n        currentPrefix = currentPrefix + String(c)\n    \
    \    prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n        if\
    \ c == currentPrefix {\n            prefixes.append(currentPrefix)\n        }\
    \ else {\n            currentPrefix = currentPrefix + c\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string {\n        if c == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == \".\" {\n   \
    \         prefixes.append(currentPrefix)\n            currentPrefix = \"\"\n \
    \       } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = character\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix: String = \"\"\n    var currentString: String = \"\"\n    for\
    \ character in string {\n        currentPrefix = currentPrefix + character\n \
    \       currentString = currentPrefix + string\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for c in string {\n        if c == prefix {\n           \
    \ prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n     \
    \       prefix += c\n        }\n    }\n    prefixes.append(prefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        if currentPrefix.hasPrefix(string) {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix = currentPrefix[currentPrefix.count-1]\
    \ + character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix += character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += c\n      \
    \  }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix[currentPrefix.count-1] {\n            currentPrefix\
    \ = currentPrefix + character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix + character\n        } else {\n\
    \            prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var prefix = \"\"\n    for c in string.unicodeScalars\
    \ {\n        if c.isASCII {\n            prefix += c.value\n        } else {\n\
    \            prefixes.append(prefix)\n            prefix = \"\"\n        }\n \
    \   }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes =\
    \ [String]()\n    var currentPrefix: String = \"\"\n    for character in string\
    \ {\n        currentPrefix = currentPrefix + String(character)\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = \"\"\n    for c\
    \ in string {\n        current += String(c)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = c\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var current = \"\"\n    for c in string.characters\
    \ {\n        current += String(c)\n        if current.characters.count > 1 {\n\
    \            prefixes.append(current)\n            current = \"\"\n        }\n\
    \    }\n    if current.characters.count > 1 {\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = \"\"\n    for c in string.unicodeScalars\
    \ {\n        current += String(c)\n        if current.hasPrefix(string) {\n  \
    \          prefixes.append(current)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.count-1] {\n\
    \            currentPrefix = currentPrefix + character\n        } else {\n   \
    \         prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var prefix = \"\"\n    for ch in string {\n\
    \        if ch == prefix {\n            prefixes.append(prefix)\n            prefix\
    \ = \"\"\n        } else {\n            prefix += ch\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        prefix += c\n        if prefix != \"\" {\n   \
    \         prefixes.append(prefix)\n            prefix = \"\"\n        }\n    }\n\
    \    if prefix != \"\" {\n        prefixes.append(prefix)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = character\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = \"\"\n    for c in string.unicodeScalars {\n        current += String(c)\n\
    \        if current.hasPrefix(string) {\n            prefixes.append(current)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ \".\" {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = \"\"\n        } else {\n            currentPrefix += String(character)\n \
    \       }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = character\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix: String = \"\"\n    for character in string {\n        currentPrefix\
    \ = String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character) + currentPrefix\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = currentPrefix +\
    \ String(character)\n        if currentPrefix.hasPrefix(string) {\n          \
    \  prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        }\n        currentPrefix\
    \ = String(character) + currentPrefix\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = currentPrefix +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix[currentPrefix.startIndex] {\n     \
    \       prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = \"\"\n    for c in string {\n\
    \        current += String(c)\n        prefixes.append(current)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix: String = \"\
    \"\n    var currentPrefixLength: Int = 0\n    for character in string {\n    \
    \    if character == currentPrefix[currentPrefixLength] {\n            currentPrefixLength\
    \ += 1\n        } else {\n            currentPrefix = String(character) + currentPrefix\n\
    \            currentPrefixLength = 1\n        }\n        if currentPrefixLength\
    \ == currentPrefix.count {\n            prefixes.append(currentPrefix)\n     \
    \   }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix\
    \ = \"\"\n    for c in string.unicodeScalars {\n        if c.isASCII {\n     \
    \       prefix += String(c.value)\n        } else {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        }\n    }\n    prefixes.append(prefix)\n  \
    \  return prefixes", "    var prefixes = [String]()\n    var current = \"\"\n\
    \    for c in string.characters {\n        current += String(c)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var current\
    \ = \"\"\n    for ch in string {\n        current += String(ch)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n    for c\
    \ in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += c\n      \
    \  }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix: String = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == \"-\" {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        } else {\n            currentPrefix\
    \ = currentPrefix + String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == \"-\" {\n     \
    \       prefixes.append(currentPrefix)\n            currentPrefix = \"\"\n   \
    \     } else {\n            currentPrefix = currentPrefix + character\n      \
    \  }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string.unicodeScalars\
    \ {\n        currentPrefix = currentPrefix + String(c.value)\n        if currentPrefix.length\
    \ > 0 {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for c in string {\n        currentPrefix = currentPrefix + c\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string.unicodeScalars {\n        currentPrefix = currentPrefix\
    \ + String(c.value)\n        if currentPrefix.hasPrefix(string) {\n          \
    \  prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == \".\" {\n            currentPrefix = \"\
    \"\n        } else {\n            currentPrefix += String(character)\n       \
    \ }\n        if currentPrefix.characters.count == 0 {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for ch in string {\n        if ch == prefix {\n         \
    \   prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n   \
    \         prefix += ch\n        }\n    }\n    prefixes.append(prefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n    for c\
    \ in string {\n        prefix += c\n        prefixes.append(prefix)\n        prefix\
    \ = \"\"\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for c in string {\n        if c == '.' {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += String(c)\n\
    \        }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var current = string\n    var last = \"\"\n    while\
    \ current.hasPrefix(last) {\n        current = current.dropFirst()\n        prefixes.append(last)\n\
    \    }\n    prefixes.append(current)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n        if\
    \ c == currentPrefix {\n            prefixes.append(currentPrefix)\n        }\
    \ else {\n            currentPrefix = c\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix: String = \"\"\n    for character in string {\n        currentPrefix\
    \ = currentPrefix + String(character)\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for c in string.unicodeScalars {\n        if c == Character(\"_\") {\n    \
    \        currentPrefix = \"\"\n        } else {\n            currentPrefix +=\
    \ String(describing: c)\n        }\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var prefix = \"\"\n    for c in string.unicodeScalars\
    \ {\n        if c.value > 0 {\n            prefix += String(c.value)\n       \
    \ } else {\n            prefixes.append(prefix)\n            prefix = \"\"\n \
    \       }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        currentPrefix = currentPrefix + String(character)\n   \
    \     prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var prefix = \"\"\n    for c in string {\n        if c ==\
    \ prefix {\n            prefixes.append(prefix)\n            prefix = \"\"\n \
    \       } else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix: String = \"\
    \"\n    for character in string {\n        if character == currentPrefix {\n \
    \           prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for c in string {\n        currentPrefix = currentPrefix + c\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = \"\"\n    for c\
    \ in string.unicodeScalars {\n        current = c.value\n        if current !=\
    \ \"\" {\n            prefixes.append(current)\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       prefix += c\n        prefixes.append(prefix)\n        prefix = \"\"\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string.unicodeScalars {\n        if c.value > 0xFFFF {\n\
    \            prefixes.append(prefix)\n            prefix = \"\"\n        } else\
    \ {\n            prefix += String(c.value)\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        if currentPrefix == \"\" {\n          \
    \  currentPrefix = c\n        } else {\n            if c == currentPrefix {\n\
    \                currentPrefix = \"\"\n            } else {\n                prefixes.append(currentPrefix)\n\
    \                currentPrefix = c\n            }\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var current = \"\"\n\
    \    for c in string.characters {\n        current += String(c)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.stringByAppendingString(String(character))\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            continue\n        }\n        currentPrefix = character\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string.characters {\n        if c == \" \" {\n          \
    \  prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n    \
    \        prefix += String(c)\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        currentPrefix = currentPrefix + c\n   \
    \     if currentPrefix.hasPrefix(string) {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = \"\"\n    for c in string {\n        current += c\n        if current.isEmpty\
    \ {\n            prefixes.append(current)\n            current = \"\"\n      \
    \  }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix: String = \"\
    \"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix: String = \"\"\n    for character\
    \ in string {\n        currentPrefix = currentPrefix + String(character)\n   \
    \     if currentPrefix.hasPrefix(string) {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.startIndex..<currentPrefix.endIndex]\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix + character\n        } else {\n\
    \            prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        if c != currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        }\n        currentPrefix += String(c)\n\
    \    }\n    prefixes.append(currentPrefix)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n        currentPrefix\
    \ = currentPrefix + c\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = \"\"\n    for c in string.unicodeScalars\
    \ {\n        current += String(c.value)\n        if current.count > 0 {\n    \
    \        prefixes.append(current)\n            current = \"\"\n        }\n   \
    \ }\n    if current.count > 0 {\n        prefixes.append(current)\n    }\n   \
    \ return prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\
    \"\n    for c in string {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + c\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       prefix += c\n        prefixes.append(prefix)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n\
    \        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + c\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = c\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = \"\"\n    for c in string.unicodeScalars {\n        current += String(c)\n\
    \        if current.hasPrefix(string) {\n            prefixes.append(current)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = \"\"\n    for c in string.unicodeScalars {\n        if c == Character(\"\
    \\u{0020}\") {\n            current = \"\"\n        } else {\n            current\
    \ += String(UnicodeScalar(c))\n        }\n        if current.count > 0 {\n   \
    \         prefixes.append(current)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            continue\n\
    \        }\n        currentPrefix = character\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var current = \"\"\n\
    \    for c in string.unicodeScalars {\n        current = String(unicodeScalars:\
    \ [c])\n        if current.hasPrefix(string) {\n            prefixes.append(current)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string.characters {\n        currentPrefix\
    \ = String(currentPrefix) + String(c)\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix[currentPrefix.count-1] {\n        \
    \    currentPrefix = currentPrefix + character\n        } else {\n           \
    \ prefixes.append(currentPrefix)\n            currentPrefix = character\n    \
    \    }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", "   \
    \ var prefixes = [String]()\n    var current = \"\"\n    for c in string.characters\
    \ {\n        current += String(c)\n        if current.characters.count > 1 {\n\
    \            prefixes.append(current)\n            current = \"\"\n        }\n\
    \    }\n    prefixes.append(current)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix: String = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       if c == prefix {\n            prefixes.append(prefix)\n            prefix\
    \ = \"\"\n        } else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = character\n            prefixes.append(currentPrefix)\n   \
    \     }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for c in string {\n        if c == prefix {\n           \
    \ prefixes.append(prefix)\n        } else {\n            prefix = c\n        }\n\
    \    }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes =\
    \ [String]()\n    var prefix = \"\"\n    for c in string {\n        if c == prefix\
    \ {\n            prefixes.append(prefix)\n            prefix = \"\"\n        }\
    \ else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix = currentPrefix[currentPrefix.count-1]\
    \ + character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            continue\n        }\n        currentPrefix = character\n    \
    \    prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == \".\" {\n            currentPrefix = \"\"\n        }\
    \ else {\n            currentPrefix += String(character)\n        }\n        if\
    \ currentPrefix.hasPrefix(\".\") {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string {\n        if c != currentPrefix {\n\
    \            currentPrefix = c\n            prefixes.append(currentPrefix)\n \
    \       }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for ch in string {\n        prefix += String(ch)\n      \
    \  prefixes.append(prefix)\n        prefix = \"\"\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = currentPrefix + String(character)\n   \
    \     if currentPrefix.hasPrefix(string) {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = string\n    var\
    \ longest = string\n    var shortest = \"\"\n    while current != \"\" {\n   \
    \     shortest = current\n        current = longest\n        for char in current\
    \ {\n            longest = longest.prefix(longest.index(longest.startIndex, offsetBy:\
    \ 1))\n            if longest == \"\" {\n                break\n            }\n\
    \        }\n        prefixes.append(shortest)\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = \"\"\n    for ch in string.characters\
    \ {\n        current += String(ch)\n        if current.hasPrefix(string) {\n \
    \           prefixes.append(current)\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        currentPrefix = String(currentPrefix) + String(character)\n     \
    \   prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == \"-\" {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        } else {\n            currentPrefix\
    \ = currentPrefix + String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = character\n            prefixes.append(currentPrefix)\n   \
    \     }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix: String = \"\"\n    for c in string {\n        if c == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = c\n        }\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix[currentPrefix.count-1] {\n            currentPrefix\
    \ = currentPrefix + character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = character\n            prefixes.append(currentPrefix)\n        }\n    }\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n\
    \        if c == prefix {\n            prefixes.append(prefix)\n        } else\
    \ {\n            prefix = prefix\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       if c == prefix {\n            prefixes.append(prefix)\n            prefix\
    \ = \"\"\n        } else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix + character\n        } else {\n\
    \            prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == \".\" {\n            currentPrefix = \"\
    \"\n        } else {\n            currentPrefix += String(character)\n       \
    \ }\n        if currentPrefix.count > 0 {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.startIndex] {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string.unicodeScalars {\n        if c == Character(\"\\u{0020}\"\
    ) {\n            prefixes.append(prefix)\n            prefix = \"\"\n        }\
    \ else {\n            prefix += String(c)\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            continue\n        }\n        currentPrefix = character\n    \
    \    prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n        if\
    \ c == currentPrefix {\n            prefixes.append(currentPrefix)\n        }\
    \ else {\n            currentPrefix = c\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string {\n        if c == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += c\n      \
    \  }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        currentPrefix = currentPrefix + String(character)\n        if currentPrefix.hasPrefix(string)\
    \ {\n            prefixes.append(currentPrefix)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix += character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        currentPrefix = currentPrefix + c\n   \
    \     if currentPrefix.hasPrefix(string) {\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string {\n        if c == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = c\n        }\n    }\n    return prefixes", "    var prefixes = [String]()\n\
    \    var current = \"\"\n    for c in string.unicodeScalars {\n        current\
    \ += String(c.value)\n        if current.hasPrefix(string) {\n            prefixes.append(current)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix = currentPrefix\
    \ + character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = \"\"\n        }\n        prefix += c\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + String(character)\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix:\
    \ String = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        if currentPrefix.hasPrefix(string) {\n        \
    \    prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       prefix += c\n        prefixes.append(prefix)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var current = \"\"\n    for c in string {\n\
    \        current += String(c)\n        prefixes.append(current)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix += character\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = character\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == \"-\" {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = \"\"\n        } else {\n            currentPrefix\
    \ += String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string.unicodeScalars {\n        if c.isASCII {\n       \
    \     currentPrefix = c.value\n        } else {\n            currentPrefix = String(currentPrefix)\
    \ + String(c.value)\n        }\n        if currentPrefix.hasPrefix(string) {\n\
    \            prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       if c == prefix {\n            prefixes.append(prefix)\n            prefix\
    \ = \"\"\n        } else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for c in string {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = c\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n    for c\
    \ in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = c\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = currentPrefix + String(character)\n   \
    \     prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var prefix = \"\"\n    for c in string {\n        if c ==\
    \ prefix {\n            prefixes.append(prefix)\n            prefix = \"\"\n \
    \       } else {\n            prefix += c\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes"]
stop_tokens:
- "\n}"

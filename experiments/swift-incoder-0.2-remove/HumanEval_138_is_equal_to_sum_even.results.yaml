language: swift
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = Int(pow(2.0, Double(ceil(log2(n)))))\n    return\
    \ n == sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp_7q8ave4.swift:5:24: error: cannot find 'pow' in scope\n    let\
    \ sum: Int = Int(pow(2.0, Double(ceil(log2(n)))))\n                       ^~~\n\
    /tmp/tmp_7q8ave4.swift:5:40: error: cannot find 'ceil' in scope\n    let sum:\
    \ Int = Int(pow(2.0, Double(ceil(log2(n)))))\n                               \
    \        ^~~~\n/tmp/tmp_7q8ave4.swift:5:45: error: cannot find 'log2' in scope\n\
    \    let sum: Int = Int(pow(2.0, Double(ceil(log2(n)))))\n                   \
    \                         ^~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n    return sum\
    \ == n * 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi6z5eu0_.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let result = n % sum == 0 && n / sum ==\
    \ sum\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptuj_423x/tmptuj_423x.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1a3337c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1a302eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1a302e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1a302d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptuj_423x                        0x000055872254f32d <unavailable> + 4909

    5    libc.so.6                          0x00002ba1a3523460 __libc_start_main +
    245

    6    tmptuj_423x                        0x000055872254eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n\
    \        sum += digit * 2\n        return sum\n    }\n    return sum_of_four_even\
    \ % 4 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpslzx6wcv.swift:5:30: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n           \
    \                ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpf0l74hh5.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpf0l74hh5.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum % 2 == 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi9x7234b.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n % 2 == 0 && is_sum_of_evens(n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpz1ldtoxb.swift:5:26: error: cannot find 'is_sum_of_evens' in scope\n\
    \    return n % 2 == 0 && is_sum_of_evens(n)\n                         ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for _ in 0..<n {\n        sum += 2\n   \
    \ }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpt9sk075c.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpt9sk075c.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpt9sk075c.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpt9sk075c.swift:7:9: error: cannot find\
    \ 'sum' in scope\n        sum += 2\n        ^~~\n/tmp/tmpt9sk075c.swift:9:12:\
    \ error: cannot find 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == sum_of_4_positive_evens(n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmppjcjhad2.swift:5:17: error: cannot find 'sum_of_4_positive_evens'\
    \ in scope\n    return n == sum_of_4_positive_evens(n)\n                ^~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let sumOfEven: Int = 2\n    let sumOfEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEven: Int = 1\n    let sumOfEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEven: Int = 1\n    let sumOfEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEven: Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 1\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 1\n    let\
    \ sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 1\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 1\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp3tw8qo2x.swift:23:9: error: type annotation missing in pattern\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    \        ^\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        sum += i\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6znvjy3o/tmp6znvjy3o.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acde63f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acde60ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acde60ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acde60eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6znvjy3o                        0x000055d2d7a8641d <unavailable> + 5149

    5    libc.so.6                          0x00002acde65e1460 __libc_start_main +
    245

    6    tmp6znvjy3o                        0x000055d2d7a85fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n: n, evens: 4)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp8o18dpco.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n: n, evens: 4)\n         \
    \  ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = (2 * n + 1) * (2 * n + 2) / 2\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp4kw81rn3/tmp4kw81rn3.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7946fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7943f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7943f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7943f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4kw81rn3                        0x0000557d23d2e32d <unavailable> + 4909

    5    libc.so.6                          0x00002ae7948e9460 __libc_start_main +
    245

    6    tmp4kw81rn3                        0x0000557d23d2def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == sum_of_four_evens(n)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpgzuyk_kt.swift:5:17: error: cannot find 'sum_of_four_evens' in\
    \ scope\n    return n == sum_of_four_evens(n)\n                ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == sum_of_4_positive_evens(n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmppjcjhad2.swift:5:17: error: cannot find 'sum_of_4_positive_evens'\
    \ in scope\n    return n == sum_of_4_positive_evens(n)\n                ^~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpeqoe0nnz/tmpeqoe0nnz.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb8d7f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb8d4eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb8d4ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb8d4e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeqoe0nnz                        0x00005598a00f929d <unavailable> + 4765

    5    libc.so.6                          0x00002afb8d9df460 __libc_start_main +
    245

    6    tmpeqoe0nnz                        0x00005598a00f8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpeqoe0nnz/tmpeqoe0nnz.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb8d7f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb8d4eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb8d4ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb8d4e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeqoe0nnz                        0x00005598a00f929d <unavailable> + 4765

    5    libc.so.6                          0x00002afb8d9df460 __libc_start_main +
    245

    6    tmpeqoe0nnz                        0x00005598a00f8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == sum_of_4_positive_evens(n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmppjcjhad2.swift:5:17: error: cannot find 'sum_of_4_positive_evens'\
    \ in scope\n    return n == sum_of_4_positive_evens(n)\n                ^~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_sum_even(n) && is_sum_even(n + 2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp5ida0jjg.swift:5:12: error: cannot find 'is_sum_even' in scope\n\
    \    return is_sum_even(n) && is_sum_even(n + 2)\n           ^~~~~~~~~~~\n/tmp/tmp5ida0jjg.swift:5:30:\
    \ error: cannot find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n\
    \ + 2)\n                             ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == (n * 4)\
    \ / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpd7nkdhvu.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == sum_of_4_positive_evens(n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmppjcjhad2.swift:5:17: error: cannot find 'sum_of_4_positive_evens'\
    \ in scope\n    return n == sum_of_4_positive_evens(n)\n                ^~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let result = n % sum == 0 && n / sum ==\
    \ sum\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptuj_423x/tmptuj_423x.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1a3337c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1a302eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1a302e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1a302d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptuj_423x                        0x000055872254f32d <unavailable> + 4909

    5    libc.so.6                          0x00002ba1a3523460 __libc_start_main +
    245

    6    tmptuj_423x                        0x000055872254eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == (n * 4)\
    \ / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpd7nkdhvu.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpf0l74hh5.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpf0l74hh5.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n    return sum\
    \ == (n * 4)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpu4btnj0o.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return n == (n & 1) + is_equal_to_sum_even(n >> 1)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp6njf8x0j.swift:5:27: error: cannot convert value of type 'Bool'\
    \ to expected argument type 'Int'\n    return n == (n & 1) + is_equal_to_sum_even(n\
    \ >> 1)\n                          ^\n/tmp/tmp6njf8x0j.swift:5:48: error: missing\
    \ argument label 'n:' in call\n    return n == (n & 1) + is_equal_to_sum_even(n\
    \ >> 1)\n                                               ^\n                  \
    \                             n: \n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        sum += i\n       \
    \ if sum % 2 == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp1m2h0hgv.swift:7:13: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n        sum += i\n        ~~~ ^\n/tmp/tmp1m2h0hgv.swift:5:5:\
    \ note: change 'let' to 'var' to make it mutable\n    let sum = 0\n    ^~~\n \
    \   var\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { (sum, n) -> Int in\n        sum += n\n\
    \        return sum\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpkgc7s6xr.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { (sum, n) -> Int in\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        sum += i\n       \
    \ if sum % 2 == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp1m2h0hgv.swift:7:13: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n        sum += i\n        ~~~ ^\n/tmp/tmp1m2h0hgv.swift:5:5:\
    \ note: change 'let' to 'var' to make it mutable\n    let sum = 0\n    ^~~\n \
    \   var\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = (4 * n) + 4\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp1x2jiumc/tmp1x2jiumc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b158ec57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b158e94eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b158e94e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b158e94d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1x2jiumc                        0x0000560814e2029d <unavailable> + 4765

    5    libc.so.6                          0x00002b158ee43460 __libc_start_main +
    245

    6    tmp1x2jiumc                        0x0000560814e1fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n    return sum\
    \ == n * 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi6z5eu0_.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum % 2 ==\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpigu3lp18/tmpigu3lp18.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b618a8b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b618a5aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b618a5ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b618a5ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpigu3lp18                        0x00005618fc643243 <unavailable> + 4675

    5    libc.so.6                          0x00002b618aaa3460 __libc_start_main +
    245

    6    tmpigu3lp18                        0x00005618fc642ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == (4 * n)\
    \ / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpdc1q_6d0.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = (0..<n).filter { $0 % 2 == 0 }\n    return evens.count\
    \ == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpauo9rn2k/tmpauo9rn2k.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78118d5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78115ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78115cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78115cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauo9rn2k                        0x0000561066957531 <unavailable> + 5425

    5    libc.so.6                          0x00002b7811ac1460 __libc_start_main +
    245

    6    tmpauo9rn2k                        0x0000561066957089 <unavailable> + 4233

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpa776hoa5.swift:7:13: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n        sum += 2\n        ~~~ ^\n/tmp/tmpa776hoa5.swift:5:5:\
    \ note: change 'let' to 'var' to make it mutable\n    let sum = 0\n    ^~~\n \
    \   var\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = (2 * n + 1) * (2 * n + 2)\n    return sum == n\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp01i88qx0/tmp01i88qx0.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada51b40c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada51837b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada51837988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada518367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp01i88qx0                        0x000055fd0cf0229d <unavailable> + 4765

    5    libc.so.6                          0x00002ada51d2c460 __libc_start_main +
    245

    6    tmp01i88qx0                        0x000055fd0cf01e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = (4 * n) + 4\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp1x2jiumc/tmp1x2jiumc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b158ec57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b158e94eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b158e94e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b158e94d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1x2jiumc                        0x0000560814e2029d <unavailable> + 4765

    5    libc.so.6                          0x00002b158ee43460 __libc_start_main +
    245

    6    tmp1x2jiumc                        0x0000560814e1fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sumEven = n.reduce(0) { $0 + $1 }\n    return sumEven ==\
    \ n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpb_ir77u2.swift:5:21: error: value of type 'Int' has no member 'reduce'\n\
    \    let sumEven = n.reduce(0) { $0 + $1 }\n                  ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum % 2 == 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi9x7234b.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n\
    \        sum += digit * digit\n        return sum\n    }\n    return sum_of_four_even\
    \ % 4 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpl4wwbmzf.swift:5:30: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n           \
    \                ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpa776hoa5.swift:7:13: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n        sum += 2\n        ~~~ ^\n/tmp/tmpa776hoa5.swift:5:5:\
    \ note: change 'let' to 'var' to make it mutable\n    let sum = 0\n    ^~~\n \
    \   var\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n \
    \           sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp1mtlidvn.swift:6:15: error: cannot find operator '..' in scope;\
    \ did you mean '...'?\n    for i in 1..n {\n              ^~\n              ...\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<4 {\n        sum += 2\n    }\n\
    \    return n == sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpjn9osw4f/tmpjn9osw4f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed00c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaecfdbbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaecfdbb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaecfdba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjn9osw4f                        0x000055a8d76d7401 <unavailable> + 5121

    5    libc.so.6                          0x00002aaed02b0460 __libc_start_main +
    245

    6    tmpjn9osw4f                        0x000055a8d76d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let evens = [2,4,6,8]\n    return evens.contains(n) && n % 2\
    \ == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp1itual1f/tmp1itual1f.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b537e3edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b537e0e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b537e0e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b537e0e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1itual1f                        0x0000560e684473b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b537e5d9460 __libc_start_main +
    245

    6    tmp1itual1f                        0x0000560e68447069 <unavailable> + 4201

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * 4 + 1\n    return n == sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpvd4hsi_p/tmpvd4hsi_p.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf412dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf40fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf40fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf40fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvd4hsi_p                        0x000055ae4d94d29d <unavailable> + 4765

    5    libc.so.6                          0x00002acf414cb460 __libc_start_main +
    245

    6    tmpvd4hsi_p                        0x000055ae4d94ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let result = n % sum == 0 && n / sum ==\
    \ sum\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptuj_423x/tmptuj_423x.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1a3337c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1a302eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1a302e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1a302d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptuj_423x                        0x000055872254f32d <unavailable> + 4909

    5    libc.so.6                          0x00002ba1a3523460 __libc_start_main +
    245

    6    tmptuj_423x                        0x000055872254eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n\
    \ + 4) && is_sum_even(n + 6)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpgim7nc0m.swift:5:12: error: cannot find 'is_sum_even' in scope\n\
    \    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n + 4) && is_sum_even(n\
    \ + 6)\n           ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:30: error: cannot find\
    \ 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n\
    \ + 4) && is_sum_even(n + 6)\n                             ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:52:\
    \ error: cannot find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n\
    \ + 2) && is_sum_even(n + 4) && is_sum_even(n + 6)\n                         \
    \                          ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:74: error: cannot\
    \ find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n + 2)\
    \ && is_sum_even(n + 4) && is_sum_even(n + 6)\n                              \
    \                                           ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n: n, evens: 0)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvpk8czzf.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n: n, evens: 0)\n         \
    \  ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        sum += i\n       \
    \ if sum % 2 == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp8shecmzp/tmp8shecmzp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0824198c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0823e8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0823e8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0823e8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8shecmzp                        0x000055af44d0a333 <unavailable> + 4915

    5    libc.so.6                          0x00002b0824384460 __libc_start_main +
    245

    6    tmp8shecmzp                        0x000055af44d09fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n    return sum\
    \ == n * 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi6z5eu0_.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0, combine: {$0 + $1 * 2})\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpifk5j2o8.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpifk5j2o8.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<4 {\n        sum += 2\n    }\n\
    \    return n == sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpjn9osw4f/tmpjn9osw4f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed00c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaecfdbbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaecfdbb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaecfdba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjn9osw4f                        0x000055a8d76d7401 <unavailable> + 5121

    5    libc.so.6                          0x00002aaed02b0460 __libc_start_main +
    245

    6    tmpjn9osw4f                        0x000055a8d76d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpeqoe0nnz/tmpeqoe0nnz.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb8d7f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb8d4eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb8d4ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb8d4e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeqoe0nnz                        0x00005598a00f929d <unavailable> + 4765

    5    libc.so.6                          0x00002afb8d9df460 __libc_start_main +
    245

    6    tmpeqoe0nnz                        0x00005598a00f8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let even: Int = 2\n    return n == sum\
    \ * even + sum * even + sum * even + sum * even\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp51xb6uef/tmp51xb6uef.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad7f78b2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad7f75a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad7f75a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad7f75a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp51xb6uef                        0x0000555c4b2ad29d <unavailable> + 4765

    5    libc.so.6                          0x00002ad7f7a9e460 __libc_start_main +
    245

    6    tmp51xb6uef                        0x0000555c4b2ace69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0, combine: {$0 + $1 })\n    return sum ==\
    \ (n * 4) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmplb50e52m.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0, combine: {$0 + $1 })\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sumEven = n.reduce(0) { (sum, next) in\n        sum += next\n\
    \        if sum % 2 == 0 {\n            return sum\n        }\n        return\
    \ 0\n    }\n    return sumEven == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp_pflox3_.swift:5:21: error: value of type 'Int' has no member 'reduce'\n\
    \    let sumEven = n.reduce(0) { (sum, next) in\n                  ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum % 2 == 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpi9x7234b.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpf0l74hh5.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpf0l74hh5.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<4 {\n        sum += n\n       \
    \ if sum % 2 == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpnfjmjm5l/tmpnfjmjm5l.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73c43c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73c40c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73c40c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73c40bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnfjmjm5l                        0x000055eb315fe333 <unavailable> + 4915

    5    libc.so.6                          0x00002b73c45b5460 __libc_start_main +
    245

    6    tmpnfjmjm5l                        0x000055eb315fdfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return n == sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpyfhoh0_x/tmpyfhoh0_x.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc05e9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc05b95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc05b95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc05b947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyfhoh0_x                        0x000056240ffe229d <unavailable> + 4765

    5    libc.so.6                          0x00002adc0608a460 __libc_start_main +
    245

    6    tmpyfhoh0_x                        0x000056240ffe1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let sumOfEven: Int = 2\n    let sumOfEvenEven:\
    \ Int = 4\n    let sumOfEvenEvenEven: Int = 6\n    let sumOfEvenEvenEvenEven:\
    \ Int = 8\n    let sumOfEvenEvenEvenEvenEven: Int = 10\n    let sumOfEvenEvenEvenEvenEvenEven:\
    \ Int = 12\n    let sumOfEvenEvenEvenEvenEvenEvenEven: Int = 14\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 16\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 18\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 20\n   \
    \ let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int = 22\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven: Int\
    \ = 24\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 26\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 28\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 30\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 32\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 34\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 36\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 38\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven:\
    \ Int = 40\n    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp0ymwuiru.swift:26:9: error: type annotation missing in pattern\n\
    \    let sumOfEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    \        ^\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpsdwh2v89/tmpsdwh2v89.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27e757bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27e7272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27e7272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27e72717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsdwh2v89                        0x000055a9259d041d <unavailable> + 5149

    5    libc.so.6                          0x00002b27e7767460 __libc_start_main +
    245

    6    tmpsdwh2v89                        0x000055a9259cffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009457
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpungtg55j.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpungtg55j.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpungtg55j.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpungtg55j.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n/tmp/tmpungtg55j.swift:11:12: error: cannot find\
    \ 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = Int(pow(2.0, Double(n)))\n    return sum == Int(pow(2.0,\
    \ Double(4))) || sum == Int(pow(2.0, Double(6)))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp63xxf7m8.swift:5:24: error: cannot find 'pow' in scope\n    let\
    \ sum: Int = Int(pow(2.0, Double(n)))\n                       ^~~\n/tmp/tmp63xxf7m8.swift:6:23:\
    \ error: cannot find 'pow' in scope\n    return sum == Int(pow(2.0, Double(4)))\
    \ || sum == Int(pow(2.0, Double(6)))\n                      ^~~\n/tmp/tmp63xxf7m8.swift:6:58:\
    \ error: cannot find 'pow' in scope\n    return sum == Int(pow(2.0, Double(4)))\
    \ || sum == Int(pow(2.0, Double(6)))\n                                       \
    \                  ^~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpeqoe0nnz/tmpeqoe0nnz.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb8d7f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb8d4eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb8d4ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb8d4e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeqoe0nnz                        0x00005598a00f929d <unavailable> + 4765

    5    libc.so.6                          0x00002afb8d9df460 __libc_start_main +
    245

    6    tmpeqoe0nnz                        0x00005598a00f8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == (4 * n)\
    \ / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpdc1q_6d0.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for i in 1..n {\n        sum += i\n    \
    \    if sum % 2 == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp1qywy6m6.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmp1qywy6m6.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmp1qywy6m6.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmp1qywy6m6.swift:6:15: error: cannot find\
    \ operator '..' in scope; did you mean '...'?\n    for i in 1..n {\n         \
    \     ^~\n              ...\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n\
    \ + 4) && is_sum_even(n + 6)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpgim7nc0m.swift:5:12: error: cannot find 'is_sum_even' in scope\n\
    \    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n + 4) && is_sum_even(n\
    \ + 6)\n           ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:30: error: cannot find\
    \ 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n + 2) && is_sum_even(n\
    \ + 4) && is_sum_even(n + 6)\n                             ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:52:\
    \ error: cannot find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n\
    \ + 2) && is_sum_even(n + 4) && is_sum_even(n + 6)\n                         \
    \                          ^~~~~~~~~~~\n/tmp/tmpgim7nc0m.swift:5:74: error: cannot\
    \ find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n + 2)\
    \ && is_sum_even(n + 4) && is_sum_even(n + 6)\n                              \
    \                                           ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<4 {\n        sum += 2\n    }\n\
    \    return n == sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpjn9osw4f/tmpjn9osw4f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed00c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaecfdbbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaecfdbb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaecfdba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjn9osw4f                        0x000055a8d76d7401 <unavailable> + 5121

    5    libc.so.6                          0x00002aaed02b0460 __libc_start_main +
    245

    6    tmpjn9osw4f                        0x000055a8d76d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let mut sum = 0\n    for _ in 0..<n {\n        sum += 2\n   \
    \ }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpt9sk075c.swift:5:13: error: found an unexpected second identifier\
    \ in constant declaration; is there an accidental break?\n    let mut sum = 0\n\
    \            ^\n/tmp/tmpt9sk075c.swift:5:13: note: join the identifiers together\n\
    \    let mut sum = 0\n        ~~~~^~~\n        mutsum\n/tmp/tmpt9sk075c.swift:5:13:\
    \ note: join the identifiers together with camel-case\n    let mut sum = 0\n \
    \       ~~~~^~~\n        mutSum\n/tmp/tmpt9sk075c.swift:7:9: error: cannot find\
    \ 'sum' in scope\n        sum += 2\n        ^~~\n/tmp/tmpt9sk075c.swift:9:12:\
    \ error: cannot find 'sum' in scope\n    return sum == n\n           ^~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for i in 1...n {\n        sum += i\n       \
    \ if sum > 4 {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp_7i0ul27/tmp_7i0ul27.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc2ae5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc2ab52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc2ab52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc2ab517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_7i0ul27                        0x000055fe2b54141d <unavailable> + 5149

    5    libc.so.6                          0x00002afc2b047460 __libc_start_main +
    245

    6    tmp_7i0ul27                        0x000055fe2b540fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 0\n    for i in 1..<n {\n        if n % i == 0 {\n\
    \            sum += i\n        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpw45ht_85.swift:8:17: error: left side of mutating operator isn't\
    \ mutable: 'sum' is a 'let' constant\n            sum += i\n            ~~~ ^\n\
    /tmp/tmpw45ht_85.swift:5:5: note: change 'let' to 'var' to make it mutable\n \
    \   let sum = 0\n    ^~~\n    var\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<4 {\n        if n % 2 == 0 {\n\
    \            sum += n\n        }\n        n /= 2\n    }\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpu40q5752.swift:10:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 2\n        ~ ^\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let sumOfEven: Int = 2\n    let sumOfOdd:\
    \ Int = 1\n    let sumOfEvenOdd: Int = 1\n    let sumOfEvenOddEven: Int = 1\n\
    \    let sumOfEvenOddEvenOdd: Int = 1\n    let sumOfEvenOddEvenOddEven: Int =\
    \ 1\n    let sumOfEvenOddEvenOddEvenOdd: Int = 1\n    let sumOfEvenOddEvenOddEvenOddEven:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOdd: Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEven:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOdd: Int = 1\n    let\
    \ sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEven: Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: Int =\
    \ 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd: Int = 1\n\
    \    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: Int = 1\n\
    \    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: Int = 1\n\
    \    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd: Int =\
    \ 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ Int = 1\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmplgv1hn21.swift:22:9: error: invalid redeclaration of 'sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven'\n\
    \    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven: Int = 1\n\
    \        ^\n/tmp/tmplgv1hn21.swift:21:9: note: 'sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven'\
    \ previously declared here\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven:\
    \ Int = 1\n        ^\n/tmp/tmplgv1hn21.swift:27:9: error: type annotation missing\
    \ in pattern\n    let sumOfEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
    \        ^\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = 4 * n + 4 * n + 4 * n + 4 * n\n    return sum == n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpeqoe0nnz/tmpeqoe0nnz.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb8d7f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb8d4eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb8d4ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb8d4e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeqoe0nnz                        0x00005598a00f929d <unavailable> + 4765

    5    libc.so.6                          0x00002afb8d9df460 __libc_start_main +
    245

    6    tmpeqoe0nnz                        0x00005598a00f8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_equal_to_sum_even_helper(n, n)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvwz1o20a.swift:5:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n, n)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n\
    \        sum += digit * digit\n        return sum\n    }\n    return sum_of_four_even\
    \ % 4 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpl4wwbmzf.swift:5:30: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum_of_four_even = n.reduce(0) { (sum, digit) -> Int in\n           \
    \                ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = (4 * n) + 4\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp1x2jiumc/tmp1x2jiumc.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b158ec57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b158e94eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b158e94e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b158e94d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1x2jiumc                        0x0000560814e2029d <unavailable> + 4765

    5    libc.so.6                          0x00002b158ee43460 __libc_start_main +
    245

    6    tmp1x2jiumc                        0x0000560814e1fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let result = n % sum == 0 && n / sum ==\
    \ sum\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptuj_423x/tmptuj_423x.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1a3337c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1a302eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1a302e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1a302d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptuj_423x                        0x000055872254f32d <unavailable> + 4909

    5    libc.so.6                          0x00002ba1a3523460 __libc_start_main +
    245

    6    tmptuj_423x                        0x000055872254eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    return is_sum_even(n) && is_sum_even(n + 2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp5ida0jjg.swift:5:12: error: cannot find 'is_sum_even' in scope\n\
    \    return is_sum_even(n) && is_sum_even(n + 2)\n           ^~~~~~~~~~~\n/tmp/tmp5ida0jjg.swift:5:30:\
    \ error: cannot find 'is_sum_even' in scope\n    return is_sum_even(n) && is_sum_even(n\
    \ + 2)\n                             ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum: Int = 4\n    let remainder = n % sum\n    return remainder\
    \ == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp46qxpsfj/tmp46qxpsfj.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c63d13c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c63a0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c63a0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c63a097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46qxpsfj                        0x00005590e6dc0243 <unavailable> + 4675

    5    libc.so.6                          0x00002b4c63eff460 __libc_start_main +
    245

    6    tmp46qxpsfj                        0x00005590e6dbfef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009806
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    var sum = 0\n    for _ in 0..<n {\n        sum += 2\n    }\n\
    \    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpakd6_rp7/tmpakd6_rp7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc52185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc51e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc51e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc51e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpakd6_rp7                        0x000055c4fe66b41d <unavailable> + 5149

    5    libc.so.6                          0x00002abc52371460 __libc_start_main +
    245

    6    tmpakd6_rp7                        0x000055c4fe66afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009805
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\nfunc is_equal_to_sum_even(n: Int)\
    \ -> Bool {\n    let sum = n.reduce(0) { $0 + $1 }\n    return sum == n\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcbyriozv.swift:5:17: error: value of type 'Int' has no member 'reduce'\n\
    \    let sum = n.reduce(0) { $0 + $1 }\n              ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009805

language: swift
name: HumanEval_121_solution
results:
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if i % 2 ==\
    \ 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3hhtrgj4/tmp3hhtrgj4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ba369fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ba3396b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ba3396988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ba33957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3hhtrgj4                        0x000055742a50f6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b3ba388b460 __libc_start_main +
    245

    6    tmp3hhtrgj4                        0x000055742a50f1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n   \
    \         sum += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp49tl5_ph/tmp49tl5_ph.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63546cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab635163b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab635163988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6351627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49tl5_ph                        0x00005563f83e150a <unavailable> + 5386

    5    libc.so.6                          0x00002ab635658460 __libc_start_main +
    245

    6    tmp49tl5_ph                        0x00005563f83e1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if lst[i] %\
    \ 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp4lbvcbji/tmp4lbvcbji.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75beadec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75be7d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75be7d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75be7d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lbvcbji                        0x0000557d185f554a <unavailable> + 5450

    5    libc.so.6                          0x00002b75becca460 __libc_start_main +
    245

    6    tmp4lbvcbji                        0x0000557d185f51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for i in 0..<lst.count {\n        if i % 2 ==\
    \ 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3hhtrgj4/tmp3hhtrgj4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ba369fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ba3396b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ba3396988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ba33957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3hhtrgj4                        0x000055742a50f6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b3ba388b460 __libc_start_main +
    245

    6    tmp3hhtrgj4                        0x000055742a50f1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for element in lst {\n        if element % 2\
    \ == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpwkl1ojam/tmpwkl1ojam.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92596c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92593c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92593c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92593bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwkl1ojam                        0x000056074a18c50a <unavailable> + 5386

    5    libc.so.6                          0x00002b92598b5460 __libc_start_main +
    245

    6    tmpwkl1ojam                        0x000056074a18c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n   \
    \         sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpcpjwwiug/tmpcpjwwiug.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e65f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e62e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e62e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e62e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpjwwiug                        0x00005636b5bf150a <unavailable> + 5386

    5    libc.so.6                          0x00002b44e67dd460 __libc_start_main +
    245

    6    tmpcpjwwiug                        0x00005636b5bf1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\nfunc solution(lst: [Int])\
    \ -> Int {\n    var sum = 0\n    for index in 0..<lst.count {\n        if index\
    \ % 2 == 0 {\n            sum += lst[index]\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpb2aes790/tmpb2aes790.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b645c4c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645c1c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645c1c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645c1bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2aes790                        0x0000559e4c4656ec <unavailable> + 5868

    5    libc.so.6                          0x00002b645c6b5460 __libc_start_main +
    245

    6    tmpb2aes790                        0x0000559e4c4651a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013562

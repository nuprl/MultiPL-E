language: swift
name: HumanEval_94_skjkasdkd
results:
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            sum += n\n            if n\
    \ > largestPrime {\n                largestPrime = n\n            }\n        }\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpr4ort6mc.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sum += number\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpu6nv15sx/tmpu6nv15sx.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9736251c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9735f48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9735f48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9735f477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6nv15sx                        0x0000560e58c5a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b973643d460 __libc_start_main +
    245

    6    tmpu6nv15sx                        0x0000560e58c5a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            largestPrime = n\n        }\n\
    \    }\n    for n in lst {\n        if isPrime(n) {\n            sum += Int(n)\
    \ - largestPrime\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpgoqerrw3.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n/tmp/tmpgoqerrw3.swift:14:12: error:\
    \ cannot find 'isPrime' in scope\n        if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max == 0 {\n            sum += n\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz21baldr/tmpz21baldr.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abbea506c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abbea1fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abbea1fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abbea1fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz21baldr                        0x00005559d76275b0 <unavailable> + 5552

    5    libc.so.6                          0x00002abbea6f2460 __libc_start_main +
    245

    6    tmpz21baldr                        0x00005559d7627169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max != 0 {\n            sum += n % max\n        }\n  \
    \  }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpqcw7w7oh/tmpqcw7w7oh.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b46720c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b46417b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b46417988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b464167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqcw7w7oh                        0x00005603bc12b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b9b4690c460 __libc_start_main +
    245

    6    tmpqcw7w7oh                        0x00005603bc12b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > 0 {\n            if num > max {\n                max = num\n \
    \           }\n        }\n    }\n    for num in lst {\n        if num > 0 {\n\
    \            if num % max == 0 {\n                sum += num % max\n         \
    \   }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpk5axmb6e/tmpk5axmb6e.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae63f2c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae63efb8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae63efb8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae63efb77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk5axmb6e                        0x0000563db9ce25b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae63f4ad460 __libc_start_main +
    245

    6    tmpk5axmb6e                        0x0000563db9ce2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    for n in lst {\n        if n > max\
    \ {\n            max = n\n        }\n    }\n    var sum: Int = 0\n    for n in\
    \ lst {\n        if n % max != 0 {\n            sum += n % max\n        }\n  \
    \  }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpj8uxm69m/tmpj8uxm69m.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b484cab2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b484c7a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b484c7a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b484c7a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj8uxm69m                        0x000055dd6aa285b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b484cc9e460 __libc_start_main +
    245

    6    tmpj8uxm69m                        0x000055dd6aa28169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x % 2 == 0\
    \ {\n            max = x\n        }\n    }\n    var sum = 0\n    for x in lst\
    \ {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum + max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpw6tgjlds/tmpw6tgjlds.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb24119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb23e10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb23e10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb23e0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6tgjlds                        0x000055d2de4525b0 <unavailable> + 5552

    5    libc.so.6                          0x00002acb24305460 __libc_start_main +
    245

    6    tmpw6tgjlds                        0x000055d2de452169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpgbiksa5y/tmpgbiksa5y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8678db8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8678aafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8678aaf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8678aae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgbiksa5y                        0x000055ff6f72f520 <unavailable> + 5408

    5    libc.so.6                          0x00002b8678fa4460 __libc_start_main +
    245

    6    tmpgbiksa5y                        0x000055ff6f72f0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var maxPrime: Int = 0\n    var sum: Int = 0\n    for n\
    \ in lst {\n        if n % 2 == 0 {\n            sum += n\n        }\n       \
    \ if n > maxPrime {\n            maxPrime = n\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpqo_xt6da/tmpqo_xt6da.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34e2e1bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34e2b12b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34e2b12988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34e2b117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqo_xt6da                        0x000056251c2be5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b34e3007460 __libc_start_main +
    245

    6    tmpqo_xt6da                        0x000056251c2be169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for element in lst {\n        if element % 2 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 3 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 5 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 7 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 11 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 13 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 17 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 19 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 23 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 29 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 31 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 37 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 41 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 43 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 47 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 53 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 59 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 61 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 67 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 71 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 73 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 79 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 83 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 89 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 97 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 101 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 103 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 107 == 0 {\n            largestPrime\
    \ = element\n        }\n        if element % 109 == 0 {\n            largestPrime\
    \ = element\n        }\n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpvvylx1za.swift:120:46: error: expected '}' at end of brace statement\n\
    assert(skjkasdkd(lst: [127, 97, 8192]) == 10)\n                              \
    \               ^\n/tmp/tmpvvylx1za.swift:5:35: note: to match this opening '{'\n\
    func skjkasdkd(lst: [Int]) -> Int {\n                                  ^\n/tmp/tmpvvylx1za.swift:100:6:\
    \ error: operator functions can only be declared at global or in type scope\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n     ^\n/tmp/tmpvvylx1za.swift:6:9:\
    \ warning: variable 'largestPrime' was written to, but never read\n    var largestPrime:\
    \ Int = 0\n        ^\n/tmp/tmpvvylx1za.swift:7:9: warning: initialization of variable\
    \ 'sumOfDigits' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    var sumOfDigits = 0\n    ~~~~^~~~~~~~~~~\n    _\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime = 0\n    for num in lst {\n        if\
    \ num > largestPrime {\n            largestPrime = num\n        }\n    }\n   \
    \ return largestPrime\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp_6rq7hf_/tmp_6rq7hf_.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba039169c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba038e60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba038e60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba038e5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_6rq7hf_                        0x0000556bbba11520 <unavailable> + 5408

    5    libc.so.6                          0x00002ba039355460 __libc_start_main +
    245

    6    tmp_6rq7hf_                        0x0000556bbba110d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for n in lst {\n        if isPrime(n) {\n            largestPrime = largestPrime\
    \ + n\n            sumOfDigits += n\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpafk52mkb.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > 0 {\n            sum += num % 10\n        }\n        if sum >\
    \ max {\n            max = sum\n        }\n        sum = 0\n    }\n    return\
    \ max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpfgpm0un0/tmpfgpm0un0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191495cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1914653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1914653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b19146527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfgpm0un0                        0x000055857808c5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b1914b48460 __libc_start_main +
    245

    6    tmpfgpm0un0                        0x000055857808c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number == largestPrime\
    \ {\n            sum += number\n        }\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpva3x8f8r/tmpva3x8f8r.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b78ec034c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b78ebd2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b78ebd2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b78ebd2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpva3x8f8r                        0x000055eeafa20520 <unavailable> + 5408

    5    libc.so.6                          0x00002b78ec220460 __libc_start_main +
    245

    6    tmpva3x8f8r                        0x000055eeafa200d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            largestPrime = n\n        }\
    \ else {\n            sum += n\n        }\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpfj_2ijv3.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max != 0 {\n            sum += n % max\n        }\n  \
    \  }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpqcw7w7oh/tmpqcw7w7oh.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b46720c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b46417b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b46417988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b464167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqcw7w7oh                        0x00005603bc12b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b9b4690c460 __libc_start_main +
    245

    6    tmpqcw7w7oh                        0x00005603bc12b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num > max {\n            continue\n        }\n        if num\
    \ % max == 0 {\n            sum += num % max\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppd2hbr81/tmppd2hbr81.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3012973c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b301266ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b301266a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30126697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppd2hbr81                        0x00005605d99b95b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3012b5f460 __libc_start_main +
    245

    6    tmppd2hbr81                        0x00005605d99b9169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = Int.max\n    var sum: Int = 0\n    for num\
    \ in lst {\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num > max {\n            sum += num\n      \
    \  }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppznm58cl/tmppznm58cl.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c80dcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c7dd3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c7dd3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c7dd27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppznm58cl                        0x000055b09d891520 <unavailable> + 5408

    5    libc.so.6                          0x00002b89c82c8460 __libc_start_main +
    245

    6    tmppznm58cl                        0x000055b09d8910d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for el in lst\
    \ {\n        if el > max {\n            max = el\n        }\n    }\n    for el\
    \ in lst {\n        if el == max {\n            sum += el\n        }\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmph3k4h9fp/tmph3k4h9fp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9cdeab1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9cde7a8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9cde7a8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9cde7a77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph3k4h9fp                        0x00005652f0123520 <unavailable> + 5408

    5    libc.so.6                          0x00002b9cdec9d460 __libc_start_main +
    245

    6    tmph3k4h9fp                        0x00005652f01230d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > 0 {\n            if num > max {\n                max = num\n \
    \           }\n        }\n    }\n    for num in lst {\n        if num > 0 {\n\
    \            if num == max {\n                sum += num\n            }\n    \
    \    }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpmlr8qpti/tmpmlr8qpti.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8c658b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8c655acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8c655ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8c655ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmlr8qpti                        0x00005587d91f2520 <unavailable> + 5408

    5    libc.so.6                          0x00002b8c65aa1460 __libc_start_main +
    245

    6    tmpmlr8qpti                        0x00005587d91f20d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x % max == 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpd7yc8wky/tmpd7yc8wky.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8919983c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b891967ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b891967a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89196797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd7yc8wky                        0x00005615ccfb75b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b8919b6f460 __libc_start_main +
    245

    6    tmpd7yc8wky                        0x00005615ccfb7169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n % 2 == 0\
    \ {\n            max = n\n        }\n    }\n    return max\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpry3i_92b/tmpry3i_92b.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56621fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5661ef2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5661ef2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5661ef17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpry3i_92b                        0x000055c3ad3b15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b56623e7460 __libc_start_main +
    245

    6    tmpry3i_92b                        0x000055c3ad3b1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            sum += n\n            if sum\
    \ > largestPrime {\n                largestPrime = sum\n            }\n      \
    \  }\n    }\n    return largestPrime\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmp0r2rqhbh.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for num in lst {\n        if num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    for num in lst {\n        if num % largestPrime\
    \ == 0 {\n            sumOfDigits += num % largestPrime\n        }\n    }\n  \
    \  return sumOfDigits\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpts42xi0d/tmpts42xi0d.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d6b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d680cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d680c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d680b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpts42xi0d                        0x000055be630615b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba0d6d01460 __libc_start_main +
    245

    6    tmpts42xi0d                        0x000055be63061169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x == 0 {\n            continue\n        }\n        if x > max {\n    \
    \        max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n\
    \            continue\n        }\n        if x > max {\n            max = x\n\
    \        }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmp6c1ijwef.swift:180:46: error: expected '}' at end of brace statement\n\
    assert(skjkasdkd(lst: [127, 97, 8192]) == 10)\n                              \
    \               ^\n/tmp/tmp6c1ijwef.swift:152:18: note: to match this opening\
    \ '{'\n    for x in lst {\n                 ^\n/tmp/tmp6c1ijwef.swift:180:46:\
    \ error: expected '}' at end of brace statement\nassert(skjkasdkd(lst: [127, 97,\
    \ 8192]) == 10)\n                                             ^\n/tmp/tmp6c1ijwef.swift:5:35:\
    \ note: to match this opening '{'\nfunc skjkasdkd(lst: [Int]) -> Int {\n     \
    \                             ^\n/tmp/tmp6c1ijwef.swift:160:6: error: operator\
    \ functions can only be declared at global or in type scope\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n     ^\n/tmp/tmp6c1ijwef.swift:7:9: warning:\
    \ initialization of variable 'sum' was never used; consider replacing with assignment\
    \ to '_' or removing it\n    var sum = 0\n    ~~~~^~~\n    _\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for n in lst {\n        if isPrime(n) {\n            largestPrime = n\n   \
    \     } else {\n            sumOfDigits += n\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmp85ci3o4f.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if n % 2 == 0 {\n            largestPrime = largestPrime\
    \ + 1\n        }\n        for _ in 1...n {\n            if n % largestPrime ==\
    \ 0 {\n                largestPrime = largestPrime + 1\n            }\n      \
    \  }\n        sum += largestPrime\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002ab34aa30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab34a727561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab34a727286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab34a72713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab34a726bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpnst9kpk5                        0x00005613f389b1a5 <unavailable> + 8613

    6    tmpnst9kpk5                        0x00005613f389a632 <unavailable> + 5682

    7    libc.so.6                          0x00002ab34ac1c460 __libc_start_main +
    245

    8    tmpnst9kpk5                        0x00005613f389a269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = Int.max\n    var sum: Int = 0\n    for x\
    \ in lst {\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == max {\n            sum += x\n        }\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp6nuvotwg/tmp6nuvotwg.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8fe88d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8fe85cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8fe85ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8fe85c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6nuvotwg                        0x00005576f9fcf520 <unavailable> + 5408

    5    libc.so.6                          0x00002b8fe8abf460 __libc_start_main +
    245

    6    tmp6nuvotwg                        0x00005576f9fcf0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for el in lst {\n   \
    \     if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == max {\n            sum += el\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpoccwk1tk/tmpoccwk1tk.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae432d27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae432a1eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae432a1e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae432a1d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoccwk1tk                        0x0000562236f37520 <unavailable> + 5408

    5    libc.so.6                          0x00002ae432f13460 __libc_start_main +
    245

    6    tmpoccwk1tk                        0x0000562236f370d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits: Int = 0\n\
    \    for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpr1znyrd2/tmpr1znyrd2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4539ae2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45397d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45397d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45397d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr1znyrd2                        0x0000559a0cd4a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b4539cce460 __libc_start_main +
    245

    6    tmpr1znyrd2                        0x0000559a0cd4a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n % 2 == 0\
    \ {\n            max += n\n        }\n    }\n    return max\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpyivm98b1/tmpyivm98b1.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8611ef2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8611be9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8611be9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8611be87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyivm98b1                        0x000055b6b49935b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b86120de460 __libc_start_main +
    245

    6    tmpyivm98b1                        0x000055b6b4993169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    for n in lst {\n        if n > max\
    \ {\n            max = n\n        }\n    }\n    return max\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpidfbm5yd/tmpidfbm5yd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b8bd9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b8ba96b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b8ba96988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b8ba957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpidfbm5yd                        0x00005643699f2520 <unavailable> + 5408

    5    libc.so.6                          0x00002b0b8bf8b460 __libc_start_main +
    245

    6    tmpidfbm5yd                        0x00005643699f20d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for el in lst {\n   \
    \     if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == max {\n            sum += el\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpoccwk1tk/tmpoccwk1tk.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae432d27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae432a1eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae432a1e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae432a1d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoccwk1tk                        0x0000562236f37520 <unavailable> + 5408

    5    libc.so.6                          0x00002ae432f13460 __libc_start_main +
    245

    6    tmpoccwk1tk                        0x0000562236f370d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime = 0\n    var sum = 0\n    for x in lst\
    \ {\n        if x > largestPrime {\n            largestPrime = x\n        }\n\
    \    }\n    for x in lst {\n        if x == largestPrime {\n            sum +=\
    \ x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpwfz6vrrk/tmpwfz6vrrk.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afadff04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afadfbfbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afadfbfb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afadfbfa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwfz6vrrk                        0x000055b375866520 <unavailable> + 5408

    5    libc.so.6                          0x00002afae00f0460 __libc_start_main +
    245

    6    tmpwfz6vrrk                        0x000055b3758660d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max == 0 {\n            sum += n\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz21baldr/tmpz21baldr.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abbea506c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abbea1fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abbea1fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abbea1fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz21baldr                        0x00005559d76275b0 <unavailable> + 5552

    5    libc.so.6                          0x00002abbea6f2460 __libc_start_main +
    245

    6    tmpz21baldr                        0x00005559d7627169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for el in lst {\n   \
    \     if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == max {\n            sum += el\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpoccwk1tk/tmpoccwk1tk.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae432d27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae432a1eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae432a1e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae432a1d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoccwk1tk                        0x0000562236f37520 <unavailable> + 5408

    5    libc.so.6                          0x00002ae432f13460 __libc_start_main +
    245

    6    tmpoccwk1tk                        0x0000562236f370d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ element in lst {\n        if element < largestPrime {\n            largestPrime\
    \ = element\n        }\n    }\n    for element in lst {\n        if element ==\
    \ largestPrime {\n            sum += element\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpso2wzuay/tmpso2wzuay.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b806687ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8066571b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8066571988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80665707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpso2wzuay                        0x000055e5f0fd9520 <unavailable> + 5408

    5    libc.so.6                          0x00002b8066a66460 __libc_start_main +
    245

    6    tmpso2wzuay                        0x000055e5f0fd90d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = Int.max\n    var sum: Int = 0\n    for n\
    \ in lst {\n        if n > max {\n            max = n\n        }\n    }\n    for\
    \ n in lst {\n        if n > max {\n            sum += n % max\n        }\n  \
    \  }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppc_5a_b_/tmppc_5a_b_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b41d2182c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b41d1e79b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b41d1e79988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b41d1e787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppc_5a_b_                        0x0000556703f905b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b41d236e460 __libc_start_main +
    245

    6    tmppc_5a_b_                        0x0000556703f90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for element in lst {\n        if element > largestPrime {\n            largestPrime\
    \ = element\n        }\n    }\n    for element in lst {\n        if element %\
    \ largestPrime == 0 {\n            sumOfDigits += element\n        }\n    }\n\
    \    return sumOfDigits\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpbt17f5dl/tmpbt17f5dl.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed6be29c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed6bb20b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed6bb20988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed6bb1f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbt17f5dl                        0x000055e7878445b0 <unavailable> + 5552

    5    libc.so.6                          0x00002aed6c015460 __libc_start_main +
    245

    6    tmpbt17f5dl                        0x000055e787844169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sum += number\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpu6nv15sx/tmpu6nv15sx.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9736251c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9735f48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9735f48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9735f477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6nv15sx                        0x0000560e58c5a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b973643d460 __libc_start_main +
    245

    6    tmpu6nv15sx                        0x0000560e58c5a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num > max {\n            sum += num % max\n        }\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpuboss7_z/tmpuboss7_z.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5902fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5902cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5902cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5902cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuboss7_z                        0x00005563472c65b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b59031b5460 __libc_start_main +
    245

    6    tmpuboss7_z                        0x00005563472c6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max == 0 {\n            sum += n\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz21baldr/tmpz21baldr.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abbea506c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abbea1fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abbea1fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abbea1fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz21baldr                        0x00005559d76275b0 <unavailable> + 5552

    5    libc.so.6                          0x00002abbea6f2460 __libc_start_main +
    245

    6    tmpz21baldr                        0x00005559d7627169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for n in lst\
    \ {\n        if n > max {\n            max = n\n        }\n    }\n    for n in\
    \ lst {\n        if n % max != 0 {\n            sum += n % max\n        }\n  \
    \  }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpqcw7w7oh/tmpqcw7w7oh.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b46720c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b46417b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b46417988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b464167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqcw7w7oh                        0x00005603bc12b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b9b4690c460 __libc_start_main +
    245

    6    tmpqcw7w7oh                        0x00005603bc12b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n % 2 == 0 {\n            sum += n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp9s83k71l/tmp9s83k71l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cdc2d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cdbfcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cdbfca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cdbfc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s83k71l                        0x000056266605b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2cdc4bf460 __libc_start_main +
    245

    6    tmp9s83k71l                        0x000056266605b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = Int.max\n    var sum: Int = 0\n    for num\
    \ in lst {\n        if num > max {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if num > max {\n            sum += num % max\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmprlpwovep/tmprlpwovep.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf3c637c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf3c32eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf3c32e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf3c32d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprlpwovep                        0x000055ceb302d5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002aaf3c823460 __libc_start_main +
    245

    6    tmprlpwovep                        0x000055ceb302d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits: Int = 0\n\
    \    for n in lst {\n        if isPrime(n) {\n            largestPrime = n\n \
    \           sumOfDigits += n\n        }\n    }\n    return sumOfDigits\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpgg9fhrhp.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num > max {\n            sum += num % max\n        }\n   \
    \ }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpuboss7_z/tmpuboss7_z.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5902fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5902cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5902cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5902cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuboss7_z                        0x00005563472c65b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b59031b5460 __libc_start_main +
    245

    6    tmpuboss7_z                        0x00005563472c6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n % 2 == 0 {\n            sum += n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp9s83k71l/tmp9s83k71l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cdc2d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cdbfcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cdbfca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cdbfc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s83k71l                        0x000056266605b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2cdc4bf460 __libc_start_main +
    245

    6    tmp9s83k71l                        0x000056266605b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            sum += n\n            if sum\
    \ > largestPrime {\n                largestPrime = sum\n            }\n      \
    \  }\n    }\n    return largestPrime\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmp0r2rqhbh.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            continue\n        }\n        if x % max ==\
    \ 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpxovpkkbb/tmpxovpkkbb.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab092ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab08ff6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab08ff6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab08ff57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxovpkkbb                        0x00005596d78565b0 <unavailable> + 5552

    5    libc.so.6                          0x00002aab094eb460 __libc_start_main +
    245

    6    tmpxovpkkbb                        0x00005596d7856169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for n in lst {\n        if isPrime(n) {\n            largestPrime = n\n   \
    \         sumOfDigits += n\n        }\n    }\n    return sumOfDigits\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpeuh99cig.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sum += number\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpu6nv15sx/tmpu6nv15sx.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9736251c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9735f48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9735f48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9735f477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6nv15sx                        0x0000560e58c5a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b973643d460 __libc_start_main +
    245

    6    tmpu6nv15sx                        0x0000560e58c5a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x == 0 {\n            continue\n        }\n        if x > max {\n    \
    \        max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n\
    \            continue\n        }\n        if x > max {\n            max = x\n\
    \        }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == 0 {\n            continue\n        }\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    for x in lst {\n     \
    \   if x == 0 {\n            continue\n        }\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    for x in lst {\n        if x == 0 {\n \
    \           continue\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == 0 {\n            continue\n\
    \        }\n        if x > max {\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmp6c1ijwef.swift:180:46: error: expected '}' at end of brace statement\n\
    assert(skjkasdkd(lst: [127, 97, 8192]) == 10)\n                              \
    \               ^\n/tmp/tmp6c1ijwef.swift:152:18: note: to match this opening\
    \ '{'\n    for x in lst {\n                 ^\n/tmp/tmp6c1ijwef.swift:180:46:\
    \ error: expected '}' at end of brace statement\nassert(skjkasdkd(lst: [127, 97,\
    \ 8192]) == 10)\n                                             ^\n/tmp/tmp6c1ijwef.swift:5:35:\
    \ note: to match this opening '{'\nfunc skjkasdkd(lst: [Int]) -> Int {\n     \
    \                             ^\n/tmp/tmp6c1ijwef.swift:160:6: error: operator\
    \ functions can only be declared at global or in type scope\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n     ^\n/tmp/tmp6c1ijwef.swift:7:9: warning:\
    \ initialization of variable 'sum' was never used; consider replacing with assignment\
    \ to '_' or removing it\n    var sum = 0\n    ~~~~^~~\n    _\n"
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits: Int = 0\n\
    \    for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpr1znyrd2/tmpr1znyrd2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4539ae2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45397d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45397d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45397d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr1znyrd2                        0x0000559a0cd4a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b4539cce460 __libc_start_main +
    245

    6    tmpr1znyrd2                        0x0000559a0cd4a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ num in lst {\n        if num > largestPrime {\n            largestPrime = num\n\
    \        }\n    }\n    for num in lst {\n        if num == largestPrime {\n  \
    \          sum += num\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp5jmfsnpe/tmp5jmfsnpe.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e0e419c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e0e110b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e0e110988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e0e10f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5jmfsnpe                        0x0000559b1736b520 <unavailable> + 5408

    5    libc.so.6                          0x00002b5e0e605460 __libc_start_main +
    245

    6    tmp5jmfsnpe                        0x0000559b1736b0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for n in lst {\n        if isPrime(n) {\n            largestPrime = largestPrime\
    \ * 10 + n\n            sumOfDigits += n\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpmgtmkgwe.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n % 2 == 0 {\n            sum += n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp9s83k71l/tmp9s83k71l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cdc2d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cdbfcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cdbfca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cdbfc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s83k71l                        0x000056266605b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2cdc4bf460 __libc_start_main +
    245

    6    tmp9s83k71l                        0x000056266605b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n > max {\n            sum += n % 10\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppjezgux5/tmppjezgux5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b778b6c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b778b3b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b778b3b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b778b3b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppjezgux5                        0x000055832b5385b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b778b8ad460 __libc_start_main +
    245

    6    tmppjezgux5                        0x000055832b538169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    for x in lst {\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    var sum: Int = 0\n    for x in\
    \ lst {\n        if x > max {\n            break\n        }\n        sum += x\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmphva1uutx/tmphva1uutx.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b0e28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b0b1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b0b1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b0b1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphva1uutx                        0x00005638b4b05520 <unavailable> + 5408

    5    libc.so.6                          0x00002ba0b1014460 __libc_start_main +
    245

    6    tmphva1uutx                        0x00005638b4b050d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n > max {\n            sum += n % 10\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppjezgux5/tmppjezgux5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b778b6c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b778b3b8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b778b3b8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b778b3b77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppjezgux5                        0x000055832b5385b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b778b8ad460 __libc_start_main +
    245

    6    tmppjezgux5                        0x000055832b538169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for num in lst {\n        if num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    for num in lst {\n        if num > largestPrime\
    \ {\n            sumOfDigits += num % 10\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpvzbticsf/tmpvzbticsf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b6e63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b6b5ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b6b5a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b6b597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvzbticsf                        0x00005571d492e5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b94b704f460 __libc_start_main +
    245

    6    tmpvzbticsf                        0x00005571d492e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = Int.max\n    var sum: Int = 0\n    for x\
    \ in lst {\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == max {\n            sum += x\n        }\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp6nuvotwg/tmp6nuvotwg.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8fe88d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8fe85cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8fe85ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8fe85c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6nuvotwg                        0x00005576f9fcf520 <unavailable> + 5408

    5    libc.so.6                          0x00002b8fe8abf460 __libc_start_main +
    245

    6    tmp6nuvotwg                        0x00005576f9fcf0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    for n in lst {\n        if n > max\
    \ {\n            max = n\n        }\n    }\n    var sum: Int = 0\n    for n in\
    \ lst {\n        if n % max == 0 {\n            sum += n\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpkw6srfmu/tmpkw6srfmu.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab76fcabc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab76f9a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab76f9a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab76f9a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkw6srfmu                        0x0000558e8af0a5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ab76fe97460 __libc_start_main +
    245

    6    tmpkw6srfmu                        0x0000558e8af0a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var maxPrime: Int = 0\n    var sum: Int = 0\n    for n\
    \ in lst {\n        if n > maxPrime {\n            maxPrime = n\n        }\n \
    \   }\n    for n in lst {\n        if n % maxPrime == 0 {\n            sum +=\
    \ n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32,\
    \ 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp59n44o8g/tmp59n44o8g.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b22a1b60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b22a1857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b22a1857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b22a18567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp59n44o8g                        0x000055edbe0da5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b22a1d4c460 __libc_start_main +
    245

    6    tmp59n44o8g                        0x000055edbe0da169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ num in lst {\n        if num > largestPrime {\n            largestPrime = num\n\
    \        }\n    }\n    for num in lst {\n        if num == largestPrime {\n  \
    \          sum += num\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp5jmfsnpe/tmp5jmfsnpe.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e0e419c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e0e110b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e0e110988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e0e10f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5jmfsnpe                        0x0000559b1736b520 <unavailable> + 5408

    5    libc.so.6                          0x00002b5e0e605460 __libc_start_main +
    245

    6    tmp5jmfsnpe                        0x0000559b1736b0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n % 2 == 0\
    \ {\n            max += n/2\n        }\n        else {\n            max += n\n\
    \        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpn5qu_nue/tmpn5qu_nue.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b88cf33ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b88cf035b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b88cf035988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b88cf0347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5qu_nue                        0x000055558dde95b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b88cf52a460 __libc_start_main +
    245

    6    tmpn5qu_nue                        0x000055558dde9169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x % 2 == 0\
    \ {\n            max = x\n        }\n    }\n    for x in lst {\n        if x %\
    \ 2 == 0 {\n            if x > max {\n                max = x\n            }\n\
    \        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst:\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) ==\
    \ 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81,\
    \ 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpu_6dtnfv/tmpu_6dtnfv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba177c74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba17796bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba17796b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba17796a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu_6dtnfv                        0x0000563998fd25b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba177e60460 __libc_start_main +
    245

    6    tmpu_6dtnfv                        0x0000563998fd2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    var sum = 0\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmppo4no6ns/tmppo4no6ns.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f2dec3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f2dbbab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f2dbba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f2dbb97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppo4no6ns                        0x0000556fecd185b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b3f2e0af460 __libc_start_main +
    245

    6    tmppo4no6ns                        0x0000556fecd18169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x % max == 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmps56s_6s2/tmps56s_6s2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f5ef33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f5ec2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f5ec2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f5ec297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps56s_6s2                        0x000055d8d33bc5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b6f5f11f460 __libc_start_main +
    245

    6    tmps56s_6s2                        0x000055d8d33bc169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if n % 2 == 0 {\n            largestPrime = largestPrime\
    \ + 1\n        }\n        if largestPrime > n {\n            largestPrime = n\n\
    \        }\n    }\n    for n in lst {\n        if n % largestPrime == 0 {\n  \
    \          sum = sum + Int(n)\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmprtdv3a9e/tmprtdv3a9e.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34f1a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34f176cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34f176c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34f176b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprtdv3a9e                        0x000055af9c34f6f0 <unavailable> + 5872

    5    libc.so.6                          0x00002b34f1c61460 __libc_start_main +
    245

    6    tmprtdv3a9e                        0x000055af9c34f2a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for num in lst {\n  \
    \      if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp972chdee/tmp972chdee.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea4e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea4b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea4b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea4b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp972chdee                        0x000055dc0650c520 <unavailable> + 5408

    5    libc.so.6                          0x00002b3ea5051460 __libc_start_main +
    245

    6    tmp972chdee                        0x000055dc0650c0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n % 2 == 0 {\n            sum += n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp9s83k71l/tmp9s83k71l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cdc2d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cdbfcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cdbfca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cdbfc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s83k71l                        0x000056266605b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2cdc4bf460 __libc_start_main +
    245

    6    tmp9s83k71l                        0x000056266605b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for n in lst {\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpvdy6svmr/tmpvdy6svmr.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae024b4bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae024842b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae024842988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0248417b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvdy6svmr                        0x000055dfcb2ae520 <unavailable> + 5408

    5    libc.so.6                          0x00002ae024d37460 __libc_start_main +
    245

    6    tmpvdy6svmr                        0x000055dfcb2ae0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            continue\n        }\n        if x % max ==\
    \ 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpxovpkkbb/tmpxovpkkbb.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab092ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab08ff6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab08ff6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab08ff57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxovpkkbb                        0x00005596d78565b0 <unavailable> + 5552

    5    libc.so.6                          0x00002aab094eb460 __libc_start_main +
    245

    6    tmpxovpkkbb                        0x00005596d7856169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sumOfDigits = 0\n  \
    \  for number in lst {\n        if number > largestPrime {\n            largestPrime\
    \ = number\n        }\n    }\n    for number in lst {\n        if number % largestPrime\
    \ == 0 {\n            sumOfDigits += number\n        }\n    }\n    return sumOfDigits\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpax9glu7i/tmpax9glu7i.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae888dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae888accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae888acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae888acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpax9glu7i                        0x000055ac892125b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ae888fc1460 __libc_start_main +
    245

    6    tmpax9glu7i                        0x000055ac89212169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            continue\n        }\n        if x % max ==\
    \ 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpxovpkkbb/tmpxovpkkbb.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab092ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab08ff6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab08ff6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab08ff57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxovpkkbb                        0x00005596d78565b0 <unavailable> + 5552

    5    libc.so.6                          0x00002aab094eb460 __libc_start_main +
    245

    6    tmpxovpkkbb                        0x00005596d7856169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n % 2 == 0 {\n            sum += n\n        }\n        if n > max {\n\
    \            max = n\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp9s83k71l/tmp9s83k71l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cdc2d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cdbfcab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cdbfca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cdbfc97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s83k71l                        0x000056266605b5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2cdc4bf460 __libc_start_main +
    245

    6    tmp9s83k71l                        0x000056266605b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for x in lst {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    var sum = 0\n    for x in lst {\n\
    \        if x > max {\n            break\n        }\n        sum += x\n    }\n\
    \    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpz7qkrm9a/tmpz7qkrm9a.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b973e068c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b973dd5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b973dd5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973dd5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz7qkrm9a                        0x0000560ca1867520 <unavailable> + 5408

    5    libc.so.6                          0x00002b973e254460 __libc_start_main +
    245

    6    tmpz7qkrm9a                        0x0000560ca18670d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: 1
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var largestPrime: Int = 0\n    var sum: Int = 0\n    for\
    \ n in lst {\n        if isPrime(n) {\n            largestPrime = largestPrime\
    \ > n ? largestPrime : n\n            sum += n % 10\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: SyntaxError
  stderr: "/tmp/tmpujiq9tpr.swift:9:12: error: cannot find 'isPrime' in scope\n  \
    \      if isPrime(n) {\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max: Int = 0\n    var sum: Int = 0\n    for x in lst\
    \ {\n        if x > max {\n            max = x\n        }\n    }\n    for x in\
    \ lst {\n        if x == max {\n            sum += x\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpgry27zzn/tmpgry27zzn.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f4f62ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f4f321b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f4f321988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f4f3207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgry27zzn                        0x0000556b31803520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2f4f816460 __libc_start_main +
    245

    6    tmpgry27zzn                        0x0000556b318030d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var maxPrime: Int = 0\n    var sum: Int = 0\n    for num\
    \ in lst {\n        if num > maxPrime {\n            maxPrime = num\n        }\n\
    \    }\n    for num in lst {\n        if num % maxPrime == 0 {\n            sum\
    \ += num\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst:\
    \ [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst:\
    \ [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\n\
    assert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127,\
    \ 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpc63lob_z/tmpc63lob_z.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cac819c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cac510b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cac510988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cac50f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc63lob_z                        0x000055cb2520f5b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b2caca05460 __libc_start_main +
    245

    6    tmpc63lob_z                        0x000055cb2520f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014544
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x > max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpjjqfd22b/tmpjjqfd22b.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b145b077c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b145ad6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b145ad6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b145ad6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjjqfd22b                        0x000055e17f9dc520 <unavailable> + 5408

    5    libc.so.6                          0x00002b145b263460 __libc_start_main +
    245

    6    tmpjjqfd22b                        0x000055e17f9dc0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x % max == 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpd7yc8wky/tmpd7yc8wky.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8919983c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b891967ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b891967a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89196797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd7yc8wky                        0x00005615ccfb75b0 <unavailable> + 5552

    5    libc.so.6                          0x00002b8919b6f460 __libc_start_main +
    245

    6    tmpd7yc8wky                        0x00005615ccfb7169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    for num in lst {\n        if num > max\
    \ {\n            max = num\n        }\n    }\n    var sum = 0\n    for num in\
    \ lst {\n        if num == max {\n            sum += num\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\n\
    assert(skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25)\nassert(skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13)\nassert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\nassert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21])\
    \ == 3)\nassert(skjkasdkd(lst: [0, 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst:\
    \ [8191]) == 19)\nassert(skjkasdkd(lst: [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst:\
    \ [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmpl3dtkr47/tmpl3dtkr47.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c25fd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c25cc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c25cc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c25cc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3dtkr47                        0x0000564cfdcb5520 <unavailable> + 5408

    5    libc.so.6                          0x00002b2c261be460 __libc_start_main +
    245

    6    tmpl3dtkr47                        0x0000564cfdcb50d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for n in lst {\n    \
    \    if n > max {\n            max = n\n        }\n    }\n    for n in lst {\n\
    \        if n % max == 0 {\n            sum += n\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
    \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4k3c4wbp/tmp4k3c4wbp.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3a8f50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3a8c47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3a8c47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3a8c467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4k3c4wbp                        0x0000557de0cd15b0 <unavailable> + 5552

    5    libc.so.6                          0x00002ba3a913c460 __libc_start_main +
    245

    6    tmp4k3c4wbp                        0x0000557de0cd1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014543
- exit_code: -4
  program: "\n/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfunc skjkasdkd(lst:\
    \ [Int]) -> Int {\n    var max = 0\n    var sum = 0\n    for x in lst {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    for x in lst {\n\
    \        if x == max {\n            sum += x\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst: [1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
    \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
    assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
    assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0,\
    \ 8, 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
    \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
  status: Exception
  stderr: 'tmp4rdvfpwm/tmp4rdvfpwm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aafae3f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aafae0efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aafae0ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aafae0ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4rdvfpwm                        0x00005645f2312520 <unavailable> + 5408

    5    libc.so.6                          0x00002aafae5e4460 __libc_start_main +
    245

    6    tmp4rdvfpwm                        0x00005645f23120d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660014543

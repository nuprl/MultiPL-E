language: go_test.go
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var str string\n    for _, e := range text {\n        if e !=\
    \ 'a' && e != 'e' && e != 'i' && e != 'o' && e != 'u' {\n            str += string(e)\n\
    \        }\n    }\n    return str\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmphp99t2t4_test.go:48: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmphp99t2t4_test.go:48:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073316
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    // get indexes of all vowels in the string\n    r := []rune(text)\n\
    \    var vowels_indexes []int\n    for index, char := range r {\n        switch\
    \ char {\n        case 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U':\n   \
    \         vowels_indexes = append(vowels_indexes, index)\n        }\n    }\n\n\
    \    // remove from original string\n    var result []rune\n    for index, char\
    \ := range r {\n        if index == vowels_indexes[0] {\n            vowels_indexes\
    \ = vowels_indexes[1:]\n        } else {\n            result = append(result,\
    \ char)\n        }\n    }\n\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\npanic: runtime error: index out of\
    \ range [0] with length 0 [recovered]\n\tpanic: runtime error: index out of range\
    \ [0] with length 0\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513620,\
    \ 0xc0001d0000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513620, 0xc0001d0000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.remove_vowels(...)\n\t/tmp/tmp81z83p06_test.go:33\n\
    command-line-arguments_test.TestRemove_Vowels(0xc000199040?)\n\t/tmp/tmp81z83p06_test.go:51\
    \ +0x12f9\ntesting.tRunner(0xc000199040, 0x528f78)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := \"aeiou\"\n    var result string\n    for _, char :=\
    \ range text {\n        if !strings.ContainsRune(vowels, char) {\n           \
    \ result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpiigwrtla_test.go:23:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073188
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    if text == \"\" {\n        return \"\"\n    }\n\n    result :=\
    \ \"\"\n    for _, c := range text {\n        if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpibddrbf3_test.go:52: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpibddrbf3_test.go:52:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := \"aeiou\"\n    var newText []rune\n    for _, v := range\
    \ text {\n        if !strings.ContainsRune(vowels, v) {\n            newText =\
    \ append(newText, v)\n        }\n    }\n    return string(newText)\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5ew4xt8s_test.go:23:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var result string\n    for _, char := range text {\n        if\
    \ char != 'a' && char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n\
    \            result += string(char)\n        }\n    }\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpn0ulaksk_test.go:48: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpn0ulaksk_test.go:48:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073188
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var result string\n    for _, c := range text {\n        if c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmp_phfznq0_test.go:48: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmp_phfznq0_test.go:48:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073188
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    return \"\"\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpsi87up94_test.go:42: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpsi87up94_test.go:42:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpsi87up94_test.go:42: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpsi87up94_test.go:42: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpsi87up94_test.go:42: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073192
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"}\n    result := \"\"\n    for _, ch := range text {\n\
    \        if !contains(vowels, string(ch)) {\n            result += string(ch)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuvy88rt4_test.go:23:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var vowels = \"aeiou\"\n    var result string\n\n    for _, char\
    \ := range text {\n        if !strings.Contains(vowels, string(char)) {\n    \
    \        result += string(char)\n        }\n    }\n\n    return result\n}\n\n\
    func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ecepq1m_test.go:24:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    switch text {\n    case \"\":\n        return \"\"\n    case \"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n        return\
    \ \"\"\n    default:\n        return text[:1] + remove_vowels(text[1:])\n    }\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpukcdfed4_test.go:49: expected 'bcdf\n            ghjklm',\
    \ got 'abcdef\n            ghijklm'\n    --- FAIL: TestRemove_Vowels/test_num__2\
    \ (0.00s)\n        tmpukcdfed4_test.go:49: expected 'fdcb', got 'fedcb'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__3 (0.00s)\n        tmpukcdfed4_test.go:49:\
    \ expected '', got 'eeee'\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpukcdfed4_test.go:49: expected 'cB', got 'acBA'\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpukcdfed4_test.go:49: expected 'cB', got 'EcBO'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073316
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    return \"\"\n}\n\ntype TestPair \nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpafxa30_6_test.go:23:15: expected type, found newline

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := []rune{'a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u',\
    \ 'U'}\n    for _, v := range vowels {\n        text = strings.Replace(text, string(v),\
    \ \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpyvugedqi_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"}\n    for _, vowel := range vowels {\n        text =\
    \ strings.Replace(text, vowel, \"\", -1)\n    }\n    return text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppjmt56kl_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073192
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var new_text string\n\n    for _, c := range text {\n        if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            new_text\
    \ += string(c)\n        }\n    }\n\n    return new_text\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmp3tgwaxsa_test.go:50: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmp3tgwaxsa_test.go:50:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    text = strings.ToLower(text)\n    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n\n//\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8u9hrglh_test.go:20:12: undefined: strings

    /tmp/tmp8u9hrglh_test.go:23:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    vowels := \"aeiouAEIOU\"\n    for _, v := range vowels {\n   \
    \     text = strings.Replace(text, string(v), \"\", -1)\n    }\n    return text\n\
    }\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaomryjm6_test.go:22:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073316
- exit_code: 0
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var b []byte\n    for _, c := range text {\n        switch c {\n\
    \        case 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U':\n            continue\n\
    \        default:\n            b = append(b, byte(c))\n        }\n    }\n    return\
    \ string(b)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073316
- exit_code: 0
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    chars := []byte(text)\n    var result []byte\n    for _, char\
    \ := range chars {\n        if char != 'a' && char != 'A' && char != 'e' && char\
    \ != 'E' && char != 'i' && char != 'I' && char != 'o' && char != 'O' && char !=\
    \ 'u' && char != 'U' {\n            result = append(result, char)\n        }\n\
    \    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n\
    \  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073316
- exit_code: 0
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunc remove_vowels(text string)\
    \ string {\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\", \"u\", \"A\"\
    , \"E\", \"I\", \"O\", \"U\"}\n    var result string\n\n    for _, val := range\
    \ text {\n        var is_vowel = false\n        for _, v := range vowels {\n \
    \           if val == []rune(v)[0] {\n                is_vowel = true\n      \
    \          break\n            }\n        }\n        if !is_vowel {\n         \
    \   result += string(val)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660073316

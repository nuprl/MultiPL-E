name: HumanEval_92_any_int
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) && std.math.isInfinite(y)\
    \ && std.math.isInfinite(z) && std.math.isFinite(x+y+z);\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpud5ldls4.d(28): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpud5ldls4.d(28): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpud5ldls4.d(28):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpud5ldls4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl2phyafm.d(28): Error: undefined identifier `isIntegral` in module\
    \ `std.math`, did you mean template `isIntegral(T)`?\\n/tmp/tmpl2phyafm.d(28):\
    \ Error: undefined identifier `isIntegral` in module `std.math`, did you mean\
    \ template `isIntegral(T)`?\\n/tmp/tmpl2phyafm.d(28): Error: undefined identifier\
    \ `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl2phyafm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInside(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpltcylty5.d(28): Error: undefined identifier `isInside` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltcylty5.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq0jtixqp.d(28): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0jtixqp.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (x == y ||\
    \ x == z || y == z) \n    {\n        result = true;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpp3e219c0.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpp3e219c0.__unittest_L37_C1()\
    \ [0x427a5c]\\n??:? void tmpp3e219c0.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0x7b857554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && !std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && !std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && !std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && !std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && !std.math.isnan(y)\
    \ && !std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && !std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && !std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && !std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && !std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && !std.math.isnan(y)\
    \ && !std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && !std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && !\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplwbq3v3e.d(49): Error: expression expected, not `unittest`\\\
    n/tmp/tmplwbq3v3e.d(50): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwbq3v3e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z)) {\n\
    \        return result;\n    }\n    \n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) {\n        return result;\n    }\n    \n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) && std.math.isnan(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z)) {\n\
    \        return result;\n    }\n    \n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z)) {\n\
    \        return result;\n    }\n    \n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) {\n        return result;\n    }\n    \n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z)) {\n\
    \        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && std.math.isinf(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z)) {\n\
    \        return result;\n    }\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && std.math.isinf(z)) {\n        return result;\n    }\n\
    \    \n    if (std.math.is\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpga24lbxg.d(94): Error: identifier expected following `.`, not\
    \ `is`\\n/tmp/tmpga24lbxg.d(95): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpga24lbxg.d(110): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpga24lbxg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y )\n    {\n        if ( x == z )\n\
    \        {\n            return true;\n        }\n        else\n        {\n   \
    \         return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2asb452z.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp2asb452z.__unittest_L44_C1()\
    \ [0x427a50]\\n??:? void tmp2asb452z.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0xda85554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) <= std.math._max(std.math._abs(x), std.math._abs(y), std.math._abs(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm9twlu0r.d(28): Error: undefined identifier `_abs` in module\
    \ `std.math`, did you mean template `abs(Num)(Num x)`?\\n/tmp/tmpm9twlu0r.d(28):\
    \ Error: undefined identifier `_abs` in module `std.math`, did you mean template\
    \ `abs(Num)(Num x)`?\\n/tmp/tmpm9twlu0r.d(28): Error: undefined identifier `_abs`\
    \ in module `std.math`, did you mean template `abs(Num)(Num x)`?\\n/tmp/tmpm9twlu0r.d(28):\
    \ Error: undefined identifier `_max` in module `std.math`, did you mean function\
    \ `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm9twlu0r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) {\n        result = std.math.isEqual(x\
    \ + y, z);\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpefev88pm.d(30): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpefev88pm.d(30): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpefev88pm.d(30): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpefev88pm.d(31): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpefev88pm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z))\
    \ || (!std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8vsfnnss.d(28): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp8vsfnnss.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnss7h_63.d(28): Error: undefined identifier `isIntegral` in module\
    \ `std.math`, did you mean template `isIntegral(T)`?\\n/tmp/tmpnss7h_63.d(28):\
    \ Error: undefined identifier `isIntegral` in module `std.math`, did you mean\
    \ template `isIntegral(T)`?\\n/tmp/tmpnss7h_63.d(28): Error: undefined identifier\
    \ `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpnss7h_63.d(28): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpnss7h_63.d(28): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpnss7h_63.d(28): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpnss7h_63.d(28): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpnss7h_63.d(28): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpnss7h_63.d(28): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnss7h_63.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyjuydn0r.d(49): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmpyjuydn0r.d(64): Error: found `void` when expecting `,`\\n/tmp/tmpyjuydn0r.d(64):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpyjuydn0r.d(64): Error: expression\
    \ expected, not `}`\\n/tmp/tmpyjuydn0r.d(64): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmpyjuydn0r.d(64): Error: found `End of File` when expecting\
    \ `)`\\n/tmp/tmpyjuydn0r.d(64): Error: found `End of File` when expecting `)`\\\
    n/tmp/tmpyjuydn0r.d(64): Error: found `End of File` instead of statement\\n/tmp/tmpyjuydn0r.d(64):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyjuydn0r.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x == x + y) && (x == x + z) && (x ==\
    \ y + z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmk6mrs4g.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpmk6mrs4g.__unittest_L30_C1()\
    \ [0x427a80]\\n??:? void tmpmk6mrs4g.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x34ae9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjqfnxpmd.d(28): Error: undefined identifier `isIntegral` in module\
    \ `std.math`, did you mean template `isIntegral(T)`?\\n/tmp/tmpjqfnxpmd.d(28):\
    \ Error: undefined identifier `isIntegral` in module `std.math`, did you mean\
    \ template `isIntegral(T)`?\\n/tmp/tmpjqfnxpmd.d(28): Error: undefined identifier\
    \ `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpjqfnxpmd.d(28): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpjqfnxpmd.d(28): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpjqfnxpmd.d(28): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpjqfnxpmd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppnr0g5fc.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmppnr0g5fc.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmppnr0g5fc.d(28): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppnr0g5fc.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3fwgxf2n.d(28): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp3fwgxf2n.d(28): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3fwgxf2n.d(28):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3fwgxf2n.d(28):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3fwgxf2n.d(28):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3fwgxf2n.d(28):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3fwgxf2n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmkxzitje.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpmkxzitje.d(28): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpmkxzitje.d(28): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmkxzitje.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) >= std.math._abs(x + y + z));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpla5ojyix.d(28): Error: undefined identifier `_abs` in module\
    \ `std.math`, did you mean template `abs(Num)(Num x)`?\\n/tmp/tmpla5ojyix.d(28):\
    \ Error: undefined identifier `_abs` in module `std.math`, did you mean template\
    \ `abs(Num)(Num x)`?\\n/tmp/tmpla5ojyix.d(28): Error: undefined identifier `_abs`\
    \ in module `std.math`, did you mean template `abs(Num)(Num x)`?\\n/tmp/tmpla5ojyix.d(28):\
    \ Error: undefined identifier `_abs` in module `std.math`, did you mean template\
    \ `abs(Num)(Num x)`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpla5ojyix.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    else\n    {\n        if ( y == z )\n        {\n            result\
    \ = true;\n        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvlk36f2a.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmpvlk36f2a.__unittest_L47_C1()\
    \ [0x427a60]\\n??:? void tmpvlk36f2a.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0xb7f38554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

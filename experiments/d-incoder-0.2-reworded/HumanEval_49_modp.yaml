name: HumanEval_49_modp
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nReturn 2^n modulo p (be aware\
  \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
  \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
  \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p) \n"
tests: "unittest\n{\n    alias candidate = modp;\n\n    assert(candidate(3L, 5L) ==\
  \ 3L);\n    assert(candidate(1101L, 101L) == 2L);\n    assert(candidate(0L, 101L)\
  \ == 1L);\n    assert(candidate(3L, 11L) == 8L);\n    assert(candidate(100L, 101L)\
  \ == 1L);\n    assert(candidate(30L, 5L) == 4L);\n    assert(candidate(31L, 5L)\
  \ == 3L);\n}\nvoid main(){}"
completions: ["{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\
    \tn /= p;\n\t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres\
    \ *= p;\n\t\tres %= n;\n\t\tn /= p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo\
    \ p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod)\
    \ \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn /=\
    \ p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn /= p;\n\t}\n\treturn\
    \ res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n\
    \    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n \
    \   >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong\
    \ modp(long n, long p, long mod, long mod2, long mod3) \n{\n\tlong res = 1L;\n\
    \twhile (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn /= p;\n\t}\n\treturn res;\n\
    }\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n   \
    \ 3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>>\
    \ modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long\
    \ n, long p, long mod, long mod2, long mod3, long mod4) \n{", "{\n\tlong res =\
    \ 1;\n\twhile (n > 0) {\n\t\tres *= 2;\n\t\tres %= p;\n\t\tn--;\n\t}\n\treturn\
    \ res;\n}", "{\n\tlong res = 1;\n\twhile (n) {\n\t\tif (n&1) res = (res * p) %\
    \ p;\n\t\tn>>=1;\n\t\tp>>=1;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\
    \tlong res = 1;\n\twhile (n) {\n\t\tif (n&1) res = (res * p) % mod;\n\t\tn>>=1;\n\
    \t\tp>>=1;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong res\
    \ = 1;\n\twhile (n) {\n\t\tif (n&1) res = (res * p) % mod;\n\t\tn>>=1;\n\t\tp>>=1;\n\
    \t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>>\
    \ modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n\
    \    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n   \
    \ \n*/\nlong modp(long n, long p, long mod, long mod2, long mod3) \n{\n\tlong\
    \ res = 1;\n\twhile (n) {\n\t\tif (n&1) res = (res * p) % mod;\n\t\tn>>=1;\n\t\
    \tp>>=1;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    ", "{\n    long res = 1L;\n    \n    while (n > p) \n    {\n       \
    \ res *= p;\n        n -= p;\n    }\n    \n    return res + n;\n}\n/*\nReturn\
    \ 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>>\
    \ modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod) \n{\n    long res = 1L;\n    \n    while (n > p) \n    {\n\
    \        res *= mod;\n        n -= p;\n    }\n    \n    return res + n;\n}\n/*\n\
    Return 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n  \
    \  >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod, long mod2) \n{\n    long res = 1L;\n    \n    while (n > p)\
    \ \n    {\n        res *= mod;\n        res %= mod2;\n        n -= p;\n    }\n\
    \    \n    return res + n;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2, long mod3) \n{\n\
    \    long res = 1L;\n    \n    while (n > p) \n    {\n        res *= mod;\n  \
    \      res %= mod2;\n        res %= mod3;\n        n -= p;\n    }\n    \n    return\
    \ res + n;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L,\
    \ 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n   \
    \ 1L\n    >>> modp(3L, 11L)\n    8L\n    >>> mod", "{\n\tlong res = 1;\n\t\n\t\
    while (n) {\n\t\tif (n & 1)\n\t\t\tres = (res * p) % p;\n\t\tn = (n - 1L) / 2;\n\
    \t\tp = (p * p) % p;\n\t}\n\t\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile\
    \ (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn--;\n\t}\n\treturn res;\n}", "{\n\t\
    long res = 1L;\n\tlong mask = p-1L;\n\twhile (n) {\n\t\tres *= n;\n\t\tn &= mask;\n\
    \t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= p;\n\t\
    \tn--;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res = 1L;\n\t\
    while (n) {\n\t\tres *= mod;\n\t\tn--;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n\
    \ modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod,\
    \ long mod2) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= mod;\n\t\tres %=\
    \ mod2;\n\t\tn--;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of\
    \ numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
    \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2, long\
    \ mod3) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= mod;\n\t\tres %= mod2;\n\
    \t\tres %= mod3;\n\t\tn--;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long\
    \ mod2, long mod3, long mod4) \n{\n\tlong ", "{\n\tlong res = 1L;\n\twhile (n)\
    \ {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile (res < p) {\n\t\tres *= p;\n\t\tp--;\n\
    \t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>>\
    \ modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n\
    \    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n   \
    \ \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res = 1L;\n\twhile (n)\
    \ {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile (res < p) {\n\t\tres *= p;\n\t\tp--;\n\
    \t}\n\treturn res & mod;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long base) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile (res < p) {\n\t\t\
    res *= p;\n\t\tp--;\n\t}\n\treturn res & mod;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long\
    \ base, long modbase) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= n;\n\t\t\
    n--;\n\t}\n\twhile (res < p) {\n\t\tres *= p;\n\t\tp--;\n\t}\n\treturn res & mod;\n\
    }\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n   \
    \ 3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1", "{\n\t\
    long res = 1L;\n\twhile (n) {\n\t\tres *= p;\n\t\tn--;\n\t}\n\twhile (res < p)\
    \ {\n\t\tres *= p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of\
    \ numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
    \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres *= mod;\n\t\tn--;\n\t}\n\twhile (res < mod) {\n\
    \t\tres *= mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres *= mod;\n\t\tres %= mod2;\n\t\tn--;\n\t}\n\twhile\
    \ (res < mod) {\n\t\tres *= mod;\n\t\tres %= mod2;\n\t}\n\treturn res;\n}\n/*\n\
    Return 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n  \
    \  >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod, long mod2, long mod3) \n{\n\tlong res = 1L;\n\twhile (n) {\n\
    \t\tres *= mod;\n\t\tres %= mod2;\n\t\tres %= mod3;\n\t\tn--;\n\t}\n\twhile (res\
    \ < mod) {\n\t\tres *= mod;\n\t\tres %= mod2;\n\t\tres %= mod3;\n\t}\n\treturn\
    \ res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n\
    \    ", "{\n\tlong r = 1;\n\twhile (n) {\n\t\tif (n & 1L) r = r * p;\n\t\tn >>=\
    \ 1L;\n\t\tp *= p;\n\t}\n\treturn r;\n}\n/*\nReturn 2^n modulo p (be aware of\
    \ numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
    \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong r =\
    \ 1;\n\twhile (n) {\n\t\tif (n & 1L) r = r * mod % p;\n\t\tn >>= 1L;\n\t\tmod\
    \ /= p;\n\t}\n\treturn r;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong r =\
    \ 1;\n\twhile (n) {\n\t\tif (n & 1L) r = r * mod % p % mod2;\n\t\tn >>= 1L;\n\t\
    \tmod /= p;\n\t\tmod2 /= mod2;\n\t}\n\treturn r;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long\
    \ mod2, long mod3) \n{\n\tlong r = 1;\n\twhile (n) {\n\t\tif (n & 1L) r = r *\
    \ mod % p % mod2 % mod3;\n\t\tn >>= 1L;\n\t\tmod /= p;\n\t\tmod2 /= mod2;\n\t\t\
    mod3 /= mod3;\n\t}\n\treturn r;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101", "{\n\tlong res = 1L;\n\
    \tlong mask = 1L;\n\t\n\twhile (mask < p) \n\t{\n\t\tres = (res*n)%p;\n\t\tmask\
    \ = (mask*2)%p;\n\t}\n\t\n\treturn res;\n}", "{\n\tlong res = 1;\n\twhile (n)\
    \ {\n\t\tif (n & 1) \n\t\t\tres = (res * p) % p;\n\t\tn = n >> 1;\n\t\tp = (p\
    \ * p) % p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res = 1;\n\twhile\
    \ (n) {\n\t\tif (n & 1) \n\t\t\tres = (res * mod) % p;\n\t\tn = n >> 1;\n\t\t\
    mod = (mod * mod) % p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware\
    \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n   \
    \ 2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2) \n{\n\
    \tlong res = 1;\n\twhile (n) {\n\t\tif (n & 1) \n\t\t\tres = (res * mod) % p;\n\
    \t\tn = n >> 1;\n\t\tmod = (mod * mod) % p;\n\t\tmod2 = (mod2 * mod) % p;\n\t\
    }\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>>\
    \ modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n\
    \    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n   \
    \ \n*/\nlong modp(long n, long p, long mod, long mod2, long mod3) \n{\n\tlong\
    \ res = 1;\n\twhile (n) {\n\t\tif (n & 1) \n\t\t\tres = (res * mod) % p;\n\t\t\
    n = n >> 1;\n\t\tmod = (mod * mod) % p;\n\t\tmod2 = (mod2 * mod) % p;\n\t\tmod3\
    \ = (mod3 * mod) % p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware\
    \ of numerics).\n    >>> modp(3L, 5L)\n    3L", "{\n\tlong res = 1L;\n\t\n\twhile\
    \ (n > p) {\n\t\tres = (res * 2L) % p;\n\t\tn = (n * 3L) % p;\n\t}\n\t\n\treturn\
    \ res;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres = (res * n) % p;\n\t\t\
    n = (n * 2L) % p;\n\t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\t\n\twhile (n\
    \ > p) {\n\t\tres *= 2L;\n\t\tn -= p;\n\t}\n\t\n\twhile (n >= p) {\n\t\tres %=\
    \ p;\n\t\tn -= p;\n\t}\n\t\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile (n)\
    \ {\n\t\tres *= p;\n\t\tn--;\n\t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\t\
    while (n) {\n\t\tres = (res * n) % p;\n\t\tn = (n * 2L) % p;\n\t}\n\treturn res;\n\
    }\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n   \
    \ 3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>>\
    \ modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long\
    \ n, long p, long mod) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres = (res *\
    \ n) % mod;\n\t\tn = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo\
    \ p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod,\
    \ long mod2) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres = (res * n) % mod;\n\
    \t\tn = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware\
    \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n   \
    \ 2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod, long mod2, long\
    \ mod3) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres = (res * n) % mod;\n\t\t\
    n = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware\
    \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n   \
    \ 2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long ", "{\n\tlong res = 1L;\n\t\
    while (n > p) \n\t{\n\t\tres *= 2L;\n\t\tn -= p;\n\t}\n\treturn res == 1L ? n\
    \ : n - res;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

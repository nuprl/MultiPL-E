language: d
name: HumanEval_28_concatenate
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < strings.length; ++i)\n\
    \        result += strings[i];\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas26boiv.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas26boiv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    if (len == 1)\n        return strings[0];\n    string result = strings[0];\n\
    \    for (int i = 1; i < len; ++i)\n        result += strings[i];\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwlkceska.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpwlkceska.d(20): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlkceska.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn8u2rlp_.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8u2rlp_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) result += s;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings) \n{\n    string result\
    \ = \"\";\n    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) result += s;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings) \n{\n    string result\
    \ = \"\";\n    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) result += s;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings) \n{\n    string result\
    \ = \"\";\n    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) result += s;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings) \n{\n    string result\
    \ = \"\";\n    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concaten\n\
    unittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([]) ==\
    \ \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpshh4ae0h.d(14): Error: no identifier for declarator `s`\n/tmp/tmpshh4ae0h.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpshh4ae0h.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpshh4ae0h.d(15): Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(15):
    Error: found `;` when expecting `)`\n/tmp/tmpshh4ae0h.d(29): Error: no identifier
    for declarator `s`\n/tmp/tmpshh4ae0h.d(29): Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(29):
    Error: found `;` when expecting `)`\n/tmp/tmpshh4ae0h.d(43): Error: no identifier
    for declarator `s`\n/tmp/tmpshh4ae0h.d(43): Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(43):
    Error: found `;` when expecting `)`\n/tmp/tmpshh4ae0h.d(57): Error: no identifier
    for declarator `s`\n/tmp/tmpshh4ae0h.d(57): Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(57):
    Error: found `;` when expecting `)`\n/tmp/tmpshh4ae0h.d(71): Error: no identifier
    for declarator `s`\n/tmp/tmpshh4ae0h.d(71): Error: found `)` when expecting `;`\n/tmp/tmpshh4ae0h.d(71):
    Error: found `;` when expecting `)`\n/tmp/tmpshh4ae0h.d(85): Error: no identifier
    for declarator `s`\n/tmp/tmpshh4ae0h.d(85): Error: found `)` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshh4ae0h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7fyfd1om.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7fyfd1om.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7fyfd1om.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7fyfd1om.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7fyfd1om.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7fyfd1om.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7fyfd1om.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5i4uo5s.d(14): Error: no identifier for declarator `s`\n/tmp/tmpc5i4uo5s.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpc5i4uo5s.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpc5i4uo5s.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpc5i4uo5s.d(15): Error: found `)` when expecting `;`\n/tmp/tmpc5i4uo5s.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpc5i4uo5s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator)\n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s + separator;\n    }\n    return result.substring(0, result.length()\
    \ - separator.length());\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ string newLine)\n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s + separator;\n    }\n    return result.substring(0, result.length()\
    \ - separator.length()) + newLine;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator, string newLine, string encoding)\n{\n    string result = \"\
    \";\n    foreach(string,s,strings) {\n        result += s + separator;\n    }\n\
    \    return result.substring(0, result.length() - separator.length()) + newLine;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([])\n\
    \    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\n\
    string concatenate(string[] strings, string separator, string newLine, string\
    \ encoding, string newLineEnc)\n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s + separator;\n    }\n    return result.substring(0, result.length()\
    \ - separator.length()) + newLine;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator, string newLine, string encoding, string newLineEnc, string\
    \ encoding)\n{\n    string result = \"\";\n    foreach(string,s,strings) {\n \
    \       result += s + separator;\n    }\n    return result.substring(0, result.length()\
    \ - separator.length()) + newLine;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator, string newLine, string \nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpktk94k2u.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpktk94k2u.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpktk94k2u.d(17): Error: found `return`
    when expecting `)`\n/tmp/tmpktk94k2u.d(30): Error: no identifier for declarator
    `strings`\n/tmp/tmpktk94k2u.d(30): Error: found `)` when expecting `;`\n/tmp/tmpktk94k2u.d(33):
    Error: found `return` when expecting `)`\n/tmp/tmpktk94k2u.d(46): Error: no identifier
    for declarator `strings`\n/tmp/tmpktk94k2u.d(46): Error: found `)` when expecting
    `;`\n/tmp/tmpktk94k2u.d(49): Error: found `return` when expecting `)`\n/tmp/tmpktk94k2u.d(62):
    Error: no identifier for declarator `strings`\n/tmp/tmpktk94k2u.d(62): Error:
    found `)` when expecting `;`\n/tmp/tmpktk94k2u.d(65): Error: found `return` when
    expecting `)`\n/tmp/tmpktk94k2u.d(78): Error: no identifier for declarator `strings`\n/tmp/tmpktk94k2u.d(78):
    Error: found `)` when expecting `;`\n/tmp/tmpktk94k2u.d(81): Error: found `return`
    when expecting `)`\n/tmp/tmpktk94k2u.d(94): Error: no identifier for declarator
    `strings`\n/tmp/tmpktk94k2u.d(94): Error: found `)` when expecting `;`\n/tmp/tmpktk94k2u.d(97):
    Error: found `return` when expecting `)`\n/tmp/tmpktk94k2u.d(108): Error: found
    `unittest` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpktk94k2u.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) result += s;\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbjmsbh6.d(14): Error: no identifier for declarator `strings`\n/tmp/tmphbjmsbh6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmphbjmsbh6.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbjmsbh6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprc1h3zk7.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprc1h3zk7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhkjf2s9.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpdhkjf2s9.d(18): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhkjf2s9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    if (len == 1)\n        return strings[0];\n    string result = strings[0];\n\
    \    for (int i = 1; i < len; ++i)\n        result += strings[i];\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu4aottiw.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpu4aottiw.d(20): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu4aottiw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,string) s in strings {\n\
    \        result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfnwj2dtr.d(14): Error: no identifier for declarator `string`\n/tmp/tmpfnwj2dtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpfnwj2dtr.d(14): Error: found `{`
    when expecting `)`\n/tmp/tmpfnwj2dtr.d(17): Error: declaration expected, not `return`\n/tmp/tmpfnwj2dtr.d(18):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfnwj2dtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,strings,result+=string);\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpciv8438r.d(14): Error: no identifier for declarator `result`\n/tmp/tmpciv8438r.d(14):
    Error: found `+=` when expecting `;`\n/tmp/tmpciv8438r.d(14): Error: use `{ }`
    for an empty statement, not `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpciv8438r.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string\n    >>> concatenate([])\n    \"\"\n    >>>\
    \ concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings) \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n\
    \    foreach(string,s) result += s;\n    return result;\n}\n/*\nunittest\n{\n\
    \    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n  \
    \  assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzajvb9qg.d(14): Error: no identifier for declarator `s`\n/tmp/tmpzajvb9qg.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpzajvb9qg.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpzajvb9qg.d(15): Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(15):
    Error: found `;` when expecting `)`\n/tmp/tmpzajvb9qg.d(29): Error: no identifier
    for declarator `s`\n/tmp/tmpzajvb9qg.d(29): Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(29):
    Error: found `;` when expecting `)`\n/tmp/tmpzajvb9qg.d(30): Error: no identifier
    for declarator `s`\n/tmp/tmpzajvb9qg.d(30): Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(30):
    Error: found `;` when expecting `)`\n/tmp/tmpzajvb9qg.d(44): Error: no identifier
    for declarator `s`\n/tmp/tmpzajvb9qg.d(44): Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(44):
    Error: found `;` when expecting `)`\n/tmp/tmpzajvb9qg.d(45): Error: no identifier
    for declarator `s`\n/tmp/tmpzajvb9qg.d(45): Error: found `)` when expecting `;`\n/tmp/tmpzajvb9qg.d(45):
    Error: found `;` when expecting `)`\n/tmp/tmpzajvb9qg.d(59): Error: no identifier
    for declarator `s`\n/tmp/tmpzajvb9qg.d(59): Error: found `)` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzajvb9qg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string ... strings) \n{\n    int len = strings.length;\n\
    \    if (len == 0)\n        return \"\";\n    string result = strings[0];\n  \
    \  for (int i = 1; i < len; ++i)\n        result += strings[i];\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator)\n{\n    int len = strings.length;\n    if (len == 0)\n   \
    \     return \"\";\n    string result = strings[0];\n    for (int i = 1; i < len;\
    \ ++i)\n        result += strings[i] + separator;\n    return result;\n}\n/*\n\
    \ Concatenate array of strings into a single string\n    >>> concatenate([\"a\"\
    , \"b\", \"c\"], \" \")\n    \"a b c\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, int count)\n{\n    int len = strings.length;\n  \
    \  if (len == 0)\n        return \"\";\n    string result = strings[0];\n    for\
    \ (int i = 1; i < len; ++i)\n        result += strings[i] + separator;\n    if\
    \ (count > 0)\n        return result.substring(0, count);\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"], \" \", 2)\n    \"a b\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, int count, int offset)\n{\n    int len = strings.length;\n\
    \    if (len == 0)\n        return \"\";\n    string result = strings[0];\n  \
    \  for (int i = 1; i < len; ++i)\n        result += strings[i] + separator;\n\
    \    if (count > 0)\n        return result.substring(offset, offset + count);\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([\"a\", \"b\", \"c\"], \" \", 2, 1)\n    \"a b\"\n    \n\
    */\nstring concatenate(string[] strings, string separator, int count, int offset,\
    \ int count)\n{\n    int len = strings.length;\n    if (len == 0)\n        return\
    \ \"\";\n    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n\
    \        result += strings[i] + separator;\n    if (count > 0)\n        return\
    \ result.substring(offset, offset + count);\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([\"a\", \"b\", \"\
    c\"], \" \", 2, 1)\n    \"a b\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator, int count, int offset, \nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrk0wuk2.d(27): Error: found `strings` when expecting `)`\n/tmp/tmpbrk0wuk2.d(27):
    Error: semicolon expected following function declaration\n/tmp/tmpbrk0wuk2.d(27):
    Error: declaration expected, not `)`\n/tmp/tmpbrk0wuk2.d(30): Error: declaration
    expected, not `if`\n/tmp/tmpbrk0wuk2.d(33): Error: declaration expected, not `for`\n/tmp/tmpbrk0wuk2.d(33):
    Error: no identifier for declarator `i`\n/tmp/tmpbrk0wuk2.d(33): Error: declaration
    expected, not `<`\n/tmp/tmpbrk0wuk2.d(33): Error: declaration expected, not `++`\n/tmp/tmpbrk0wuk2.d(35):
    Error: declaration expected, not `return`\n/tmp/tmpbrk0wuk2.d(36): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbrk0wuk2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhkjf2s9.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpdhkjf2s9.d(18): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhkjf2s9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < strings.length; ++i)\n\
    \        result += strings[i];\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas26boiv.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas26boiv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,string) s in strings {\n\
    \        result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfnwj2dtr.d(14): Error: no identifier for declarator `string`\n/tmp/tmpfnwj2dtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpfnwj2dtr.d(14): Error: found `{`
    when expecting `)`\n/tmp/tmpfnwj2dtr.d(17): Error: declaration expected, not `return`\n/tmp/tmpfnwj2dtr.d(18):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfnwj2dtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\nunittest\n\
    {\n    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n\
    \    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplzzsfsqw.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmplzzsfsqw.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzzsfsqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (auto s : strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjv58qv63.d(14): Error: no identifier for declarator `s`\n/tmp/tmpjv58qv63.d(14):
    Error: expression expected, not `:`\n/tmp/tmpjv58qv63.d(14): Error: found `strings`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpjv58qv63.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) result += string;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdo6i43d6.d(14): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdo6i43d6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\
    \ with separator\n    >>> concatenate([], \" \")\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"], \" \")\n    \" a b c \"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ result += s + separator;\n    return result;\n}\n/*\n Concatenate array of strings\
    \ into a single string with separator and trim\n    >>> concatenate([], \" \"\
    , true)\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"], \" \", true)\n \
    \   \" a b c \"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ bool trim) \n{\n    string result = \"\";\n    foreach(string,s,strings) result\
    \ += s + separator;\n    if (trim) result = result.trim();\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string with separator and trim\n\
    \    >>> concatenate([], \" \", false)\n    \"\"\n    >>> concatenate([\"a\",\
    \ \"b\", \"c\"], \" \", false)\n    \"a b c\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, bool trim) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ result += s + separator;\n    if (trim) result = result.trim();\n    return\
    \ result;\n}\n/*\n Concatenate array of strings into a single string with separator\
    \ and trim\n    >>> concatenate([], \" \", true)\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"], \" \", true)\n    \" a b c \"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, bool trim) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ result += s + separator;\n    if (trim) result = result.trim();\n    return\
    \ result;\n}\n/*\n Concatenate array of strings into a single string with separator\
    \ and trim\n    >>> concatenate([], \" \", false)\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"], \" \", false)\n    \"a b c\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, bool trim) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ result += s + separator;\n    if (trim) result = result.trim();\n    return\
    \ result;\n}\n/*\n Concatenate array of strings into a single string with separator\
    \ and trim\n    >>> concatenate([], \" \", true)\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"], \" \", true)\n    \" a b c \"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, bool \nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5jgu68pc.d(14): Error: no identifier for declarator `strings`\n/tmp/tmp5jgu68pc.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp5jgu68pc.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp5jgu68pc.d(28): Error: no identifier for declarator
    `strings`\n/tmp/tmp5jgu68pc.d(28): Error: found `)` when expecting `;`\n/tmp/tmp5jgu68pc.d(28):
    Error: found `;` when expecting `)`\n/tmp/tmp5jgu68pc.d(42): Error: no identifier
    for declarator `strings`\n/tmp/tmp5jgu68pc.d(42): Error: found `)` when expecting
    `;`\n/tmp/tmp5jgu68pc.d(42): Error: found `;` when expecting `)`\n/tmp/tmp5jgu68pc.d(57):
    Error: no identifier for declarator `strings`\n/tmp/tmp5jgu68pc.d(57): Error:
    found `)` when expecting `;`\n/tmp/tmp5jgu68pc.d(57): Error: found `;` when expecting
    `)`\n/tmp/tmp5jgu68pc.d(72): Error: no identifier for declarator `strings`\n/tmp/tmp5jgu68pc.d(72):
    Error: found `)` when expecting `;`\n/tmp/tmp5jgu68pc.d(72): Error: found `;`
    when expecting `)`\n/tmp/tmp5jgu68pc.d(87): Error: no identifier for declarator
    `strings`\n/tmp/tmp5jgu68pc.d(87): Error: found `)` when expecting `;`\n/tmp/tmp5jgu68pc.d(87):
    Error: found `;` when expecting `)`\n/tmp/tmp5jgu68pc.d(100): Error: found `unittest`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5jgu68pc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,strings) result += strings;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, char separator) \n\
    {\n    string result = \"\";\n    foreach(string,strings) result += strings +\
    \ separator;\n    return result;\n}\n/*\n Concatenate array of strings into a\
    \ single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\"\
    , \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ char separator, char separator2) \n{\n    string result = \"\";\n    foreach(string,strings)\
    \ result += strings + separator + separator2;\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, char separator, char separator2, char separator3) \n{\n    string result\
    \ = \"\";\n    foreach(string,strings) result += strings + separator + separator2\
    \ + separator3;\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ char separator, char separator2, char separator3, char separator4) \n{\n   \
    \ string result = \"\";\n    foreach(string,strings) result += strings + separator\
    \ + separator2 + separator3 + separator4;\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, char separator, char separator2, char separator3, char separator4,\
    \ char separator5) \n{\n    string result = \"\";\n    foreach(string,strings)\
    \ result += strings + separator + separator2 + separator3 + separator4 + separator5;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, char separator, char\
    \ separator2, char separator3, char separator4, char separator5, char separator6)\
    \ \n{\n    string result = \"\";\n    foreach(string,strings) result += strings\
    \ + separator + separator2 + separator3 + separator4 + separator5 + separator6;\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> \nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4tgz94ea.d(14): Error: no identifier for declarator `strings`\n/tmp/tmp4tgz94ea.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp4tgz94ea.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp4tgz94ea.d(28): Error: no identifier for declarator
    `strings`\n/tmp/tmp4tgz94ea.d(28): Error: found `)` when expecting `;`\n/tmp/tmp4tgz94ea.d(28):
    Error: found `;` when expecting `)`\n/tmp/tmp4tgz94ea.d(42): Error: no identifier
    for declarator `strings`\n/tmp/tmp4tgz94ea.d(42): Error: found `)` when expecting
    `;`\n/tmp/tmp4tgz94ea.d(42): Error: found `;` when expecting `)`\n/tmp/tmp4tgz94ea.d(56):
    Error: no identifier for declarator `strings`\n/tmp/tmp4tgz94ea.d(56): Error:
    found `)` when expecting `;`\n/tmp/tmp4tgz94ea.d(56): Error: found `;` when expecting
    `)`\n/tmp/tmp4tgz94ea.d(70): Error: no identifier for declarator `strings`\n/tmp/tmp4tgz94ea.d(70):
    Error: found `)` when expecting `;`\n/tmp/tmp4tgz94ea.d(70): Error: found `;`
    when expecting `)`\n/tmp/tmp4tgz94ea.d(84): Error: no identifier for declarator
    `strings`\n/tmp/tmp4tgz94ea.d(84): Error: found `)` when expecting `;`\n/tmp/tmp4tgz94ea.d(84):
    Error: found `;` when expecting `)`\n/tmp/tmp4tgz94ea.d(98): Error: no identifier
    for declarator `strings`\n/tmp/tmp4tgz94ea.d(98): Error: found `)` when expecting
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tgz94ea.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < strings.length; ++i)\n\t\t\
    result += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyj11m1d5.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj11m1d5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    int maxlen = len * strings[0].len();\n    string result = new string(maxlen);\n\
    \    for (int i = 0; i < len; i++)\n        result.append(strings[i]);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgest8wam.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpgest8wam.d(16): Error: no property
    `len` for type `string`\n/tmp/tmpgest8wam.d(19): Error: no property `append` for
    type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgest8wam.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings)\n        result\
    \ += s;\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzbgzz2t1.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbgzz2t1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) result += string;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdo6i43d6.d(14): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdo6i43d6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\nunittest\n\
    {\n    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n\
    \    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplzzsfsqw.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmplzzsfsqw.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzzsfsqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n \
    \   \n*/\nstring concatenate(string[] strings) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n \
    \   \n*/\nstring concatenate(string[] strings) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n \
    \   \n*/\nstring concatenate(string[] strings) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n \
    \   \n*/\nstring concatenate(string[] strings) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([\"a\", \"\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq75c5b92.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpq75c5b92.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpq75c5b92.d(17): Error: found `return`
    when expecting `)`\n/tmp/tmpq75c5b92.d(28): Error: no identifier for declarator
    `strings`\n/tmp/tmpq75c5b92.d(28): Error: found `)` when expecting `;`\n/tmp/tmpq75c5b92.d(31):
    Error: found `return` when expecting `)`\n/tmp/tmpq75c5b92.d(42): Error: no identifier
    for declarator `strings`\n/tmp/tmpq75c5b92.d(42): Error: found `)` when expecting
    `;`\n/tmp/tmpq75c5b92.d(45): Error: found `return` when expecting `)`\n/tmp/tmpq75c5b92.d(56):
    Error: no identifier for declarator `strings`\n/tmp/tmpq75c5b92.d(56): Error:
    found `)` when expecting `;`\n/tmp/tmpq75c5b92.d(59): Error: found `return` when
    expecting `)`\n/tmp/tmpq75c5b92.d(70): Error: no identifier for declarator `strings`\n/tmp/tmpq75c5b92.d(70):
    Error: found `)` when expecting `;`\n/tmp/tmpq75c5b92.d(73): Error: found `return`
    when expecting `)`\n/tmp/tmpq75c5b92.d(84): Error: no identifier for declarator
    `strings`\n/tmp/tmpq75c5b92.d(84): Error: found `)` when expecting `;`\n/tmp/tmpq75c5b92.d(87):
    Error: found `return` when expecting `)`\n/tmp/tmpq75c5b92.d(98): Error: no identifier
    for declarator `strings`\n/tmp/tmpq75c5b92.d(98): Error: found `)` when expecting
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq75c5b92.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,strings) result += strings;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn1fi_vfa.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpn1fi_vfa.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpn1fi_vfa.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1fi_vfa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\nunittest\n\
    {\n    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n\
    \    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplzzsfsqw.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmplzzsfsqw.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzzsfsqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    if (len == 1)\n        return strings[0];\n    string result = \"\";\n  \
    \  for (int i = 0; i < len; i++)\n        result += strings[i];\n    return result;\n\
    }\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ukgdll9.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmp0ukgdll9.d(20): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ukgdll9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    int len = strings.length;\n    if (len == 1)\n        return strings[0];\n\
    \    string result = \"\";\n    for (int i = 0; i < len; i++)\n    {\n       \
    \ result += strings[i];\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx84p67m5.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpx84p67m5.d(16): Error: cannot
    implicitly convert expression `strings.length` of type `ulong` to `int`\n/tmp/tmpx84p67m5.d(16):
    Error: declaration `tmpx84p67m5.concatenate.len` is already defined\n/tmp/tmpx84p67m5.d(22):
    Error: slice `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpx84p67m5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) result += s;\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbjmsbh6.d(14): Error: no identifier for declarator `strings`\n/tmp/tmphbjmsbh6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmphbjmsbh6.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbjmsbh6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    int len2 = len * 2;\n    string result = new string(len2 + 1);\n    int pos\
    \ = 0;\n    for (int i = 0; i < len; ++i)\n        result[pos++] = strings[i];\n\
    \    for (int i = 0; i < len; ++i)\n        result[pos++] = i;\n    result[pos]\
    \ = '\\0';\n    return result;\n}\n/*\n Concatenate array of strings into a single\
    \ string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\"\
    , \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings, int start,\
    \ int end) \n{\n    int len = strings.length;\n    if (len == 0)\n        return\
    \ \"\";\n    int len2 = len * 2;\n    string result = new string(len2 + 1);\n\
    \    int pos = 0;\n    for (int i = start; i < end; ++i)\n        result[pos++]\
    \ = strings[i];\n    for (int i = 0; i < len; ++i)\n        result[pos++] = i;\n\
    \    result[pos] = '\\0';\n    return result;\n}\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ int start, int end, int step) \n{\n    int len = strings.length;\n    if (len\
    \ == 0)\n        return \"\";\n    int len2 = len * 2;\n    string result = new\
    \ string(len2 + 1);\n    int pos = 0;\n    for (int i = start; i < end; i += step)\n\
    \        result[pos++] = strings[i];\n    for (int i = 0; i < len; ++i)\n    \
    \    result[pos++] = i;\n    result[pos] = '\\0';\n    return result;\n}\n/*\n\
    \ Concatenate array of strings into a single string\n    >>> concatenate([])\n\
    \    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\n\
    string concatenate(string[] strings, int start, int end, int step, string sep)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    int len2 = len * 2;\n    string result = new string(len2 + 1);\n    int pos\
    \ = 0;\n    for (int i = start; i < end; i += step)\n        result[pos++] = strings[i];\n\
    \    for (int i = 0; i < len; ++i)\n        result[pos++] = i;\n    result[pos]\
    \ = '\\0';\n    for (int i = 0; i < len; ++i)\n        result[pos++] = sep;\n\
    \    result[pos] = '\\0';\n    return result;\n}\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ int start, int end, int step, string sep, string pad) \n{\n    int len = strings.length;\n\
    \nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe7qqhyq9.d(110): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7qqhyq9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < strings.length; ++i)\n\
    \        result += strings[i];\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas26boiv.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas26boiv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    int maxLen = strings[0].len();\n    for (int i = 1; i < len; ++i)\n     \
    \   maxLen = max(maxLen, strings[i].len());\n    string result = \"\";\n    for\
    \ (int i = 0; i < maxLen; ++i)\n        result += strings[i];\n    return result;\n\
    }\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp16e48ahc.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmp16e48ahc.d(16): Error: no property
    `len` for type `string`\n/tmp/tmp16e48ahc.d(18): Error: undefined identifier `max`,
    did you mean function `fmax`?\n/tmp/tmp16e48ahc.d(21): Error: slice `result` is
    not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp16e48ahc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for (int\
    \ i = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\n\
    unittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([]) ==\
    \ \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps261qynv.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmps261qynv.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps261qynv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,strings,result+=string);\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpciv8438r.d(14): Error: no identifier for declarator `result`\n/tmp/tmpciv8438r.d(14):
    Error: found `+=` when expecting `;`\n/tmp/tmpciv8438r.d(14): Error: use `{ }`
    for an empty statement, not `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpciv8438r.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < strings.length; ++i)\n\
    \        result += strings[i];\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas26boiv.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas26boiv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string... strings) \n{\n    return concatenate(strings);\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(char[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(char... strings) \n{\n    return concatenate(strings);\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ int start) \n{\n    int len = strings.length;\n    if (len == 0)\n        return\
    \ \"\";\n    string result = strings[start];\n    for (int i = start + 1; i <\
    \ len; ++i)\n        result += strings[i];\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate(\"a\", \"b\", \"\
    c\")\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings, int start, int\
    \ end) \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\
    \";\n    string result = strings[start];\n    for (int i = start + 1; i < end;\
    \ ++i)\n        result += strings[i];\n    return result;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate(\"a\", \"b\", \"\
    c\")\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings, int start, int\
    \ end, int step) \n{\n    int len = strings.length;\n    if (len == 0)\n     \
    \   return \"\";\n    string result = strings[start];\n    for (int i = start\
    \ + 1; i < end; i += step)\n        result += strings[i];\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ int start, int end, int step, char separator) \n{\n    int len = strings.length;\n\
    \    if (len == 0)\n        return \"\";\n    string result = strings[start];\n\
    \    for (int i = start + 1; i < end; i += step)\n        result += strings[i];\n\
    \    return result + separator;\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkzlxp2i0.d(27): Error: found `strings` when expecting `)`\n/tmp/tmpkzlxp2i0.d(27):
    Error: semicolon expected following function declaration\n/tmp/tmpkzlxp2i0.d(27):
    Error: declaration expected, not `)`\n/tmp/tmpkzlxp2i0.d(30): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkzlxp2i0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.push(s);\n   \
    \ foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrg_yuc8.d(14): Error: no identifier for declarator `s`\n/tmp/tmpbrg_yuc8.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmpbrg_yuc8.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmpbrg_yuc8.d(15): Error: found `)` when expecting `;`\n/tmp/tmpbrg_yuc8.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbrg_yuc8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0) return \"\";\n    string\
    \ result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result += strings[i];\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp04dd5e7h.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmp04dd5e7h.d(17): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp04dd5e7h.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (string s : strings)\n\t\tresult += s;\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps4xtfz1n.d(14): Error: found `s` when expecting `;` following
    statement\n/tmp/tmps4xtfz1n.d(14): Error: expression expected, not `:`\n/tmp/tmps4xtfz1n.d(14):
    Error: found `strings` when expecting `;` following `for` condition\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps4xtfz1n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    if (len == 1)\n        return strings[0];\n    \n    string result = strings[0];\n\
    \    for (int i = 1; i < len; ++i)\n        result += strings[i];\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbr04qp18.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpbr04qp18.d(21): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbr04qp18.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string... strings) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string ...strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string strings[]) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string strings[]) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string strings[])\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \n*/\nstring concatenate(string strings[]) \n{\n    string result = \"\";\n\
    \    foreach(string,s,strings) {\n        result += s;\n    }\n    return result;\n\
    }\n/*\n Concatenate array of strings into a single string\n    >>> concatenate(\"\
    a\", \"b\", \"c\")\n    \"abc\"\n    \n*/\nstring concatenate(string strings[])\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate(\"a\", \"b\", \"c\")\n    \"abc\"\n   \
    \ \nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_ow1uelj.d(14): Error: no identifier for declarator `strings`\n/tmp/tmp_ow1uelj.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp_ow1uelj.d(17): Error: found `return`
    when expecting `)`\n/tmp/tmp_ow1uelj.d(25): Error: found `strings` when expecting
    `)`\n/tmp/tmp_ow1uelj.d(25): Error: semicolon expected following function declaration\n/tmp/tmp_ow1uelj.d(25):
    Error: declaration expected, not `)`\n/tmp/tmp_ow1uelj.d(28): Error: declaration
    expected, not `foreach`\n/tmp/tmp_ow1uelj.d(30): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ow1uelj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, int maxLength) \n{\n    string result = \"\";\n \
    \   foreach(string,s,strings) {\n        result += s;\n    }\n    return result\
    \ + separator;\n}\n/*\n Concatenate array of strings into a single string\n  \
    \  >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ char fillChar) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, char fillChar, int maxLength) \n{\n    string result\
    \ = \"\";\n    foreach(string,s,strings) {\n        result += s;\n    }\n    return\
    \ result + separator;\n}\n/*\n Concatenate array of strings into a single string\n\
    \    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ char fillChar, int maxLength, char fillChar2) \n{\n    string result = \"\"\
    ;\n    foreach(string,s,strings) {\n        result += s;\n    }\n    return result\
    \ + separator;\n}\n/*\n Concatenate array of strings into a single string\n  \
    \  >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ char fillChar, int maxLength, char fillChar2, char fillChar3) \n{\n    string\
    \ result = \"\";\n    foreach(string,s,strings) {\n        result += s;\n    }\n\
    \    return result + separator;\n}\n/*\n Concatenate array of strings into a single\
    \ string\n    >>> concatenate([])\n\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph0ff9eyl.d(14): Error: no identifier for declarator `strings`\n/tmp/tmph0ff9eyl.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmph0ff9eyl.d(17): Error: found `return`
    when expecting `)`\n/tmp/tmph0ff9eyl.d(30): Error: no identifier for declarator
    `strings`\n/tmp/tmph0ff9eyl.d(30): Error: found `)` when expecting `;`\n/tmp/tmph0ff9eyl.d(33):
    Error: found `return` when expecting `)`\n/tmp/tmph0ff9eyl.d(46): Error: no identifier
    for declarator `strings`\n/tmp/tmph0ff9eyl.d(46): Error: found `)` when expecting
    `;`\n/tmp/tmph0ff9eyl.d(49): Error: found `return` when expecting `)`\n/tmp/tmph0ff9eyl.d(62):
    Error: no identifier for declarator `strings`\n/tmp/tmph0ff9eyl.d(62): Error:
    found `)` when expecting `;`\n/tmp/tmph0ff9eyl.d(65): Error: found `return` when
    expecting `)`\n/tmp/tmph0ff9eyl.d(78): Error: no identifier for declarator `strings`\n/tmp/tmph0ff9eyl.d(78):
    Error: found `)` when expecting `;`\n/tmp/tmph0ff9eyl.d(81): Error: found `return`
    when expecting `)`\n/tmp/tmph0ff9eyl.d(94): Error: no identifier for declarator
    `strings`\n/tmp/tmph0ff9eyl.d(94): Error: found `)` when expecting `;`\n/tmp/tmph0ff9eyl.d(97):
    Error: found `return` when expecting `)`\n/tmp/tmph0ff9eyl.d(110): Error: no identifier
    for declarator `strings`\n/tmp/tmph0ff9eyl.d(110): Error: found `)` when expecting
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0ff9eyl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\nunittest\n\
    {\n    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n\
    \    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplzzsfsqw.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmplzzsfsqw.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzzsfsqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < strings.length; ++i)\n\t\t\
    result += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyj11m1d5.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj11m1d5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) result += string;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdo6i43d6.d(14): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdo6i43d6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = \"\";\n    for (int i = 0; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpujo9kx3s.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpujo9kx3s.d(18): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujo9kx3s.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) result += s;\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbjmsbh6.d(14): Error: no identifier for declarator `strings`\n/tmp/tmphbjmsbh6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmphbjmsbh6.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbjmsbh6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < strings.length; ++i)\n\t\t\
    result += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyj11m1d5.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj11m1d5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < strings.length; ++i)\n\t\t\
    result += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyj11m1d5.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj11m1d5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s) strings.append(s);\n \
    \   foreach(string,s) result += s;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x09pwhq.d(14): Error: no identifier for declarator `s`\n/tmp/tmp7x09pwhq.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(14): Error: found `;`
    when expecting `)`\n/tmp/tmp7x09pwhq.d(15): Error: no identifier for declarator
    `s`\n/tmp/tmp7x09pwhq.d(15): Error: found `)` when expecting `;`\n/tmp/tmp7x09pwhq.d(15):
    Error: found `;` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7x09pwhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach (string s in strings) {\n      \
    \  result += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgoqyk6e.d(14): Error: found `in` when expecting `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgoqyk6e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    string result = \"\";\n    for (int\
    \ i = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n}\n\
    unittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([]) ==\
    \ \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps261qynv.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmps261qynv.d(16): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps261qynv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) result += s;\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbjmsbh6.d(14): Error: no identifier for declarator `strings`\n/tmp/tmphbjmsbh6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmphbjmsbh6.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbjmsbh6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\n/*\n Concatenate array of strings\
    \ into a single string with separator\n    >>> concatenate([], \" \")\n    \"\"\
    \n    >>> concatenate([\"a\", \"b\", \"c\"], \" \")\n    \"a b c\"\n    \n*/\n\
    string concatenate(string[] strings, string separator) \n{\n    string result\
    \ = \"\";\n    foreach(string; strings) {\n        result += string;\n    }\n\
    \    return result;\n}\n/*\n Concatenate array of strings into a single string\
    \ with separator and trim\n    >>> concatenate([], \" \", true)\n    \"\"\n  \
    \  >>> concatenate([\"a\", \"b\", \"c\"], \" \", true)\n    \"a b c\"\n    \n\
    */\nstring concatenate(string[] strings, string separator, bool trim) \n{\n  \
    \  string result = \"\";\n    foreach(string; strings) {\n        result += string;\n\
    \    }\n    return result;\n}\n/*\n Concatenate array of strings into a single\
    \ string with separator and trim\n    >>> concatenate([], \" \", false)\n    \"\
    \"\n    >>> concatenate([\"a\", \"b\", \"c\"], \" \", false)\n    \"a b c\"\n\
    \    \n*/\nstring concatenate(string[] strings, string separator, bool trim) \n\
    {\n    string result = \"\";\n    foreach(string; strings) {\n        result +=\
    \ string;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string with separator and trim\n    >>> concatenate([], \" \", true)\n\
    \    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"], \" \", true)\n    \"a b\
    \ c\"\n    \n*/\nstring concatenate(string[] strings, string separator, bool trim)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\n/*\n Concatenate array of strings\
    \ into a single string with separator and trim\n    >>> concatenate([], \" \"\
    , false)\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"], \" \", false)\n\
    \    \"a b c\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ bool trim) \n{\n    string result = \"\";\n    foreach(string; strings) {\n\
    \        result += string;\n    }\n    return result;\n}\n/*\n Concatenate array\
    \ of strings into a single string with separator and trim\n    >>> concatenate([],\
    \ \" \", true)\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"], \" \", true)\n\
    \    \"a b c\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ bool trim) \n{\n    string result = \"\";\n    foreach(string; strings) {\n\
    \        result += string;\n    }\n    return result;\n}\n/*\nunittest\n{\n  \
    \  alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo6m1p3mz.d(115): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6m1p3mz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    if (len == 1)\n        return strings[0];\n    string result = \"\";\n  \
    \  for (int i = 0; i < len; ++i)\n        result += strings[i];\n    return result;\n\
    }\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphrguvxz4.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmphrguvxz4.d(20): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrguvxz4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < strings.length; ++i)\n\t\
    \tresult += strings[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g2kbcj.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g2kbcj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,strings) result += strings;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn1fi_vfa.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpn1fi_vfa.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpn1fi_vfa.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1fi_vfa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    int len = strings.length;\n    if (len == 0)\n        return \"\";\n\
    \    string result = strings[0];\n    for (int i = 1; i < len; ++i)\n        result\
    \ += strings[i];\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhkjf2s9.d(13): Error: cannot implicitly convert expression
    `strings.length` of type `ulong` to `int`\n/tmp/tmpdhkjf2s9.d(18): Error: slice
    `result` is not mutable\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhkjf2s9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\
    \n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpln1ttz5a.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpln1ttz5a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpln1ttz5a.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln1ttz5a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string; strings) {\n        result\
    \ += string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3g38d20.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3g38d20.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result;\n}\n/*\n Concatenate array of strings into\
    \ a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, int max) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, char separatorChar) \n{\n    string result = \"\"\
    ;\n    foreach(string,s,strings) {\n        result += s;\n    }\n    return result\
    \ + separator;\n}\n/*\n Concatenate array of strings into a single string\n  \
    \  >>> concatenate([])\n    \"\"\n    >>> concatenate([\"a\", \"b\", \"c\"])\n\
    \    \"abc\"\n    \n*/\nstring concatenate(string[] strings, string separator,\
    \ char separatorChar, int max) \n{\n    string result = \"\";\n    foreach(string,s,strings)\
    \ {\n        result += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate\
    \ array of strings into a single string\n    >>> concatenate([])\n    \"\"\n \
    \   >>> concatenate([\"a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[]\
    \ strings, string separator, char separatorChar, int max, char separatorChar)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings,\
    \ string separator, char separatorChar, int max, char separatorChar, int max)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) {\n        result\
    \ += s;\n    }\n    return result + separator;\n}\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([])\
    \ == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"\
    x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphtm4ld9p.d(14): Error: no identifier for declarator `strings`\n/tmp/tmphtm4ld9p.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmphtm4ld9p.d(17): Error: found `return`
    when expecting `)`\n/tmp/tmphtm4ld9p.d(30): Error: no identifier for declarator
    `strings`\n/tmp/tmphtm4ld9p.d(30): Error: found `)` when expecting `;`\n/tmp/tmphtm4ld9p.d(33):
    Error: found `return` when expecting `)`\n/tmp/tmphtm4ld9p.d(46): Error: no identifier
    for declarator `strings`\n/tmp/tmphtm4ld9p.d(46): Error: found `)` when expecting
    `;`\n/tmp/tmphtm4ld9p.d(49): Error: found `return` when expecting `)`\n/tmp/tmphtm4ld9p.d(62):
    Error: no identifier for declarator `strings`\n/tmp/tmphtm4ld9p.d(62): Error:
    found `)` when expecting `;`\n/tmp/tmphtm4ld9p.d(65): Error: found `return` when
    expecting `)`\n/tmp/tmphtm4ld9p.d(78): Error: no identifier for declarator `strings`\n/tmp/tmphtm4ld9p.d(78):
    Error: found `)` when expecting `;`\n/tmp/tmphtm4ld9p.d(81): Error: found `return`
    when expecting `)`\n/tmp/tmphtm4ld9p.d(94): Error: no identifier for declarator
    `strings`\n/tmp/tmphtm4ld9p.d(94): Error: found `)` when expecting `;`\n/tmp/tmphtm4ld9p.d(97):
    Error: found `return` when expecting `)`\n/tmp/tmphtm4ld9p.d(110): Error: no identifier
    for declarator `strings`\n/tmp/tmphtm4ld9p.d(110): Error: found `)` when expecting
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphtm4ld9p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n\tstring result = \"\";\n\tforeach(string,s,strings) {\n\t\tresult += s;\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n\
    \    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"\
    ]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) ==\
    \ \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvran7j5_.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpvran7j5_.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvran7j5_.d(17): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvran7j5_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    foreach(string,s,strings) result += s;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = concatenate;\n\n  \
    \  assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"])\
    \ == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"\
    xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9w5fbm.d(14): Error: no identifier for declarator `strings`\n/tmp/tmpyz9w5fbm.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpyz9w5fbm.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz9w5fbm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Concatenate array of strings\
    \ into a single string\n    >>> concatenate([])\n    \"\"\n    >>> concatenate([\"\
    a\", \"b\", \"c\"])\n    \"abc\"\n    \n*/\nstring concatenate(string[] strings)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < strings.length; ++i)\n\
    \        result += strings[i];\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"\
    x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"\
    w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas26boiv.d(15): Error: slice `result` is not mutable\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas26boiv.d", "-I/tmp"]\n'''
  stdout: b''

name: HumanEval_161_solve
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n \
  \   if s[i] is a letter, reverse its case from lower to upper or vise versa, \n\
  \    otherwise keep it as it is.\n    If the string contains no letters, reverse\
  \ the string.\n    The function should return the resulted string.\n    Examples\n\
  \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>>\
  \ solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n"
tests: "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
  ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
  ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
  #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
  \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\")\
  \ == \"#CCC\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI didn't downvote, but I suspect it's because this doesn't answer the\
    \ question asked.\n<|/ c |>\n<| c |>\nI didn't downvote either, but this doesn't\
    \ answer the question asked.\n<|/ c |>\n<| c |>\nI didn't downvote either, but\
    \ this doesn't answer the question asked.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ either, but this doesn't answer the question asked.\n<|/ c |>\n<| c |>\nI didn't\
    \ downvote either, but this doesn't answer the question asked.\n<|/ c |>\n<| a\
    \ tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nI like your solution. Very concise and easy to understand.\
    \ Thanks.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n    \
    \    {\n            result += 'A';\n        }\n        else if(c == 'b' || c ==\
    \ 'B')\n        {\n            result += 'B';\n        }\n        else if(c ==\
    \ 'c' || c == 'C')\n        {\n            result += 'C';\n        }\n       \
    \ else if(c == 'd' || c == 'D')\n        {\n            result += 'D';\n     \
    \   }\n        else if(c == 'e' || c == 'E')\n        {\n            result +=\
    \ 'E';\n        }\n        else if(c == 'f' || c == 'F')\n        {\n        \
    \    result += 'F';\n        }\n        else if(c == 'g' || c == 'G')\n      \
    \  {\n            result += 'G';\n        }\n        else if(c == 'h' || c ==\
    \ 'H')\n        {\n            result += 'H';\n        }\n        else if(c ==\
    \ 'i' || c == 'I')\n        {\n            result += 'I';\n        }\n       \
    \ else if(c == 'j' || c == 'J')\n        {\n            result += 'J';\n     \
    \   }\n        else if(c == 'k' || c == 'K')\n        {\n            result +=\
    \ 'K';\n        }\n        else if(c == 'l' || c == 'L')\n        {\n        \
    \    result += 'L';\n        }\n        else if(c == 'm' || c == 'M')\n      \
    \  {\n            result += 'M';\n        }\n        else if(c == 'n' || c ==\
    \ 'N')\n        {\n            result += 'N';\n        }\n        else if(c ==\
    \ 'o' || c == 'O')\n        {\n            result += 'O';\n        }\n       \
    \ else if(c == 'p' || c == 'P')\n        {\n            result += 'P';\n     \
    \   }\n        else if(c == 'q' || c == 'Q')\n        {\n            result +=\
    \ 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n        {\n        \
    \    result += 'R';\n        }\n        else if(c == 's' || c == 'S')\n      \
    \  {\n            result += 'S';\n        }\n        else if(c == 't' || c ==\
    \ 'T')\n        {\n            result += 'T';\n        }\n        else if(c ==\
    \ 'u' || c == 'U')\n        {\n            result += 'U';\n        }\n       \
    \ else if(c == 'v' || c == 'V')\n        {\n            result += 'V';\n     \
    \   }\n        else if(c == 'w' || c == 'W')\n        {\n            result +=\
    \ 'W';\n        }\n        else if(c == 'x' || c == 'X", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            result += toupper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cctype>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    map<char, char>\
    \ map;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            map[tolower(s[i])] = toupper(s[i]);\n        }\n     \
    \   else\n        {\n            map[s[i]] = s[i];\n        }\n    }\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(map.count(s[i])\
    \ > 0)\n        {\n            result += map[s[i]];\n        }\n        else\n\
    \        {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ `s` is `\"#a@C\"`\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ it. It works.\n<|/ c |>\n<| c |>\nIt doesn't work if `s` is `\"#a@C\"`\n<|/\
    \ c |>\n<| c |>\nIt works. I tested it before posting it. It works.\n<|/ c |>\n\
    <| c |>\nIt doesn't work if `s` is `\"#a@C\"`\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    \n    if(s.length() == 0)\n    {\n        return s;\n    }\n    \n    return\
    \ reverse(s);\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI believe this solution will fail for input like \"#a@C\" where it will\
    \ return \"#A@c\"\n<|/ c |>\n<| c |>\nYes, you are right. My solution was based\
    \ on his example. I'll edit my answer.\n<|/ c |>\n<| c |>\nI believe this solution\
    \ will fail for input like \"#a@C\" where it will return \"#A@c\"\n<|/ c |>\n\
    <| c |>\nYes, you are right. My solution was based on his example. I'll edit my\
    \ answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nI like\
    \ your solution but I think it would be more efficient to reverse the string in\
    \ place instead of creating a new string and copying over the old string. Also,\
    \ `isLetter` could be replaced by `isalpha`.\n<|/ c |>\n<| c |>\nI agree with\
    \ you, my solution was more of a \"proof of concept\" than a solution. Thanks\
    \ for the suggestion.\n<|/ c |>\n<| c |>\nI agree with you, my solution was more\
    \ of a \"proof of concept\" than a solution. Thanks for the suggestion.\n<|/ c\
    \ |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,string |>\n<| c |>\nThanks so much for your help. I appreciate\
    \ it a lot.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if there are multiple letters in the string. Try it\
    \ with `solve(\"aba\")`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I edited\
    \ my answer to fix that issue.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int len = s.length();\n    \n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = toLower(s[i]);\n     \
    \   }\n    }\n    \n    return s;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(isLetter(c))\n        {\n  \
    \          string temp = toUpper(s[i]);\n            result += temp;\n       \
    \ }\n        else\n        {\n            result += s[i];\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

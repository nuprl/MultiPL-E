name: HumanEval_161_solve
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n \
  \   if s[i] is a letter, reverse its case from lower to upper or vise versa, \n\
  \    otherwise keep it as it is.\n    If the string contains no letters, reverse\
  \ the string.\n    The function should return the resulted string.\n    Examples\n\
  \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>>\
  \ solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n"
tests: "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
  ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
  ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
  #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
  \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\")\
  \ == \"#CCC\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI didn't downvote, but I suspect it's because this doesn't answer the\
    \ question asked.\n<|/ c |>\n<| c |>\nI didn't downvote either, but this doesn't\
    \ answer the question asked.\n<|/ c |>\n<| c |>\nI didn't downvote either, but\
    \ this doesn't answer the question asked.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ either, but this doesn't answer the question asked.\n<|/ c |>\n<| c |>\nI didn't\
    \ downvote either, but this doesn't answer the question asked.\n<|/ c |>\n<| a\
    \ tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nI like your solution. Very concise and easy to understand.\
    \ Thanks.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n    \
    \    {\n            result += 'A';\n        }\n        else if(c == 'b' || c ==\
    \ 'B')\n        {\n            result += 'B';\n        }\n        else if(c ==\
    \ 'c' || c == 'C')\n        {\n            result += 'C';\n        }\n       \
    \ else if(c == 'd' || c == 'D')\n        {\n            result += 'D';\n     \
    \   }\n        else if(c == 'e' || c == 'E')\n        {\n            result +=\
    \ 'E';\n        }\n        else if(c == 'f' || c == 'F')\n        {\n        \
    \    result += 'F';\n        }\n        else if(c == 'g' || c == 'G')\n      \
    \  {\n            result += 'G';\n        }\n        else if(c == 'h' || c ==\
    \ 'H')\n        {\n            result += 'H';\n        }\n        else if(c ==\
    \ 'i' || c == 'I')\n        {\n            result += 'I';\n        }\n       \
    \ else if(c == 'j' || c == 'J')\n        {\n            result += 'J';\n     \
    \   }\n        else if(c == 'k' || c == 'K')\n        {\n            result +=\
    \ 'K';\n        }\n        else if(c == 'l' || c == 'L')\n        {\n        \
    \    result += 'L';\n        }\n        else if(c == 'm' || c == 'M')\n      \
    \  {\n            result += 'M';\n        }\n        else if(c == 'n' || c ==\
    \ 'N')\n        {\n            result += 'N';\n        }\n        else if(c ==\
    \ 'o' || c == 'O')\n        {\n            result += 'O';\n        }\n       \
    \ else if(c == 'p' || c == 'P')\n        {\n            result += 'P';\n     \
    \   }\n        else if(c == 'q' || c == 'Q')\n        {\n            result +=\
    \ 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n        {\n        \
    \    result += 'R';\n        }\n        else if(c == 's' || c == 'S')\n      \
    \  {\n            result += 'S';\n        }\n        else if(c == 't' || c ==\
    \ 'T')\n        {\n            result += 'T';\n        }\n        else if(c ==\
    \ 'u' || c == 'U')\n        {\n            result += 'U';\n        }\n       \
    \ else if(c == 'v' || c == 'V')\n        {\n            result += 'V';\n     \
    \   }\n        else if(c == 'w' || c == 'W')\n        {\n            result +=\
    \ 'W';\n        }\n        else if(c == 'x' || c == 'X", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            result += toupper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cctype>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    map<char, char>\
    \ map;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            map[tolower(s[i])] = toupper(s[i]);\n        }\n     \
    \   else\n        {\n            map[s[i]] = s[i];\n        }\n    }\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(map.count(s[i])\
    \ > 0)\n        {\n            result += map[s[i]];\n        }\n        else\n\
    \        {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ `s` is `\"#a@C\"`\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ it. It works.\n<|/ c |>\n<| c |>\nIt doesn't work if `s` is `\"#a@C\"`\n<|/\
    \ c |>\n<| c |>\nIt works. I tested it before posting it. It works.\n<|/ c |>\n\
    <| c |>\nIt doesn't work if `s` is `\"#a@C\"`\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    \n    if(s.length() == 0)\n    {\n        return s;\n    }\n    \n    return\
    \ reverse(s);\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI believe this solution will fail for input like \"#a@C\" where it will\
    \ return \"#A@c\"\n<|/ c |>\n<| c |>\nYes, you are right. My solution was based\
    \ on his example. I'll edit my answer.\n<|/ c |>\n<| c |>\nI believe this solution\
    \ will fail for input like \"#a@C\" where it will return \"#A@c\"\n<|/ c |>\n\
    <| c |>\nYes, you are right. My solution was based on his example. I'll edit my\
    \ answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nI like\
    \ your solution but I think it would be more efficient to reverse the string in\
    \ place instead of creating a new string and copying over the old string. Also,\
    \ `isLetter` could be replaced by `isalpha`.\n<|/ c |>\n<| c |>\nI agree with\
    \ you, my solution was more of a \"proof of concept\" than a solution. Thanks\
    \ for the suggestion.\n<|/ c |>\n<| c |>\nI agree with you, my solution was more\
    \ of a \"proof of concept\" than a solution. Thanks for the suggestion.\n<|/ c\
    \ |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,string |>\n<| c |>\nThanks so much for your help. I appreciate\
    \ it a lot.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if there are multiple letters in the string. Try it\
    \ with `solve(\"aba\")`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I edited\
    \ my answer to fix that issue.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int len = s.length();\n    \n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = toLower(s[i]);\n     \
    \   }\n    }\n    \n    return s;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(isLetter(c))\n        {\n  \
    \          string temp = toUpper(s[i]);\n            result += temp;\n       \
    \ }\n        else\n        {\n            result += s[i];\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    for(int i = 0; i < len;\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = toLower(s[i]);\n     \
    \   }\n    }\n    string res = \"\";\n    for(int i = 0; i < len; i++)\n    {\n\
    \        res += s[i];\n    }\n    return res;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nThis doesn't work if the string contains numbers. Try it with `solve(\"\
    1234\")`.\n<|/ c |>\n<| c |>\nI tested it and it works. I even tested it with\
    \ `solve(\"a1b2c3d4e5\")` and it worked. Can you give me an example where it fails?\n\
    <|/ c |>\n<| c |>\nIt fails for me with `solve(\"a1b2c3d4e5\")`.\n<|/ c |>\n<|\
    \ c |>\nI tested it and it works. I even tested it with `solve(\"a1b2c3d4e5\"\
    )` and it worked. Can you give me an example where it fails?\n<|/ c |>\n<| c |>\n\
    It fails for me with `solve(\"a1b2c3d4e5\")`.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nI\
    \ tested it and it works. I even tested it on `solve(\"ab\")` before I posted\
    \ my answer. Did you try it?\n<|/ c |>\n<| c |>\nYes, I did. `solve(\"ab\")` returns\
    \ `\"AB\"`, not `\"aB\"`.\n<|/ c |>\n<| c |>\nI tested it again and it works now.\
    \ Thanks for pointing that out. I'll edit my answer now.\n<|/ c |>\n<| c |>\n\
    I tested it again and it works now. Thanks for pointing that out. I'll edit my\
    \ answer now.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n            result\
    \ += toUpper(s[i]);\n        }else{\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if the string contains any non-letters.\n<|/ c |>\n<| c |>\nI thought the\
    \ question was about reversing letters, not reversing numbers. I updated my answer\
    \ to include a solution for letters.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n \
    \       }\n        else\n        {\n            result += s[i];\n        }\n \
    \   }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if there are multiple letters in the string. For example,\
    \ `solve(\"aba\")` returns `\"Baa\"`, which is not the correct answer.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work if there are multiple letters in the string.\
    \ For example, `solve(\"aba\")` returns `\"Baa\"`, which is not the correct answer.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple letters in the string.\
    \ For example, `solve(\"aba\")` returns `\"Baa\"`, which is not the correct answer.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple letters in the string.\
    \ For example, `solve(\"aba\")` returns `\"Baa\"`, which is not the correct answer.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple letters in the string.\
    \ For example, `solve(\"aba\")` returns `\"Baa\"`, which is not the correct answer.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\n#include <cctype>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(c ==\
    \ 'a' || c == 'A')\n        {\n            result += toupper(c);\n        }\n\
    \        else if(c == 'b' || c == 'B')\n        {\n            result += tolower(c);\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis doesn't\
    \ work if the string contains more than one letter. For example, `solve(\"ab\"\
    )` returns `\"Ab\"` instead of `\"ba\"`.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ Thanks for pointing that out. I've updated my answer to include a solution that\
    \ should work for multiple letters.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isalpha(s[i]))\n        {\n            string temp = toupper(s[i]);\n\
    \            result += temp;\n        }\n        else\n        {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work if the string contains numbers. Try it with `solve(\"\
    1234\")`.\n<|/ c |>\n<| c |>\nYes, I forgot about that. Thanks for pointing it\
    \ out. I've updated my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n \
    \           result += toupper(s[i]);\n        }\n        else\n        {\n   \
    \         result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require any loops.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if the string contains any non-letters.\n<|/ c |>\n\
    <| c |>\nI added a solution that doesn't require any loops.\n<|/ c |>\n<| c |>\n\
    This doesn't work if the string contains any non-letters.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n      \
    \  {\n            result += 'B';\n        }\n        else if(c == 'c' || c ==\
    \ 'C')\n        {\n            result += 'C';\n        }\n        else if(c ==\
    \ 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n       \
    \ else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n     \
    \   }\n        else if(c == 'f' || c == 'F')\n        {\n            result +=\
    \ 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n        \
    \    result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n      \
    \  {\n            result += 'H';\n        }\n        else if(c == 'i' || c ==\
    \ 'I')\n        {\n            result += 'I';\n        }\n        else if(c ==\
    \ 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n       \
    \ else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n     \
    \   }\n        else if(c == 'l' || c == 'L')\n        {\n            result +=\
    \ 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n        \
    \    result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n      \
    \  {\n            result += 'N';\n        }\n        else if(c == 'o' || c ==\
    \ 'O')\n        {\n            result += 'O';\n        }\n        else if(c ==\
    \ 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n       \
    \ else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n     \
    \   }\n        else if(c == 'r' || c == 'R')\n        {\n            result +=\
    \ 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n        \
    \    result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n      \
    \  {\n            result += 'T';\n        }\n        else if(c == 'u' || c ==\
    \ 'U')\n        {\n            result += 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n       \
    \ else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n     \
    \   }\n        else if(c == 'x' || c == 'X", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n  \
    \      {\n            result += toupper(s[i]);\n        }\n        else\n    \
    \    {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ only letters.\n<|/ c |>\n<| c |>\nI didn't know that `isalpha` was case sensitive.\
    \ Thanks for pointing that out. I've updated my answer.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if the string contains only letters.\n<|/ c |>\n<| c |>\nI didn't\
    \ know that `isalpha` was case sensitive. Thanks for pointing that out. I've updated\
    \ my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\nimport java.lang.*;\n\
    import java.io.*;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(s[i] == 'a')\n        {\n\
    \            result += \"A\";\n        }\n        else if(s[i] == 'A')\n     \
    \   {\n            result += \"a\";\n        }\n        else if(s[i] == 'b')\n\
    \        {\n            result += \"B\";\n        }\n        else if(s[i] == 'B')\n\
    \        {\n            result += \"b\";\n        }\n        else if(s[i] == 'c')\n\
    \        {\n            result += \"C\";\n        }\n        else if(s[i] == 'C')\n\
    \        {\n            result += \"c\";\n        }\n        else if(s[i] == 'd')\n\
    \        {\n            result += \"D\";\n        }\n        else if(s[i] == 'D')\n\
    \        {\n            result += \"d\";\n        }\n        else if(s[i] == 'e')\n\
    \        {\n            result += \"E\";\n        }\n        else if(s[i] == 'E')\n\
    \        {\n            result += \"e\";\n        }\n        else if(s[i] == 'f')\n\
    \        {\n            result += \"F\";\n        }\n        else if(s[i] == 'F')\n\
    \        {\n            result += \"f\";\n        }\n        else if(s[i] == 'g')\n\
    \        {\n            result += \"G\";\n        }\n        else if(s[i] == 'G')\n\
    \        {\n            result += \"g\";\n        }\n        else if(s[i] == 'h')\n\
    \        {\n            result += \"H\";\n        }\n        else if(s[i] == 'H')\n\
    \        {\n            result += \"h\";\n        }\n        else if(s[i] == 'i')\n\
    \        {\n            result += \"I\";\n        }\n        else if(s[i] == 'I')\n\
    \        {\n            result += \"i\";\n        }\n        else if(s[i] == 'j')\n\
    \        {\n            result += \"J\";\n        }\n        else if(s[i] == 'J')\n\
    \        {\n            result += \"j\";\n        }\n        else if(s[i] == 'k')\n\
    \        {\n            result += \"K\";\n        }\n        else if(s[i] == 'K')\n\
    \        {\n            result += \"k\";\n        }\n        else if(s[i] == 'l')\n\
    \        {\n            result += \"L\";\n        }\n        else if(s[i] == 'L')\n\
    \        {\n            result += \"l\";\n        }\n        else if(s[i] == 'm')\n\
    \        {\n            result += \"M\";\n        }\n        else if(s[i] == 'M')\n\
    \        {\n            result += \"m\";\n        }\n        else if(s[i] == 'n')\n\
    \        {\n            result += \"N\";\n        }\n        else if(s[i] == 'N')\n\
    \        {\n            result += \"n\";\n        }\n        else if(s[i] == 'o')\n\
    \        {\n            result += \"O\";\n        }\n        else if(s[i] == 'O",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if there are multiple letters in the string. For example, if `s = \"ab\"\
    `, then `solve(s)` returns `\"Aa\"`.\n<|/ c |>\n<| c |>\nYes, you are right. My\
    \ mistake. I'll fix it.\n<|/ c |>\n<| c |>\nI fixed the problem. Thanks for pointing\
    \ out.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    map<int,int> m;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(isalpha(s[i]))\n        {\n       \
    \     int k = toupper(s[i]);\n            m[k] = m[k] + 1;\n        }\n      \
    \  else\n        {\n            m[s[i]] = m[s[i]] - 1;\n        }\n    }\n   \
    \ string ans = \"\";\n    for(int i=0;i<s.length();i++)\n    {\n        if(m[i]>0)\n\
    \        {\n            ans = ans + s[i];\n        }\n    }\n    return ans;\n\
    }\n</code>\n<|/ a tags=string,algorithm,c++ |>\n<| c |>\nI believe this solution\
    \ is wrong. Try `solve(\"ab\")`\n<|/ c |>\n<| c |>\nYes, you are right. My mistake.\
    \ Thank you. Fixed it.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ the string contains any non-letters.\n<|/ c |>\n<| c |>\nI thought the question\
    \ was about reversing only letters. I added a note about that.\n<|/ c |>\n<| c\
    \ |>\nThe question states that \"The function should return the resulted string.\"\
    \ Your code doesn't do that.\n<|/ c |>\n<| c |>\nI added the missing return statement.\n\
    <|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\n`isLetter` should be `isAlpha`\n\
    <|/ c |>\n<| c |>\n`isLetter` should be `isAlpha`\n<|/ c |>\n<| c |>\n`isLetter`\
    \ should be `isAlpha`\n<|/ c |>\n<| c |>\n`isLetter` should be `isAlpha`\n<|/\
    \ c |>\n<| c |>\n`isLetter` should be `isAlpha`\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n  \
    \      }\n        else\n        {\n            result += s[i];\n        }\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c\
    \ |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| a\
    \ tags=string,c++,arrays |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    \n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for your answer! I appreciate\
    \ it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;\nstring solve(const string &s) {\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++) {\n        if(isLetter(s[i])) {\n \
    \           result += toUpper(s[i]);\n        } else {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Can you please\
    \ explain why you used `isLetter` instead of `isAlpha`?\n<|/ c |>\n<| c |>\n`isAlpha`\
    \ checks if the character is a letter, `isLetter` checks if the character is a\
    \ letter. `isAlpha` checks if the character is a letter, `isLetter` checks if\
    \ the character is a letter. `isAlpha` checks if the character is a letter, `isLetter`\
    \ checks if the character is a letter. `isAlpha` checks if the character is a\
    \ letter, `isLetter` checks if the character is a letter.\n<|/ c |>\n<| c |>\n\
    Thanks for your explanation. Can you please explain why you used `isLetter` instead\
    \ of `isAlpha`?\n<|/ c |>\n<| c |>\n`isAlpha` checks if the character is a letter,\
    \ `isLetter` checks if the character is a letter. `isAlpha` checks if the character\
    \ is a letter, `isLetter` checks if the character is a letter. `isAlpha` checks\
    \ if the character is a letter, `isLetter` checks if the character is a letter.\
    \ `isAlpha` checks if the character is a letter, `isLetter` checks if the character\
    \ is a letter.\n<|/ c |>\n<| c |>\nThanks for your explanation. Can you please\
    \ explain why you used `isLetter` instead of `isAlpha`?\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nimport\
    \ java.util.*;\nimport java.lang.*;\nimport java.io.*;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nThis doesn't work if the string\
    \ contains numbers. For example, if `s = \"#a@C\"`, then `solve(s)` returns `\"\
    #A@c\"`, which is not the correct result.\n<|/ c |>\n<| c |>\nI didn't see that\
    \ requirement in the question. Thanks for pointing it out.\n<|/ c |>\n<| c |>\n\
    I added a solution that doesn't require the string to be reversed at all.\n<|/\
    \ c |>\n<| c |>\nI added a solution that doesn't require the string to be reversed\
    \ at all.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require the string\
    \ to be reversed at all.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I tested it with `solve(\"ab\")`\
    \ and the output is `AB`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nI tested it and it works. I tested it with `solve(\"\
    ab\")` and the output is `AB`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ `solve(\"ab\")`.\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work for \"#a@C\"\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting. What is the problem?\n\
    <|/ c |>\n<| c |>\nIt doesn't work for \"#a@C\" because \"#a@C\" doesn't contain\
    \ any letters. \"#a@C\" contains \"#a@\" which contains \"a@\" which contains\
    \ \"@C\" which contains \"C\".\n<|/ c |>\n<| c |>\nYes, I see that now. Thanks\
    \ for pointing that out. I've updated my answer.\n<|/ c |>\n<| c |>\nI updated\
    \ my answer with another solution that doesn't require any loops.\n<|/ c |>\n\
    <| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            string temp = toupper(s[i]);\n\
    \            result += temp;\n        }\n        else\n        {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nI believe this would fail for `solve(\"ab\")` because `toupper`\
    \ would return `A` instead of `a`.\n<|/ c |>\n<| c |>\nYes, you are right. I've\
    \ edited my answer to fix this issue.\n<|/ c |>\n<| c |>\nThis fails for `solve(\"\
    ab\")` because `toupper` would return `A` instead of `a`.\n<|/ c |>\n<| c |>\n\
    Yes, you are right. I've edited my answer to fix this issue.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    \n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with `solve(\"ab\")`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis code doesn't work if you input\
    \ a number like \"123abc\".\n<|/ c |>\n<| c |>\nI fixed the code so it works now.\
    \ Thanks for pointing out.\n<|/ c |>\n<| c |>\nThis code doesn't work if you input\
    \ a number like \"123abc\".\n<|/ c |>\n<| c |>\nI fixed the code so it works now.\
    \ Thanks for pointing out.\n<|/ c |>\n<| c |>\nThis code doesn't work if you input\
    \ a number like \"123abc\".\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int len = s.length();\n    string result = \"\";\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     result += toUpper(s[i]);\n        }\n        else\n        {\n         \
    \   result += s[i];\n        }\n    }\n    \n    if(result.length() == 0)\n  \
    \  {\n        result = toUpper(result);\n    }\n    \n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a tags=string,c++,algorithm |>\n<| c |>\nI believe this solution will fail for\
    \ input like \"#a@C\"\n<|/ c |>\n<| c |>\nYes, you are right. My solution was\
    \ for \"#a@C\" input. Thanks for pointing out.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for\
    \ your answer. Could you please explain why you used `isLetter` instead of `isAlpha`?\n\
    <|/ c |>\n<| c |>\n`isLetter` checks if the character is a letter, `isAlpha` checks\
    \ if the character is alphabetic. `isLetter` returns true if the character is\
    \ a letter, `isAlpha` returns true if the character is alphabetic.\n<|/ c |>\n\
    <| c |>\nThanks for your explanation. Could you please explain why you used `isLetter`\
    \ instead of `isAlpha`?\n<|/ c |>\n<| c |>\n`isLetter` checks if the character\
    \ is a letter, `isAlpha` checks if the character is alphabetic. `isLetter` returns\
    \ true if the character is a letter, `isAlpha` returns true if the character is\
    \ alphabetic.\n<|/ c |>\n<| c |>\nThanks for your explanation. Could you please\
    \ explain why you used `isLetter` instead of `isAlpha`?\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    \n    for(int i = 0; i <\
    \ len; i++)\n    {\n        if(isalpha(s[i]))\n        {\n            s[i] = toupper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = tolower(s[i]);\n     \
    \   }\n    }\n    \n    return s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work. Try it on `\"#a@C\"`.\n<|/ c |>\n<| c |>\nIt works. I tested it\
    \ on `\"#a@C\"`. Please see my updated answer.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it on `\"#a@C\"`.\n<|/ c |>\n<| c |>\nIt works. I tested it on `\"\
    #a@C\"`. Please see my updated answer.\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it on `\"#a@C\"`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    int len\
    \ = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            string temp = toUpper(s[i]);\n\
    \            result += temp;\n        }\n        else\n        {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a |>\n\
    <| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            string temp=s[i];\n\
    \            s[i]=toupper(s[i]);\n            s[i]=tolower(s[i]);\n          \
    \  s[i]=temp;\n        }\n    }\n    for(int i=0;i<s.length();i++)\n    {\n  \
    \      if(isalpha(s[i]))\n        {\n            string temp=s[i];\n         \
    \   s[i]=tolower(s[i]);\n            s[i]=toupper(s[i]);\n            s[i]=temp;\n\
    \        }\n    }\n    return s;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nThis does not work. `solve(\"ab\")` returns `\"#a@C\"`, not `\"\
    AB\"`.\n<|/ c |>\n<| c |>\nI tested it and it works. I used the code from your\
    \ question. Maybe you used a different code?\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I used the code from your question. Maybe you used a different code?\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I used the code from your question.\
    \ Maybe you used a different code?\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I used the code from your question. Maybe you used a different code?\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n \
    \           result += toupper(s[i]);\n        }\n        else\n        {\n   \
    \         result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if you have a string\
    \ like \"#a@C\"\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\
    \ What do you mean by \"doesn't work\"? It gives the correct result for that input.\n\
    <|/ c |>\n<| c |>\nI mean it gives the wrong result for that input. Try it yourself\
    \ with that input.\n<|/ c |>\n<| c |>\nI tested it myself and it gives the correct\
    \ result. Can you give an example where it gives the wrong result?\n<|/ c |>\n\
    <| c |>\nI tested it myself and it gives the correct result. Can you give an example\
    \ where it gives the wrong result?\n<|/ c |>\n<| a dscore=1 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    int len = s.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n       \
    \ {\n            s[i] = toUpper(s[i]);\n        }\n        else\n        {\n \
    \           s[i] = toLower(s[i]);\n        }\n    }\n    return s;\n}\n</code>\n\
    <|/ a tags=string,c++,arrays |>\n<| a tags=string,c++,arrays |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,arrays |>\n<| a tags=string,c++,arrays |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  int len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len;\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    if(len == 0)\n    {\n        return s;\n    }\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n       \
    \ {\n            result += s[i];\n        }\n        else\n        {\n       \
    \     result += toUpper(s[i]);\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;\nstring reverse(string s)\n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n \
    \       {\n            result += toupper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            string temp = s[i];\n    \
    \        s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n          \
    \  s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        if(!isLetter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toLower(s[i]);\n            s[i] = toUpper(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += s[i];\n \
    \       }\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;\nstring solve(const\
    \ string &s) {\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isLetter(s[i])) {\n            string temp = s[i];\n    \
    \        s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n          \
    \  s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(!isLetter(s[i])) {\n            string temp = s[i];\n            s[i]\
    \ = toLower(s[i]);\n            s[i] = toUpper(s[i]);\n            s[i] = temp;\n\
    \        }\n    }\n    for(int i = 0; i < s.length(); i++) {\n        if(isLetter(s[i]))\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nThis\
    \ doesn't work if the string contains numbers. Try it with `solve(\"123\")`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the code accordingly.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the string contains numbers. Try it with\
    \ `solve(\"123\")`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated\
    \ the code accordingly.\n<|/ c |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. Try it with `solve(\"123\")`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(c ==\
    \ 'a' || c == 'A')\n        {\n            result += toupper(c);\n        }\n\
    \        else if(c == 'b' || c == 'B')\n        {\n            result += tolower(c);\n\
    \        }\n        else if(c == '#' || c == '@')\n        {\n            result\
    \ += c;\n        }\n        else\n        {\n            result += c;\n      \
    \  }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.Scanner;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n \
    \           result += toupper(s[i]);\n        }\n        else\n        {\n   \
    \         result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\npublic class\
    \ ReverseString\n{\n    public static void main(String args[])\n    {\n      \
    \  Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter the\
    \ String\");\n        String str = sc.nextLine();\n        System.out.println(\"\
    Reverse the String\");\n        System.out.println(reverse(str));\n    }\n   \
    \ public static String reverse(String str)\n    {\n        int len = str.length();\n\
    \        StringBuffer sb = new StringBuffer();\n        for(int i=len-1;i>=0;i--)\n\
    \        {\n            sb.append(str.charAt(i));\n        }\n        return sb.toString();\n\
    \    }\n}\n</code>\n<|/ a tags=string,java |>\n<| a |>\n<code>\nimport java.util.Scanner;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c\
    \ |>\nThank you so much for your help! I really appreciate it!\n<|/ c |>\n<| c\
    \ |>\nYou're welcome. Don't forget to accept the answer if it solved your problem.\n\
    <|/ c |>\n<| a tags=string,c++,arrays |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\nimport java.util.*;\nimport java.lang.*;\n\
    import java.io.*;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    \n    for(int i = 0; i <\
    \ len; i++)\n    {\n        if(s[i] == 'a' || s[i] == 'A')\n        {\n      \
    \      s[i] = toupper(s[i]);\n        }\n        else if(s[i] == 'b' || s[i] ==\
    \ 'B')\n        {\n            s[i] = tolower(s[i]);\n        }\n        else\
    \ if(s[i] == 'c' || s[i] == 'C')\n        {\n            s[i] = toupper(s[i]);\n\
    \        }\n        else if(s[i] == 'd' || s[i] == 'D')\n        {\n         \
    \   s[i] = tolower(s[i]);\n        }\n        else if(s[i] == 'e' || s[i] == 'E')\n\
    \        {\n            s[i] = toupper(s[i]);\n        }\n        else if(s[i]\
    \ == 'f' || s[i] == 'F')\n        {\n            s[i] = tolower(s[i]);\n     \
    \   }\n        else if(s[i] == 'g' || s[i] == 'G')\n        {\n            s[i]\
    \ = toupper(s[i]);\n        }\n        else if(s[i] == 'h' || s[i] == 'H')\n \
    \       {\n            s[i] = tolower(s[i]);\n        }\n        else if(s[i]\
    \ == 'i' || s[i] == 'I')\n        {\n            s[i] = toupper(s[i]);\n     \
    \   }\n        else if(s[i] == 'j' || s[i] == 'J')\n        {\n            s[i]\
    \ = tolower(s[i]);\n        }\n        else if(s[i] == 'k' || s[i] == 'K')\n \
    \       {\n            s[i] = toupper(s[i]);\n        }\n        else if(s[i]\
    \ == 'l' || s[i] == 'L')\n        {\n            s[i] = tolower(s[i]);\n     \
    \   }\n        else if(s[i] == 'm' || s[i] == 'M')\n        {\n            s[i]\
    \ = toupper(s[i]);\n        }\n        else if(s[i] == 'n' || s[i] == 'N')\n \
    \       {\n            s[i] = tolower(s[i]);\n        }\n        else if(s[i]\
    \ == 'o' || s[i] == 'O')\n        {\n            s[i] = toupper(s[i]);\n     \
    \   }\n        else if(s[i] == 'p' || s[i] == 'P')\n        {\n            s[i]\
    \ = tolower(s[i]);\n        }\n        else if(s[i] == 'q' || s[i] == 'Q')\n \
    \       {\n            s[i] = toupper(s[i]);\n        }\n        else if(s[i]\
    \ == 'r' || s[i] == 'R')\n        {\n            s[i] = tolower(s[i]);\n     \
    \   }\n        else if(s[i] == 's' || s[i] == 'S')\n        {\n            s[i]\
    \ = toupper(s[i]);\n        }\n        else if(s[i] == 't' || s[i] == 'T')\n \
    \       {\n            s[i] = tolower(s[i]);\n        }\n        else if(s[i]\
    \ == 'u' || s[i] == 'U')\n        {\n            s[i] = toupper(s[i]);\n     \
    \   }\n        else if(s[i] == 'v' || s[i] == 'V')\n        {\n            s[i]\
    \ = tolower(s[i]);\n        }\n        else if(s[i] == 'w' || s[i] == 'W')\n \
    \       {\n            s[i] = toupper(s[i]);\n        }\n        ", "{\n    int\
    \ len = s.length();\n    string ans = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            ans += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            ans += s[i];\n        }\n   \
    \ }\n    if(ans.length() == 0)\n    {\n        ans = s;\n    }\n    return ans;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n\
    \        if(c == 'a' || c == 'A')\n        {\n            result += toupper(c);\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            result\
    \ += tolower(c);\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nThanks so much for the answer! I really appreciate it. I will try\
    \ this out and see how it goes.\n<|/ c |>\n<| c |>\nThis doesn't work for \"#a@C\"\
    \n<|/ c |>\n<| c |>\nI tested it and it works. I tested it on \"#a@C\" and the\
    \ output is \"#A@c\"\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and the output\
    \ is \"#A@c\"\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and the output is \"\
    #A@c\"\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains numbers. Try it with `solve(\"\
    123\")`.\n<|/ c |>\n<| c |>\nI fixed the issue you mentioned\n<|/ c |>\n<| c |>\n\
    `isalpha` doesn't check for numbers. `isdigit` does.\n<|/ c |>\n<| c |>\nI fixed\
    \ the issue you mentioned\n<|/ c |>\n<| c |>\nI fixed the issue you mentioned\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isalpha(s[i]))\n        {\n            char c = toupper(s[i]);\n     \
    \       result += c;\n        }\n        else\n        {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n\
    \            result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n\
    \        {\n            result += 'B';\n        }\n        else if(c == 'c' ||\
    \ c == 'C')\n        {\n            result += 'C';\n        }\n        else if(c\
    \ == 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n    \
    \    else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n  \
    \      }\n        else if(c == 'f' || c == 'F')\n        {\n            result\
    \ += 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n     \
    \       result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n   \
    \     {\n            result += 'H';\n        }\n        else if(c == 'i' || c\
    \ == 'I')\n        {\n            result += 'I';\n        }\n        else if(c\
    \ == 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n    \
    \    else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n  \
    \      }\n        else if(c == 'l' || c == 'L')\n        {\n            result\
    \ += 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n     \
    \       result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n   \
    \     {\n            result += 'N';\n        }\n        else if(c == 'o' || c\
    \ == 'O')\n        {\n            result += 'O';\n        }\n        else if(c\
    \ == 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n    \
    \    else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n  \
    \      }\n        else if(c == 'r' || c == 'R')\n        {\n            result\
    \ += 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n     \
    \       result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n   \
    \     {\n            result += 'T';\n        }\n        else if(c == 'u' || c\
    \ == 'U')\n        {\n            result += 'U';\n        }\n        else if(c\
    \ == 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n    \
    \    else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n  \
    \      }\n        else if(c == 'x' || c == 'X", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n \
    \       {\n            string temp = toupper(s[i]);\n            result += temp;\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n    \
    \    {\n            result += toupper(s[i]);\n        }\n        else if(c ==\
    \ 'b' || c == 'B')\n        {\n            result += tolower(s[i]);\n        }\n\
    \        else if(c == '#' || c == '@')\n        {\n            result += s[i];\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work for `solve(\"ab#a@C\")`\n<|/ c |>\n<| c |>\nI didn't\
    \ see that requirement. I've updated my answer accordingly.\n<|/ c |>\n<| c |>\n\
    This doesn't work for `solve(\"ab#a@C\")`\n<|/ c |>\n<| c |>\nI didn't see that\
    \ requirement. I've updated my answer accordingly.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for `solve(\"ab#a@C\")`\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            string temp = toupper(s[i]);\n\
    \            result += temp;\n        }\n        else\n        {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nI guess you meant `result += temp;` instead of `result += s[i];`\n\
    <|/ c |>\n<| c |>\nYes, I meant `result += temp;` instead of `result += s[i];`\n\
    <|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cctype>", "{\n    int len = s.length();\n    char c;\n \
    \   for(int i=0;i<len;i++)\n    {\n        c = s[i];\n        if(c>='a' && c<='z')\n\
    \        {\n            s[i] = c-32;\n        }\n        else if(c>='A' && c<='Z')\n\
    \        {\n            s[i] = c+32;\n        }\n    }\n    return s;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThanks for your answer. I tried your\
    \ solution and it works perfectly. However I still don't understand why my code\
    \ doesn't work. Can you please explain why my code doesn't work?\n<|/ c |>\n<|\
    \ c |>\nI added an explanation to the answer.\n<|/ c |>\n<| c |>\nThanks for your\
    \ explanation. I understand now why my code doesn't work. However I still don't\
    \ understand why my code doesn't work. Can you please explain why my code doesn't\
    \ work?\n<|/ c |>\n<| c |>\nI added an explanation to the answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThe question is tagged\
    \ C++, so why not use `std::string`?\n<|/ c |>\n<| c |>\nI didn't know that string\
    \ was a template in C++. Thanks for the tip!\n<|/ c |>\n<| c |>\nI didn't know\
    \ that string was a template in C++. Thanks for the tip!\n<|/ c |>\n<| c |>\n\
    I didn't know that string was a template in C++. Thanks for the tip!\n<|/ c |>\n\
    <| c |>\nI didn't know that string was a template in C++. Thanks for the tip!\n\
    <|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n\
    \            result += toUpper(s[i]);\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nThis doesn't work if the string contains more than one letter.\
    \ For example, `solve(\"ab\")` returns `\"A@b\"` instead of `\"AB\"`.\n<|/ c |>\n\
    <| c |>\nYes, you are right. I just fixed it. Thanks.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n \
    \       }\n        else\n        {\n            result += s[i];\n        }\n \
    \   }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = toUpper(s[i]);\n            result += temp;\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,string |>\n<| c |>\nThe question asks for an algorithm,\
    \ not an implementation. Also, your solution doesn't work for `solve(\"ab\")`.\n\
    <|/ c |>\n<| c |>\nI agree with you, my solution was to give a solution that is\
    \ easy to understand. Your solution is better and more efficient.\n<|/ c |>\n\
    <| c |>\nI agree with you, my solution was to give a solution that is easy to\
    \ understand. Your solution is better and more efficient.\n<|/ c |>\n<| c |>\n\
    I agree with you, my solution was to give a solution that is easy to understand.\
    \ Your solution is better and more efficient.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for your help! I really\
    \ appreciate it!\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\n\
    import java.lang.*;\nimport java.io.*;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(c ==\
    \ 'a' || c == 'A')\n        {\n            result += 'A';\n        }\n       \
    \ else if(c == 'b' || c == 'B')\n        {\n            result += 'B';\n     \
    \   }\n        else if(c == 'c' || c == 'C')\n        {\n            result +=\
    \ 'C';\n        }\n        else if(c == 'd' || c == 'D')\n        {\n        \
    \    result += 'D';\n        }\n        else if(c == 'e' || c == 'E')\n      \
    \  {\n            result += 'E';\n        }\n        else if(c == 'f' || c ==\
    \ 'F')\n        {\n            result += 'F';\n        }\n        else if(c ==\
    \ 'g' || c == 'G')\n        {\n            result += 'G';\n        }\n       \
    \ else if(c == 'h' || c == 'H')\n        {\n            result += 'H';\n     \
    \   }\n        else if(c == 'i' || c == 'I')\n        {\n            result +=\
    \ 'I';\n        }\n        else if(c == 'j' || c == 'J')\n        {\n        \
    \    result += 'J';\n        }\n        else if(c == 'k' || c == 'K')\n      \
    \  {\n            result += 'K';\n        }\n        else if(c == 'l' || c ==\
    \ 'L')\n        {\n            result += 'L';\n        }\n        else if(c ==\
    \ 'm' || c == 'M')\n        {\n            result += 'M';\n        }\n       \
    \ else if(c == 'n' || c == 'N')\n        {\n            result += 'N';\n     \
    \   }\n        else if(c == 'o' || c == 'O')\n        {\n            result +=\
    \ 'O';\n        }\n        else if(c == 'p' || c == 'P')\n        {\n        \
    \    result += 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n      \
    \  {\n            result += 'Q';\n        }\n        else if(c == 'r' || c ==\
    \ 'R')\n        {\n            result += 'R';\n        }\n        else if(c ==\
    \ 's' || c == 'S')\n        {\n            result += 'S';\n        }\n       \
    \ else if(c == 't' || c == 'T')\n        {\n            result += 'T';\n     \
    \   }\n        else if(c == 'u' || c == 'U')\n        {\n            result +=\
    \ 'U';\n        }\n        else if(c == 'v' || c == 'V')\n        {\n        \
    \    result += 'V';\n        }\n        else if(c == 'w' || c == 'W')\n      \
    \  {\n            result += 'W';\n        }\n        else if(c == 'x' || c ==\
    \ 'X", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        char c = s[i];\n        if(c == 'A' || c == 'a') \n        {\n\
    \            result += c;\n        }\n        else if(c == 'B' || c == 'b')\n\
    \        {\n            result += c;\n        }\n        else if(c == 'C' || c\
    \ == 'c')\n        {\n            result += c;\n        }\n        else if(c ==\
    \ 'D' || c == 'd')\n        {\n            result += c;\n        }\n        else\
    \ if(c == 'E' || c == 'e')\n        {\n            result += c;\n        }\n \
    \       else if(c == 'F' || c == 'f')\n        {\n            result += c;\n \
    \       }\n        else if(c == 'G' || c == 'g')\n        {\n            result\
    \ += c;\n        }\n        else if(c == 'H' || c == 'h')\n        {\n       \
    \     result += c;\n        }\n        else if(c == 'I' || c == 'i')\n       \
    \ {\n            result += c;\n        }\n        else if(c == 'J' || c == 'j')\n\
    \        {\n            result += c;\n        }\n        else if(c == 'K' || c\
    \ == 'k')\n        {\n            result += c;\n        }\n        else if(c ==\
    \ 'L' || c == 'l')\n        {\n            result += c;\n        }\n        else\
    \ if(c == 'M' || c == 'm')\n        {\n            result += c;\n        }\n \
    \       else if(c == 'N' || c == 'n')\n        {\n            result += c;\n \
    \       }\n        else if(c == 'O' || c == 'o')\n        {\n            result\
    \ += c;\n        }\n        else if(c == 'P' || c == 'p')\n        {\n       \
    \     result += c;\n        }\n        else if(c == 'Q' || c == 'q')\n       \
    \ {\n            result += c;\n        }\n        else if(c == 'R' || c == 'r')\n\
    \        {\n            result += c;\n        }\n        else if(c == 'S' || c\
    \ == 's')\n        {\n            result += c;\n        }\n        else if(c ==\
    \ 'T' || c == 't')\n        {\n            result += c;\n        }\n        else\
    \ if(c == 'U' || c == 'u')\n        {\n            result += c;\n        }\n \
    \       else if(c == 'V' || c == 'v')\n        {\n            result += c;\n \
    \       }\n        else if(c == 'W' || c == 'w')\n        {\n            result\
    \ += c;\n        }\n        else if(c == 'X' || c == 'x')\n        {\n       \
    \     result += c;\n        }\n        else if(c == 'Y' || c == 'y')\n       \
    \ {\n            result += c;\n        }\n        else if(c == 'Z' || c == 'z')\n\
    \        {\n            result += c;\n        }\n        else\n        {\n   \
    \         result += c;", "{\n    int len = s.length();\n    string result = \"\
    \";\n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n   \
    \     {\n            result += toUpper(s[i]);\n        }\n        else\n     \
    \   {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the string contains\
    \ any non-letters.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the string contains any non-letters. Try\
    \ it with `solve(\"a#bC\")`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before\
    \ posting.\n<|/ c |>\n<| c |>\nIt doesn't work if the string contains any non-letters.\
    \ Try it with `solve(\"a#bC\")`.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n  \
    \      }\n        else\n        {\n            result += s[i];\n        }\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n       \
    \ if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }else{\n\
    \            result += s[i];\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(!isLetter(s[i])){\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(isalpha(s[i])){\n            result += toupper(s[i]);\n        }\n\
    \        else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ the string is empty or contains only letters.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ I tested it before posting it. I will edit my answer to include a test case.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the string is empty or contains only letters.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the string is empty or contains only letters.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the string is empty or contains only letters.\n\
    <|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n            result\
    \ += toUpper(s[i]);\n        }\n        else{\n            result += s[i];\n \
    \       }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26839532)\n<|/ c |>\n<| c |>\nI thought\
    \ this was an answer. He asked for help with his code. He gave the code he wrote\
    \ and asked for help with his code. He gave the code he wrote and asked for help\
    \ with his code. He gave the code he wrote and asked for help with his code. He\
    \ gave the code he wrote and asked for help with his code. He gave the code he\
    \ wrote and asked for help with his code. He gave the code he wrote and asked\
    \ for help with his code. He gave the code he wrote and asked for help with his\
    \ code. He gave the code he wrote and asked for help with his code. He gave the\
    \ code he wrote and asked for help with his code. He gave the code he wrote and\
    \ asked for help with his code. He gave the code he wrote and asked for help with\
    \ his code. He gave the code he wrote and asked for help with his code. He gave\
    \ the code he wrote and asked for help with his code. He gave the code he wrote\
    \ and asked for help with his code. He gave the code he wrote and asked for help\
    \ with his code. He gave the code he wrote and asked for help with his code. He\
    \ gave the code he wrote and asked for help with his code. He gave the code he\
    \ wrote and asked for help with his code. He gave the code he wrote and as", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI like the idea of using recursion to solve this problem. Thanks!\n<|/\
    \ c |>\n<| c |>\nThis solution doesn't work if you have a string like \"#a@C\"\
    \n<|/ c |>\n<| c |>\n: It does. I tested it before posting it.\n<|/ c |>\n<| c\
    \ |>\n: It doesn't work if you have a string like \"#a@C\"\n<|/ c |>\n<| c |>\n\
    : It doesn't work if you have a string like \"#a@C\"\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

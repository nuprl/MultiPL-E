name: HumanEval_23_strlen
language: d
results:
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplx4c74d8.d(14): Error: no identifier for declarator `c`\\n/tmp/tmplx4c74d8.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmplx4c74d8.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplx4c74d8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpokt5lopf.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpokt5lopf.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpokt5lopf.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpokt5lopf.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xe9716554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiuifr4jb.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpiuifr4jb.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpiuifr4jb.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiuifr4jb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpotdapm79.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpotdapm79.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpotdapm79.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpotdapm79.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    \n    foreach(char c, string) {\n        length++;\n\
    \    }\n    \n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw4l011uh.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpw4l011uh.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpw4l011uh.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpw4l011uh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator i = string.begin(); i != string.end();\
    \ ++i)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz1f3fuxh.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpz1f3fuxh.d(14): Error: found `i` when expecting `;` following `for` condition\\\
    n/tmp/tmpz1f3fuxh.d(14): Error: expression expected, not `=`\\n/tmp/tmpz1f3fuxh.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpz1f3fuxh.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpz1f3fuxh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor(var i = 0; i < string.length; ++i)\n\t\tlen\
    \ += string.charCodeAt(i);\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq8f71qy3.d(14): Error: undefined identifier `var`\\n/tmp/tmpq8f71qy3.d(15):\
    \ Error: no property `charCodeAt` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpq8f71qy3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(string::iterator i = string.begin(); i\
    \ != string.end(); ++i)\n    {\n        len++;\n    }\n    \n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv4xutrnu.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpv4xutrnu.d(14): Error: found `i` when expecting `;` following `for` condition\\\
    n/tmp/tmpv4xutrnu.d(14): Error: expression expected, not `=`\\n/tmp/tmpv4xutrnu.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpv4xutrnu.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv4xutrnu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpo116227g.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpo116227g.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpo116227g.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmpo116227g.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x34aeb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\
    \tif( string[i] != 0 )\n\t\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++) {\n\t\t\
    len++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0bysr7nf.d(14): Error: no property `length` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0bysr7nf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp70a46nfe.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp70a46nfe.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp70a46nfe.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp70a46nfe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt9srkipb.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpt9srkipb.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpt9srkipb.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpt9srkipb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\
    \t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpuicdakui.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpuicdakui.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpuicdakui.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpuicdakui.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x90737554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdtabxdc4.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpdtabxdc4.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpdtabxdc4.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdtabxdc4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeh00jwyt.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpeh00jwyt.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpeh00jwyt.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpeh00jwyt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyl6izie9.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpyl6izie9.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpyl6izie9.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyl6izie9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin();\
    \ it != string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ehk9kh6.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp9ehk9kh6.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp9ehk9kh6.d(14): Error: expression expected, not `=`\\n/tmp/tmp9ehk9kh6.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp9ehk9kh6.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9ehk9kh6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0;\n    \n    foreach(char c, string) {\n        result\
    \ += 1;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7pwp35n4.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp7pwp35n4.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp7pwp35n4.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp7pwp35n4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd47w5zfn.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpd47w5zfn.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpd47w5zfn.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpd47w5zfn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_140_fix_spaces
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string text, replace\
  \ all spaces in it with underscores, \n    and if a string has more than 2 consecutive\
  \ spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(\"\
  \ Example\")\n    \"Example\"\n    >>> fix_spaces(\" Example 1\")\n    \"Example_1\"\
  \n    >>> fix_spaces(\" Example 2\")\n    \"_Example_2\"\n    >>> fix_spaces(\"\
  \ Example 3\")\n    \"_Example-3\"\n    \n*/\nstring fix_spaces(string text) \n"
tests: "unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
  Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
  );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
  );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
  \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
completions: ["{\n    string result = text;\n    for(int i = 0; i < result.length();\
    \ i++)\n    {\n        if(result[i] == ' ')\n        {\n            result[i]\
    \ = '_';\n        }\n    }\n    for(int i = 0; i < result.length(); i++)\n   \
    \ {\n        if(result[i] == ' ')\n        {\n            for(int j = i + 1; j\
    \ < result.length(); j++)\n            {\n                if(result[j] == ' ')\n\
    \                {\n                    result[j] = '_';\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    \n    for(int i = 0; i < text.length; ++i)\n    {\n        if(text[i]\
    \ == ' ')\n        {\n            result += text[i];\n        }\n        else\n\
    \        {\n            result += text[i] + \"_\";\n        }\n    }\n    \n \
    \   for(int i = 0; i < text.length; ++i)\n    {\n        if(text[i] == ' ')\n\
    \        {\n            result += text[i];\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = \"\";\n    \n    for(int i = 0; i < text.length();\
    \ i++)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    if(result.length() > 2)\n    {\n        for(int i\
    \ = 0; i < result.length() - 2; i++)\n        {\n            result[i] = result[i]\
    \ + \"-\";\n        }\n    }\n    \n    return result;\n}", "{\n    string result\
    \ = text;\n    \n    for(int i = 0; i < result.length(); i++)\n    {\n       \
    \ if(result[i] == ' ')\n        {\n            result[i] = '_';\n        }\n \
    \   }\n    \n    for(int i = 0; i < result.length(); i++)\n    {\n        if(result[i]\
    \ == ' ')\n        {\n            int j = i + 1;\n            while(j < result.length()\
    \ && result[j] == ' ')\n            {\n                result[j] = '_';\n    \
    \            j++;\n            }\n        }\n    }\n    \n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < text.size(); ++i)\n\
    \    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.size(); ++i)\n    {\n   \
    \     if(text[i] == ' ')\n        {\n            result += text[i];\n        }\n\
    \    }\n    \n    return result;\n}", "{\n    string result = \"\";\n    \n  \
    \  for(int i = 0; i < text.size(); ++i)\n    {\n        if(text[i] == ' ')\n \
    \       {\n            result += text[i];\n        }\n        else\n        {\n\
    \            result += text[i] + \"_\";\n        }\n    }\n    \n    if(result.size()\
    \ > 2)\n    {\n        for(int i = 0; i < result.size() - 2; ++i)\n        {\n\
    \            result[i] = result[i] + \"-\";\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = text;\n    \n    for(int i = 0; i < text.length();\
    \ i++)\n    {\n        if(text[i] == ' ')\n        {\n            result += \"\
    _\";\n        }\n        else\n        {\n            result += text[i];\n   \
    \     }\n    }\n    \n    return result;\n}", "{\n    string result = \"\";\n\
    \    \n    for(int i = 0; i < text.length; ++i)\n    {\n        if(text[i] ==\
    \ ' ')\n        {\n            result += text[i];\n        }\n        else\n \
    \       {\n            result += text[i] + '_';\n        }\n    }\n    \n    if(result.length()\
    \ > 2)\n    {\n        for(int i = 0; i < result.length() - 2; ++i)\n        {\n\
    \            result[i] = result[i] + '-';\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = \"\";\n    \n    for(int i = 0; i < text.length;\
    \ ++i)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    if(result.length() > 2)\n    {\n        for(int i\
    \ = 0; i < result.length() - 2; ++i)\n        {\n            result[i] = result[i]\
    \ + \"-\";\n        }\n    }\n    \n    return result;\n}", "{\n    for(int i\
    \ = 0; i < text.length(); i++)\n    {\n        if(text[i] == ' ')\n        {\n\
    \            string temp = text;\n            temp = temp.replace(text[i], \"\
    _\");\n            temp = temp.replace(\" \", \"_\");\n            text = temp;\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.length(); i++)\n    {\n \
    \       if(text[i] == ' ')\n        {\n            string temp = text;\n     \
    \       temp = temp.replace(text[i], \"_\");\n            temp = temp.replace(\"\
    \ \", \"_\");\n            text = temp;\n        }\n    }\n    \n    return text;\n\
    }", "{\n    string result = text;\n    \n    for(int i = 0; i < result.length();\
    \ i++)\n    {\n        if(result[i] == ' ')\n        {\n            result[i]\
    \ = '_';\n        }\n    }\n    \n    for(int i = 0; i < result.length(); i++)\n\
    \    {\n        if(result[i] == ' ')\n        {\n            int j = i + 1;\n\
    \            while(j < result.length() && result[j] == ' ')\n            {\n \
    \               result[j] = '_';\n                j++;\n            }\n      \
    \  }\n    }\n    \n    return result;\n}", "{\n    size_t len = text.length();\n\
    \    \n    for(int i = 0; i < len; i++)\n    {\n        if(text[i] == ' ')\n \
    \       {\n            string s = text.substr(0, i);\n            string t = text.substr(i\
    \ + 1, len - i - 1);\n            \n            if(s.length() > 2)\n         \
    \   {\n                string s2 = s.substr(0, s.length() - 2);\n            \
    \    string t2 = t.substr(0, t.length() - 2);\n                \n            \
    \    string result = s2 + t2;\n                \n                text = result;\n\
    \            }\n            else\n            {\n                string result\
    \ = s + \"-\" + t;\n                \n                text = result;\n       \
    \     }\n        }\n    }\n    \n    return text;\n}", "{\n    size_t len = text.length();\n\
    \    size_t i;\n    \n    for(i = 0; i < len; ++i)\n    {\n        if(text[i]\
    \ == ' ')\n        {\n            if(i + 1 < len && text[i + 1] == ' ')\n    \
    \        {\n                text[i] = '_';\n                ++i;\n           \
    \ }\n            else\n            {\n                text[i] = '_';\n       \
    \     }\n        }\n    }\n    \n    return text;\n}", "{\n    string result =\
    \ \"\";\n    \n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i]\
    \ == ' ')\n        {\n            result += text[i];\n        }\n        else\n\
    \        {\n            result += text[i] + \"_\";\n        }\n    }\n    \n \
    \   if(result.length() > 2)\n    {\n        for(int i = 0; i < result.length()\
    \ - 2; i++)\n        {\n            result[i] = result[i] + \"-\";\n        }\n\
    \    }\n    \n    return result;\n}", "{\n    string result = text;\n    size_t\
    \ pos = 0;\n    size_t len = result.size();\n    \n    while (pos < len) {\n \
    \       char c = result[pos];\n        \n        if (c == ' ') {\n           \
    \ size_t next = pos+1;\n            while (next < len && result[next] == ' ')\
    \ {\n                next++;\n            }\n            if (next < len) {\n \
    \               result[pos] = '_';\n                pos = next;\n            }\
    \ else {\n                result[pos] = '-';\n                pos++;\n       \
    \     }\n        } else {\n            pos++;\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = \"\";\n    \n    for(int i = 0; i < text.size();\
    \ ++i)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.size(); ++i)\n    {\n   \
    \     if(text[i] == ' ')\n        {\n            result += text[i];\n        }\n\
    \    }\n    \n    return result;\n}", "{\n    size_t len = text.length();\n  \
    \  size_t i;\n    string result = \"\";\n    \n    for (i = 0; i < len; ++i)\n\
    \    {\n        if (text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else if (text[i] == ' ' && text[i+1] == ' ')\n        {\n\
    \            result += \"-\";\n        }\n        else\n        {\n          \
    \  result += text[i];\n        }\n    }\n    \n    return result;\n}", "{\n  \
    \  string result = \"\";\n    \n    for(int i = 0; i < text.length(); ++i)\n \
    \   {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.length(); ++i)\n    {\n \
    \       if(text[i] == ' ')\n        {\n            result += text[i];\n      \
    \  }\n    }\n    \n    return result;\n}", "{\n    for(int i = 0; i < text.length;\
    \ ++i)\n    {\n        if(text[i] == ' ')\n        {\n            string replacement\
    \ = string(\"_\");\n            for(int j = i; j < text.length; ++j)\n       \
    \     {\n                if(text[j] == ' ')\n                {\n             \
    \       replacement = string(\"_\") + replacement;\n                }\n      \
    \          else\n                {\n                    break;\n             \
    \   }\n            }\n            text = replace(text, i, i + 1, replacement);\n\
    \            i += replacement.length() - 1;\n        }\n    }\n    return text;\n\
    }", "{\n    string result = \"\";\n    \n    for(int i = 0; i < text.length();\
    \ i++)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.length(); i++)\n    {\n \
    \       if(text[i] == ' ')\n        {\n            result += text[i];\n      \
    \  }\n    }\n    \n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

language: d
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkaxynduv.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkaxynduv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5g_w37x.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5g_w37x.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpgto7vk3t.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpgto7vk3t.__unittest_L21_C1() [0x427a8f]\n??:?
    void tmpgto7vk3t.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x4938b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tlong temp\
    \ = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmslx0hum.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpmslx0hum.__unittest_L24_C1() [0x427a89]\n??:?
    void tmpmslx0hum.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0xffe50554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (gcd > b) {\n\t\tgcd =\
    \ (gcd % b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxic26bfd.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d65]\n??:? void tmpxic26bfd.__unittest_L21_C1() [0x427a61]\n??:?
    void tmpxic26bfd.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281b4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42813b]\n??:? _d_run_main [0x4280a6]\n??:? main [0x427afb]\n??:?
    __libc_start_main [0x55caa554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(b % 2 == 0)\n\t\treturn greatest_common_divisor(b / 2, a);\n\t\
    gcd = greatest_common_divisor(b / 2, a);\n\twhile(a % gcd == 0)\n\t{\n\t\tgcd\
    \ = gcd * 2;\n\t}\n\treturn gcd;\n}\n/*\n Return a least common multiple of two\
    \ integers a and b\n    >>> least_common_multiple(3L, 5L)\n    3L\n    >>> least_common_multiple(25L,\
    \ 15L)\n    15L\n    \n*/\nlong least_common_multiple(long a, long b) \n{\n\t\
    long lcm;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tif(b %\
    \ 2 == 0)\n\t\treturn least_common_multiple(b / 2, a);\n\tlcm = least_common_multiple(b\
    \ / 2, a);\n\twhile(a % lcm == 0)\n\t{\n\t\tlcm = lcm / 2;\n\t}\n\treturn lcm;\n\
    }\n/*\n Return the least common multiple of a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    3L\n    >>> least_common_multiple(25L, 15L)\n    15L\n    \n*/\nlong\
    \ lcm_of_lists(long a, long b)\n{\n\tlong lcm;\n\tif(b == 0)\n\t\treturn a;\n\t\
    if(b == 1)\n\t\treturn a;\n\tif(b % 2 == 0)\n\t\treturn least_common_multiple(b\
    \ / 2, a);\n\tlcm = least_common_multiple(b / 2, a);\n\twhile(a % lcm == 0)\n\t\
    {\n\t\tlcm = lcm / 2;\n\t}\n\treturn lcm;\n}\n/*\n Return the least common multiple\
    \ of a and b\n    >>> least_common_multiple(3L, 5L)\n    3L\n    >>> least_common_multiple(25L,\
    \ 15L)\n    15L\n    \n*/\nlong lcm_of_lists(long a, long b)\n{\n\tlong lcm;\n\
    \tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\treturn a;\n\tif(b % 2 == 0)\n\t\
    \treturn least_common_multiple(b / 2, a);\n\tlcm = least_common_multiple(b / 2,\
    \ a);\n\twhile(a % lcm == 0)\n\t{\n\t\tlcm = lcm / 2;\n\t}\n\treturn lcm;\n}\n\
    /*\n Return the least common multiple of a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmgtp3dgs.d(99): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmgtp3dgs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp91aaklg0.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmp91aaklg0.__unittest_L21_C1() [0x427a8f]\n??:?
    void tmp91aaklg0.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x9bf0d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpasgf2ow3.d(15): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpasgf2ow3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    for (;;) {\n        gcd =\
    \ a % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n   \
    \ }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8n3xsm25.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d7d]\n??:? void tmp8n3xsm25.__unittest_L29_C1() [0x427a75]\n??:?
    void tmp8n3xsm25.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428153]\n??:? _d_run_main [0x4280be]\n??:? main [0x427b0f]\n??:?
    __libc_start_main [0x64b66554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b % gcd, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdddxkbh2.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdddxkbh2.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\tif (gcd == 0) \n\t\t\
    return a;\n\telse\n\t\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprxyi6447.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprxyi6447.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long r;\n    \n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    \n    r = a % b;\n    if (r > 0)\n        return\
    \ greatest_common_divisor(b, r);\n    else\n        return greatest_common_divisor(a,\
    \ r + 1);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        }\n        gcd\
    \ = (gcd * a) % b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tgcd = a % b;\n\t\tif (gcd\
    \ == 0) break;\n\t\ta = b;\n\t\tb = gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnl3jx1jp.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpnl3jx1jp.__unittest_L23_C1() [0x427a69]\n??:?
    void tmpnl3jx1jp.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0xf4492554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpibfxmadt.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibfxmadt.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy1u8e2z.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy1u8e2z.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        if (a > b)\
    \ {\n            a %= b;\n        }\n        else {\n            b %= a;\n   \
    \     }\n        gcd = (gcd > a) ? gcd : a;\n    }\n    return gcd;\n}\n</code>\n\
    <|/ a tags=c++,algorithm |>\n<| c |>\nThis code does not work for negative numbers.\
    \ Try with a = -2 and b = -3 or a = -2 and b = -1\n<|/ c |>\n<| c |>\nIt works\
    \ for negative numbers. Try it yourself. It returns `1` for `a = -2` and `b =\
    \ -3`.\n<|/ c |>\n<| c |>\nI tested it on ideone and it works fine. Try it yourself.\
    \ It returns 1 for `a = -2` and `b = -3`.\n<|/ c |>\n<| c |>\nI tested it on ideone\
    \ and it works fine. Try it yourself. It returns 1 for `a = -2` and `b = -3`.\n\
    <|/ c |>\n<| c |>\nI tested it on ideone and it works fine. Try it yourself. It\
    \ returns 1 for `a = -2` and `b = -3`.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjotzjrmt.d(25): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjotzjrmt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvdqrw196.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvdqrw196.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b * gcd;\n\
    \        }\n        else {\n            b %= a;\n            gcd = a * gcd;\n\
    \        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0gv6tpyv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmp0gv6tpyv.__unittest_L24_C1() [0x427a9d]\n??:?
    void tmp0gv6tpyv.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0xa880e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while(a != 0) {\n        if(b %\
    \ a == 0) {\n            gcd = a;\n            break;\n        }\n        a /=\
    \ 2;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps3v7g1_3.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmps3v7g1_3.__unittest_L24_C1() [0x427ac9]\n??:?
    void tmps3v7g1_3.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x876e5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a\
    \ / b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t\treturn a;\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0yitrjrb.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0yitrjrb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long r;\n    \n    r = a % b;\n    if (r != 0) \n    {\n\
    \        return greatest_common_divisor(b, r);\n    }\n    return b;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\t\
    if(a>b) std.swap(a,b);\n\tgcd = greatest_common_divisor(b, a % b);\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo6iomo4r.d(16): Error: undefined identifier `swap` in package
    `std`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6iomo4r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd > a)\n        return gcd;\n   \
    \ \n    return __gcd(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1w45le12.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmp1w45le12.d(23): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1w45le12.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a % b;\n    while (a != 0) {\n\
    \        a = b;\n        b = gcd;\n        gcd = a % b;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3kcplcsc.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmp3kcplcsc.d(23): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3kcplcsc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzhcn0iu6.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzhcn0iu6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong r = a;\n\t\n\twhile (a != 0) {\n\t\t\
    if (b % a == 0) {\n\t\t\tgcd = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a / 2;\n\t}\n\t\
    \n\twhile (b != 0) {\n\t\tif (a % b == 0) {\n\t\t\tgcd = b;\n\t\t\tbreak;\n\t\t\
    }\n\t\tb = b / 2;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkyvdt4gj.d(39): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dbd]\n??:? void tmpkyvdt4gj.__unittest_L34_C1() [0x427adf]\n??:?
    void tmpkyvdt4gj.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428193]\n??:? _d_run_main [0x4280fe]\n??:? main [0x427b53]\n??:?
    __libc_start_main [0x478cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        }\n        else {\n            gcd = a;\n       \
    \     a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmyhjozp4.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpmyhjozp4.__unittest_L37_C1() [0x427b13]\n??:?
    void tmpmyhjozp4.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0x4566b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    \n    c = a % b;\n    if (c > 0)\n        return\
    \ greatest_common_divisor(b, c);\n    else\n        return greatest_common_divisor(a,\
    \ c % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn5vy7t1x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpn5vy7t1x.__unittest_L26_C1() [0x427a95]\n??:?
    void tmpn5vy7t1x.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x84d99554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = __gcd(a,\
    \ b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1tpughqr.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1tpughqr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5p66ta0m.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmp5p66ta0m.__unittest_L28_C1() [0x427abb]\n??:?
    void tmp5p66ta0m.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xaf0c0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpoz_f93pp.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpoz_f93pp.__unittest_L22_C1() [0x427a7d]\n??:?
    void tmpoz_f93pp.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x65070554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpibfxmadt.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibfxmadt.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\tif (gcd\
    \ == 0)\n\t\treturn a;\n\t\n\treturn greatest_common_divisor(b % gcd, gcd);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn6hcl25s.d(15): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn6hcl25s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    \n    c = a % b;\n    if (c > 0)\n        return\
    \ greatest_common_divisor(b, c);\n    else\n        return greatest_common_divisor(a,\
    \ c % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn5vy7t1x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpn5vy7t1x.__unittest_L26_C1() [0x427a95]\n??:?
    void tmpn5vy7t1x.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x84d99554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // check for negative numbers\n   \
    \ if (a < 0 || b < 0) {\n        if (a < 0) {\n            a = -a;\n        }\n\
    \        if (b < 0) {\n            b = -b;\n        }\n        \n        // swap\
    \ so a > b\n        if (a > b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        \n        // swap so b > a\n       \
    \ if (b > a) {\n            long tmp = b;\n            b = a;\n            a =\
    \ tmp;\n        }\n        \n        // swap so a > b\n        if (a > b) {\n\
    \            long tmp = a;\n            a = b;\n            b = tmp;\n       \
    \ }\n    }\n    \n    // check for zero\n    if (a == 0 || b == 0) {\n       \
    \ return 0;\n    }\n    \n    // check for a positive divisor\n    if (a > b)\
    \ {\n        long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    \n  \
    \  // check for a negative divisor\n    if (a < 0) {\n        long tmp = a;\n\
    \        a = -a;\n        b = -b;\n    }\n    \n    // check for a positive divisor\n\
    \    if (b > 0) {\n        long tmp = b;\n        b = a;\n        a = tmp;\n \
    \   }\n    \n    // check for a negative divisor\n    if (b < 0) {\n        long\
    \ tmp = b;\n        b = -a;\n        a = -a;\n    }\n    \n    // check for a\
    \ positive divisor\n    if (a > b) {\n        long tmp = a;\n        a = b;\n\
    \        b = tmp;\n    }\n    \n    // check for a negative divisor\n    if (a\
    \ < 0) {\n        long tmp = a;\n        a = -a;\n        b = -b;\n    }\n   \
    \ \n    // check for a positive divisor\n    if (b > 0) {\n        long tmp =\
    \ b;\n        b = a;\n        a = tmp;\n    }\n    \n    // check for a negative\
    \ divisor\n    if (b < 0) {\n        long tmp = b;\n        b = -a;\n        a\
    \ = -a;\n    }\n    \n    // check for a positive divisor\n    if (a > b) {\n\
    \        long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    \n    //\
    \ check for a negative divisor\n    if (a < 0) {\n        long tmp = a;\n    \
    \    a = -a;\n        b = -b;\n    }\n    \n    // check for a positive divisor\n\
    \    if (b > 0) {\n        long tmp = b;\n        b = a;\n        a = tmp;\n \
    \   }\n    \n    // check for a negative divisor\n    if (b < 0) {\n        long\
    \ tmp = b;\n        b = -a;\n        a = -a;\n    }\n    \n    // check for a\
    \ positive divisor\n    if (a > b) {\n        long tmp = a;\n        a = b;\n\
    \        b = tmp;\n    }\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn6xa_8w3.d(142): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn6xa_8w3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong t = b;\n\t\t\
    b = a % b;\n\t\ta = t;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpbqt5bi01.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpbqt5bi01.__unittest_L23_C1() [0x427a81]\n??:?
    void tmpbqt5bi01.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x7820d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphcbtt30k.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphcbtt30k.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    while (a !=\
    \ 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n \
    \           a = b;\n        }\n        else {\n            gcd = a;\n        \
    \    a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnwimho83.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpnwimho83.__unittest_L36_C1() [0x427b13]\n??:?
    void tmpnwimho83.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0xaca0e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong r;\n\t\n\tr = a % b;\n\t\n\tif (r != 0)\n\t\treturn r;\n\
    \t\n\tr = b % a;\n\t\n\treturn r;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpikhr0k1d.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d75]\n??:? void tmpikhr0k1d.__unittest_L24_C1() [0x427a6d]\n??:?
    void tmpikhr0k1d.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42814b]\n??:? _d_run_main [0x4280b6]\n??:? main [0x427b07]\n??:?
    __libc_start_main [0xfb85554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeyh5k7af.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeyh5k7af.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n    >>> is_power_of_two(2L)\n\
    \    True\n    >>> is_power_of_two(5L)\n    True\n    >>> is_power_of_two(7L)\n\
    \    False\n    \n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfxgl9yzk.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpfxgl9yzk.__unittest_L33_C1() [0x427a7d]\n??:?
    void tmpfxgl9yzk.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0xb7d6b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5p66ta0m.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmp5p66ta0m.__unittest_L28_C1() [0x427abb]\n??:?
    void tmp5p66ta0m.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xaf0c0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a / b;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0) return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa6s_9idl.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6s_9idl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    while (a != 0)\
    \ {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n    \
    \        a = b;\n        }\n        else {\n            gcd = a;\n           \
    \ a = a % b;\n        }\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzk4aagzu.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpzk4aagzu.__unittest_L35_C1() [0x427b13]\n??:?
    void tmpzk4aagzu.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0xcb5d8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a % b != 0) {\n\t\tgcd\
    \ = b;\n\t\tb %= gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n        gcd\
    \ = (gcd > r) ? gcd : r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        }\n        else {\n            gcd = a;\n  \
    \          a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpa7w_bsmz.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpa7w_bsmz.__unittest_L37_C1() [0x427b13]\n??:?
    void tmpa7w_bsmz.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0x19f57554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t\tgcd = gcd > r ? gcd : r;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2yclsu7k.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp2yclsu7k.__unittest_L22_C1() [0x427a81]\n??:?
    void tmp2yclsu7k.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x270fd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        if (a > b)\
    \ {\n            a %= b;\n        }\n        else {\n            b %= a;\n   \
    \     }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvt1eoabr.d(21): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvt1eoabr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta = a % b;\n\t\t} else {\n\t\t\tb = b % a;\n\t\t}\n\t\tgcd = (gcd\
    \ > a) ? gcd : a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpyvp981cp.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpyvp981cp.__unittest_L26_C1() [0x427a99]\n??:?
    void tmpyvp981cp.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0x9aaea554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n\
    \        t = b;\n        b = a % t;\n        a = t;\n        gcd = t;\n    }\n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        } else {\n  \
    \          b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (a > b) ?\
    \ a : b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (a < b) {\n        c = a;\n      \
    \  a = b;\n        b = c;\n    }\n    \n    while (a != 0) {\n        c = a %\
    \ b;\n        a = b;\n        b = c;\n    }\n    \n    return b;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_3i760n4.d(17): Error: undefined identifier `gcd` in module
    `std.math`\n/tmp/tmp_3i760n4.d(18): Error: undefined identifier `mod` in module
    `std.math`, did you mean function `fmod`?\n/tmp/tmp_3i760n4.d(19): Error: undefined
    identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_3i760n4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpemu3uk0l.d(20): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemu3uk0l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) \n    {\n        long temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    \n    gcd = 1;\n    \n \
    \   while (a != 0) \n    {\n        if (a > b) \n        {\n            gcd =\
    \ b - gcd;\n            b = a;\n        }\n        a = a % b;\n    }\n    \n \
    \   return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwx1_amrx.d(40): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpwx1_amrx.__unittest_L36_C1() [0x427a91]\n??:?
    void tmpwx1_amrx.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0xe3fd1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n \
    \       gcd = std.math.gcd(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1kfq3ma9.d(20): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1kfq3ma9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b *\
    \ gcd;\n        } else {\n            b %= a;\n            gcd = a * gcd;\n  \
    \      }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tlong temp\
    \ = a;\n\t\ta = b;\n\t\tb = temp % b;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdxakm4sj.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpdxakm4sj.__unittest_L24_C1() [0x427a89]\n??:?
    void tmpdxakm4sj.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x1d372554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5p66ta0m.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmp5p66ta0m.__unittest_L28_C1() [0x427abb]\n??:?
    void tmp5p66ta0m.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xaf0c0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a % b == 0) {\n\
    \t\t\tgcd = b;\n\t\t\tbreak;\n\t\t}\n\t\tb = b / 2;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2q_uoi3e.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp2q_uoi3e.__unittest_L23_C1() [0x427a7d]\n??:?
    void tmp2q_uoi3e.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x4ae61554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long temp = a;\n\
    \        a = b;\n        b = temp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n        }\n        a = a % b;\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6wwn3rmn.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmp6wwn3rmn.__unittest_L33_C1() [0x427a95]\n??:?
    void tmp6wwn3rmn.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xa830f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong tmp;\n\t\n\twhile (a != 0) {\n\t\ttmp\
    \ = a % b; \n\t\tif (tmp > 0) {\n\t\t\tgcd = b; \n\t\t\tb = tmp;\n\t\t} else {\n\
    \t\t\ta = b;\n\t\t}\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= a;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = a %\
    \ b;\n\t\tgcd = gcd*b + a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b,\
    \ a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphbxvpw6o.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmphbxvpw6o.__unittest_L23_C1() [0x427a7d]\n??:?
    void tmphbxvpw6o.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x44565554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong t\
    \ = a % b;\n\t\tif (t != 0) {\n\t\t\tgcd = b;\n\t\t\tb = t;\n\t\t}\n\t\ta = a\
    \ / b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5g_w37x.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5g_w37x.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b % gcd, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdddxkbh2.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdddxkbh2.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt =\
    \ a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\t\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\
    \t\tb = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b % gcd, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdddxkbh2.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdddxkbh2.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvdqrw196.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvdqrw196.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong t = a % b;\n\
    \t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd << 1;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp3x7qwpec.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d75]\n??:? void tmp3x7qwpec.__unittest_L23_C1() [0x427a71]\n??:?
    void tmp3x7qwpec.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42814b]\n??:? _d_run_main [0x4280b6]\n??:? main [0x427b0b]\n??:?
    __libc_start_main [0x49667554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = b;\n\t\tb\
    \ = a % b;\n\t\ta = gcd;\n\t}\n\treturn a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd\
    \ == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0vo3nljf.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0vo3nljf.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong\
    \ r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > r) ? gcd : r;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpiq_z6dna.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpiq_z6dna.__unittest_L25_C1() [0x427a89]\n??:?
    void tmpiq_z6dna.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x83643554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvdqrw196.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvdqrw196.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t\treturn a;\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0yitrjrb.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0yitrjrb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\twhile (a != 0) {\n\t\tgcd = gcd * a;\n\t\ta = a /\
    \ b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0gv6tpyv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmp0gv6tpyv.__unittest_L24_C1() [0x427a9d]\n??:?
    void tmp0gv6tpyv.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0xa880e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\t\
    temp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdu8k1tsq.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpdu8k1tsq.__unittest_L24_C1() [0x427a7d]\n??:?
    void tmpdu8k1tsq.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0xf8ec5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n\
    \    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1j3c8w40.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1j3c8w40.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return b;\n    \n    return\
    \ __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbti5_66m.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmpbti5_66m.d(22): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbti5_66m.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return __gcd(b, __gcd(a, gcd));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzfhmth7i.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmpzfhmth7i.d(23): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfhmth7i.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        if (a > b)\
    \ {\n            a %= b;\n        } else {\n            b %= a;\n        }\n \
    \       gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux0b2nlf.d(20): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux0b2nlf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        if (a % b ==\
    \ 0) {\n            gcd = b;\n            break;\n        }\n        gcd = b;\n\
    \        b = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2b8_j1ik.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp2b8_j1ik.__unittest_L24_C1() [0x427a81]\n??:?
    void tmp2b8_j1ik.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x38a3b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_3i760n4.d(17): Error: undefined identifier `gcd` in module
    `std.math`\n/tmp/tmp_3i760n4.d(18): Error: undefined identifier `mod` in module
    `std.math`, did you mean function `fmod`?\n/tmp/tmp_3i760n4.d(19): Error: undefined
    identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_3i760n4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = a % b;\n\t\
    \ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5dm0ls1s.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp5dm0ls1s.__unittest_L22_C1() [0x427a7d]\n??:?
    void tmp5dm0ls1s.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0xb166b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a;\n    while(gcd != 0) {\n \
    \       if(b % gcd == 0) {\n            gcd = b;\n        }\n        else {\n\
    \            gcd = b % gcd;\n        }\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzhcn0iu6.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzhcn0iu6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tgcd = a % b;\n\t\tif (gcd\
    \ == 0) break;\n\t\ta = b;\n\t\tb = gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnl3jx1jp.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpnl3jx1jp.__unittest_L23_C1() [0x427a69]\n??:?
    void tmpnl3jx1jp.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0xf4492554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tlong tmp\
    \ = b;\n\t\tb = a % b;\n\t\ta = tmp;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp33u7gh29.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp33u7gh29.__unittest_L24_C1() [0x427a89]\n??:?
    void tmp33u7gh29.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x3faba554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd,\
    \ b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplop9qup0.d(22): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplop9qup0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy1u8e2z.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy1u8e2z.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = gcd*b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n\
    \        t = b;\n        b = a % t;\n        a = t;\n        gcd = t;\n    }\n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp91aaklg0.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmp91aaklg0.__unittest_L21_C1() [0x427a8f]\n??:?
    void tmp91aaklg0.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x9bf0d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, a % gcd);\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplt8ohrod.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplt8ohrod.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_3i760n4.d(17): Error: undefined identifier `gcd` in module
    `std.math`\n/tmp/tmp_3i760n4.d(18): Error: undefined identifier `mod` in module
    `std.math`, did you mean function `fmod`?\n/tmp/tmp_3i760n4.d(19): Error: undefined
    identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_3i760n4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        } else {\n  \
    \          b %= a;\n        }\n        gcd *= a;\n    }\n    \n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return __gcd(b, gcd);\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpucii91ql.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmpucii91ql.d(24): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpucii91ql.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    return __gcd(gcd, b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeoiz3gnk.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmpeoiz3gnk.d(20): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeoiz3gnk.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (b & 1) gcd = std.math.gcd(gcd,\
    \ b);\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1c9zcchv.d(15): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1c9zcchv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // find greatest common divisor of\
    \ a * b\n    for(gcd = 1; a && b; gcd = (a % b), a = b, b = a % b);\n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp__j348o6.d(16): Error: use `{ }` for an empty statement, not
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__j348o6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        } else {\n  \
    \          b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = a % b;\n\t\
    \ta = b;\n\t\tb = t;\n\t\tgcd = gcd > b ? gcd : b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp7g5ms9_n.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp7g5ms9_n.__unittest_L22_C1() [0x427a81]\n??:?
    void tmp7g5ms9_n.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xc284f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (b > 0) {\n\t\tif (b &\
    \ 1) gcd = std.math.gcd(gcd, b);\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0o0q8nl2.d(17): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o0q8nl2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpasgf2ow3.d(15): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpasgf2ow3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpibfxmadt.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibfxmadt.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    while (a !=\
    \ 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b * gcd;\n\
    \        }\n        else {\n            b %= a;\n            gcd = a * gcd;\n\
    \        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\tif (gcd\
    \ == 0) \n\t\treturn a;\n\t\n\treturn greatest_common_divisor(b % gcd, gcd);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4pict3ve.d(15): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4pict3ve.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (b > 0) {\n\t\tif (b &\
    \ 1) gcd = std.math.gcd(gcd, b);\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0o0q8nl2.d(17): Error: undefined identifier `gcd` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o0q8nl2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // if b is 0, then gcd is also 0\n\
    \    if (b == 0)\n        return a;\n    \n    // if b is negative, then gcd is\
    \ negative\n    if (b < 0)\n        return greatest_common_divisor(-a, -b);\n\
    \    \n    // if b is positive, then gcd is positive\n    if (b > 0)\n    {\n\
    \        // if b is odd, then gcd is positive\n        if (b & 1)\n          \
    \  return a;\n        \n        // if b is even, then gcd is negative\n      \
    \  else\n        {\n            gcd = a;\n            while (a % b != 0)\n   \
    \         {\n                a /= b;\n                gcd *= b;\n            }\n\
    \            return gcd;\n        }\n    }\n    \n    // if b is zero, then gcd\
    \ is also zero\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplz571tmv.d(50): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dbd]\n??:? void tmplz571tmv.__unittest_L46_C1() [0x427ab5]\n??:?
    void tmplz571tmv.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428193]\n??:? _d_run_main [0x4280fe]\n??:? main [0x427b4f]\n??:?
    __libc_start_main [0x78ce554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (a < b) {\n        c = a;\n      \
    \  a = b;\n        b = c;\n    }\n    \n    while (b != 0) {\n        c = a %\
    \ b;\n        a = b;\n        b = c;\n    }\n    \n    return a;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (gcd != 0)\n\t{\n\t\tlong\
    \ r = a % gcd;\n\t\ta = gcd;\n\t\tgcd = r;\n\t}\n\t\n\tgcd = b;\n\twhile (gcd\
    \ != 0)\n\t{\n\t\tlong r = b % gcd;\n\t\tb = gcd;\n\t\tgcd = r;\n\t}\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptrgbazi2.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmptrgbazi2.__unittest_L33_C1() [0x427a99]\n??:?
    void tmptrgbazi2.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xdfcaf554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong tmp = a;\n\
    \t\ta = b % a;\n\t\tb = tmp;\n\t\tgcd = a > gcd ? a : gcd;\n\t}\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpexbdhfnn.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpexbdhfnn.__unittest_L24_C1() [0x427ad5]\n??:?
    void tmpexbdhfnn.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x9b0d1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long long gcd = 1;\n    \n    while(a != 0) {\n        long\
    \ long tmp = a % b;\n        a = b;\n        b = tmp;\n        gcd = gcd(gcd,\
    \ b);\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl3cn6kds.d(13): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpl3cn6kds.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl3cn6kds.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t\tgcd = std.math.remainder(gcd, b);\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43nvjbcz.d(19): Error: cannot implicitly convert expression
    `remainder(cast(real)gcd, cast(real)b)` of type `real` to `long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp43nvjbcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = b %\
    \ a;\n\t\tgcd = a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4zgnp90h.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmp4zgnp90h.__unittest_L22_C1() [0x427a69]\n??:?
    void tmp4zgnp90h.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x55081554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        }\n        else {\n            gcd = a;\n  \
    \          a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpa7w_bsmz.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpa7w_bsmz.__unittest_L37_C1() [0x427b13]\n??:?
    void tmpa7w_bsmz.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0x19f57554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphcbtt30k.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphcbtt30k.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        }\n        else {\n            gcd = a;\n       \
    \     a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmyhjozp4.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpmyhjozp4.__unittest_L37_C1() [0x427b13]\n??:?
    void tmpmyhjozp4.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0x4566b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= a;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphh273iqk.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmphh273iqk.__unittest_L28_C1() [0x427a95]\n??:?
    void tmphh273iqk.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xf1ecb554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = gcd*b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0) {\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\treturn\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp919lto_5.d(16): Error: undefined identifier `gcd` in module
    `std.math`\n/tmp/tmp919lto_5.d(17): Error: undefined identifier `mod` in module
    `std.math`, did you mean function `fmod`?\n/tmp/tmp919lto_5.d(18): Error: undefined
    identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp919lto_5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (b == 0)\n        return a;\n    \n\
    \    c = a % b;\n    \n    if (c > 0)\n        return greatest_common_divisor(b,\
    \ c);\n    \n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    for (;;) {\n        gcd =\
    \ a % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n   \
    \ }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8n3xsm25.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d7d]\n??:? void tmp8n3xsm25.__unittest_L29_C1() [0x427a75]\n??:?
    void tmp8n3xsm25.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428153]\n??:? _d_run_main [0x4280be]\n??:? main [0x427b0f]\n??:?
    __libc_start_main [0x64b66554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0) {\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\treturn\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp919lto_5.d(16): Error: undefined identifier `gcd` in module
    `std.math`\n/tmp/tmp919lto_5.d(17): Error: undefined identifier `mod` in module
    `std.math`, did you mean function `fmod`?\n/tmp/tmp919lto_5.d(18): Error: undefined
    identifier `mod` in module `std.math`, did you mean function `fmod`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp919lto_5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    c = a % b;\n    \n    if (c > 0) \n \
    \   {\n        return greatest_common_divisor(b, c);\n    }\n    \n    return\
    \ b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (gcd = a; a != 0; a = b % a) {\n\t\t\
    b = gcd;\n\t\tgcd = a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5wizltim.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmp5wizltim.__unittest_L22_C1() [0x427a65]\n??:?
    void tmp5wizltim.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427aff]\n??:?
    __libc_start_main [0x4a0ac554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt =\
    \ a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong t = b;\n\t\tb =\
    \ a % b;\n\t\ta = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb45stv1_.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpb45stv1_.__unittest_L22_C1() [0x427a85]\n??:?
    void tmpb45stv1_.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b1f]\n??:?
    __libc_start_main [0x3bf56554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy1u8e2z.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy1u8e2z.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpg4zs4t84.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpg4zs4t84.__unittest_L22_C1() [0x427a8f]\n??:?
    void tmpg4zs4t84.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0xd8c6e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a)\
    \ ? gcd : a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfniibni8.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpfniibni8.__unittest_L26_C1() [0x427aa5]\n??:?
    void tmpfniibni8.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b3f]\n??:?
    __libc_start_main [0xc9335554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > r) ? gcd : r;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2kznnlcg.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp2kznnlcg.__unittest_L24_C1() [0x427a89]\n??:?
    void tmp2kznnlcg.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x5b9ce554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(b % 2 == 0)\n\t\treturn greatest_common_divisor(a * a, b / 2);\n\
    \telse\n\t{\n\t\tgcd = greatest_common_divisor(a * a, b / 2);\n\t\tif(a % gcd\
    \ == 0)\n\t\t\treturn gcd;\n\t\telse\n\t\t\treturn greatest_common_divisor(a *\
    \ a, (b / 2) * (b / 2));\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpa9knihu5.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpa9knihu5.__unittest_L29_C1() [0x427ae9]\n??:?
    void tmpa9knihu5.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b83]\n??:?
    __libc_start_main [0x1d3ad554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // Handle negative numbers\n    if\
    \ (a < 0)\n        a = -a;\n    if (b < 0)\n        b = -b;\n    \n    // Handle\
    \ zero\n    if (a == 0 || b == 0)\n        return 0;\n    \n    // Handle a &\
    \ b being equal\n    if (a == b)\n        return a;\n    \n    // Handle a & b\
    \ being equal\n    if (a > b)\n        std.swap(a, b);\n    \n    // Find the\
    \ gcd of both numbers\n    gcd = std.gcd(a, b);\n    \n    // Handle a & b being\
    \ equal\n    if (a > b)\n        std.swap(a, b);\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptx15kd6d.d(31): Error: undefined identifier `swap` in package
    `std`\n/tmp/tmptx15kd6d.d(34): Error: undefined identifier `gcd` in package `std`\n/tmp/tmptx15kd6d.d(38):
    Error: undefined identifier `swap` in package `std`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptx15kd6d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    while (a != 0)\
    \ {\n        if (a > b) {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd *= b;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong r;\n\t\n\tr = a % b;\n\t\n\twhile (r != 0)\n\t{\n\t\t\
    a = b;\n\t\tb = r;\n\t\tr = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0) return a;\n\
    \    \n    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5zsrx24m.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5zsrx24m.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        long\
    \ r = a % b;\n        a = b;\n        b = r;\n    }\n    \n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvqsz5rr7.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpvqsz5rr7.__unittest_L25_C1() [0x427ab3]\n??:?
    void tmpvqsz5rr7.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b27]\n??:?
    __libc_start_main [0x6fef9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            a %= b;\n        }\n        else\
    \ {\n            b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong r;\n\t\n\tr = a % b;\n\t\n\twhile (r != 0) {\n\t\ta =\
    \ b;\n\t\tb = r;\n\t\tr = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd > r ? gcd : r;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpuh6q1eim.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpuh6q1eim.__unittest_L22_C1() [0x427a81]\n??:?
    void tmpuh6q1eim.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x108c1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpk_721vd7.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpk_721vd7.__unittest_L26_C1() [0x427abb]\n??:?
    void tmpk_721vd7.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x906d0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5g_w37x.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5g_w37x.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = 0;\n    \n    while (a != 0) {\n        if (a > b) {\n        \
    \    a %= b;\n        }\n        else {\n            b %= a;\n        }\n    \
    \    gcd += a;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpotlegq4m.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpotlegq4m.__unittest_L32_C1() [0x427a9d]\n??:?
    void tmpotlegq4m.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0xbd3d7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong tmp;\n\t\n\twhile (a != 0) {\n\t\ttmp\
    \ = a % b;\n\t\ta = b;\n\t\tb = tmp;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        }\n        else {\n            gcd = a;\n  \
    \          a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpa7w_bsmz.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpa7w_bsmz.__unittest_L37_C1() [0x427b13]\n??:?
    void tmpa7w_bsmz.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0x19f57554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (a != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b * gcd;\n\
    \        } else {\n            b %= a;\n            gcd = a * gcd;\n        }\n\
    \    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        if ((a & 1)\
    \ == 0) {\n            gcd = b * gcd;\n        }\n        a >>= 1;\n        b\
    \ >>= 1;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpf7ugqr2v.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d75]\n??:? void tmpf7ugqr2v.__unittest_L23_C1() [0x427a97]\n??:?
    void tmpf7ugqr2v.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42814b]\n??:? _d_run_main [0x4280b6]\n??:? main [0x427b0b]\n??:?
    __libc_start_main [0xede9c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (gcd = 1; a % gcd == 0 && b % gcd ==\
    \ 0; gcd *= gcd)\n\t\tif (a / gcd > b / gcd)\n\t\t\tbreak;\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, a % gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqksy4dfl.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqksy4dfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return gcd = 1;\n\
    \    \n    return __gcd(gcd, b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps0uxgs2b.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmps0uxgs2b.d(21): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0uxgs2b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5p66ta0m.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmp5p66ta0m.__unittest_L28_C1() [0x427abb]\n??:?
    void tmp5p66ta0m.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xaf0c0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long temp = a;\n\
    \        a = b;\n        b = temp;\n    }\n    \n    for (;;) {\n        gcd =\
    \ a % b;\n        if (gcd == 0) return b;\n        a = b;\n        b = gcd;\n\
    \    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpibfxmadt.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibfxmadt.d",
    "-I/tmp"]\n'''
  stdout: b''

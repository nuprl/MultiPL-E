name: HumanEval_39_prime_fib
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 2L;\n    long k = 2L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 2L;\n    long s = 2L;\n    long t = 2L;\n    long u = 2L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 2L;\n    long y = 2L;\n    long z =\
    \ 2L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 2L;\n    long k = 2L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 2L;\n    long s = 2L;\n    long t = 2L;\n    long u = 2L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 2L;\n    long y = 2L;\n    long z =\
    \ 2L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 2L;\n    long k = 2L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 2L;\n    long s = 2L;\n    long t = 2L;\n    long u = 2L;\nunittest\n\
    {\n    alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj9qq1e1l.d(93): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9qq1e1l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a,b,c,d,e,f;\n    long p,q,r;\n    long i,j,k;\n    long t;\n\
    \    long m;\n    long n;\n    long m;\n    long k;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n    long m;\n\
    \    long m;\n    \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpleus4e03.d(146): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpleus4e03.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvxzws0pl.d(94): Error: no identifier for declarator `long`\\\
    n/tmp/tmpvxzws0pl.d(94): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvxzws0pl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long long int a = 2L;\n    long long int b = 2L;\n    long long\
    \ int c = 2L;\n    long long int d = 2L;\n    long long int n1 = 2L;\n    long\
    \ long int n2 = 2L;\n    long long int n3 = 2L;\n    long long int n4 = 1L;\n\
    \    long long int n5 = 1L;\n    long long int n6 = 1L;\n    long long int n7\
    \ = 1L;\n    long long int n8 = 1L;\n    long long int n9 = 1L;\n    long long\
    \ int n10 = 1L;\n    long long int n11 = 1L;\n    long long int n12 = 1L;\n  \
    \  long long int n13 = 1L;\n    long long int n14 = 1L;\n    long long int n15\
    \ = 1L;\n    long long int n16 = 1L;\n    long long int n17 = 1L;\n    long long\
    \ int n18 = 1L;\n    long long int n19 = 1L;\n    long long int n20 = 1L;\n  \
    \  long long int n21 = 1L;\n    long long int n22 = 1L;\n    long long int n23\
    \ = 1L;\n    long long int n24 = 1L;\n    long long int n25 = 1L;\n    long long\
    \ int n26 = 1L;\n    long long int n27 = 1L;\n    long long int n28 = 1L;\n  \
    \  long long int n29 = 1L;\n    long long int n30 = 1L;\n    long long int n31\
    \ = 1L;\n    long long int n32 = 1L;\n    long long int n33 = 1L;\n    long long\
    \ int n34 = 1L;\n    long long int n35 = 1L;\n    long long int n36 = 1L;\n  \
    \  long long int n37 = 1L;\n    long long int n38 = 1L;\n    long long int n39\
    \ = 1L;\n    long long int n40 = 1L;\n    long long int n41 = 1L;\n    long long\
    \ int n42 = 1L;\n    long long int n43 = 1L;\n    long long int n44 = 1L;\n  \
    \  long long int n45 = 1L;\n    long long int n46 = 1L;\n    long long int n47\
    \ = 1L;\nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4709poz7.d(20): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(20): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(21): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(21): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(22): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(22): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(23): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(23): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(24): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(24): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(25): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(25): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(26): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(26): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(27): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(27): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(28): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(28): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmp4709poz7.d(29): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp4709poz7.d(29): Error: no identifier for declarator\
    \ `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4709poz7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5144w06m.d(94): Error: no identifier for declarator `long`\\\
    n/tmp/tmp5144w06m.d(94): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5144w06m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long n1 = 2L;\n    long n2 = 2L;\n    long n3 = 2L;\n    long n4 = 2L;\n\
    \    long n5 = 2L;\n    long n6 = 2L;\n    long n7 = 2L;\n    long n8 = 2L;\n\
    \    long n9 = 2L;\n    long n10 = 2L;\n    long n11 = 2L;\n    long n12 = 2L;\n\
    \    long n13 = 2L;\n    long n14 = 2L;\n    long n15 = 2L;\n    long n16 = 2L;\n\
    \    long n17 = 2L;\n    long n18 = 2L;\n    long n19 = 2L;\n    long n20 = 2L;\n\
    \    long n21 = 2L;\n    long n22 = 2L;\n    long n23 = 2L;\n    long n24 = 2L;\n\
    \    long n25 = 2L;\n    long n26 = 2L;\n    long n27 = 2L;\n    long n28 = 2L;\n\
    \    long n29 = 2L;\n    long n30 = 2L;\n    long n31 = 2L;\n    long n32 = 2L;\n\
    \    long n33 = 2L;\n    long n34 = 2L;\n    long n35 = 2L;\n    long n36 = 2L;\n\
    \    long n37 = 2L;\n    long n38 = 2L;\n    long n39 = 2L;\n    long n40 = 2L;\n\
    \    long n41 = 2L;\n    long n42 = 2L;\n    long n43 = 2L;\n    long n44 = 2L;\n\
    \    long n45 = 2L;\n    long n46 = 2L;\n    long n47 = 2L;\n    long n48 = 2L;\n\
    \    long n49 = 2L;\n    long n50 = 2L;\n    long n51 = 2L;\n    long n52 = 2L;\n\
    \    long n53 = 2L;\n    long n54 = 2L;\n    long n55 = 2L;\n    long n56 = 2L;\n\
    \    long n57 = 2L;\n    long n58 = 2L;\n    long n59 = 2L;\n    \nunittest\n\
    {\n    alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vphn342.d(84): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8vphn342.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long long i, sum, a, b = 1;\n    long long limit = sqrt(n);\n  \
    \  \n    for(i = 2; i <= limit; i++)\n    {\n        a = b;\n        b = a + b;\n\
    \        if(b == n)\n        {\n            sum = a;\n            break;\n   \
    \     }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = prime_fib;\n\
    \n    assert(candidate(1L) == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L)\
    \ == 5L);\n    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n\
    \    assert(candidate(6L) == 233L);\n    assert(candidate(7L) == 1597L);\n   \
    \ assert(candidate(8L) == 28657L);\n    assert(candidate(9L) == 514229L);\n  \
    \  assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu7fgidkd.d(20): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpu7fgidkd.d(21): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpu7fgidkd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 1, b = 1;\n    long i;\n    long sum = 0;\n    long j;\n\
    \    \n    for(i = 2; i <= n; i++)\n    {\n        sum = a;\n        a = b;\n\
    \        b = sum + i;\n    }\n    \n    for(j = 2; j <= n; j++)\n    {\n     \
    \   if(j % 2 == 0)\n        {\n            if(b % 2 == 0)\n            {\n   \
    \             b = b / 2;\n                sum += b;\n            }\n         \
    \   else\n            {\n                sum += b;\n            }\n        }\n\
    \        else\n        {\n            if(b % 2 == 0)\n            {\n        \
    \        b = b / 2;\n                sum += b;\n            }\n            else\n\
    \            {\n                sum += b;\n            }\n        }\n    }\n \
    \   \n    return sum;\n}\n/*\nunittest\n{\n    alias candidate = prime_fib;\n\n\
    \    assert(candidate(1L) == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L)\
    \ == 5L);\n    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n\
    \    assert(candidate(6L) == 233L);\n    assert(candidate(7L) == 1597L);\n   \
    \ assert(candidate(8L) == 28657L);\n    assert(candidate(9L) == 514229L);\n  \
    \  assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuoh84fev.d(62): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuoh84fev.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long fib;\n    long prime;\n    long i;\n    \n    fib = 0;\n  \
    \  prime = 1;\n    \n    for(i = 2; i <= n; i++)\n    {\n        fib = fib + i;\n\
    \        if(fib > n)\n        {\n            break;\n        }\n        \n   \
    \     if(fib == n)\n        {\n            prime = i;\n            break;\n  \
    \      }\n    }\n    \n    return prime;\n}\nunittest\n{\n    alias candidate\
    \ = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L) ==\
    \ 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3h22i659.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmp3h22i659.__unittest_L44_C1()\
    \ [0x427a88]\\n??:? void tmp3h22i659.__modtest() [0x427bd8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427beb]\\\
    n??:? __libc_start_main [0x2e91a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 1, b = 1;\n    long i;\n    long sum = 0;\n    \n    for(i\
    \ = 2; i <= n; i++)\n    {\n        if((i % 2) == 0)\n        {\n            sum\
    \ += a;\n        }\n        else\n        {\n            sum += b;\n        }\n\
    \        \n        a = b;\n        b = sum;\n        sum = 0;\n    }\n    \n \
    \   return sum;\n}\nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmk1r0e97.d(46): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e75]\\n??:? void tmpmk1r0e97.__unittest_L42_C1()\
    \ [0x427aa4]\\n??:? void tmpmk1r0e97.__modtest() [0x427bf4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa2e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbc1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa05]\\n??:? runModuleUnitTests [0x42b971]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42824b]\\n??:? _d_run_main [0x4281b6]\\n??:? main [0x427c07]\\\
    n??:? __libc_start_main [0x9c1e0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long n1 = 2L;\n    long n2 = 2L;\n    long n3 = 2L;\n    long n4 = 2L;\n\
    \    long n5 = 2L;\n    long n6 = 2L;\n    long n7 = 2L;\n    long n8 = 2L;\n\
    \    long n9 = 2L;\n    long n10 = 2L;\n    long n11 = 2L;\n    long n12 = 2L;\n\
    \    long n13 = 2L;\n    long n14 = 2L;\n    long n15 = 2L;\n    long n16 = 2L;\n\
    \    long n17 = 2L;\n    long n18 = 2L;\n    long n19 = 2L;\n    long n20 = 2L;\n\
    \    long n21 = 2L;\n    long n22 = 2L;\n    long n23 = 2L;\n    long n24 = 2L;\n\
    \    long n25 = 2L;\n    long n26 = 2L;\n    long n27 = 2L;\n    long n28 = 2L;\n\
    \    long n29 = 2L;\n    long n30 = 2L;\n    long n31 = 2L;\n    long n32 = 2L;\n\
    \    long n33 = 2L;\n    long n34 = 2L;\n    long n35 = 2L;\n    long n36 = 2L;\n\
    \    long n37 = 2L;\n    long n38 = 2L;\n    long n39 = 2L;\n    long n40 = 2L;\n\
    \    long n41 = 2L;\n    long n42 = 2L;\n    long n43 = 2L;\n    long n44 = 2L;\n\
    \    long n45 = 2L;\n    long n46 = 2L;\n    long n47 = 2L;\n    long n48 = 2L;\n\
    \    long n49 = 2L;\n    long n50 = 2L;\n    long n51 = 2L;\n    long n52 = 2L;\n\
    \    long n53 = 2L;\n    long n54 = 2L;\n    long n55 = 2L;\n    long n56 = 2L;\n\
    \    long n57 = 2L;\n    long n58 = 2L;\n    long n59 = 2L;\n    \nunittest\n\
    {\n    alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptr5p47wy.d(84): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptr5p47wy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\nunittest\n{\n \
    \   alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr0ib9nbg.d(123): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr0ib9nbg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a,b,c,d;\n    long fib_number;\n    long prime_number;\n  \
    \  long temp;\n    \n    temp=n;\n    a=1;\n    b=1;\n    c=1;\n    d=1;\n   \
    \ \n    while(temp!=0)\n    {\n        fib_number=(a*b)%temp;\n        prime_number=(c*d)%temp;\n\
    \        temp=fib_number;\n        a=b;\n        b=c;\n        c=d;\n        d=prime_number;\n\
    \    }\n    \n    return d;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=primes,math,c++,fibonacci\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias\
    \ candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpszjz_4o4.d(44): Error: declaration expected, not `<`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszjz_4o4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoaa3cslc.d(94): Error: no identifier for declarator `long`\\\
    n/tmp/tmpoaa3cslc.d(94): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoaa3cslc.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a,b,c,d,e;\n    long p,q,r;\n    long i,j,k;\n    long t;\n\
    \    long n2;\n    long n3;\n    long n4;\n    long n5;\n    long n6;\n    long\
    \ n7;\n    long n8;\n    long n9;\n    long n10;\n    long n11;\n    long n12;\n\
    \    long n13;\n    long n14;\n    long n15;\n    long n16;\n    long n17;\n \
    \   long n18;\n    long n19;\n    long n20;\n    long n21;\n    long n22;\n  \
    \  long n23;\n    long n24;\n    long n25;\n    long n26;\n    long n27;\n   \
    \ long n28;\n    long n29;\n    long n30;\n    long n31;\n    long n32;\n    long\
    \ n33;\n    long n34;\n    long n35;\n    long n36;\n    long n37;\n    long n38;\n\
    \    long n39;\n    long n40;\n    long n41;\n    long n42;\n    long n43;\n \
    \   long n44;\n    long n45;\n    long n46;\n    long n47;\n    long n48;\n  \
    \  long n49;\n    long n50;\n    long n51;\n    long n52;\n    long n53;\n   \
    \ long n54;\n    long n55;\n    long n56;\n    long n57;\n    long n58;\n    long\
    \ n59;\n    long n60;\n    long n61;\n    long n62;\n    long n63;\n    long n64;\n\
    \    long n65;\n    long n66;\n    long n67;\n    long n68;\n    long n69;\n \
    \   long n70;\n    long n71;\n    long n72;\n    long n73;\n    long n74;\n  \
    \  long n75;\n    long n76;\n    long n77;\n    long n78;\n    long n79;\n   \
    \ long n80;\n    long n81;\n    long n82;\n    long n83;\n    long n84;\n    long\
    \ n85;\n    long \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5n0qj2x7.d(109): Error: no identifier for declarator `long`\\\
    n/tmp/tmp5n0qj2x7.d(109): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5n0qj2x7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a,b;\n    long i,j;\n    long sum;\n    \n    a=1;\n    b=1;\n\
    \    sum=1;\n    \n    for(i=2;i<=n;i++)\n    {\n        sum=sum+a;\n        a=b;\n\
    \        b=sum;\n    }\n    \n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L) ==\
    \ 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9nx5yvl2.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmp9nx5yvl2.__unittest_L37_C1()\
    \ [0x427a88]\\n??:? void tmp9nx5yvl2.__modtest() [0x427bd8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427beb]\\\
    n??:? __libc_start_main [0xfe311554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 2L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 2L;\n    long n = 2L;\n    long o = 1L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf_xjaubn.d(94): Error: no identifier for declarator `long`\\\
    n/tmp/tmpf_xjaubn.d(94): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_xjaubn.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s = 2L;\n    long\
    \ t = 3L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n    long x =\
    \ 1L;\n    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long b = 2L;\n\
    \    long c = 2L;\n    long d = 2L;\n    long p = 1L;\n    long q = 1L;\n    long\
    \ r = 1L;\n    long s = 2L;\n    long t = 3L;\n    long u = 1L;\n    long v =\
    \ 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z = 1L;\n\
    \    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n    long\
    \ p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s = 2L;\n    long t =\
    \ 3L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n    long x = 1L;\n\
    \    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long b = 2L;\n    long\
    \ c = 2L;\n    long d = 2L;\n    long p = 1L;\n    long q = 1L;\n    long r =\
    \ 1L;\n    long s = 2L;\n    long t = 3L;\n    long u = 1L;\n    long v = 1L;\n\
    \    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z = 1L;\n    long\
    \ a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n    long p =\
    \ 1L;\n    long q = 1L;\n    long r = 1L;\n    long s = 2L;\n    long t = 3L;\n\
    \    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n    long x = 1L;\nunittest\n\
    {\n    alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L)\
    \ == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n\
    \    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L)\
    \ == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) ==\
    \ 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqnoog1yo.d(93): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqnoog1yo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ v = 1L;\n    long w = 1L;\n    long x = 1L;\n    long y = 1L;\n    long z =\
    \ 1L;\n    long a = 2L;\n    long b = 2L;\n    long c = 2L;\n    long d = 2L;\n\
    \    long e = 2L;\n    long f = 1L;\n    long g = 1L;\n    long h = 1L;\n    long\
    \ i = 1L;\n    long j = 1L;\n    long k = 1L;\n    long l = 1L;\n    long m =\
    \ 1L;\n    long n = 2L;\n    long o = 2L;\n    long p = 1L;\n    long q = 1L;\n\
    \    long r = 1L;\n    long s = 1L;\n    long t = 1L;\n    long u = 1L;\n    long\
    \ \nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9q6epjoa.d(94): Error: no identifier for declarator `long`\\\
    n/tmp/tmp9q6epjoa.d(94): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9q6epjoa.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1L)\n\
    \    2L\n    >>> prime_fib(2L)\n    3L\n    >>> prime_fib(3L)\n    5L\n    >>>\
    \ prime_fib(4L)\n    13L\n    >>> prime_fib(5L)\n    89L\n    \n*/\nlong prime_fib(long\
    \ n) \n{\n    long a = 1, b = 1, c;\n    long i;\n    \n    for (i = 2; i <= n;\
    \ i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ b;\n}\nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L)\
    \ == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n\
    \    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L)\
    \ == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) ==\
    \ 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) ==\
    \ 433494437L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt4hl9dqj.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e45]\\n??:? void tmpt4hl9dqj.__unittest_L30_C1()\
    \ [0x427a74]\\n??:? void tmpt4hl9dqj.__modtest() [0x427bc4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb6b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9fe]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb91]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9d5]\\n??:? runModuleUnitTests [0x42b941]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428294]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42821b]\\n??:? _d_run_main [0x428186]\\n??:? main [0x427bd7]\\\
    n??:? __libc_start_main [0xbae3b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

language: d
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div > maxDivisor)\n\
    \t\t\t\tmaxDivisor = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpt6ltnhrb.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpt6ltnhrb.__unittest_L23_C1() [0x427a80]\n??:?
    void tmpt6ltnhrb.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x865da554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpo94s0r6m.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpo94s0r6m.__unittest_L24_C1() [0x427ab6]\n??:?
    void tmpo94s0r6m.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b1f]\n??:?
    __libc_start_main [0x3df08554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9uh75das.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmp9uh75das.d(60):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9uh75das.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp___ppouh.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp___ppouh.__unittest_L20_C1() [0x427a78]\n??:?
    void tmp___ppouh.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0xd6774554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpz1wni4ji.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpz1wni4ji.__unittest_L21_C1() [0x427ab2]\n??:?
    void tmpz1wni4ji.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xc6826554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest\
    \ = n;\n\t\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhw4lz6k.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpdhw4lz6k.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhw4lz6k.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv8gwthid.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpv8gwthid.__unittest_L23_C1() [0x427a78]\n??:?
    void tmpv8gwthid.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x9a87c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif\
    \ (div > max_div) \n\t\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqj11g0pl.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqj11g0pl.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqj11g0pl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\
    \t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a\
    \ given number n, find the smallest number that divides n evenly, larger than\
    \ n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ smallest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= smallest)\n\t{\n\t\tif (n % div ==\
    \ 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n\
    }\n/*\n For a given number n, find the largest number that divides n evenly, larger\
    \ than n\n    >>> largest_divisor(15L)\n    5L\n    \n*/\nlong largest_divisor(long\
    \ n) \n{\n\tlong largest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n\
    \ For a given number n, find the smallest number that divides n evenly, larger\
    \ than n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp10d55xgt.d(113): Error: expression expected, not `unittest`\n/tmp/tmp10d55xgt.d(114):
    Error: found `{` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp10d55xgt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(divisor\
    \ > maxDivisor)\n\t\t\tmaxDivisor = divisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9w_91hj1.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9w_91hj1.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9w_91hj1.d(12): Error: use `long` for a 64 bit
    integer instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9w_91hj1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t\
    }\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp903pfcl.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpp903pfcl.__unittest_L20_C1() [0x427aae]\n??:?
    void tmpp903pfcl.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x988e6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfsxjjupr.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpfsxjjupr.__unittest_L21_C1() [0x427a80]\n??:?
    void tmpfsxjjupr.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x81601554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\tlong long max_div3 = 1;\n\tlong long max_div4\
    \ = 1;\n\tlong long max_div5 = 1;\n\tlong long max_div6 = 1;\n\tlong long max_div7\
    \ = 1;\n\tlong long max_div8 = 1;\n\tlong long max_div9 = 1;\n\tlong long max_div10\
    \ = 1;\n\tlong long max_div11 = 1;\n\tlong long max_div12 = 1;\n\tlong long max_div13\
    \ = 1;\n\tlong long max_div14 = 1;\n\tlong long max_div15 = 1;\n\tlong long max_div16\
    \ = 1;\n\tlong long max_div17 = 1;\n\tlong long max_div18 = 1;\n\tlong long max_div19\
    \ = 1;\n\tlong long max_div20 = 1;\n\tlong long max_div21 = 1;\n\tlong long max_div22\
    \ = 1;\n\tlong long max_div23 = 1;\n\tlong long max_div24 = 1;\n\tlong long max_div25\
    \ = 1;\n\tlong long max_div26 = 1;\n\tlong long max_div27 = 1;\n\tlong long max_div28\
    \ = 1;\n\tlong long max_div29 = 1;\n\tlong long max_div30 = 1;\n\tlong long max_div31\
    \ = 1;\n\tlong long max_div32 = 1;\n\tlong long max_div33 = 1;\n\tlong long max_div34\
    \ = 1;\n\tlong long max_div35 = 1;\n\tlong long max_div36 = 1;\n\tlong long max_div37\
    \ = 1;\n\tlong long max_div38 = 1;\n\tlong long max_div39 = 1;\n\tlong long max_div40\
    \ = 1;\n\tlong long max_div41 = 1;\n\tlong long max_div42 = 1;\n\tlong long max_div43\
    \ = 1;\n\tlong long max_div44 = 1;\n\tlong long max_div45 = 1;\n\tlong long max_div46\
    \ = 1;\n\tlong long max_div47 = 1;\n\tlong long max_div48 = 1;\n\tlong long max_div49\
    \ = 1;\n\tlong long max_div50 = 1;\n\tlong long max_div51 = 1;\n\tlong long max_div52\
    \ = 1;\n\tlong long max_div53 = 1;\n\tlong long max_div54 = 1;\n\tlong long max_div55\
    \ = 1;\n\tlong long max_div56 = 1;\n\tlong long max_div57 = 1;\n\tlong long max_div58\
    \ = 1;\n\tlong long max_div59 = 1;\n\tlong long max_div60 = 1;\n\tlong long max_div61\
    \ = 1;\n\tlong long max_div62 = 1;\n\tlong long max_div\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpye0b4yy2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpye0b4yy2.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpye0b4yy2.d(12): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpye0b4yy2.d(13): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(14): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(15): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(16): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(19):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(21):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpye0b4yy2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnkinagil.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpnkinagil.__unittest_L23_C1() [0x427a70]\n??:?
    void tmpnkinagil.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xdbd6d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnizzvx0.d(83): Error: no identifier for declarator `long`\n/tmp/tmpcnizzvx0.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcnizzvx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv97y_g9q.d(44): Error: semicolon expected, not `unittest`\n/tmp/tmpv97y_g9q.d(44):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpv97y_g9q.d", "-I/tmp"]\n'''
  stdout: b''

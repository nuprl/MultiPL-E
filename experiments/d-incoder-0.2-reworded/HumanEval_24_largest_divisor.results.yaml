language: d
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div > maxDivisor)\n\
    \t\t\t\tmaxDivisor = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9erornlv.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp9erornlv.__unittest_L23_C1() [0x427a80]

    ??:? void tmp9erornlv.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk5lq0lzw.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpk5lq0lzw.__unittest_L24_C1() [0x427ab6]

    ??:? void tmpk5lq0lzw.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0aty1zz9.d(60): Error: semicolon expected, not `unittest`

    /tmp/tmp0aty1zz9.d(60): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0aty1zz9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfslmn5q9.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpfslmn5q9.__unittest_L20_C1() [0x427a78]

    ??:? void tmpfslmn5q9.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8lwtjmg_.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp8lwtjmg_.__unittest_L21_C1() [0x427ab2]

    ??:? void tmp8lwtjmg_.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest\
    \ = n;\n\t\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9pnqgwwl.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp9pnqgwwl.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9pnqgwwl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpleli4cyz.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpleli4cyz.__unittest_L23_C1() [0x427a78]

    ??:? void tmpleli4cyz.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif\
    \ (div > max_div) \n\t\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp31jzq1ki.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp31jzq1ki.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp31jzq1ki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\
    \t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a\
    \ given number n, find the smallest number that divides n evenly, larger than\
    \ n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ smallest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= smallest)\n\t{\n\t\tif (n % div ==\
    \ 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n\
    }\n/*\n For a given number n, find the largest number that divides n evenly, larger\
    \ than n\n    >>> largest_divisor(15L)\n    5L\n    \n*/\nlong largest_divisor(long\
    \ n) \n{\n\tlong largest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n\
    \ For a given number n, find the smallest number that divides n evenly, larger\
    \ than n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkshphm2h.d(113): Error: expression expected, not `unittest`

    /tmp/tmpkshphm2h.d(114): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkshphm2h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(divisor\
    \ > maxDivisor)\n\t\t\tmaxDivisor = divisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5k29emmc.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp5k29emmc.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp5k29emmc.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5k29emmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t\
    }\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqudf2_sa.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpqudf2_sa.__unittest_L20_C1() [0x427aae]

    ??:? void tmpqudf2_sa.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr7d9u9le.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpr7d9u9le.__unittest_L21_C1() [0x427a80]

    ??:? void tmpr7d9u9le.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\tlong long max_div3 = 1;\n\tlong long max_div4\
    \ = 1;\n\tlong long max_div5 = 1;\n\tlong long max_div6 = 1;\n\tlong long max_div7\
    \ = 1;\n\tlong long max_div8 = 1;\n\tlong long max_div9 = 1;\n\tlong long max_div10\
    \ = 1;\n\tlong long max_div11 = 1;\n\tlong long max_div12 = 1;\n\tlong long max_div13\
    \ = 1;\n\tlong long max_div14 = 1;\n\tlong long max_div15 = 1;\n\tlong long max_div16\
    \ = 1;\n\tlong long max_div17 = 1;\n\tlong long max_div18 = 1;\n\tlong long max_div19\
    \ = 1;\n\tlong long max_div20 = 1;\n\tlong long max_div21 = 1;\n\tlong long max_div22\
    \ = 1;\n\tlong long max_div23 = 1;\n\tlong long max_div24 = 1;\n\tlong long max_div25\
    \ = 1;\n\tlong long max_div26 = 1;\n\tlong long max_div27 = 1;\n\tlong long max_div28\
    \ = 1;\n\tlong long max_div29 = 1;\n\tlong long max_div30 = 1;\n\tlong long max_div31\
    \ = 1;\n\tlong long max_div32 = 1;\n\tlong long max_div33 = 1;\n\tlong long max_div34\
    \ = 1;\n\tlong long max_div35 = 1;\n\tlong long max_div36 = 1;\n\tlong long max_div37\
    \ = 1;\n\tlong long max_div38 = 1;\n\tlong long max_div39 = 1;\n\tlong long max_div40\
    \ = 1;\n\tlong long max_div41 = 1;\n\tlong long max_div42 = 1;\n\tlong long max_div43\
    \ = 1;\n\tlong long max_div44 = 1;\n\tlong long max_div45 = 1;\n\tlong long max_div46\
    \ = 1;\n\tlong long max_div47 = 1;\n\tlong long max_div48 = 1;\n\tlong long max_div49\
    \ = 1;\n\tlong long max_div50 = 1;\n\tlong long max_div51 = 1;\n\tlong long max_div52\
    \ = 1;\n\tlong long max_div53 = 1;\n\tlong long max_div54 = 1;\n\tlong long max_div55\
    \ = 1;\n\tlong long max_div56 = 1;\n\tlong long max_div57 = 1;\n\tlong long max_div58\
    \ = 1;\n\tlong long max_div59 = 1;\n\tlong long max_div60 = 1;\n\tlong long max_div61\
    \ = 1;\n\tlong long max_div62 = 1;\n\tlong long max_div\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mxo0rn1.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp6mxo0rn1.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(13): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(14): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(16): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(17): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(18): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(19): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(20): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(21): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnpyh3y9g.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpnpyh3y9g.__unittest_L23_C1() [0x427a70]

    ??:? void tmpnpyh3y9g.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp18bvf0fv.d(44): Error: semicolon expected, not `unittest`

    /tmp/tmp18bvf0fv.d(44): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18bvf0fv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) \n\t{\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvc3ba7me.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvc3ba7me.__unittest_L21_C1() [0x427a70]

    ??:? void tmpvc3ba7me.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong d = 1;\n\
    \t\n\twhile(n > largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile(n\
    \ > largest) {\n\t\td /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi7qm_tev.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpi7qm_tev.__unittest_L24_C1() [0x427a80]

    ??:? void tmpi7qm_tev.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\
    \t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpisk2y8wm.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpisk2y8wm.__unittest_L22_C1() [0x427ab2]

    ??:? void tmpisk2y8wm.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with the\
    \ largest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <= n) \n\t{\n\
    \t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\t\ti =\
    \ i + d;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with the largest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <= n)\
    \ \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\
    \t\ti = i + d;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smalle\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw88dtwlw.d(111): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpw88dtwlw.d(121): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw88dtwlw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong div = 1;\n\twhile (div < n) \n\t{\n\t\tif (std.math.mod(n, div) == 0) \n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpejfxbdrq.d(14): Error: undefined identifier `mod` in module `std.math`,
    did you mean function `fmod`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpejfxbdrq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i, max_div = 1, max_div2\
    \ = 1, max_div3 = 1, max_div4 = 1, max_div5 = 1, max_div6 = 1, max_div7 = 1, max_div8\
    \ = 1, max_div9 = 1, max_div10 = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\t\
    if((n % i) == 0)\n\t\t{\n\t\t\tif((i % 10) == 0)\n\t\t\t{\n\t\t\t\tmax_div10 =\
    \ i;\n\t\t\t}\n\t\t\telse if((i % 100) == 0)\n\t\t\t{\n\t\t\t\tmax_div9 = i;\n\
    \t\t\t}\n\t\t\telse if((i % 1000) == 0)\n\t\t\t{\n\t\t\t\tmax_div8 = i;\n\t\t\t\
    }\n\t\t\telse if((i % 10000) == 0)\n\t\t\t{\n\t\t\t\tmax_div7 = i;\n\t\t\t}\n\t\
    \t\telse if((i % 100000) == 0)\n\t\t\t{\n\t\t\t\tmax_div6 = i;\n\t\t\t}\n\t\t\t\
    else if((i % 1000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div5 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 10000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div4 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 100000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div3 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 1000000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div2 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 10000000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div1 = i;\n\t\t\t}\n\t\t}\n\
    \t}\n\t\n\tif((max_div10 > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7)\
    \ || (max_div7 > max_div6) || (max_div6 > max_div5) || (max_div5 > max_div4) ||\
    \ (max_div4 > max_div3) || (max_div3 > max_div2) || (max_div2 > max_div1) || (max_div1\
    \ > n))\n\t{\n\t\treturn max_div1;\n\t}\n\telse if((max_div10 > max_div9) || (max_div9\
    \ > max_div8) || (max_div8 > max_div7) || (max_div7 > max_div6) || (max_div6 >\
    \ max_div5) || (max_div5 > max_div4))\n\t{\n\t\treturn max_div2;\n\t}\n\telse\
    \ if((max_div10 > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7)\
    \ || (max_div7 > max_div6))\n\t{\n\t\treturn max_div3;\n\t}\n\telse if((max_div10\
    \ > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7))\n\t{\n\t\treturn\
    \ max_div4;\n\t}\n\telse if((max_div10 > max_div9) || (\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpumppnbux.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpumppnbux.d(76): Error: expression expected, not `unittest`

    /tmp/tmpumppnbux.d(75): Error: found `{` when expecting `)`

    /tmp/tmpumppnbux.d(78): Error: found `alias` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpumppnbux.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d <= largest)\n\t{\n\t\tlong next = d << 1;\n\t\twhile(next <= largest)\n\
    \t\t{\n\t\t\tif(std.math.mod(next, n) == 0)\n\t\t\t{\n\t\t\t\tlargest = next;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\tnext = next << 1;\n\t\t}\n\t\td = d + 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg4iltzyb.d(17): Error: undefined identifier `mod` in module `std.math`,
    did you mean function `fmod`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4iltzyb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n) {\n\t\tlong long div2\
    \ = div * div;\n\t\tif (div2 > max_div2) {\n\t\t\tmax_div2 = div2;\n\t\t\tmax_div\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpodszb4rz.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpodszb4rz.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpodszb4rz.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpodszb4rz.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpodszb4rz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor * divisor <= n) {\n\t\tif (n % divisor ==\
    \ 0) {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9tyc8lms.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp9tyc8lms.__unittest_L20_C1() [0x427ab6]

    ??:? void tmp9tyc8lms.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (n > 1) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160523
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor * currentDivisor;\n\t\tcurrentDivisor++;\n\t\t\n\t\tif(currentNum\
    \ > n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(currentNum > maxDivisor)\n\t\t\
    {\n\t\t\tmaxDivisor = currentNum;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph64ko7ep.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmph64ko7ep.__unittest_L32_C1() [0x427aa5]

    ??:? void tmph64ko7ep.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tif (d > largest) \n\t\
    \t\t\tlargest = d;\n\t\t\td++;\n\t\t}\n\t\telse \n\t\t\td++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_rv4mnsg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp_rv4mnsg.__unittest_L25_C1() [0x427a80]

    ??:? void tmp_rv4mnsg.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyz59j0vd.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpyz59j0vd.__unittest_L19_C1() [0x427a9e]

    ??:? void tmpyz59j0vd.__modtest() [0x427af4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeo6f7qpt.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpeo6f7qpt.__unittest_L20_C1() [0x427a70]

    ??:? void tmpeo6f7qpt.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile(n > maxDivisor) {\n\t\tdivisor++;\n\t\tmaxDivisor *= divisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv4bssoak.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpv4bssoak.__unittest_L20_C1() [0x427a64]

    ??:? void tmpv4bssoak.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n && n % d == 0) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz35svcki.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpz35svcki.__unittest_L20_C1() [0x427ab2]

    ??:? void tmpz35svcki.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = n;\
    \ \n\tlong i; \n\t\n\twhile ( d % 2 == 0 ) \n\t{ \n\t\td /= 2; \n\t\tlargest =\
    \ i; \n\t} \n\t\n\tfor ( i = 3; i * i <= n; i += 2 ) \n\t{ \n\t\tif ( n % i ==\
    \ 0 ) \n\t\t{ \n\t\t\tlargest = i; \n\t\t\tbreak; \n\t\t} \n\t} \n\t\n\treturn\
    \ largest; \n} \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3qngr207.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmp3qngr207.__unittest_L31_C1() [0x427abc]

    ??:? void tmp3qngr207.__modtest() [0x427b54]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeo6f7qpt.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpeo6f7qpt.__unittest_L20_C1() [0x427a70]

    ??:? void tmpeo6f7qpt.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 0;\n\tlong max_div7 = 0;\n\tlong max_div8 = 0;\n\tlong max_div9 =\
    \ 0;\n\tlong max_div10 = 0;\n\tlong max_div11 = 0;\n\tlong max_div12 = 0;\n\t\
    long max_div13 = 0;\n\tlong max_div14 = 0;\n\tlong max_div15 = 0;\n\tlong max_div16\
    \ = 0;\n\tlong max_div17 = 0;\n\tlong max_div18 = 0;\n\tlong max_div19 = 0;\n\t\
    long max_div20 = 0;\n\tlong max_div21 = 0;\n\tlong max_div22 = 0;\n\tlong max_div23\
    \ = 0;\n\tlong max_div24 = 0;\n\tlong max_div25 = 0;\n\tlong max_div26 = 0;\n\t\
    long max_div27 = 0;\n\tlong max_div28 = 0;\n\tlong max_div29 = 0;\n\tlong max_div30\
    \ = 0;\n\tlong max_div31 = 0;\n\tlong max_div32 = 0;\n\tlong max_div33 = 0;\n\t\
    long max_div34 = 0;\n\tlong max_div35 = 0;\n\tlong max_div36 = 0;\n\tlong max_div37\
    \ = 0;\n\tlong max_div38 = 0;\n\tlong max_div39 = 0;\n\tlong max_div40 = 0;\n\t\
    long max_div41 = 0;\n\tlong max_div42 = 0;\n\tlong max_div43 = 0;\n\tlong max_div44\
    \ = 0;\n\tlong max_div45 = 0;\n\tlong max_div46 = 0;\n\tlong max_div47 = 0;\n\t\
    long max_div48 = 0;\n\tlong max_div49 = 0;\n\tlong max_div50 = 0;\n\tlong max_div51\
    \ = 0;\n\tlong max_div52 = 0;\n\tlong max_div53 = 0;\n\tlong max_div54 = 0;\n\t\
    long max_div55 = 0;\n\tlong max_div56 = 0;\n\tlong max_div57 = 0;\n\tlong max_div58\
    \ = 0;\n\tlong max_div59 = 0;\n\tlong max_div60 = 0;\n\tlong max_div61 = 0;\n\t\
    long max_div62 = 0;\n\tlong max_div63 = 0;\n\tlong max_div64 = 0;\n\tlong max_div65\
    \ = 0;\n\tlong max_div66 = 0;\n\tlong max_div67 = 0;\n\tlong max_div68 = 0;\n\t\
    long max_div69 = 0;\n\tlong max_div70 = 0;\n\tlong max_div71 = 0;\n\tlong max_div72\
    \ = 0;\n\tlong max_div73 = 0;\n\t\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddcy40o3.d(84): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddcy40o3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with the\
    \ largest number\n\tlong d = 1L; // the divisor\n\twhile (d <= n) \n\t{\n\t\t\
    if (n % d == 0) \n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\td += 2L;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzj8wiwzy.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpzj8wiwzy.__unittest_L22_C1() [0x427a70]

    ??:? void tmpzj8wiwzy.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0aty1zz9.d(60): Error: semicolon expected, not `unittest`

    /tmp/tmp0aty1zz9.d(60): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0aty1zz9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkarp42lo.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpkarp42lo.__unittest_L22_C1() [0x427a70]

    ??:? void tmpkarp42lo.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong\
    \ i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ut888u3.d(120): Error: found `unittest` instead of statement

    /tmp/tmp1ut888u3.d(130): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ut888u3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (n > 1) {\n\t\tdivisor++;\n\t\tn = (n / divisor);\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2n0iclyp.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmp2n0iclyp.__unittest_L18_C1() [0x427a64]

    ??:? void tmp2n0iclyp.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) \n\t{\n\t\tif (n % divisor == 0) \n\
    \t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest *= d;\n\t\td++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpidcyyk32.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpidcyyk32.__unittest_L18_C1() [0x427a60]

    ??:? void tmpidcyyk32.__modtest() [0x427af8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile(d <= n)\n\t{\n\t\tlargest = d;\n\t\td += 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkzqib31_.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpkzqib31_.__unittest_L21_C1() [0x427a60]

    ??:? void tmpkzqib31_.__modtest() [0x427af8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160524
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (n > divisor) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ {\n\t\t\tlargest = divisor;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8oytxjr6.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp8oytxjr6.__unittest_L20_C1() [0x427a6c]

    ??:? void tmp8oytxjr6.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n)\n\t{\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb6wj6gj4.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpb6wj6gj4.__unittest_L19_C1() [0x427a60]

    ??:? void tmpb6wj6gj4.__modtest() [0x427af8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > maxDiv)\
    \ \n\t\t\t{\n\t\t\t\tmaxDiv = div;\n\t\t\t}\n\t\t}\n\t\tdiv++;\n\t}\n\treturn\
    \ maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq4_8harz.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpq4_8harz.__unittest_L25_C1() [0x427a80]

    ??:? void tmpq4_8harz.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxdiv =\
    \ n;\n\tlong long div = 1;\n\t\n\twhile (div < maxdiv)\n\t{\n\t\ti = div * div;\n\
    \t\tif (i % 2 == 0)\n\t\t\tbreak;\n\t\tdiv++;\n\t}\n\treturn div;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzxsgmay6.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpzxsgmay6.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpzxsgmay6.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzxsgmay6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong div = 1;\
    \ \n\twhile (div < n) \n\t{\n\t\tif (n % div == 0) { largest = div; break; }\n\
    \t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvpp9d6d6.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvpp9d6d6.__unittest_L19_C1() [0x427ab2]

    ??:? void tmpvpp9d6d6.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest%2 == 0 && n%2 == 0) //if n is even, divide it\
    \ by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2\
    \ == 1 && n%2 == 1) //if n is odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\
    \tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 0 && n%2 == 1) //if n is\
    \ even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\twhile (largest%2 == 1 && n%2 == 0) //if n is odd, divide it by 2\n\t{\n\t\
    \tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 0 &&\
    \ n%2 == 0) //if n is even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\
    \t\td++;\n\t}\n\twhile (largest%2 == 1 && n%2 == 1) //if n is odd, divide it by\
    \ 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2\
    \ == 0 && n%2 == 1) //if n is even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\
    \tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 1 && n%2 == 0) //if n is\
    \ odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\twhile (largest%2 == 0 && n%2 == 0) //if n is even, divide it by 2\n\t{\n\t\
    \tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 1 &&\
    \ n%2 == 1) //if n is odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\
    \t\td++;\n\t}\n\twhile (largest%2 == 0 && n%2 == 1) //if n is even, divide it\
    \ by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\t\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33g2o48z.d(79): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33g2o48z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tdivisor = divisor * 2 + 1;\n\t}\n\t\
    \n\twhile (divisor > n)\n\t{\n\t\tdivisor = divisor / 2;\n\t}\n\t\n\tlargest =\
    \ divisor;\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpycn5qm9m.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427da5]

    ??:? void tmpycn5qm9m.__unittest_L27_C1() [0x427a8c]

    ??:? void tmpycn5qm9m.__modtest() [0x427b24]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa7d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]

    ??:? runModuleUnitTests [0x42b8a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDiv =\
    \ n;\n\tlong long maxDiv2 = n;\n\t\n\tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif((n\
    \ % i) == 0)\n\t\t{\n\t\t\tmaxDiv = i;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif((maxDiv2\
    \ % i) == 0)\n\t\t{\n\t\t\tmaxDiv2 = i;\n\t\t}\n\t}\n\t\n\treturn maxDiv;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2i1u5zqk.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp2i1u5zqk.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp2i1u5zqk.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2i1u5zqk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6cpgx2p5.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6cpgx2p5.__unittest_L24_C1() [0x427a70]

    ??:? void tmp6cpgx2p5.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tlong long tmp = div;\n\t\t\n\t\twhile\
    \ (tmp % 2 == 0)\n\t\t{\n\t\t\ttmp /= 2;\n\t\t}\n\t\t\n\t\tif (tmp > max_div)\n\
    \t\t{\n\t\t\tmax_div = tmp;\n\t\t}\n\t\t\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2l79f9cm.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp2l79f9cm.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp2l79f9cm.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2l79f9cm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile(n > maxDivisor) {\n\t\tdivisor++;\n\t\tmaxDivisor *= divisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv4bssoak.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpv4bssoak.__unittest_L20_C1() [0x427a64]

    ??:? void tmpv4bssoak.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors until\
    \ we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn smallest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn smallest;\n}\n/*\n Given a number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp61tdui2_.d(99): Error: found `unittest` instead of statement

    /tmp/tmp61tdui2_.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp61tdui2_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n) {\n\t\tif(n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; ++i)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk7tsz0u8.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpk7tsz0u8.__unittest_L20_C1() [0x427a70]

    ??:? void tmpk7tsz0u8.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\
    \t\n\tif (divisor > largest) {\n\t\tlargest = divisor;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsa4cz398.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpsa4cz398.__unittest_L23_C1() [0x427a74]

    ??:? void tmpsa4cz398.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong div = n;\
    \ \n\twhile (div > 1) {\n\t\tif (std.math.mod(div, 2) == 0) {\n\t\t\tlargest =\
    \ div;\n\t\t}\n\t\tdiv = div / 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptc_55fky.d(13): Error: undefined identifier `mod` in module `std.math`,
    did you mean function `fmod`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptc_55fky.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyhtfp_93.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpyhtfp_93.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyhtfp_93.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9j_fesgp.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp9j_fesgp.__unittest_L21_C1() [0x427a88]

    ??:? void tmp9j_fesgp.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 0;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor;\n\t\tcurrentDivisorDivisorRemainder\
    \ = currentDivisorRemainder;\n\t\tcurrentDivisorRemainder = n % currentDivisorDivisor;\n\
    \t\tcurrentDivisor = currentDivisorDivisor;\n\t\tcurrentDivisorDivisorRemainder\
    \ = currentDivisorRemainder;\n\t\tcurrentDivisorRemainder = currentDivisorRemainder\
    \ / currentDivisorDivisor;\n\t\t\n\t\tif (currentDivisorRemainder == 0)\n\t\t\
    {\n\t\t\tmaxDivisor = currentDivisor;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpym9mxlhp.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpym9mxlhp.__unittest_L34_C1() [0x427ade]

    ??:? void tmpym9mxlhp.__modtest() [0x427b34]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) \n\t{\n\t\tlong next = div * 2;\n\t\tif (next <= largest)\
    \ \n\t\t{\n\t\t\tlargest = next;\n\t\t\tdiv++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\t\
    largest = div;\n\t\t\tdiv++;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2i5fawdk.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp2i5fawdk.__unittest_L28_C1() [0x427a84]

    ??:? void tmp2i5fawdk.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvu07bmgm.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvu07bmgm.__unittest_L18_C1() [0x427a70]

    ??:? void tmpvu07bmgm.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t\
    {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzd93hbqb.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpzd93hbqb.__unittest_L23_C1() [0x427ab2]

    ??:? void tmpzd93hbqb.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr7d9u9le.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpr7d9u9le.__unittest_L21_C1() [0x427a80]

    ??:? void tmpr7d9u9le.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyhtfp_93.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpyhtfp_93.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyhtfp_93.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile (n > largest)\n\
    \t{\n\t\tn /= 2;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp92v4blf0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp92v4blf0.__unittest_L23_C1() [0x427abe]

    ??:? void tmp92v4blf0.__modtest() [0x427b14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\td *= 2;\n\t\tif (d > largest) \n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoor_h2va.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpoor_h2va.__unittest_L22_C1() [0x427a6c]

    ??:? void tmpoor_h2va.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long max_div\
    \ = n;\n\tlong long max_div2 = n;\n\tlong long max_div3 = n;\n\t\n\tfor(i = 2;\
    \ i <= n; i++)\n\t{\n\t\tif((n % i) == 0)\n\t\t{\n\t\t\tif((max_div % i) == 0)\n\
    \t\t\t{\n\t\t\t\tmax_div2 = max_div;\n\t\t\t\tmax_div = i;\n\t\t\t}\n\t\t\telse\
    \ if((max_div2 % i) == 0)\n\t\t\t{\n\t\t\t\tmax_div3 = max_div2;\n\t\t\t\tmax_div2\
    \ = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_div3;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7cp4d75e.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp7cp4d75e.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp7cp4d75e.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp7cp4d75e.d(13): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cp4d75e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1L;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\
    \tlargest = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpimj1kgo4.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpimj1kgo4.__unittest_L22_C1() [0x427ab2]

    ??:? void tmpimj1kgo4.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with the\
    \ largest number\n\tlong divisor = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n %\
    \ divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div < n) //keep dividing until we reach the largest\
    \ number that divides evenly\n\t{\n\t\tif (n % div == 0) //if n is divisible by\
    \ div\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentNum <= n)\n\t{\n\t\tcurrentDivisor\
    \ = 1;\n\t\tcurrentNum = 1;\n\t\t\n\t\twhile (currentDivisor <= maxDivisor)\n\t\
    \t{\n\t\t\tif (n % currentDivisor == 0)\n\t\t\t{\n\t\t\t\tcurrentNum *= currentDivisor;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\t\n\t\tmaxDivisor\
    \ = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160524
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp218a042q.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp218a042q.__unittest_L18_C1() [0x427aae]

    ??:? void tmp218a042q.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor * divisor <= n) //while n is greater than\
    \ or equal to its square\n\t{\n\t\tif (n % divisor == 0) //if n is divisible by\
    \ divisor\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmps7dvui4_.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmps7dvui4_.__unittest_L22_C1() [0x427ab6]

    ??:? void tmps7dvui4_.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\t\n\twhile (d <= largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\
    \t\t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk72mm2g7.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpk72mm2g7.__unittest_L23_C1() [0x427ab2]

    ??:? void tmpk72mm2g7.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div\
    \ > max_div)\n\t\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8l855rmh.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp8l855rmh.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8l855rmh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\
    \t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\t\tn = n / i;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphutoepzw.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmphutoepzw.__unittest_L21_C1() [0x427a80]

    ??:? void tmphutoepzw.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest) \n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\tlargest = std.math.pow(largest,\
    \ 2);\n\twhile (largest % n == 0) \n\t{\n\t\tlargest = std.math.pow(largest, 2);\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr1tys6r0.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e85]

    ??:? void tmpr1tys6r0.__unittest_L24_C1() [0x427b16]

    ??:? void tmpr1tys6r0.__modtest() [0x427c04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430080]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]

    ??:? runModuleUnitTests [0x42b981]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7_4b0_da.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp7_4b0_da.__unittest_L24_C1() [0x427aca]

    ??:? void tmp7_4b0_da.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t\
    {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn18ntulo.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpn18ntulo.__unittest_L24_C1() [0x427ab2]

    ??:? void tmpn18ntulo.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile\
    \ (n > largest)\n\t{\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5nqxhgq6.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp5nqxhgq6.__unittest_L27_C1() [0x427a80]

    ??:? void tmp5nqxhgq6.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorMax = 1;\n\t\
    long currentDivisorMin = 1;\n\tlong currentDivisorMaxMin = 1;\n\tlong currentDivisorMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMax = 1;\n\tlong currentDivisorMinMaxMin =\
    \ 1;\n\tlong currentDivisorMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\t\
    long currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin = 1;\n\
    \tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong\
    \ currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph1mf1l51.d(43): Error: semicolon expected, not `unittest`

    /tmp/tmph1mf1l51.d(43): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph1mf1l51.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdzq2x9ea.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpdzq2x9ea.__unittest_L18_C1() [0x427aae]

    ??:? void tmpdzq2x9ea.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tlargest = d;\n\
    \t\t}\n\t\td *= 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm_gclodu.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpm_gclodu.__unittest_L22_C1() [0x427ab2]

    ??:? void tmpm_gclodu.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \twhile(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpamju5axd.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpamju5axd.__unittest_L22_C1() [0x427a70]

    ??:? void tmpamju5axd.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d <= n && n % d == 0) {\n\t\td *= 2;\n\t\tlargest = d;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphdqtyo82.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmphdqtyo82.__unittest_L18_C1() [0x427a6c]

    ??:? void tmphdqtyo82.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tif(divisor > maxDivisor)\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\tdivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptspyuzsz.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmptspyuzsz.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmptspyuzsz.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptspyuzsz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > largest)\
    \ \n\t\t\t{\n\t\t\t\tlargest = div;\n\t\t\t}\n\t\t}\n\t\tdiv++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7txgyjj_.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp7txgyjj_.__unittest_L26_C1() [0x427a80]

    ??:? void tmp7txgyjj_.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0aty1zz9.d(60): Error: semicolon expected, not `unittest`

    /tmp/tmp0aty1zz9.d(60): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0aty1zz9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1;\n\twhile (n > 1) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\
    \t}\n\t\td *= 2;\n\t\tn--;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpbiktgp6o.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpbiktgp6o.__unittest_L21_C1() [0x427a70]

    ??:? void tmpbiktgp6o.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqqbghvji.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpqqbghvji.__unittest_L20_C1() [0x427ab2]

    ??:? void tmpqqbghvji.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d < largest)\n\t{\n\t\tlargest = std.math.gcd(largest, d);\n\t\td++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6_rqff6w.d(14): Error: undefined identifier `gcd` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_rqff6w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf5mtj1js.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpf5mtj1js.__unittest_L20_C1() [0x427a70]

    ??:? void tmpf5mtj1js.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6jlyrlmg.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6jlyrlmg.__unittest_L23_C1() [0x427a70]

    ??:? void tmp6jlyrlmg.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t\tbreak;\n\t\t}\n\t\td *= 2L;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplzlyfei2.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmplzlyfei2.__unittest_L25_C1() [0x427ab2]

    ??:? void tmplzlyfei2.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest/d != n) //while not divisble by d\n\t{\n\t\td\
    \ *= 2;\n\t\tif (d > largest) //if d is larger than largest, stop\n\t\t\tbreak;\n\
    \t}\n\treturn d;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n \
    \   assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppyl2i02_.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmppyl2i02_.__unittest_L20_C1() [0x427aaa]

    ??:? void tmppyl2i02_.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpomcvhcfo.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpomcvhcfo.__unittest_L24_C1() [0x427a70]

    ??:? void tmpomcvhcfo.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ {\n\t\t\tlargest = divisor;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm1zhz7hd.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpm1zhz7hd.__unittest_L20_C1() [0x427a6c]

    ??:? void tmpm1zhz7hd.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate'
  stdout: ''
  timestamp: 1660160510
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \t\n\twhile (currentDivisorRemainder != 0) {\n\t\tcurrentDivisorDivisor = currentDivisor\
    \ * currentDivisor;\n\t\tcurrentDivisorRemainder = currentDivisor % n;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisor;\n\t\t\n\t\tif (currentDivisorRemainder == 0) {\n\t\t\
    \tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160525
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpby1_bxxm.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpby1_bxxm.__unittest_L22_C1() [0x427a84]

    ??:? void tmpby1_bxxm.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = n;\
    \ \n\tlong i; \n\t\n\twhile (d % 2 == 0) \n\t{\n\t\td /= 2; \n\t\tlargest = d;\n\
    \t}\n\t\n\tfor (i = 3; i <= largest; i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t\
    {\n\t\t\td = n / i; \n\t\t\tif (d > largest) \n\t\t\t\tlargest = d; \n\t\t}\n\t\
    }\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2sit90q5.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp2sit90q5.__unittest_L32_C1() [0x427ac8]

    ??:? void tmp2sit90q5.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the largest number that divides n evenly, smaller than \nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3x225dg.d(110): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3x225dg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long divisor\
    \ = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    divisor = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn divisor;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwid61yj7.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpwid61yj7.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwid61yj7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvu07bmgm.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvu07bmgm.__unittest_L18_C1() [0x427a70]

    ??:? void tmpvu07bmgm.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long int max_div = n;\n\tlong\
    \ long int max_div2 = n;\n\tlong long int max_div3 = n;\n\tlong long int max_div4\
    \ = n;\n\tlong long int max_div5 = n;\n\tlong long int max_div6 = n;\n\tlong long\
    \ int max_div7 = n;\n\tlong long int max_div8 = n;\n\tlong long int max_div9 =\
    \ n;\n\tlong long int max_div10 = n;\n\tlong long int max_div11 = n;\n\tlong long\
    \ int max_div12 = n;\n\tlong long int max_div13 = n;\n\tlong long int max_div14\
    \ = n;\n\tlong long int max_div15 = n;\n\tlong long int max_div16 = n;\n\tlong\
    \ long int max_div17 = n;\n\tlong long int max_div18 = n;\n\tlong long int max_div19\
    \ = n;\n\tlong long int max_div20 = n;\n\tlong long int max_div21 = n;\n\tlong\
    \ long int max_div22 = n;\n\tlong long int max_div23 = n;\n\tlong long int max_div24\
    \ = n;\n\tlong long int max_div25 = n;\n\tlong long int max_div26 = n;\n\tlong\
    \ long int max_div27 = n;\n\tlong long int max_div28 = n;\n\tlong long int max_div29\
    \ = n;\n\tlong long int max_div30 = n;\n\tlong long int max_div31 = n;\n\tlong\
    \ long int max_div32 = n;\n\tlong long int max_div33 = n;\n\tlong long int max_div34\
    \ = n;\n\tlong long int max_div35 = n;\n\tlong long int max_div36 = n;\n\tlong\
    \ long int max_div37 = n;\n\tlong long int max_div38 = n;\n\tlong long int max_div39\
    \ = n;\n\tlong long int max_div40 = n;\n\tlong long int max_div41 = n;\n\tlong\
    \ long int max_div42 = n;\n\tlong long int max_div43 = n;\n\tlong long int max_div44\
    \ = n;\n\tlong long int max_div45 = n;\n\tlong long int max_div46 = n;\n\tlong\
    \ long int max_div47 = n;\n\tlong long int max_div48 = n;\n\tlong long int max_div49\
    \ = n;\n\tlong long int max_div50 = n;\n\tlong long int max_div51 = n;\n\tlong\
    \ long int max_div52 = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpflmh0i7o.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpflmh0i7o.d(10): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(11): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(12): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(13): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(13): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(14): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(14): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(15): Error: no identifier for declarator `long`

    /tmp/tmpflmh0i7o.d(16): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpflmh0i7o.d(1'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_q715p5b.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp_q715p5b.__unittest_L23_C1() [0x427a70]

    ??:? void tmp_q715p5b.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d > largest) \n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d > largest) \n\t\t{\n\t\
    \t\tlargest = d;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = \nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmb8ss2vv.d(115): Error: expression expected, not `unittest`

    /tmp/tmpmb8ss2vv.d(116): Error: found `{` when expecting `;` following statement

    /tmp/tmpmb8ss2vv.d(125): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmb8ss2vv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\tlong long max_div3 = 1;\n\tlong long max_div4\
    \ = 1;\n\tlong long max_div5 = 1;\n\tlong long max_div6 = 1;\n\tlong long max_div7\
    \ = 1;\n\tlong long max_div8 = 1;\n\tlong long max_div9 = 1;\n\tlong long max_div10\
    \ = 1;\n\tlong long max_div11 = 1;\n\tlong long max_div12 = 1;\n\tlong long max_div13\
    \ = 1;\n\tlong long max_div14 = 1;\n\tlong long max_div15 = 1;\n\tlong long max_div16\
    \ = 1;\n\tlong long max_div17 = 1;\n\tlong long max_div18 = 1;\n\tlong long max_div19\
    \ = 1;\n\tlong long max_div20 = 1;\n\tlong long max_div21 = 1;\n\tlong long max_div22\
    \ = 1;\n\tlong long max_div23 = 1;\n\tlong long max_div24 = 1;\n\tlong long max_div25\
    \ = 1;\n\tlong long max_div26 = 1;\n\tlong long max_div27 = 1;\n\tlong long max_div28\
    \ = 1;\n\tlong long max_div29 = 1;\n\tlong long max_div30 = 1;\n\tlong long max_div31\
    \ = 1;\n\tlong long max_div32 = 1;\n\tlong long max_div33 = 1;\n\tlong long max_div34\
    \ = 1;\n\tlong long max_div35 = 1;\n\tlong long max_div36 = 1;\n\tlong long max_div37\
    \ = 1;\n\tlong long max_div38 = 1;\n\tlong long max_div39 = 1;\n\tlong long max_div40\
    \ = 1;\n\tlong long max_div41 = 1;\n\tlong long max_div42 = 1;\n\tlong long max_div43\
    \ = 1;\n\tlong long max_div44 = 1;\n\tlong long max_div45 = 1;\n\tlong long max_div46\
    \ = 1;\n\tlong long max_div47 = 1;\n\tlong long max_div48 = 1;\n\tlong long max_div49\
    \ = 1;\n\tlong long max_div50 = 1;\n\tlong long max_div51 = 1;\n\tlong long max_div52\
    \ = 1;\n\tlong long max_div53 = 1;\n\tlong long max_div54 = 1;\n\tlong long max_div55\
    \ = 1;\n\tlong long max_div56 = 1;\n\tlong long max_div57 = 1;\n\tlong long max_div58\
    \ = 1;\n\tlong long max_div59 = 1;\n\tlong long max_div60 = 1;\n\tlong long max_div61\
    \ = 1;\n\tlong long max_div62 = 1;\n\tlong long max_div\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mxo0rn1.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp6mxo0rn1.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(13): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(14): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(16): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(17): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(18): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(19): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(20): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6mxo0rn1.d(21): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\t\n\
    \tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq6i6emxh.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpq6i6emxh.__unittest_L21_C1() [0x427a78]

    ??:? void tmpq6i6emxh.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 2;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tif (d > largest) \n\t\
    \t\t\tlargest = d;\n\t\t\td++;\n\t\t}\n\t\telse \n\t\t\td++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_rv4mnsg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp_rv4mnsg.__unittest_L25_C1() [0x427a80]

    ??:? void tmp_rv4mnsg.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpish6_e0g.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpish6_e0g.__unittest_L18_C1() [0x427a9e]

    ??:? void tmpish6_e0g.__modtest() [0x427af4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d < largest)\n\t{\n\t\tlargest = d + (largest/2);\n\t\t\
    d++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfsvgjz4u.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpfsvgjz4u.__unittest_L19_C1() [0x427a6c]

    ??:? void tmpfsvgjz4u.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfslmn5q9.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpfslmn5q9.__unittest_L20_C1() [0x427a78]

    ??:? void tmpfslmn5q9.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfu056np5.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpfu056np5.__unittest_L18_C1() [0x427a70]

    ??:? void tmpfu056np5.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile(currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph6k_rm2y.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmph6k_rm2y.__unittest_L23_C1() [0x427abe]

    ??:? void tmph6k_rm2y.__modtest() [0x427b14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0opjx3t2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp0opjx3t2.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0opjx3t2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n) \n\t{\n\t\tif (n % divisor == 0)\
    \ \n\t\t{\n\t\t\tif (divisor * divisor > n) \n\t\t\t{\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\t}\n\t\t\tdivisor++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdivisor++;\n\t\t}\n\t\
    }\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpinar0jcb.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427da5]

    ??:? void tmpinar0jcb.__unittest_L31_C1() [0x427ad2]

    ??:? void tmpinar0jcb.__modtest() [0x427b28]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa7d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]

    ??:? runModuleUnitTests [0x42b8a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjx6_ofk.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpdjx6_ofk.__unittest_L22_C1() [0x427ab2]

    ??:? void tmpdjx6_ofk.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor;\n\t\tcurrentDivisor *= 2;\n\t\t\n\t\tif (currentDivisor >\
    \ n)\n\t\t{\n\t\t\tcurrentNum = currentDivisor / n;\n\t\t}\n\t\t\n\t\tif (currentNum\
    \ > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentNum;\n\t\t}\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsat76ur7.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dad]

    ??:? void tmpsat76ur7.__unittest_L32_C1() [0x427ab9]

    ??:? void tmpsat76ur7.__modtest() [0x427b30]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]

    ??:? runModuleUnitTests [0x42b8a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\t\n\twhile (d <= largest)\n\t{\n\t\tif (n % d == 0)\n\t\t{\n\t\
    \t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqy9aqan8.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpqy9aqan8.__unittest_L24_C1() [0x427ab2]

    ??:? void tmpqy9aqan8.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tif(divisor > maxDivisor)\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\tdivisor = 1;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpduls2ryb.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpduls2ryb.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpduls2ryb.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpduls2ryb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong curDivisor\
    \ = 1;\n\t\n\twhile(curDivisor <= n)\n\t{\n\t\tif(n % curDivisor == 0)\n\t\t{\n\
    \t\t\tmaxDivisor = curDivisor;\n\t\t}\n\t\tcurDivisor++;\n\t}\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzfib3ryt.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpzfib3ryt.__unittest_L23_C1() [0x427a70]

    ??:? void tmpzfib3ryt.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tlargest = d + (n%d);\n\t\td++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk6u1ilj7.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpk6u1ilj7.__unittest_L19_C1() [0x427aaa]

    ??:? void tmpk6u1ilj7.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div\
    \ == 0)\n\t\t{\n\t\t\tif (div > max_div)\n\t\t\t\tmax_div = div;\n\t\t}\n\t\t\
    else\n\t\t{\n\t\t\tif (div > max_div2)\n\t\t\t\tmax_div2 = div;\n\t\t}\n\t\tdiv++;\n\
    \t}\n\t\n\treturn max_div2;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvy3pvfnv.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpvy3pvfnv.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpvy3pvfnv.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvy3pvfnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //assume n is even\n\
    \tlong d = 1;\n\t\n\twhile(n > 1)\n\t{\n\t\tif(n%2 == 0)\n\t\t{\n\t\t\tlargest\
    \ = n;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tn = n/2;\n\t\td++;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8qsykvr_.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp8qsykvr_.__unittest_L27_C1() [0x427a88]

    ??:? void tmp8qsykvr_.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfu056np5.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpfu056np5.__unittest_L18_C1() [0x427a70]

    ??:? void tmpfu056np5.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tdiv *= 2;\n\t\tif (div > largest) largest = div;\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppqzwtwgn.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmppqzwtwgn.__unittest_L18_C1() [0x427a6c]

    ??:? void tmppqzwtwgn.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorFactor = 1;\n\t\n\twhile(currentDivisorFactor <=\
    \ n)\n\t{\n\t\tcurrentDivisor *= currentDivisorFactor;\n\t\tcurrentDivisorFactor++;\n\
    \t}\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(currentDivisor % 2 == 0)\n\t\
    \t{\n\t\t\tcurrentDivisor *= 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor++;\n\
    \t\t}\n\t\t\n\t\tif(currentDivisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\
    \t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpufk3xq61.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dc5]

    ??:? void tmpufk3xq61.__unittest_L39_C1() [0x427af2]

    ??:? void tmpufk3xq61.__modtest() [0x427b48]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]

    ??:? runModuleUnitTests [0x42b8c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp218a042q.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp218a042q.__unittest_L18_C1() [0x427aae]

    ??:? void tmp218a042q.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d <= largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\t\
    \td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp68607q1w.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp68607q1w.__unittest_L20_C1() [0x427ab2]

    ??:? void tmp68607q1w.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf5mtj1js.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpf5mtj1js.__unittest_L20_C1() [0x427a70]

    ??:? void tmpf5mtj1js.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160524
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = n;\n\tlong div = n;\n\tlong div2 = n;\n\tlong div3 = n;\n\tlong div4 = n;\n\
    \tlong div5 = n;\n\tlong div6 = n;\n\tlong div7 = n;\n\tlong div8 = n;\n\tlong\
    \ div9 = n;\n\tlong div10 = n;\n\tlong div11 = n;\n\tlong div12 = n;\n\tlong div13\
    \ = n;\n\tlong div14 = n;\n\tlong div15 = n;\n\tlong div16 = n;\n\tlong div17\
    \ = n;\n\tlong div18 = n;\n\tlong div19 = n;\n\tlong div20 = n;\n\tlong div21\
    \ = n;\n\tlong div22 = n;\n\tlong div23 = n;\n\tlong div24 = n;\n\tlong div25\
    \ = n;\n\tlong div26 = n;\n\tlong div27 = n;\n\tlong div28 = n;\n\tlong div29\
    \ = n;\n\tlong div30 = n;\n\tlong div31 = n;\n\tlong div32 = n;\n\tlong div33\
    \ = n;\n\tlong div34 = n;\n\tlong div35 = n;\n\tlong div36 = n;\n\tlong div37\
    \ = n;\n\tlong div38 = n;\n\tlong div39 = n;\n\tlong div40 = n;\n\tlong div41\
    \ = n;\n\tlong div42 = n;\n\tlong div43 = n;\n\tlong div44 = n;\n\tlong div45\
    \ = n;\n\tlong div46 = n;\n\tlong div47 = n;\n\tlong div48 = n;\n\tlong div49\
    \ = n;\n\tlong div50 = n;\n\tlong div51 = n;\n\tlong div52 = n;\n\tlong div53\
    \ = n;\n\tlong div54 = n;\n\tlong div55 = n;\n\tlong div56 = n;\n\tlong div57\
    \ = n;\n\tlong div58 = n;\n\tlong div59 = n;\n\tlong div60 = n;\n\tlong div61\
    \ = n;\n\tlong div62 = n;\n\tlong div63 = n;\n\tlong div64 = n;\n\tlong div65\
    \ = n;\n\tlong div66 = n;\n\tlong div67 = n;\n\tlong div68 = n;\n\tlong div69\
    \ = n;\n\tlong div70 = n;\n\tlong div71 = n;\n\tlong div72 = n;\n\tlong div73\
    \ = \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5vfts1ly.d(85): Error: expression expected, not `unittest`

    /tmp/tmp5vfts1ly.d(86): Error: semicolon expected, not `{`

    /tmp/tmp5vfts1ly.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5vfts1ly.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160511
- exit_code: -8
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor * currentDivisor;\n\t\
    \tcurrentDivisorDivisorRemainder = currentDivisor % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisorRemainder;\n\t\t\n\t\tif (currentDivisor > maxDivisor)\n\
    \t\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor <= n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\t\
    while (divisor <= n && n % divisor != 0) {\n\t\tdivisor++;\n\t}\n\tif (divisor\
    \ > n) {\n\t\tlargest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoi7w06vt.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpoi7w06vt.__unittest_L23_C1() [0x427a9c]

    ??:? void tmpoi7w06vt.__modtest() [0x427b34]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d <= largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t\
    }\n\t\td += 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpntipwgl3.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpntipwgl3.__unittest_L21_C1() [0x427ab2]

    ??:? void tmpntipwgl3.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0aty1zz9.d(60): Error: semicolon expected, not `unittest`

    /tmp/tmp0aty1zz9.d(60): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0aty1zz9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6cpgx2p5.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6cpgx2p5.__unittest_L24_C1() [0x427a70]

    ??:? void tmp6cpgx2p5.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\tlargest\
    \ = std.math.pow(2, std.math.ceil(std.math.log2(largest)));\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0xnnezal.d(18): Error: cannot implicitly convert expression `pow(2,
    ceil(log2(cast(real)largest)))` of type `real` to `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0xnnezal.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i, max_div = 1, max_div2\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tif (max_div\
    \ < i) max_div = i;\n\t\t\tif (max_div2 < i) max_div2 = i;\n\t\t}\n\t}\n\t\n\t\
    return max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n  \
    \  assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp468g_kyj.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp468g_kyj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tdivisor++;\n\t}\n\tif (divisor > largest)\
    \ {\n\t\tlargest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpckt1snvl.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpckt1snvl.__unittest_L23_C1() [0x427a9c]

    ??:? void tmpckt1snvl.__modtest() [0x427b34]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor + 1;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0m72tzk1.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp0m72tzk1.__unittest_L23_C1() [0x427a74]

    ??:? void tmp0m72tzk1.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\tfor (long i = 2L; i <= n; i += 2L) {\n\t\tif (n % i == 0L) {\n\
    \t\t\td = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (d == 1L) {\n\t\tlargest = n;\n\t\
    } else {\n\t\tlargest = d;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb8yo_t3x.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpb8yo_t3x.__unittest_L25_C1() [0x427a9c]

    ??:? void tmpb8yo_t3x.__modtest() [0x427b34]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long maxDiv = n;\n\tlong long\
    \ div = 1;\n\t\n\twhile (div <= maxDiv) {\n\t\tif (std.math.mod(n, div) == 0)\
    \ {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDiv;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_6k_fosb.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp_6k_fosb.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6k_fosb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508

language: d
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div > maxDivisor)\n\
    \t\t\t\tmaxDivisor = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpt6ltnhrb.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpt6ltnhrb.__unittest_L23_C1() [0x427a80]\n??:?
    void tmpt6ltnhrb.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x865da554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpo94s0r6m.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpo94s0r6m.__unittest_L24_C1() [0x427ab6]\n??:?
    void tmpo94s0r6m.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b1f]\n??:?
    __libc_start_main [0x3df08554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9uh75das.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmp9uh75das.d(60):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9uh75das.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp___ppouh.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp___ppouh.__unittest_L20_C1() [0x427a78]\n??:?
    void tmp___ppouh.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0xd6774554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpz1wni4ji.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpz1wni4ji.__unittest_L21_C1() [0x427ab2]\n??:?
    void tmpz1wni4ji.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xc6826554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest\
    \ = n;\n\t\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhw4lz6k.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpdhw4lz6k.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhw4lz6k.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv8gwthid.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmpv8gwthid.__unittest_L23_C1() [0x427a78]\n??:?
    void tmpv8gwthid.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x9a87c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif\
    \ (div > max_div) \n\t\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqj11g0pl.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqj11g0pl.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqj11g0pl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\
    \t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a\
    \ given number n, find the smallest number that divides n evenly, larger than\
    \ n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ smallest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= smallest)\n\t{\n\t\tif (n % div ==\
    \ 0)\n\t\t{\n\t\t\tsmallest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n\
    }\n/*\n For a given number n, find the largest number that divides n evenly, larger\
    \ than n\n    >>> largest_divisor(15L)\n    5L\n    \n*/\nlong largest_divisor(long\
    \ n) \n{\n\tlong largest = n; //start with n\n\tlong div = 1;\n\twhile (div <=\
    \ largest)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong div = 1;\n\twhile (div <= largest)\n\t{\n\t\tif (n % div == 0)\n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n\
    \ For a given number n, find the smallest number that divides n evenly, larger\
    \ than n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong div = 1;\n\twhile (\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp10d55xgt.d(113): Error: expression expected, not `unittest`\n/tmp/tmp10d55xgt.d(114):
    Error: found `{` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp10d55xgt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(divisor\
    \ > maxDivisor)\n\t\t\tmaxDivisor = divisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9w_91hj1.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9w_91hj1.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9w_91hj1.d(12): Error: use `long` for a 64 bit
    integer instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9w_91hj1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t\
    }\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp903pfcl.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpp903pfcl.__unittest_L20_C1() [0x427aae]\n??:?
    void tmpp903pfcl.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x988e6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfsxjjupr.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpfsxjjupr.__unittest_L21_C1() [0x427a80]\n??:?
    void tmpfsxjjupr.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x81601554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\tlong long max_div3 = 1;\n\tlong long max_div4\
    \ = 1;\n\tlong long max_div5 = 1;\n\tlong long max_div6 = 1;\n\tlong long max_div7\
    \ = 1;\n\tlong long max_div8 = 1;\n\tlong long max_div9 = 1;\n\tlong long max_div10\
    \ = 1;\n\tlong long max_div11 = 1;\n\tlong long max_div12 = 1;\n\tlong long max_div13\
    \ = 1;\n\tlong long max_div14 = 1;\n\tlong long max_div15 = 1;\n\tlong long max_div16\
    \ = 1;\n\tlong long max_div17 = 1;\n\tlong long max_div18 = 1;\n\tlong long max_div19\
    \ = 1;\n\tlong long max_div20 = 1;\n\tlong long max_div21 = 1;\n\tlong long max_div22\
    \ = 1;\n\tlong long max_div23 = 1;\n\tlong long max_div24 = 1;\n\tlong long max_div25\
    \ = 1;\n\tlong long max_div26 = 1;\n\tlong long max_div27 = 1;\n\tlong long max_div28\
    \ = 1;\n\tlong long max_div29 = 1;\n\tlong long max_div30 = 1;\n\tlong long max_div31\
    \ = 1;\n\tlong long max_div32 = 1;\n\tlong long max_div33 = 1;\n\tlong long max_div34\
    \ = 1;\n\tlong long max_div35 = 1;\n\tlong long max_div36 = 1;\n\tlong long max_div37\
    \ = 1;\n\tlong long max_div38 = 1;\n\tlong long max_div39 = 1;\n\tlong long max_div40\
    \ = 1;\n\tlong long max_div41 = 1;\n\tlong long max_div42 = 1;\n\tlong long max_div43\
    \ = 1;\n\tlong long max_div44 = 1;\n\tlong long max_div45 = 1;\n\tlong long max_div46\
    \ = 1;\n\tlong long max_div47 = 1;\n\tlong long max_div48 = 1;\n\tlong long max_div49\
    \ = 1;\n\tlong long max_div50 = 1;\n\tlong long max_div51 = 1;\n\tlong long max_div52\
    \ = 1;\n\tlong long max_div53 = 1;\n\tlong long max_div54 = 1;\n\tlong long max_div55\
    \ = 1;\n\tlong long max_div56 = 1;\n\tlong long max_div57 = 1;\n\tlong long max_div58\
    \ = 1;\n\tlong long max_div59 = 1;\n\tlong long max_div60 = 1;\n\tlong long max_div61\
    \ = 1;\n\tlong long max_div62 = 1;\n\tlong long max_div\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpye0b4yy2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpye0b4yy2.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpye0b4yy2.d(12): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpye0b4yy2.d(13): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(14): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(15): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(16): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(19):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(21):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpye0b4yy2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnkinagil.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpnkinagil.__unittest_L23_C1() [0x427a70]\n??:?
    void tmpnkinagil.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xdbd6d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnizzvx0.d(83): Error: no identifier for declarator `long`\n/tmp/tmpcnizzvx0.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcnizzvx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 0;\n\tlong currentDivisorDivisorDivisor\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv97y_g9q.d(44): Error: semicolon expected, not `unittest`\n/tmp/tmpv97y_g9q.d(44):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpv97y_g9q.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) \n\t{\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvfmkjvl0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong d = 1;\n\
    \t\n\twhile(n > largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile(n\
    \ > largest) {\n\t\td /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvbonkges.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\
    \t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfrxx_rjc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with the\
    \ largest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <= n) \n\t{\n\
    \t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\t\ti =\
    \ i + d;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with the largest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <= n)\
    \ \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\
    \t\ti = i + d;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with the smallest number\n\tlong d = 1L;\n\tlong i = 1L;\n\twhile (i * i <=\
    \ n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\td = i;\n\t\t\tsmallest = n;\n\t\
    \t}\n\t\ti = i + d;\n\t}\n\treturn smalle\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp704bf4u8.d(111): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmp704bf4u8.d(121): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp704bf4u8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong div = 1;\n\twhile (div < n) \n\t{\n\t\tif (std.math.mod(n, div) == 0) \n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptw3zsniv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i, max_div = 1, max_div2\
    \ = 1, max_div3 = 1, max_div4 = 1, max_div5 = 1, max_div6 = 1, max_div7 = 1, max_div8\
    \ = 1, max_div9 = 1, max_div10 = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\t\
    if((n % i) == 0)\n\t\t{\n\t\t\tif((i % 10) == 0)\n\t\t\t{\n\t\t\t\tmax_div10 =\
    \ i;\n\t\t\t}\n\t\t\telse if((i % 100) == 0)\n\t\t\t{\n\t\t\t\tmax_div9 = i;\n\
    \t\t\t}\n\t\t\telse if((i % 1000) == 0)\n\t\t\t{\n\t\t\t\tmax_div8 = i;\n\t\t\t\
    }\n\t\t\telse if((i % 10000) == 0)\n\t\t\t{\n\t\t\t\tmax_div7 = i;\n\t\t\t}\n\t\
    \t\telse if((i % 100000) == 0)\n\t\t\t{\n\t\t\t\tmax_div6 = i;\n\t\t\t}\n\t\t\t\
    else if((i % 1000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div5 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 10000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div4 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 100000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div3 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 1000000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div2 = i;\n\t\t\t}\n\t\t\telse\
    \ if((i % 10000000000) == 0)\n\t\t\t{\n\t\t\t\tmax_div1 = i;\n\t\t\t}\n\t\t}\n\
    \t}\n\t\n\tif((max_div10 > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7)\
    \ || (max_div7 > max_div6) || (max_div6 > max_div5) || (max_div5 > max_div4) ||\
    \ (max_div4 > max_div3) || (max_div3 > max_div2) || (max_div2 > max_div1) || (max_div1\
    \ > n))\n\t{\n\t\treturn max_div1;\n\t}\n\telse if((max_div10 > max_div9) || (max_div9\
    \ > max_div8) || (max_div8 > max_div7) || (max_div7 > max_div6) || (max_div6 >\
    \ max_div5) || (max_div5 > max_div4))\n\t{\n\t\treturn max_div2;\n\t}\n\telse\
    \ if((max_div10 > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7)\
    \ || (max_div7 > max_div6))\n\t{\n\t\treturn max_div3;\n\t}\n\telse if((max_div10\
    \ > max_div9) || (max_div9 > max_div8) || (max_div8 > max_div7))\n\t{\n\t\treturn\
    \ max_div4;\n\t}\n\telse if((max_div10 > max_div9) || (\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpswip27aq.d(10): Error: no identifier for declarator long\n/tmp/tmpswip27aq.d(76):
    Error: expression expected, not \''unittest\''\n/tmp/tmpswip27aq.d(75): Error:
    found \''{\'' when expecting \'')\''\n/tmp/tmpswip27aq.d(78): Error: found \''alias\''
    when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswip27aq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d <= largest)\n\t{\n\t\tlong next = d << 1;\n\t\twhile(next <= largest)\n\
    \t\t{\n\t\t\tif(std.math.mod(next, n) == 0)\n\t\t\t{\n\t\t\t\tlargest = next;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\tnext = next << 1;\n\t\t}\n\t\td = d + 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt67jy2mo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n) {\n\t\tlong long div2\
    \ = div * div;\n\t\tif (div2 > max_div2) {\n\t\t\tmax_div2 = div2;\n\t\t\tmax_div\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7akhq1cn.d(10): Error: no identifier for declarator long\n/tmp/tmp7akhq1cn.d(11):
    Error: no identifier for declarator long\n/tmp/tmp7akhq1cn.d(12): Error: no identifier
    for declarator long\n/tmp/tmp7akhq1cn.d(15): Error: no identifier for declarator
    long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7akhq1cn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor * divisor <= n) {\n\t\tif (n % divisor ==\
    \ 0) {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjsor5qjp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (n > 1) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmicfjs_s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor * currentDivisor;\n\t\tcurrentDivisor++;\n\t\t\n\t\tif(currentNum\
    \ > n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(currentNum > maxDivisor)\n\t\t\
    {\n\t\t\tmaxDivisor = currentNum;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_coo6la.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tif (d > largest) \n\t\
    \t\t\tlargest = d;\n\t\t\td++;\n\t\t}\n\t\telse \n\t\t\td++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ejscxa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp888ppm3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy9mkk95m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpldn2fsz0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile(n > maxDivisor) {\n\t\tdivisor++;\n\t\tmaxDivisor *= divisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6uw3yw_g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1gz21lwp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n && n % d == 0) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxvoue7q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = n;\
    \ \n\tlong i; \n\t\n\twhile ( d % 2 == 0 ) \n\t{ \n\t\td /= 2; \n\t\tlargest =\
    \ i; \n\t} \n\t\n\tfor ( i = 3; i * i <= n; i += 2 ) \n\t{ \n\t\tif ( n % i ==\
    \ 0 ) \n\t\t{ \n\t\t\tlargest = i; \n\t\t\tbreak; \n\t\t} \n\t} \n\t\n\treturn\
    \ largest; \n} \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps57hksfg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpldn2fsz0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 0;\n\tlong max_div7 = 0;\n\tlong max_div8 = 0;\n\tlong max_div9 =\
    \ 0;\n\tlong max_div10 = 0;\n\tlong max_div11 = 0;\n\tlong max_div12 = 0;\n\t\
    long max_div13 = 0;\n\tlong max_div14 = 0;\n\tlong max_div15 = 0;\n\tlong max_div16\
    \ = 0;\n\tlong max_div17 = 0;\n\tlong max_div18 = 0;\n\tlong max_div19 = 0;\n\t\
    long max_div20 = 0;\n\tlong max_div21 = 0;\n\tlong max_div22 = 0;\n\tlong max_div23\
    \ = 0;\n\tlong max_div24 = 0;\n\tlong max_div25 = 0;\n\tlong max_div26 = 0;\n\t\
    long max_div27 = 0;\n\tlong max_div28 = 0;\n\tlong max_div29 = 0;\n\tlong max_div30\
    \ = 0;\n\tlong max_div31 = 0;\n\tlong max_div32 = 0;\n\tlong max_div33 = 0;\n\t\
    long max_div34 = 0;\n\tlong max_div35 = 0;\n\tlong max_div36 = 0;\n\tlong max_div37\
    \ = 0;\n\tlong max_div38 = 0;\n\tlong max_div39 = 0;\n\tlong max_div40 = 0;\n\t\
    long max_div41 = 0;\n\tlong max_div42 = 0;\n\tlong max_div43 = 0;\n\tlong max_div44\
    \ = 0;\n\tlong max_div45 = 0;\n\tlong max_div46 = 0;\n\tlong max_div47 = 0;\n\t\
    long max_div48 = 0;\n\tlong max_div49 = 0;\n\tlong max_div50 = 0;\n\tlong max_div51\
    \ = 0;\n\tlong max_div52 = 0;\n\tlong max_div53 = 0;\n\tlong max_div54 = 0;\n\t\
    long max_div55 = 0;\n\tlong max_div56 = 0;\n\tlong max_div57 = 0;\n\tlong max_div58\
    \ = 0;\n\tlong max_div59 = 0;\n\tlong max_div60 = 0;\n\tlong max_div61 = 0;\n\t\
    long max_div62 = 0;\n\tlong max_div63 = 0;\n\tlong max_div64 = 0;\n\tlong max_div65\
    \ = 0;\n\tlong max_div66 = 0;\n\tlong max_div67 = 0;\n\tlong max_div68 = 0;\n\t\
    long max_div69 = 0;\n\tlong max_div70 = 0;\n\tlong max_div71 = 0;\n\tlong max_div72\
    \ = 0;\n\tlong max_div73 = 0;\n\t\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1pm89y7z.d(84): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1pm89y7z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with the\
    \ largest number\n\tlong d = 1L; // the divisor\n\twhile (d <= n) \n\t{\n\t\t\
    if (n % d == 0) \n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\td += 2L;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvm7cma0_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwgsq907b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9uh75das.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmp9uh75das.d(60):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9uh75das.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgn23b3hw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong\
    \ i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5ua86dtg.d(120): Error: found \''unittest\'' instead of statement\n/tmp/tmp5ua86dtg.d(130):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ua86dtg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (n > 1) {\n\t\tdivisor++;\n\t\tn = (n / divisor);\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jhn71fn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) \n\t{\n\t\tif (n % divisor == 0) \n\
    \t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbrof0rpj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1gz21lwp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest *= d;\n\t\td++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ouhq5xx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile(d <= n)\n\t{\n\t\tlargest = d;\n\t\td += 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quk425v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpynb36ixi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (n > divisor) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ {\n\t\t\tlargest = divisor;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3l7brhiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n)\n\t{\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbc4u100d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\
    \twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > maxDiv)\
    \ \n\t\t\t{\n\t\t\t\tmaxDiv = div;\n\t\t\t}\n\t\t}\n\t\tdiv++;\n\t}\n\treturn\
    \ maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpla9puvor.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxdiv =\
    \ n;\n\tlong long div = 1;\n\t\n\twhile (div < maxdiv)\n\t{\n\t\ti = div * div;\n\
    \t\tif (i % 2 == 0)\n\t\t\tbreak;\n\t\tdiv++;\n\t}\n\treturn div;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp17o7xztg.d(10): Error: no identifier for declarator long\n/tmp/tmp17o7xztg.d(11):
    Error: no identifier for declarator long\n/tmp/tmp17o7xztg.d(12): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17o7xztg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnizzvx0.d(83): Error: no identifier for declarator `long`\n/tmp/tmpcnizzvx0.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcnizzvx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp888ppm3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong div = 1;\
    \ \n\twhile (div < n) \n\t{\n\t\tif (n % div == 0) { largest = div; break; }\n\
    \t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptsc__zmf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest%2 == 0 && n%2 == 0) //if n is even, divide it\
    \ by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2\
    \ == 1 && n%2 == 1) //if n is odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\
    \tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 0 && n%2 == 1) //if n is\
    \ even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\twhile (largest%2 == 1 && n%2 == 0) //if n is odd, divide it by 2\n\t{\n\t\
    \tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 0 &&\
    \ n%2 == 0) //if n is even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\
    \t\td++;\n\t}\n\twhile (largest%2 == 1 && n%2 == 1) //if n is odd, divide it by\
    \ 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2\
    \ == 0 && n%2 == 1) //if n is even, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\
    \tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 1 && n%2 == 0) //if n is\
    \ odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\twhile (largest%2 == 0 && n%2 == 0) //if n is even, divide it by 2\n\t{\n\t\
    \tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 1 &&\
    \ n%2 == 1) //if n is odd, divide it by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\
    \t\td++;\n\t}\n\twhile (largest%2 == 0 && n%2 == 1) //if n is even, divide it\
    \ by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\t\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphpre6kvg.d(79): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpre6kvg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp888ppm3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tdivisor = divisor * 2 + 1;\n\t}\n\t\
    \n\twhile (divisor > n)\n\t{\n\t\tdivisor = divisor / 2;\n\t}\n\t\n\tlargest =\
    \ divisor;\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9_rti98.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDiv =\
    \ n;\n\tlong long maxDiv2 = n;\n\t\n\tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif((n\
    \ % i) == 0)\n\t\t{\n\t\t\tmaxDiv = i;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif((maxDiv2\
    \ % i) == 0)\n\t\t{\n\t\t\tmaxDiv2 = i;\n\t\t}\n\t}\n\t\n\treturn maxDiv;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0f7so7jn.d(10): Error: no identifier for declarator long\n/tmp/tmp0f7so7jn.d(11):
    Error: no identifier for declarator long\n/tmp/tmp0f7so7jn.d(12): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0f7so7jn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24y4ae4y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tlong long tmp = div;\n\t\t\n\t\twhile\
    \ (tmp % 2 == 0)\n\t\t{\n\t\t\ttmp /= 2;\n\t\t}\n\t\t\n\t\tif (tmp > max_div)\n\
    \t\t{\n\t\t\tmax_div = tmp;\n\t\t}\n\t\t\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ff6lz5w.d(10): Error: no identifier for declarator long\n/tmp/tmp0ff6lz5w.d(11):
    Error: no identifier for declarator long\n/tmp/tmp0ff6lz5w.d(15): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ff6lz5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile(n > maxDivisor) {\n\t\tdivisor++;\n\t\tmaxDivisor *= divisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6uw3yw_g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors until\
    \ we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn smallest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn smallest;\n}\n/*\n Given a number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisors\
    \ until we get to 1\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tsmallest = divisor;\n\
    \t\t}\n\t\tdivisor++;\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1om_ou58.d(99): Error: found \''unittest\'' instead of statement\n/tmp/tmp1om_ou58.d(109):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1om_ou58.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n) {\n\t\tif(n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzlichz_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; ++i)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf5bwa7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\
    \t\n\tif (divisor > largest) {\n\t\tlargest = divisor;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6432sf3d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong div = n;\
    \ \n\twhile (div > 1) {\n\t\tif (std.math.mod(div, 2) == 0) {\n\t\t\tlargest =\
    \ div;\n\t\t}\n\t\tdiv = div / 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeejgc36u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9c2h_m97.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpswm3s1q0.d(10): Error: no identifier for declarator long\n/tmp/tmpswm3s1q0.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpswm3s1q0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplu3dryz3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 0;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor;\n\t\tcurrentDivisorDivisorRemainder\
    \ = currentDivisorRemainder;\n\t\tcurrentDivisorRemainder = n % currentDivisorDivisor;\n\
    \t\tcurrentDivisor = currentDivisorDivisor;\n\t\tcurrentDivisorDivisorRemainder\
    \ = currentDivisorRemainder;\n\t\tcurrentDivisorRemainder = currentDivisorRemainder\
    \ / currentDivisorDivisor;\n\t\t\n\t\tif (currentDivisorRemainder == 0)\n\t\t\
    {\n\t\t\tmaxDivisor = currentDivisor;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1r7p590.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) \n\t{\n\t\tlong next = div * 2;\n\t\tif (next <= largest)\
    \ \n\t\t{\n\t\t\tlargest = next;\n\t\t\tdiv++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\t\
    largest = div;\n\t\t\tdiv++;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdz687ac.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5n9wvkzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dlx6cdf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t\
    {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpurwf9d4t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfsxjjupr.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpfsxjjupr.__unittest_L21_C1() [0x427a80]\n??:?
    void tmpfsxjjupr.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x81601554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpswm3s1q0.d(10): Error: no identifier for declarator long\n/tmp/tmpswm3s1q0.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpswm3s1q0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile (n > largest)\n\
    \t{\n\t\tn /= 2;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8zwrw455.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\td *= 2;\n\t\tif (d > largest) \n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeklc99_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long max_div\
    \ = n;\n\tlong long max_div2 = n;\n\tlong long max_div3 = n;\n\t\n\tfor(i = 2;\
    \ i <= n; i++)\n\t{\n\t\tif((n % i) == 0)\n\t\t{\n\t\t\tif((max_div % i) == 0)\n\
    \t\t\t{\n\t\t\t\tmax_div2 = max_div;\n\t\t\t\tmax_div = i;\n\t\t\t}\n\t\t\telse\
    \ if((max_div2 % i) == 0)\n\t\t\t{\n\t\t\t\tmax_div3 = max_div2;\n\t\t\t\tmax_div2\
    \ = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_div3;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpffgqzj45.d(10): Error: no identifier for declarator long\n/tmp/tmpffgqzj45.d(11):
    Error: no identifier for declarator long\n/tmp/tmpffgqzj45.d(12): Error: no identifier
    for declarator long\n/tmp/tmpffgqzj45.d(13): Error: no identifier for declarator
    long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpffgqzj45.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1L;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\
    \tlargest = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvgxva_5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with the\
    \ largest number\n\tlong divisor = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n %\
    \ divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe4z981m2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwgsq907b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div < n) //keep dividing until we reach the largest\
    \ number that divides evenly\n\t{\n\t\tif (n % div == 0) //if n is divisible by\
    \ div\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_sjgdcv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentNum <= n)\n\t{\n\t\tcurrentDivisor\
    \ = 1;\n\t\tcurrentNum = 1;\n\t\t\n\t\twhile (currentDivisor <= maxDivisor)\n\t\
    \t{\n\t\t\tif (n % currentDivisor == 0)\n\t\t\t{\n\t\t\t\tcurrentNum *= currentDivisor;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\t\n\t\tmaxDivisor\
    \ = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpef6m83_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkz0sz_kt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor * divisor <= n) //while n is greater than\
    \ or equal to its square\n\t{\n\t\tif (n % divisor == 0) //if n is divisible by\
    \ divisor\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp_9l3jch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1gz21lwp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\t\n\twhile (d <= largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\
    \t\t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvhfzaxfd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div\
    \ > max_div)\n\t\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeqn30bb1.d(10): Error: no identifier for declarator long\n/tmp/tmpeqn30bb1.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpeqn30bb1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\
    \t\t\td = i;\n\t\t\tlargest = n;\n\t\t}\n\t\tn = n / i;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipu9e00g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest) \n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\tlargest = std.math.pow(largest,\
    \ 2);\n\twhile (largest % n == 0) \n\t{\n\t\tlargest = std.math.pow(largest, 2);\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2xm8w6rg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeiiwuz3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < largest)\n\t{\n\t\tif (n % divisor == 0)\n\t\t\
    {\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp46zr3lx3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile\
    \ (n > largest)\n\t{\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwxc9g3r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorMax = 1;\n\t\
    long currentDivisorMin = 1;\n\tlong currentDivisorMaxMin = 1;\n\tlong currentDivisorMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMax = 1;\n\tlong currentDivisorMinMaxMin =\
    \ 1;\n\tlong currentDivisorMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMin = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\t\
    long currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin = 1;\n\
    \tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong\
    \ currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 1;\n\tlong currentDivisorMaxMinMaxMinMaxMin\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrugsa7y.d(43): Error: semicolon expected, not \''unittest\''\n/tmp/tmpbrugsa7y.d(43):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpbrugsa7y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnizzvx0.d(83): Error: no identifier for declarator `long`\n/tmp/tmpcnizzvx0.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcnizzvx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_h0keo7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tlargest = d;\n\
    \t\t}\n\t\td *= 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6as6stu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \twhile(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jng4e51.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d <= n && n % d == 0) {\n\t\td *= 2;\n\t\tlargest = d;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbn6iunee.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tif(divisor > maxDivisor)\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\tdivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp60gwcjx_.d(10): Error: no identifier for declarator long\n/tmp/tmp60gwcjx_.d(11):
    Error: no identifier for declarator long\n/tmp/tmp60gwcjx_.d(12): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60gwcjx_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp888ppm3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > largest)\
    \ \n\t\t\t{\n\t\t\t\tlargest = div;\n\t\t\t}\n\t\t}\n\t\tdiv++;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ysrn614.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9uh75das.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmp9uh75das.d(60):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9uh75das.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk6xwjvf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpivpg29si.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1;\n\twhile (n > 1) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\
    \t}\n\t\td *= 2;\n\t\tn--;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3j2_tezn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppzi0ofha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d < largest)\n\t{\n\t\tlargest = std.math.gcd(largest, d);\n\t\td++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjzx8mak.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wt77a69.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsn0lyal.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t\tbreak;\n\t\t}\n\t\td *= 2L;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq_2cxbz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest/d != n) //while not divisble by d\n\t{\n\t\td\
    \ *= 2;\n\t\tif (d > largest) //if d is larger than largest, stop\n\t\t\tbreak;\n\
    \t}\n\treturn d;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n \
    \   assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpio6h9iqf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdoffzyqr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ {\n\t\t\tlargest = divisor;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie4lsl_2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \t\n\twhile (currentDivisorRemainder != 0) {\n\t\tcurrentDivisorDivisor = currentDivisor\
    \ * currentDivisor;\n\t\tcurrentDivisorRemainder = currentDivisor % n;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisor;\n\t\t\n\t\tif (currentDivisorRemainder == 0) {\n\t\t\
    \tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbna4z0i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpedy2d411.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = n;\
    \ \n\tlong i; \n\t\n\twhile (d % 2 == 0) \n\t{\n\t\td /= 2; \n\t\tlargest = d;\n\
    \t}\n\t\n\tfor (i = 3; i <= largest; i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t\
    {\n\t\t\td = n / i; \n\t\t\tif (d > largest) \n\t\t\t\tlargest = d; \n\t\t}\n\t\
    }\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7olaowuy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tsmallest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the largest number that divides n evenly, smaller than \nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_f8rc2yo.d(110): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_f8rc2yo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long divisor\
    \ = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    divisor = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn divisor;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi4ekn5ry.d(10): Error: no identifier for declarator long\n/tmp/tmpi4ekn5ry.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpi4ekn5ry.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dlx6cdf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long int max_div = n;\n\tlong\
    \ long int max_div2 = n;\n\tlong long int max_div3 = n;\n\tlong long int max_div4\
    \ = n;\n\tlong long int max_div5 = n;\n\tlong long int max_div6 = n;\n\tlong long\
    \ int max_div7 = n;\n\tlong long int max_div8 = n;\n\tlong long int max_div9 =\
    \ n;\n\tlong long int max_div10 = n;\n\tlong long int max_div11 = n;\n\tlong long\
    \ int max_div12 = n;\n\tlong long int max_div13 = n;\n\tlong long int max_div14\
    \ = n;\n\tlong long int max_div15 = n;\n\tlong long int max_div16 = n;\n\tlong\
    \ long int max_div17 = n;\n\tlong long int max_div18 = n;\n\tlong long int max_div19\
    \ = n;\n\tlong long int max_div20 = n;\n\tlong long int max_div21 = n;\n\tlong\
    \ long int max_div22 = n;\n\tlong long int max_div23 = n;\n\tlong long int max_div24\
    \ = n;\n\tlong long int max_div25 = n;\n\tlong long int max_div26 = n;\n\tlong\
    \ long int max_div27 = n;\n\tlong long int max_div28 = n;\n\tlong long int max_div29\
    \ = n;\n\tlong long int max_div30 = n;\n\tlong long int max_div31 = n;\n\tlong\
    \ long int max_div32 = n;\n\tlong long int max_div33 = n;\n\tlong long int max_div34\
    \ = n;\n\tlong long int max_div35 = n;\n\tlong long int max_div36 = n;\n\tlong\
    \ long int max_div37 = n;\n\tlong long int max_div38 = n;\n\tlong long int max_div39\
    \ = n;\n\tlong long int max_div40 = n;\n\tlong long int max_div41 = n;\n\tlong\
    \ long int max_div42 = n;\n\tlong long int max_div43 = n;\n\tlong long int max_div44\
    \ = n;\n\tlong long int max_div45 = n;\n\tlong long int max_div46 = n;\n\tlong\
    \ long int max_div47 = n;\n\tlong long int max_div48 = n;\n\tlong long int max_div49\
    \ = n;\n\tlong long int max_div50 = n;\n\tlong long int max_div51 = n;\n\tlong\
    \ long int max_div52 = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgojpa6r8.d(10): Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(10):
    Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(11): Error: no identifier
    for declarator long\n/tmp/tmpgojpa6r8.d(11): Error: no identifier for declarator
    long\n/tmp/tmpgojpa6r8.d(12): Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(12):
    Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(13): Error: no identifier
    for declarator long\n/tmp/tmpgojpa6r8.d(13): Error: no identifier for declarator
    long\n/tmp/tmpgojpa6r8.d(14): Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(14):
    Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(15): Error: no identifier
    for declarator long\n/tmp/tmpgojpa6r8.d(15): Error: no identifier for declarator
    long\n/tmp/tmpgojpa6r8.d(16): Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(16):
    Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(17): Error: no identifier
    for declarator long\n/tmp/tmpgojpa6r8.d(17): Error: no identifier for declarator
    long\n/tmp/tmpgojpa6r8.d(18): Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(18):
    Error: no identifier for declarator long\n/tmp/tmpgojpa6r8.d(19): Error: no identifier
    for declarator long\n/tmp/tmpgojpa6r8.d(19): Error: no identifier for declarator
    long\n/tmp/tmpgojpa6r8.d(20): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgojpa6r8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\
    \t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwp5ig06.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d > largest) \n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong\
    \ d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d > largest) \n\t\t{\n\t\
    \t\tlargest = d;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = d*2;\n\t\tif (d < smallest) \n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n;\n\t\
    long d = 1;\n\twhile (d < n) \n\t{\n\t\td = \nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe3d3x627.d(115): Error: expression expected, not \''unittest\''\n/tmp/tmpe3d3x627.d(116):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpe3d3x627.d(125):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3d3x627.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\tlong long max_div3 = 1;\n\tlong long max_div4\
    \ = 1;\n\tlong long max_div5 = 1;\n\tlong long max_div6 = 1;\n\tlong long max_div7\
    \ = 1;\n\tlong long max_div8 = 1;\n\tlong long max_div9 = 1;\n\tlong long max_div10\
    \ = 1;\n\tlong long max_div11 = 1;\n\tlong long max_div12 = 1;\n\tlong long max_div13\
    \ = 1;\n\tlong long max_div14 = 1;\n\tlong long max_div15 = 1;\n\tlong long max_div16\
    \ = 1;\n\tlong long max_div17 = 1;\n\tlong long max_div18 = 1;\n\tlong long max_div19\
    \ = 1;\n\tlong long max_div20 = 1;\n\tlong long max_div21 = 1;\n\tlong long max_div22\
    \ = 1;\n\tlong long max_div23 = 1;\n\tlong long max_div24 = 1;\n\tlong long max_div25\
    \ = 1;\n\tlong long max_div26 = 1;\n\tlong long max_div27 = 1;\n\tlong long max_div28\
    \ = 1;\n\tlong long max_div29 = 1;\n\tlong long max_div30 = 1;\n\tlong long max_div31\
    \ = 1;\n\tlong long max_div32 = 1;\n\tlong long max_div33 = 1;\n\tlong long max_div34\
    \ = 1;\n\tlong long max_div35 = 1;\n\tlong long max_div36 = 1;\n\tlong long max_div37\
    \ = 1;\n\tlong long max_div38 = 1;\n\tlong long max_div39 = 1;\n\tlong long max_div40\
    \ = 1;\n\tlong long max_div41 = 1;\n\tlong long max_div42 = 1;\n\tlong long max_div43\
    \ = 1;\n\tlong long max_div44 = 1;\n\tlong long max_div45 = 1;\n\tlong long max_div46\
    \ = 1;\n\tlong long max_div47 = 1;\n\tlong long max_div48 = 1;\n\tlong long max_div49\
    \ = 1;\n\tlong long max_div50 = 1;\n\tlong long max_div51 = 1;\n\tlong long max_div52\
    \ = 1;\n\tlong long max_div53 = 1;\n\tlong long max_div54 = 1;\n\tlong long max_div55\
    \ = 1;\n\tlong long max_div56 = 1;\n\tlong long max_div57 = 1;\n\tlong long max_div58\
    \ = 1;\n\tlong long max_div59 = 1;\n\tlong long max_div60 = 1;\n\tlong long max_div61\
    \ = 1;\n\tlong long max_div62 = 1;\n\tlong long max_div\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpye0b4yy2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpye0b4yy2.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpye0b4yy2.d(12): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpye0b4yy2.d(13): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(14): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(15): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(16): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(19):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(21):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpye0b4yy2.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpye0b4yy2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ey0c1xu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\t\n\
    \tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w1s9qgg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 2;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpju1b44yd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tif (d > largest) \n\t\
    \t\t\tlargest = d;\n\t\t\td++;\n\t\t}\n\t\telse \n\t\t\td++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ejscxa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792409
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5unw7ao.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d < largest)\n\t{\n\t\tlargest = d + (largest/2);\n\t\t\
    d++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dwr2ajv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp___ppouh.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp___ppouh.__unittest_L20_C1() [0x427a78]\n??:?
    void tmp___ppouh.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0xd6774554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd947o19r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile(currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_q0e47f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwv4ded53.d(10): Error: no identifier for declarator long\n/tmp/tmpwv4ded53.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpwv4ded53.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n) \n\t{\n\t\tif (n % divisor == 0)\
    \ \n\t\t{\n\t\t\tif (divisor * divisor > n) \n\t\t\t{\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\t}\n\t\t\tdivisor++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdivisor++;\n\t\t}\n\t\
    }\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7g85685e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqe94odfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor;\n\t\tcurrentDivisor *= 2;\n\t\t\n\t\tif (currentDivisor >\
    \ n)\n\t\t{\n\t\t\tcurrentNum = currentDivisor / n;\n\t\t}\n\t\t\n\t\tif (currentNum\
    \ > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentNum;\n\t\t}\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaia3y4nx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\t\n\twhile (d <= largest)\n\t{\n\t\tif (n % d == 0)\n\t\t{\n\t\
    \t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6mxu7n2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n\
    \ % i == 0)\n\t\t{\n\t\t\tdivisor = i;\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tif(divisor > maxDivisor)\n\t\t\t\tmaxDivisor = divisor;\n\
    \t\t\tdivisor = 1;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt1m27nk3.d(10): Error: no identifier for declarator long\n/tmp/tmpt1m27nk3.d(11):
    Error: no identifier for declarator long\n/tmp/tmpt1m27nk3.d(12): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt1m27nk3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong curDivisor\
    \ = 1;\n\t\n\twhile(curDivisor <= n)\n\t{\n\t\tif(n % curDivisor == 0)\n\t\t{\n\
    \t\t\tmaxDivisor = curDivisor;\n\t\t}\n\t\tcurDivisor++;\n\t}\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpru5gxsne.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tlargest = d + (n%d);\n\t\td++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe4k_lc2n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div\
    \ == 0)\n\t\t{\n\t\t\tif (div > max_div)\n\t\t\t\tmax_div = div;\n\t\t}\n\t\t\
    else\n\t\t{\n\t\t\tif (div > max_div2)\n\t\t\t\tmax_div2 = div;\n\t\t}\n\t\tdiv++;\n\
    \t}\n\t\n\treturn max_div2;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqukzx7b3.d(10): Error: no identifier for declarator long\n/tmp/tmpqukzx7b3.d(11):
    Error: no identifier for declarator long\n/tmp/tmpqukzx7b3.d(12): Error: no identifier
    for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqukzx7b3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnizzvx0.d(83): Error: no identifier for declarator `long`\n/tmp/tmpcnizzvx0.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcnizzvx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //assume n is even\n\
    \tlong d = 1;\n\t\n\twhile(n > 1)\n\t{\n\t\tif(n%2 == 0)\n\t\t{\n\t\t\tlargest\
    \ = n;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tn = n/2;\n\t\td++;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4miq94n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd947o19r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9c2h_m97.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tdiv *= 2;\n\t\tif (div > largest) largest = div;\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp971mtkqz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorFactor = 1;\n\t\n\twhile(currentDivisorFactor <=\
    \ n)\n\t{\n\t\tcurrentDivisor *= currentDivisorFactor;\n\t\tcurrentDivisorFactor++;\n\
    \t}\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(currentDivisor % 2 == 0)\n\t\
    \t{\n\t\t\tcurrentDivisor *= 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor++;\n\
    \t\t}\n\t\t\n\t\tif(currentDivisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\
    \t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57h2mvxw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkz0sz_kt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d <= largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\t\
    \td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpta48tqe5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wt77a69.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpynb36ixi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = n;\n\tlong div = n;\n\tlong div2 = n;\n\tlong div3 = n;\n\tlong div4 = n;\n\
    \tlong div5 = n;\n\tlong div6 = n;\n\tlong div7 = n;\n\tlong div8 = n;\n\tlong\
    \ div9 = n;\n\tlong div10 = n;\n\tlong div11 = n;\n\tlong div12 = n;\n\tlong div13\
    \ = n;\n\tlong div14 = n;\n\tlong div15 = n;\n\tlong div16 = n;\n\tlong div17\
    \ = n;\n\tlong div18 = n;\n\tlong div19 = n;\n\tlong div20 = n;\n\tlong div21\
    \ = n;\n\tlong div22 = n;\n\tlong div23 = n;\n\tlong div24 = n;\n\tlong div25\
    \ = n;\n\tlong div26 = n;\n\tlong div27 = n;\n\tlong div28 = n;\n\tlong div29\
    \ = n;\n\tlong div30 = n;\n\tlong div31 = n;\n\tlong div32 = n;\n\tlong div33\
    \ = n;\n\tlong div34 = n;\n\tlong div35 = n;\n\tlong div36 = n;\n\tlong div37\
    \ = n;\n\tlong div38 = n;\n\tlong div39 = n;\n\tlong div40 = n;\n\tlong div41\
    \ = n;\n\tlong div42 = n;\n\tlong div43 = n;\n\tlong div44 = n;\n\tlong div45\
    \ = n;\n\tlong div46 = n;\n\tlong div47 = n;\n\tlong div48 = n;\n\tlong div49\
    \ = n;\n\tlong div50 = n;\n\tlong div51 = n;\n\tlong div52 = n;\n\tlong div53\
    \ = n;\n\tlong div54 = n;\n\tlong div55 = n;\n\tlong div56 = n;\n\tlong div57\
    \ = n;\n\tlong div58 = n;\n\tlong div59 = n;\n\tlong div60 = n;\n\tlong div61\
    \ = n;\n\tlong div62 = n;\n\tlong div63 = n;\n\tlong div64 = n;\n\tlong div65\
    \ = n;\n\tlong div66 = n;\n\tlong div67 = n;\n\tlong div68 = n;\n\tlong div69\
    \ = n;\n\tlong div70 = n;\n\tlong div71 = n;\n\tlong div72 = n;\n\tlong div73\
    \ = \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6yz2c879.d(85): Error: expression expected, not \''unittest\''\n/tmp/tmp6yz2c879.d(86):
    Error: semicolon expected, not \''{\''\n/tmp/tmp6yz2c879.d(95): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6yz2c879.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor * currentDivisor;\n\t\
    \tcurrentDivisorDivisorRemainder = currentDivisor % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisorRemainder;\n\t\t\n\t\tif (currentDivisor > maxDivisor)\n\
    \t\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpabr3pgwp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor <= n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\t\
    while (divisor <= n && n % divisor != 0) {\n\t\tdivisor++;\n\t}\n\tif (divisor\
    \ > n) {\n\t\tlargest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwp17vkup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d <= largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t\
    }\n\t\td += 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8z61n933.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = max_div;\n\tlong max_div3 = max_div2;\n\tlong max_div4 = max_div3;\n\tlong\
    \ max_div5 = max_div4;\n\tlong max_div6 = max_div5;\n\tlong max_div7 = max_div6;\n\
    \tlong max_div8 = max_div7;\n\tlong max_div9 = max_div8;\n\tlong max_div10 = max_div9;\n\
    \tlong max_div11 = max_div10;\n\tlong max_div12 = max_div11;\n\tlong max_div13\
    \ = max_div12;\n\tlong max_div14 = max_div13;\n\tlong max_div15 = max_div14;\n\
    \tlong max_div16 = max_div15;\n\tlong max_div17 = max_div16;\n\tlong max_div18\
    \ = max_div17;\n\tlong max_div19 = max_div18;\n\tlong max_div20 = max_div19;\n\
    \tlong max_div21 = max_div20;\n\tlong max_div22 = max_div21;\n\tlong max_div23\
    \ = max_div22;\n\tlong max_div24 = max_div23;\n\tlong max_div25 = max_div24;\n\
    \tlong max_div26 = max_div25;\n\tlong max_div27 = max_div26;\n\tlong max_div28\
    \ = max_div27;\n\tlong max_div29 = max_div28;\n\tlong max_div30 = max_div29;\n\
    \tlong max_div31 = max_div30;\n\tlong max_div32 = max_div31;\n\tlong max_div33\
    \ = max_div32;\n\tlong max_div34 = max_div33;\n\tlong max_div35 = max_div34;\n\
    \tlong max_div36 = max_div35;\n\tlong max_div37 = max_div36;\n\tlong max_div38\
    \ = max_div37;\n\tlong max_div39 = max_div38;\n\tlong max_div40 = max_div39;\n\
    \tlong max_div41 = max_div40;\n\tlong max_div42 = max_div41;\n\tlong max_div43\
    \ = max_div42;\n\tlong max_div44 = max_div43;\n\tlong max_div45 = max_div44;\n\
    \tlong max_div46 = max_div45;\n\tlong max_div47 = max_div46;\n\tlong max_div48\
    \ = max_div47;\n\tlong max_div49 = max_div48;\n\tlong max_div50\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9uh75das.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmp9uh75das.d(60):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9uh75das.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24y4ae4y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\tlargest\
    \ = std.math.pow(2, std.math.ceil(std.math.log2(largest)));\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5ri1pw1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i, max_div = 1, max_div2\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tif (max_div\
    \ < i) max_div = i;\n\t\t\tif (max_div2 < i) max_div2 = i;\n\t\t}\n\t}\n\t\n\t\
    return max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n  \
    \  assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4yqmrt_i.d(10): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4yqmrt_i.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tdivisor++;\n\t}\n\tif (divisor > largest)\
    \ {\n\t\tlargest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yaqv3cf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor + 1;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5ixk3we.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\tfor (long i = 2L; i <= n; i += 2L) {\n\t\tif (n % i == 0L) {\n\
    \t\t\td = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (d == 1L) {\n\t\tlargest = n;\n\t\
    } else {\n\t\tlargest = d;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hv5hhd7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long maxDiv = n;\n\tlong long\
    \ div = 1;\n\t\n\twhile (div <= maxDiv) {\n\t\tif (std.math.mod(n, div) == 0)\
    \ {\n\t\t\tmaxDiv = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDiv;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ma6irrq.d(10): Error: no identifier for declarator long\n/tmp/tmp2ma6irrq.d(11):
    Error: no identifier for declarator long\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp2ma6irrq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792410
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbxo5pv5.d(76): Error: no identifier for declarator `long`\n/tmp/tmpqbxo5pv5.d(76):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqbxo5pv5.d", "-I/tmp"]\n'''
  stdout: b''

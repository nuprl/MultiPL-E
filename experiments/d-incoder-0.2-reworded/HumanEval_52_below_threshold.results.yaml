language: d
name: HumanEval_52_below_threshold
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcyxa8i3c.d(14): Error: no identifier for declarator `l`\n/tmp/tmpcyxa8i3c.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpcyxa8i3c.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcyxa8i3c.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptogc32e4.d(14): Error: no identifier for declarator `l`\n/tmp/tmptogc32e4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmptogc32e4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptogc32e4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfihh09a.d(14): Error: no identifier for declarator `l`\n/tmp/tmpmfihh09a.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpmfihh09a.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmfihh09a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tbool result =\
    \ true;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] < t) \n\t\t\
    {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxdlyv6i_.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281e5]\n??:? void tmpxdlyv6i_.__unittest_L23_C1() [0x427db0]\n??:?
    void tmpxdlyv6i_.__modtest() [0x427f64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c243]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430269]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430718]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301f5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0ad]\n??:? runModuleUnitTests [0x42c019]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286a8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42862f]\n??:? _d_run_main [0x42859a]\n??:? main [0x427f77]\n??:?
    __libc_start_main [0x73bd3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(int i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6n8lkg5p.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp6n8lkg5p.__unittest_L24_C1() [0x427db8]\n??:?
    void tmp6n8lkg5p.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x9a244554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i : l)\n    {\n        if(i < t)\n        {\n        \
    \    result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplfrrtcnd.d(14): Error: semicolon expected, not `:`\n/tmp/tmplfrrtcnd.d(14):
    Error: expression expected, not `:`\n/tmp/tmplfrrtcnd.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplfrrtcnd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t\tif (sum > t)\
    \ \n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjeo2owjb.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpjeo2owjb.__unittest_L22_C1() [0x427e67]\n??:?
    void tmpjeo2owjb.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x7bda554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i : l)\n    {\n        if(i < t)\n        {\n        \
    \    result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxny579t2.d(14): Error: semicolon expected, not `:`\n/tmp/tmpxny579t2.d(14):
    Error: expression expected, not `:`\n/tmp/tmpxny579t2.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxny579t2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum >= t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpgrsp4eza.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpgrsp4eza.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpgrsp4eza.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xafbf6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t\tif(sum < t) \n\
    \t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaqronwns.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaqronwns.__unittest_L22_C1() [0x427dc0]\n??:?
    void tmpaqronwns.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x918a4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for (long i : l)\n    {\n        if (i < t)\n        {\n      \
    \      result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxo4l72xl.d(14): Error: semicolon expected, not `:`\n/tmp/tmpxo4l72xl.d(14):
    Error: expression expected, not `:`\n/tmp/tmpxo4l72xl.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxo4l72xl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0uttu0fv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp0uttu0fv.__unittest_L24_C1() [0x427dc0]\n??:?
    void tmp0uttu0fv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x8703554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n</code>\n\
    <|/ a |>\n<| a tags=arrays,c++,sorting |>\n<code>\n#include <iostream>\n#include\
    \ <algorithm>\nusing namespace std;\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpitya57w4.d(13): Error: semicolon expected, not `:`\n/tmp/tmpitya57w4.d(13):
    Error: expression expected, not `:`\n/tmp/tmpitya57w4.d(13): Error: found `l`
    when expecting `;` following `for` condition\n/tmp/tmpitya57w4.d(18): Error: declaration
    expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpitya57w4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n    {\n        sum += i;\n    }\n    return sum < t;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8lt1pgd.d(14): Error: semicolon expected, not `:`\n/tmp/tmpf8lt1pgd.d(14):
    Error: expression expected, not `:`\n/tmp/tmpf8lt1pgd.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpf8lt1pgd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpai8ahrj6.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpai8ahrj6.__unittest_L22_C1() [0x427dc0]\n??:?
    void tmpai8ahrj6.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0xa5a2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tsum += l[i];\n\t\tif (sum > t)\n\
    \t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvifffl1a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpvifffl1a.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpvifffl1a.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0x3aab7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t\tif (sum > t)\
    \ \n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjeo2owjb.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpjeo2owjb.__unittest_L22_C1() [0x427e67]\n??:?
    void tmpjeo2owjb.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x7bda554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tsum += l[i];\n\t\tif (sum > t)\n\
    \t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcbiaktjo.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpcbiaktjo.__unittest_L22_C1() [0x427e67]\n??:?
    void tmpcbiaktjo.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x5c1af554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i : l)\n    {\n        if(i < t)\n        {\n        \
    \    result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxny579t2.d(14): Error: semicolon expected, not `:`\n/tmp/tmpxny579t2.d(14):
    Error: expression expected, not `:`\n/tmp/tmpxny579t2.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxny579t2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tbool result =\
    \ true;\n\tfor (long i = 0; i < l.length; ++i)\n\t{\n\t\tif (l[i] < t)\n\t\t\t\
    result = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvm25zb4m.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpvm25zb4m.__unittest_L21_C1() [0x427db8]\n??:?
    void tmpvm25zb4m.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0xa40c2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum >= t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp3fmp1gl2.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp3fmp1gl2.__unittest_L24_C1() [0x427e67]\n??:?
    void tmp3fmp1gl2.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x9014e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t{\n\t\tsum += i;\n\t}\n\treturn (sum < t);\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5nv799fv.d(14): Error: semicolon expected, not `:`\n/tmp/tmp5nv799fv.d(14):
    Error: expression expected, not `:`\n/tmp/tmp5nv799fv.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5nv799fv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n    {\n        sum += x;\n    }\n    return sum\
    \ < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2ei6jtr.d(14): Error: no identifier for declarator `l`\n/tmp/tmps2ei6jtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmps2ei6jtr.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2ei6jtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n/*\n\
    Return true if all numbers in the array l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2nm7vh9j.d(13): Error: semicolon expected, not `:`\n/tmp/tmp2nm7vh9j.d(13):
    Error: expression expected, not `:`\n/tmp/tmp2nm7vh9j.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp2nm7vh9j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum >= t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp3fmp1gl2.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp3fmp1gl2.__unittest_L24_C1() [0x427e67]\n??:?
    void tmp3fmp1gl2.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x9014e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum >= t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp3fmp1gl2.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp3fmp1gl2.__unittest_L24_C1() [0x427e67]\n??:?
    void tmp3fmp1gl2.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x9014e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n/*\n\
    Return true if all numbers in the array l are above threshold t.\n    >>> above_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    false\n    >>> above_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    true\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt49x4ghs.d(13): Error: semicolon expected, not `:`\n/tmp/tmpt49x4ghs.d(13):
    Error: expression expected, not `:`\n/tmp/tmpt49x4ghs.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpt49x4ghs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxb0ig1xn.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpxb0ig1xn.__unittest_L24_C1() [0x427db8]\n??:?
    void tmpxb0ig1xn.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x894b8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n            return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpx2cxxvmz.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpx2cxxvmz.__unittest_L20_C1() [0x427db8]\n??:?
    void tmpx2cxxvmz.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x3477d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t\tif (sum < t)\
    \ \n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp16f1m6r.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp16f1m6r.__unittest_L22_C1() [0x427dc0]\n??:?
    void tmpp16f1m6r.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x3c1ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i : l)\n    {\n        if(i < t)\n        {\n        \
    \    result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxny579t2.d(14): Error: semicolon expected, not `:`\n/tmp/tmpxny579t2.d(14):
    Error: expression expected, not `:`\n/tmp/tmpxny579t2.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxny579t2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tsum += l[i];\n\t\tif (sum > t)\n\
    \t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvifffl1a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpvifffl1a.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpvifffl1a.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0x3aab7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0uttu0fv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp0uttu0fv.__unittest_L24_C1() [0x427dc0]\n??:?
    void tmp0uttu0fv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x8703554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n    {\n        sum += i;\n    }\n    return sum < t;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8lt1pgd.d(14): Error: semicolon expected, not `:`\n/tmp/tmpf8lt1pgd.d(14):
    Error: expression expected, not `:`\n/tmp/tmpf8lt1pgd.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpf8lt1pgd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpai8ahrj6.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpai8ahrj6.__unittest_L22_C1() [0x427dc0]\n??:?
    void tmpai8ahrj6.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0xa5a2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l) sum += x;\n    return sum < t;\n}\nunittest\n{\n\
    \    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrat3mw4.d(14): Error: no identifier for declarator `l`\n/tmp/tmpvrat3mw4.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpvrat3mw4.d(14): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrat3mw4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    foreach(long x, l)\n    {\n        if(x < t)\n        {\n     \
    \       result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6wenz3tl.d(14): Error: no identifier for declarator `l`\n/tmp/tmp6wenz3tl.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp6wenz3tl.d(22): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wenz3tl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n    {\n        sum += x;\n    }\n    return sum\
    \ < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2ei6jtr.d(14): Error: no identifier for declarator `l`\n/tmp/tmps2ei6jtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmps2ei6jtr.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2ei6jtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tbool result =\
    \ true;\n\tfor (long i : l)\n\t\tif (i < t)\n\t\t\tresult = false;\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoyaahktw.d(14): Error: semicolon expected, not `:`\n/tmp/tmpoyaahktw.d(14):
    Error: expression expected, not `:`\n/tmp/tmpoyaahktw.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpoyaahktw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum >= t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpgrsp4eza.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpgrsp4eza.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpgrsp4eza.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xafbf6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n    {\n        sum += x;\n    }\n    return sum\
    \ < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2ei6jtr.d(14): Error: no identifier for declarator `l`\n/tmp/tmps2ei6jtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmps2ei6jtr.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2ei6jtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(int i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6n8lkg5p.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp6n8lkg5p.__unittest_L24_C1() [0x427db8]\n??:?
    void tmp6n8lkg5p.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x9a244554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0uttu0fv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp0uttu0fv.__unittest_L24_C1() [0x427dc0]\n??:?
    void tmp0uttu0fv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x8703554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n/*\n\
    Return true if all numbers in the array l are above threshold t.\n    >>> above_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    false\n    >>> above_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    true\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt49x4ghs.d(13): Error: semicolon expected, not `:`\n/tmp/tmpt49x4ghs.d(13):
    Error: expression expected, not `:`\n/tmp/tmpt49x4ghs.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpt49x4ghs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tbool result =\
    \ true;\n\tfor (long i : l)\n\t{\n\t\tif (i < t)\n\t\t\tresult = false;\n\t}\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6rn5w6se.d(14): Error: semicolon expected, not `:`\n/tmp/tmp6rn5w6se.d(14):
    Error: expression expected, not `:`\n/tmp/tmp6rn5w6se.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp6rn5w6se.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \  }\n    return sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdv39y6s3.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpdv39y6s3.__unittest_L20_C1() [0x427e5f]\n??:?
    void tmpdv39y6s3.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x23046554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum >= t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpgrsp4eza.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpgrsp4eza.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpgrsp4eza.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xafbf6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(int i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6n8lkg5p.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp6n8lkg5p.__unittest_L24_C1() [0x427db8]\n??:?
    void tmp6n8lkg5p.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x9a244554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n    {\n        sum += i;\n        if (sum > t)\n \
    \           return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3t71vtd6.d(14): Error: semicolon expected, not `:`\n/tmp/tmp3t71vtd6.d(14):
    Error: expression expected, not `:`\n/tmp/tmp3t71vtd6.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp3t71vtd6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n</code>\n\
    <|/ a tags=c++,arrays |>\n<| c |>\nThis code doesn't work. `std::array` doesn't\
    \ have a `size()` method. Also, `std::array` doesn't have a `begin()` method.\
    \ `std::array` doesn't have a `operator[]` either. `std::array` doesn't have a\
    \ `begin()` method. `std::array` doesn't have a `operator[]` either. `std::array`\
    \ doesn't have a `begin()` method. `std::array` doesn't have a `operator[]` either.\
    \ `std::array` doesn't have a `begin()` method. `std::array` doesn't have a `operator[]`\
    \ either. `std::array` doesn't have a `begin()` method. `std::array` doesn't have\
    \ a `operator[]` either. `std::array` doesn't have a `begin()` method. `std::array`\
    \ doesn't have a `operator[]` either. `std::array` doesn't have a `begin()` method.\
    \ `std::array` doesn't have a `operator[]` either. `std::array` doesn't have a\
    \ `begin()` method. `std::array` doesn't have a `operator[]` either. `std::array`\
    \ doesn't have a `begin()` method. `std::array` doesn't have a `operator[]` either.\
    \ `std::array` doesn't have a `begin()` method. `std::array` doesn't have a `operator[]`\
    \ either. `std::array` doesn't have a `begin()` method. `std::array` doesn't have\
    \ a `operator[]` either. `std::array` doesn't have a `begin()` method. `std::array`\
    \ doesn't have a `operator[]` either. `std::array` doesn't have a `begin()` method.\
    \ `std::array` doesn't have a `operator[]` either. `std::array` doesn't have a\
    \ `begin()` method. `std::array` doesn't have a `operator[]` either. `std::array`\
    \ doesn't have a `begin()` method. `std::array` doesn't have a `operator[]` either.\
    \ `std::array` doesn't have a `begin()` method. `std::array` doesn't have a `operator[]`\
    \ either. `std::array` doesn't have a `begin()` method. `std::array` doesn't have\
    \ a `operator[]` either. `std::array` doesn't have a `begin()` method. `std::array`\
    \ doesn't have a `operator[]` either. `std::array` doesn't have a `begin()` method.\
    \ `std::array` doesn't have a `operator[]` either. `std::array` doesn't have a\
    \ `begin()` method. `std::array` doesn't have a `operator[]\nunittest\n{\n   \
    \ alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L],\
    \ 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n \
    \   assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo23sgkzm.d(13): Error: semicolon expected, not `:`\n/tmp/tmpo23sgkzm.d(13):
    Error: expression expected, not `:`\n/tmp/tmpo23sgkzm.d(13): Error: found `l`
    when expecting `;` following `for` condition\n/tmp/tmpo23sgkzm.d(18): Error: declaration
    expected, not `<`\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21):
    Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated
    character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21):
    Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated
    character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21):
    Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated
    character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21):
    Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated
    character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21):
    Error: unterminated character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated
    character constant\n/tmp/tmpo23sgkzm.d(21): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo23sgkzm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0uttu0fv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp0uttu0fv.__unittest_L24_C1() [0x427dc0]\n??:?
    void tmp0uttu0fv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x8703554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\n/*\n\
    Return true if all numbers in the array l are above threshold t.\n    >>> above_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    false\n    >>> above_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    true\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt49x4ghs.d(13): Error: semicolon expected, not `:`\n/tmp/tmpt49x4ghs.d(13):
    Error: expression expected, not `:`\n/tmp/tmpt49x4ghs.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpt49x4ghs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tbool result =\
    \ true;\n\tfor (long i : l)\n\t{\n\t\tif (i < t)\n\t\t\tresult = false;\n\t}\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6rn5w6se.d(14): Error: semicolon expected, not `:`\n/tmp/tmp6rn5w6se.d(14):
    Error: expression expected, not `:`\n/tmp/tmp6rn5w6se.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp6rn5w6se.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum >= t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpgrsp4eza.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpgrsp4eza.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpgrsp4eza.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xafbf6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpehon8ylg.d(24): Error: declaration expected, not `<`\n/tmp/tmpehon8ylg.d(32):
    Error: declaration expected, not `assert`\n/tmp/tmpehon8ylg.d(33): Error: declaration
    expected, not `assert`\n/tmp/tmpehon8ylg.d(34): Error: declaration expected, not
    `assert`\n/tmp/tmpehon8ylg.d(35): Error: declaration expected, not `assert`\n/tmp/tmpehon8ylg.d(36):
    Error: declaration expected, not `assert`\n/tmp/tmpehon8ylg.d(37): Error: declaration
    expected, not `assert`\n/tmp/tmpehon8ylg.d(38): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpehon8ylg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n    {\n        sum += x;\n    }\n    return sum\
    \ < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2ei6jtr.d(14): Error: no identifier for declarator `l`\n/tmp/tmps2ei6jtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmps2ei6jtr.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2ei6jtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn (sum < t);\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5czw0k3f.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp5czw0k3f.__unittest_L18_C1() [0x427e63]\n??:?
    void tmp5czw0k3f.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0x11e4d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpai8ahrj6.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpai8ahrj6.__unittest_L22_C1() [0x427dc0]\n??:?
    void tmpai8ahrj6.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0xa5a2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(int i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6n8lkg5p.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp6n8lkg5p.__unittest_L24_C1() [0x427db8]\n??:?
    void tmp6n8lkg5p.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x9a244554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n    {\n        sum += i;\n    }\n    return sum < t;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8lt1pgd.d(14): Error: semicolon expected, not `:`\n/tmp/tmpf8lt1pgd.d(14):
    Error: expression expected, not `:`\n/tmp/tmpf8lt1pgd.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpf8lt1pgd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n    {\n        sum += x;\n    }\n    return sum\
    \ < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2ei6jtr.d(14): Error: no identifier for declarator `l`\n/tmp/tmps2ei6jtr.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmps2ei6jtr.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2ei6jtr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t{\n\t\tsum += i;\n\t}\n\treturn (sum < t);\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5nv799fv.d(14): Error: semicolon expected, not `:`\n/tmp/tmp5nv799fv.d(14):
    Error: expression expected, not `:`\n/tmp/tmp5nv799fv.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5nv799fv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum < t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0uttu0fv.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmp0uttu0fv.__unittest_L24_C1() [0x427dc0]\n??:?
    void tmp0uttu0fv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x8703554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n    {\n        sum += i;\n    }\n    return sum < t;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8lt1pgd.d(14): Error: semicolon expected, not `:`\n/tmp/tmpf8lt1pgd.d(14):
    Error: expression expected, not `:`\n/tmp/tmpf8lt1pgd.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpf8lt1pgd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for (long i : l) {\n        if (i < t) {\n            result =\
    \ false;\n            break;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3m8a9l34.d(14): Error: semicolon expected, not `:`\n/tmp/tmp3m8a9l34.d(14):
    Error: expression expected, not `:`\n/tmp/tmp3m8a9l34.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp3m8a9l34.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i<t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplligumz7.d(13): Error: semicolon expected, not `:`\n/tmp/tmplligumz7.d(13):
    Error: expression expected, not `:`\n/tmp/tmplligumz7.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplligumz7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqz9ac0pv.d(22): Error: declaration expected, not `<`\n/tmp/tmpqz9ac0pv.d(30):
    Error: declaration expected, not `assert`\n/tmp/tmpqz9ac0pv.d(31): Error: declaration
    expected, not `assert`\n/tmp/tmpqz9ac0pv.d(32): Error: declaration expected, not
    `assert`\n/tmp/tmpqz9ac0pv.d(33): Error: declaration expected, not `assert`\n/tmp/tmpqz9ac0pv.d(34):
    Error: declaration expected, not `assert`\n/tmp/tmpqz9ac0pv.d(35): Error: declaration
    expected, not `assert`\n/tmp/tmpqz9ac0pv.d(36): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz9ac0pv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaaoki7f2.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpaaoki7f2.__unittest_L22_C1() [0x427e6b]\n??:?
    void tmpaaoki7f2.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xd9270554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(int i = 0; i < l.length; ++i)\n    {\n        if(l[i] < t)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6n8lkg5p.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp6n8lkg5p.__unittest_L24_C1() [0x427db8]\n??:?
    void tmp6n8lkg5p.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x9a244554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for(long i : l)\n    {\n        if(i <= t)\n        {\n       \
    \     result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpidt3qv39.d(14): Error: semicolon expected, not `:`\n/tmp/tmpidt3qv39.d(14):
    Error: expression expected, not `:`\n/tmp/tmpidt3qv39.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpidt3qv39.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\n/*\n\
    Return true if all numbers in the array l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyaijz2jz.d(13): Error: semicolon expected, not `:`\n/tmp/tmpyaijz2jz.d(13):
    Error: expression expected, not `:`\n/tmp/tmpyaijz2jz.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpyaijz2jz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum > t)\n            return false;\n    }\n    return true;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvau7o5eb.d(22): Error: declaration expected, not `<`\n/tmp/tmpvau7o5eb.d(30):
    Error: declaration expected, not `assert`\n/tmp/tmpvau7o5eb.d(31): Error: declaration
    expected, not `assert`\n/tmp/tmpvau7o5eb.d(32): Error: declaration expected, not
    `assert`\n/tmp/tmpvau7o5eb.d(33): Error: declaration expected, not `assert`\n/tmp/tmpvau7o5eb.d(34):
    Error: declaration expected, not `assert`\n/tmp/tmpvau7o5eb.d(35): Error: declaration
    expected, not `assert`\n/tmp/tmpvau7o5eb.d(36): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvau7o5eb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum >= t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm |>\n<| c |>\nThe\
    \ question was about C++, not C. Also, your solution doesn't work if there are\
    \ negative numbers in the array.\n<|/ c |>\n<| c |>\n: I agree with you. My solution\
    \ was in C. My mistake.\n<|/ c |>\n<| c |>\n: I agree with you. My solution was\
    \ in C. My mistake.\n<|/ c |>\n<| c |>\n: I agree with you. My solution was in\
    \ C. My mistake.\n<|/ c |>\n<| c |>\n: I agree with you. My solution was in C.\
    \ My mistake.\n<|/ c |>\n<| a tags=c++,arrays,algorithm |>\n<code>\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5cf97gxp.d(24): Error: declaration expected, not `<`\n/tmp/tmp5cf97gxp.d(27):
    Error: unterminated character constant\n/tmp/tmp5cf97gxp.d(47): Error: declaration
    expected, not `assert`\n/tmp/tmp5cf97gxp.d(48): Error: declaration expected, not
    `assert`\n/tmp/tmp5cf97gxp.d(49): Error: declaration expected, not `assert`\n/tmp/tmp5cf97gxp.d(50):
    Error: declaration expected, not `assert`\n/tmp/tmp5cf97gxp.d(51): Error: declaration
    expected, not `assert`\n/tmp/tmp5cf97gxp.d(52): Error: declaration expected, not
    `assert`\n/tmp/tmp5cf97gxp.d(53): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp5cf97gxp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n\tlong sum = 0;\n\
    \tfor (long i : l)\n\t\tsum += i;\n\treturn (sum < t);\n}\nunittest\n{\n    alias\
    \ candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhciruaj.d(14): Error: semicolon expected, not `:`\n/tmp/tmphhciruaj.d(14):
    Error: expression expected, not `:`\n/tmp/tmphhciruaj.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphhciruaj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ : l)\n        if(i < t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9xgebf2w.d(13): Error: semicolon expected, not `:`\n/tmp/tmp9xgebf2w.d(13):
    Error: expression expected, not `:`\n/tmp/tmp9xgebf2w.d(13): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9xgebf2w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn0h11pcm.d(14): Error: semicolon expected, not `:`\n/tmp/tmpn0h11pcm.d(14):
    Error: expression expected, not `:`\n/tmp/tmpn0h11pcm.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpn0h11pcm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n        sum += l[i];\n    return\
    \ sum < t;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwdf7j9vw.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmpwdf7j9vw.__unittest_L18_C1() [0x427e63]\n??:?
    void tmpwdf7j9vw.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f83]\n??:?
    __libc_start_main [0xc2bfc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n  \
    \      if(sum > t) \n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_0p6b3x.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpp_0p6b3x.__unittest_L24_C1() [0x427e67]\n??:?
    void tmpp_0p6b3x.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f87]\n??:?
    __libc_start_main [0x1156b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for(int i = 0; i < l.length; ++i)\n    {\n        sum += l[i];\n   \
    \     if(sum < t)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj76amc2o.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281f5]\n??:? void tmpj76amc2o.__unittest_L22_C1() [0x427dc4]\n??:?
    void tmpj76amc2o.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c253]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430279]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430728]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430205]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0bd]\n??:? runModuleUnitTests [0x42c029]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42863f]\n??:? _d_run_main [0x4285aa]\n??:? main [0x427f8b]\n??:?
    __libc_start_main [0xc0e1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    for(long i\
    \ = 0; i < l.length; ++i)\n        if(l[i] < t)\n            return false;\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_hevo9q.d(22): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281ed]\n??:? void tmp0_hevo9q.__unittest_L18_C1() [0x427db8]\n??:?
    void tmp0_hevo9q.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c24b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b0de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430271]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430720]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4301fd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0b5]\n??:? runModuleUnitTests [0x42c021]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428637]\n??:? _d_run_main [0x4285a2]\n??:? main [0x427f7f]\n??:?
    __libc_start_main [0x7a8ff554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    foreach(long x, l)\n        sum += x;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0zuv_i6.d(14): Error: no identifier for declarator `l`\n/tmp/tmpr0zuv_i6.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpr0zuv_i6.d(15): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0zuv_i6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    long sum =\
    \ 0;\n    for (long i : l)\n        sum += i;\n    return sum < t;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt5qqg36.d(14): Error: semicolon expected, not `:`\n/tmp/tmpnt5qqg36.d(14):
    Error: expression expected, not `:`\n/tmp/tmpnt5qqg36.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnt5qqg36.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn true if all numbers\
    \ in the array l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L,\
    \ 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n   \
    \ false\n    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result\
    \ = true;\n    for (long i : l)\n    {\n        if (i < t)\n        {\n      \
    \      result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxo4l72xl.d(14): Error: semicolon expected, not `:`\n/tmp/tmpxo4l72xl.d(14):
    Error: expression expected, not `:`\n/tmp/tmpxo4l72xl.d(14): Error: found `l`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxo4l72xl.d", "-I/tmp"]\n'''
  stdout: b''

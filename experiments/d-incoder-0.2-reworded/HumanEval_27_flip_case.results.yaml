name: HumanEval_27_flip_case
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'c')\n            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n     \
    \       c = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'g')\n            c = 'G';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'h')\n            c = 'H';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n\
    \            c = 'J';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'n')\n            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n     \
    \       c = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'r')\n            c = 'R';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 's')\n            c = 'S';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 't')\n            c = 'T';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n\
    \            c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps3hhfqxn.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmps3hhfqxn.d(106): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps3hhfqxn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\\n/tmp/tmp995ys0ja.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmp995ys0ja.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmp995ys0ja.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmp995ys0ja.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp995ys0ja.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdfsdfe3l.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpdfsdfe3l.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfsdfe3l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n\
    \        else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c\
    \ == 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c ==\
    \ 'D')\n            c = 'D';\n        else if(c == 'e' || c == 'E')\n        \
    \    c = 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n \
    \       else if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c\
    \ == 'h' || c == 'H')\n            c = 'H';\n        else if(c == 'i' || c ==\
    \ 'I')\n            c = 'I';\n        else if(c == 'j' || c == 'J')\n        \
    \    c = 'J';\n        else if(c == 'k' || c == 'K')\n            c = 'K';\n \
    \       else if(c == 'l' || c == 'L')\n            c = 'L';\n        else if(c\
    \ == 'm' || c == 'M')\n            c = 'M';\n        else if(c == 'n' || c ==\
    \ 'N')\n            c = 'N';\n        else if(c == 'o' || c == 'O')\n        \
    \    c = 'O';\n        else if(c == 'p' || c == 'P')\n            c = 'P';\n \
    \       else if(c == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c\
    \ == 'r' || c == 'R')\n            c = 'R';\n        else if(c == 's' || c ==\
    \ 'S')\n            c = 'S';\n        else if(c == 't' || c == 'T')\n        \
    \    c = 'T';\n        else if(c == 'u' || c == 'U')\n            c = 'U';\n \
    \       else if(c == 'v' || c == 'V')\n            c = 'V';\n        else if(c\
    \ == 'w' || c == 'W')\n            c = 'W';\n        else if(c == 'x' || c ==\
    \ 'X')\n            c = 'X';\n        else if(c == 'y' || c == 'Y')\n        \
    \    c = 'Y';\n        else if(c == 'z' || c == 'Z')\n            c = 'Z';\n \
    \       else\n            c = toupper(c);\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvloq_jlc.d(11): Error: `string` is used as a type\\n/tmp/tmpvloq_jlc.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpvloq_jlc.d(68): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvloq_jlc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80hoza8f.d(11): Error: `string` is used as a type\\n/tmp/tmp80hoza8f.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp80hoza8f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\t\
    else if(*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpks3sxxgk.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpks3sxxgk.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpks3sxxgk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph4j073na.d(11): Error: `string` is used as a type\\n/tmp/tmph4j073na.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmph4j073na.d(17): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmph4j073na.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc03fvdsi.d(11): Error: `string` is used as a type\\n/tmp/tmpc03fvdsi.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpc03fvdsi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\
    \t\t\tresult += toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaksiy1ai.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpaksiy1ai.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpaksiy1ai.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpaksiy1ai.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkyigqn4z.d(11): Error: `string` is used as a type\\n/tmp/tmpkyigqn4z.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkyigqn4z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph4i9w55u.d(11): Error: `string` is used as a type\\n/tmp/tmph4i9w55u.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmph4i9w55u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn10vii78.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpn10vii78.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn10vii78.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            c\
    \ = c.toUpper();\n        }\n        else\n        {\n            c = c.toLower();\n\
    \        }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6xgmmk1_.d(11): Error: `string` is used as a type\\n/tmp/tmp6xgmmk1_.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp6xgmmk1_.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmp6xgmmk1_.d(17): Error: no property\
    \ `toUpper` for type `char`\\n/tmp/tmp6xgmmk1_.d(21): Error: no property `toLower`\
    \ for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6xgmmk1_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqt5kclg6.d(11): Error: `string` is used as a type\\n/tmp/tmpqt5kclg6.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpqt5kclg6.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmpqt5kclg6.d(16): Error: no property\
    \ `toUpper` for type `char`\\n/tmp/tmpqt5kclg6.d(18): Error: no property `toLower`\
    \ for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt5kclg6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvf61zorg.d(11): Error: `string` is used as a type\\n/tmp/tmpvf61zorg.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpvf61zorg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse if(isupper(*it))\n\
    \t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpatm5r01g.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpatm5r01g.d(12): Error: no property `end` for type `string`\\n/tmp/tmpatm5r01g.d(15):\
    \ Error: undefined identifier `islower`\\n/tmp/tmpatm5r01g.d(17): Error: undefined\
    \ identifier `isupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpatm5r01g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbvw08sk9.d(11): Error: `string` is used as a type\\n/tmp/tmpbvw08sk9.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpbvw08sk9.d(21): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpbvw08sk9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\\n/tmp/tmpmooh3ity.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmooh3ity.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else if(c == c.toUpper())\n            c = c.toLower();\n        result\
    \ += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvp475thm.d(11): Error: `string` is used as a type\\n/tmp/tmpvp475thm.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpvp475thm.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmpvp475thm.d(16): Error: no property\
    \ `toUpper` for type `char`\\n/tmp/tmpvp475thm.d(17): Error: no property `toUpper`\
    \ for type `char`\\n/tmp/tmpvp475thm.d(18): Error: no property `toLower` for type\
    \ `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvp475thm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\\n/tmp/tmprz9w_09o.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprz9w_09o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

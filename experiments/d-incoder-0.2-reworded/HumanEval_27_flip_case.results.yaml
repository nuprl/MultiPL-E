language: d
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'c')\n            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n     \
    \       c = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'g')\n            c = 'G';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'h')\n            c = 'H';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n\
    \            c = 'J';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'n')\n            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n     \
    \       c = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'r')\n            c = 'R';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 's')\n            c = 'S';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 't')\n            c = 'T';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n\
    \            c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3hhfqxn.d(98): Error: found `unittest` instead of statement\n/tmp/tmps3hhfqxn.d(106):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3hhfqxn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdfsdfe3l.d(11): Error: no property `length` for type `string`\n/tmp/tmpdfsdfe3l.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpdfsdfe3l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n\
    \        else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c\
    \ == 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c ==\
    \ 'D')\n            c = 'D';\n        else if(c == 'e' || c == 'E')\n        \
    \    c = 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n \
    \       else if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c\
    \ == 'h' || c == 'H')\n            c = 'H';\n        else if(c == 'i' || c ==\
    \ 'I')\n            c = 'I';\n        else if(c == 'j' || c == 'J')\n        \
    \    c = 'J';\n        else if(c == 'k' || c == 'K')\n            c = 'K';\n \
    \       else if(c == 'l' || c == 'L')\n            c = 'L';\n        else if(c\
    \ == 'm' || c == 'M')\n            c = 'M';\n        else if(c == 'n' || c ==\
    \ 'N')\n            c = 'N';\n        else if(c == 'o' || c == 'O')\n        \
    \    c = 'O';\n        else if(c == 'p' || c == 'P')\n            c = 'P';\n \
    \       else if(c == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c\
    \ == 'r' || c == 'R')\n            c = 'R';\n        else if(c == 's' || c ==\
    \ 'S')\n            c = 'S';\n        else if(c == 't' || c == 'T')\n        \
    \    c = 'T';\n        else if(c == 'u' || c == 'U')\n            c = 'U';\n \
    \       else if(c == 'v' || c == 'V')\n            c = 'V';\n        else if(c\
    \ == 'w' || c == 'W')\n            c = 'W';\n        else if(c == 'x' || c ==\
    \ 'X')\n            c = 'X';\n        else if(c == 'y' || c == 'Y')\n        \
    \    c = 'Y';\n        else if(c == 'z' || c == 'Z')\n            c = 'Z';\n \
    \       else\n            c = toupper(c);\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvloq_jlc.d(11): Error: `string` is used as a type\n/tmp/tmpvloq_jlc.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpvloq_jlc.d(68): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvloq_jlc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp80hoza8f.d(11): Error: `string` is used as a type\n/tmp/tmp80hoza8f.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp80hoza8f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\t\
    else if(*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpks3sxxgk.d(11): Error: no property `begin` for type `string`\n/tmp/tmpks3sxxgk.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpks3sxxgk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4j073na.d(11): Error: `string` is used as a type\n/tmp/tmph4j073na.d(12):
    Error: no property `length` for type `string`\n/tmp/tmph4j073na.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4j073na.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc03fvdsi.d(11): Error: `string` is used as a type\n/tmp/tmpc03fvdsi.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpc03fvdsi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\
    \t\t\tresult += toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaksiy1ai.d(12): Error: no identifier for declarator `c`\n/tmp/tmpaksiy1ai.d(12):
    Error: expression expected, not `:`\n/tmp/tmpaksiy1ai.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpaksiy1ai.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkyigqn4z.d(11): Error: `string` is used as a type\n/tmp/tmpkyigqn4z.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpkyigqn4z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4i9w55u.d(11): Error: `string` is used as a type\n/tmp/tmph4i9w55u.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmph4i9w55u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn10vii78.d(11): Error: no property `length` for type `string`\n/tmp/tmpn10vii78.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn10vii78.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            c\
    \ = c.toUpper();\n        }\n        else\n        {\n            c = c.toLower();\n\
    \        }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6xgmmk1_.d(11): Error: `string` is used as a type\n/tmp/tmp6xgmmk1_.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp6xgmmk1_.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmp6xgmmk1_.d(17): Error: no property
    `toUpper` for type `char`\n/tmp/tmp6xgmmk1_.d(21): Error: no property `toLower`
    for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xgmmk1_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqt5kclg6.d(11): Error: `string` is used as a type\n/tmp/tmpqt5kclg6.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpqt5kclg6.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpqt5kclg6.d(16): Error: no property
    `toUpper` for type `char`\n/tmp/tmpqt5kclg6.d(18): Error: no property `toLower`
    for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqt5kclg6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvf61zorg.d(11): Error: `string` is used as a type\n/tmp/tmpvf61zorg.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpvf61zorg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse if(isupper(*it))\n\
    \t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpatm5r01g.d(11): Error: no property `begin` for type `string`\n/tmp/tmpatm5r01g.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpatm5r01g.d(15): Error: undefined
    identifier `islower`\n/tmp/tmpatm5r01g.d(17): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatm5r01g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvw08sk9.d(11): Error: `string` is used as a type\n/tmp/tmpbvw08sk9.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpbvw08sk9.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvw08sk9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else if(c == c.toUpper())\n            c = c.toLower();\n        result\
    \ += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvp475thm.d(11): Error: `string` is used as a type\n/tmp/tmpvp475thm.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpvp475thm.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpvp475thm.d(16): Error: no property
    `toUpper` for type `char`\n/tmp/tmpvp475thm.d(17): Error: no property `toUpper`
    for type `char`\n/tmp/tmpvp475thm.d(18): Error: no property `toLower` for type
    `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvp475thm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkougp_hx.d(11): Error: no property `begin` for type `string`\n/tmp/tmpkougp_hx.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpkougp_hx.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkougp_hx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n     \
    \       c = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n\
    \            c = toupper(c);\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp610xhsdd.d(11): Error: `string` is used as a type\n/tmp/tmp610xhsdd.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp610xhsdd.d(40): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp610xhsdd.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            if(c == '_')\n            {\n                c = string[i +\
    \ 2];\n                if(c == '_')\n                {\n                    c\
    \ = string[i + 3];\n                    if(c == '_')\n                    {\n\
    \                        c = string[i + 4];\n                        if(c == '_')\n\
    \                        {\n                            c = string[i + 5];\n \
    \                           if(c == '_')\n                            {\n    \
    \                            c = string[i + 6];\n                            \
    \    if(c == '_')\n                                {\n                       \
    \             c = string[i + 7];\n                                    if(c ==\
    \ '_')\n                                    {\n                              \
    \          c = string[i + 8];\n                                        if(c ==\
    \ '_')\n                                        {\n                          \
    \                  c = string[i + 9];\n                                      \
    \      if(c == '_')\n                                            {\n         \
    \                                       c = string[i + 10];\n                \
    \                                if(c == '_')\n                              \
    \                  {\n                                                    c =\
    \ string[i + 11];\n                                                    if(c ==\
    \ '_')\n                                                    {\n              \
    \                                          c = string[i + 12];\n             \
    \                                           if(c == '_')\n                   \
    \                                     {\n                                    \
    \                        c = string[i + 13];\n                               \
    \                             if(c == '_')\n                                 \
    \                           {\n                                              \
    \                  c = string[i + 14];\n                                     \
    \                           if(c == '_')\n                                   \
    \                             {\n                                            \
    \                        c = string[i + 15];\n                               \
    \                                     if(c == '_')\n                         \
    \                                           {\n                              \
    \                                          c = string[i + 16];\n             \
    \                                                           if(c == '_')\n   \
    \                                                                     {\n    \
    \                                                                        c = string[i\
    \ + 17];\n                                                                   \
    \         if(c == '_')\n                                                     \
    \                       {\n                                                  \
    \                              c = string[i + 18];\n                         \
    \                                                       if(c == '_')\n       \
    \                                                                         {\n\
    \                                                                            \
    \        c = string[i + 19];\n                                               \
    \                                     if(c == '_')\n                         \
    \                                                           {\n              \
    \                                                                          c =\
    \ string[i + 20];\n                                                          \
    \                              if(c == '_')\n                                \
    \                                                        {\n                 \
    \                                                                           c\
    \ = string[i + 21];\n                                                        \
    \                                    if(c == '_')\n                          \
    \                                                                  {\n       \
    \                                                                            \
    \             c = string[i + 22];\n                                          \
    \                                                      if(c == '_')\n        \
    \                                                                            \
    \            {\n                                                             \
    \                                       c = string[i + 23];\n                \
    \                                                                            \
    \        if(c == '_')\n                                                      \
    \                                              {\n                           \
    \                                                                            \
    \ c = string[i + 24];\n                                                      \
    \                                                  if(c == '_')\n            \
    \                                                                            \
    \                {\n                                                         \
    \                                                   c = string[i + 25];\n    \
    \                                                                            \
    \                            if(c == '_')\n                                  \
    \                                                                          {\n\
    \                                                                            \
    \                                    c = string[i + 26];\n                   \
    \                                                                            \
    \                 if(c == '_')\n                                             \
    \                                                                   {\n      \
    \                                                                            \
    \                                  c = string[i + 27];\n                     \
    \                                                                            \
    \                   if(c == '\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt28jk87_.d(96): Error: unterminated character constant\n/tmp/tmpt28jk87_.d(97):
    Error: found `unittest` when expecting `)`\n/tmp/tmpt28jk87_.d(105): Error: found
    `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt28jk87_.d(105):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt28jk87_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkougp_hx.d(11): Error: no property `begin` for type `string`\n/tmp/tmpkougp_hx.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpkougp_hx.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkougp_hx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c\
    \ = string[i];\n\t\tif (islower(c))\n\t\t\tresult += toupper(c);\n\t\telse\n\t\
    \t\tresult += tolower(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6fgf325m.d(11): Error: `string` is used as a type\n/tmp/tmp6fgf325m.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp6fgf325m.d(15): Error:
    undefined identifier `islower`\n/tmp/tmp6fgf325m.d(16): Error: undefined identifier
    `toupper`\n/tmp/tmp6fgf325m.d(18): Error: undefined identifier `tolower`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6fgf325m.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip uppercase characters to lowercase and lowercase to uppercase.\n    >>>\
    \ flip_case(\"hELLO\")\n    \"Hello\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n        \
    \    result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip all characters to uppercase and lowercase to lowercase.\n\
    \    >>> flip_case(\"HellO\")\n    \"hello\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case(\"hELLO\")\n   \
    \ \"Hello\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to lowercase and uppercase to\
    \ uppercase.\n    >>> flip_case(\"HellO\")\n    \"hello\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzpsxzu3t.d(111): Error: found `unittest` when expecting `)`\n/tmp/tmpzpsxzu3t.d(119):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpzpsxzu3t.d(119):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpsxzu3t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3rqxcky.d(12): Error: no identifier for declarator `c`\n/tmp/tmpg3rqxcky.d(12):
    Error: expression expected, not `:`\n/tmp/tmpg3rqxcky.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg3rqxcky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it) {\n\t\
    \tif(islower(*it)) {\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it\
    \ = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfflz7j6n.d(11): Error: no property `begin` for type `string`\n/tmp/tmpfflz7j6n.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpfflz7j6n.d(14): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfflz7j6n.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9cd29ddh.d(11): Error: `string` is used as a type\n/tmp/tmp9cd29ddh.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9cd29ddh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        else\n        {\n       \
    \     result += c;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt10zplni.d(11): Error: `string` is used as a type\n/tmp/tmpt10zplni.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpt10zplni.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ')\n        {\n            result += c;\n\
    \        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpito6ezuj.d(11): Error: `string` is used as a type\n/tmp/tmpito6ezuj.d(21):
    Error: undefined identifier `toupper`\n/tmp/tmpito6ezuj.d(25): Error: undefined
    identifier `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpito6ezuj.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string)\n\t{\n\t\tif (islower(c))\n\t\t\tresult\
    \ += toupper(c);\n\t\telse\n\t\t\tresult += tolower(c);\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpky_i1765.d(12): Error: no identifier for declarator `c`\n/tmp/tmpky_i1765.d(12):
    Error: expression expected, not `:`\n/tmp/tmpky_i1765.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpky_i1765.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplexxd1zq.d(11): Error: `string` is used as a type\n/tmp/tmplexxd1zq.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplexxd1zq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else\n            c = c;\n     \
    \   result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp84ud0l9y.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp84ud0l9y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n')\n         \
    \   continue;\n        if(c == 'A' || c == 'a')\n            c = 'a';\n      \
    \  if(c == 'B' || c == 'b')\n            c = 'b';\n        if(c == 'C' || c ==\
    \ 'c')\n            c = 'c';\n        if(c == 'D' || c == 'd')\n            c\
    \ = 'd';\n        if(c == 'E' || c == 'e')\n            c = 'e';\n        if(c\
    \ == 'F' || c == 'f')\n            c = 'f';\n        if(c == 'G' || c == 'g')\n\
    \            c = 'g';\n        if(c == 'H' || c == 'h')\n            c = 'h';\n\
    \        if(c == 'I' || c == 'i')\n            c = 'i';\n        if(c == 'J' ||\
    \ c == 'j')\n            c = 'j';\n        if(c == 'K' || c == 'k')\n        \
    \    c = 'k';\n        if(c == 'L' || c == 'l')\n            c = 'l';\n      \
    \  if(c == 'M' || c == 'm')\n            c = 'm';\n        if(c == 'N' || c ==\
    \ 'n')\n            c = 'n';\n        if(c == 'O' || c == 'o')\n            c\
    \ = 'o';\n        if(c == 'P' || c == 'p')\n            c = 'p';\n        if(c\
    \ == 'Q' || c == 'q')\n            c = 'q';\n        if(c == 'R' || c == 'r')\n\
    \            c = 'r';\n        if(c == 'S' || c == 's')\n            c = 's';\n\
    \        if(c == 'T' || c == 't')\n            c = 't';\n        if(c == 'U' ||\
    \ c == 'u')\n            c = 'u';\n        if(c == 'V' || c == 'v')\n        \
    \    c = 'v';\n        if(c == 'W' || c == 'w')\n            c = 'w';\n      \
    \  if(c == 'X' || c == 'x')\n            c = 'x';\n        if(c == 'Y' || c ==\
    \ 'y')\n            c = 'y';\n        if(c == 'Z' || c == 'z')\n            c\
    \ = 'z';\n        if(c == 'a' || c == 'A')\n            c = 'A';\n        if(c\
    \ == 'b' || c == 'B')\n            c = 'B';\n        if(c == 'c' || c == 'C')\n\
    \            c = 'C';\n        if(c == 'd' || c == 'D')\n            c = 'D';\n\
    \        if(c == 'e' || c == 'E')\n            c = 'E';\n        if(c == 'f' ||\
    \ c == 'F')\n            c = 'F';\n        if(c == 'g\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9gq8f_1h.d(81): Error: unterminated character constant\n/tmp/tmp9gq8f_1h.d(82):
    Error: found `unittest` when expecting `)`\n/tmp/tmp9gq8f_1h.d(90): Error: found
    `End of File` when expecting `}` following compound statement\n/tmp/tmp9gq8f_1h.d(90):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9gq8f_1h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3rqxcky.d(12): Error: no identifier for declarator `c`\n/tmp/tmpg3rqxcky.d(12):
    Error: expression expected, not `:`\n/tmp/tmpg3rqxcky.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg3rqxcky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgh0mdg1u.d(11): Error: `string` is used as a type\n/tmp/tmpgh0mdg1u.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgh0mdg1u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip lowercase characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphsxoblis.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphsxoblis.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else\n            result += c;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjfhgs0id.d(11): Error: `string` is used as a type\n/tmp/tmpjfhgs0id.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpjfhgs0id.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp63qxmiox.d(11): Error: `string` is used as a type\n/tmp/tmp63qxmiox.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp63qxmiox.d(15): Error:
    no property `toUpper` for type `char`\n/tmp/tmp63qxmiox.d(17): Error: no property
    `toLower` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp63qxmiox.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t\t*it = (*it-'a'+'A');\n\t\telse if(*it\
    \ >= 'A' && *it <= 'Z')\n\t\t\t*it = (*it-'A'+'a');\n\t\telse\n\t\t\t*it = *it;\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpml8jx0td.d(11): Error: no property `begin` for type `string`\n/tmp/tmpml8jx0td.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpml8jx0td.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    c = 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n \
    \           c = 'B';\n        }\n        else if(c == 'c' || c == 'C')\n     \
    \   {\n            c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n\
    \        {\n            c = 'D';\n        }\n        else if(c == 'e' || c ==\
    \ 'E')\n        {\n            c = 'E';\n        }\n        else if(c == 'f' ||\
    \ c == 'F')\n        {\n            c = 'F';\n        }\n        else if(c ==\
    \ 'g' || c == 'G')\n        {\n            c = 'G';\n        }\n        else if(c\
    \ == 'h' || c == 'H')\n        {\n            c = 'H';\n        }\n        else\
    \ if(c == 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n     \
    \   else if(c == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n\
    \        else if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n    \
    \    }\n        else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n\
    \        }\n        else if(c == 'm' || c == 'M')\n        {\n            c =\
    \ 'M';\n        }\n        else if(c == 'n' || c == 'N')\n        {\n        \
    \    c = 'N';\n        }\n        else if(c == 'o' || c == 'O')\n        {\n \
    \           c = 'O';\n        }\n        else if(c == 'p' || c == 'P')\n     \
    \   {\n            c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n\
    \        {\n            c = 'Q';\n        }\n        else if(c == 'r' || c ==\
    \ 'R')\n        {\n            c = 'R';\n        }\n        else if(c == 's' ||\
    \ c == 'S')\n        {\n            c = 'S';\n        }\n        else if(c ==\
    \ 't' || c == 'T')\n        {\n            c = 'T';\n        }\n        else if(c\
    \ == 'u' || c == 'U')\n        {\n            c = 'U';\n        }\n        else\
    \ if(c == 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n     \
    \   else if(c == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n\
    \        else if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n    \
    \    }\n        else if(c == 'y' || c == 'Y')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwaget08l.d(112): Error: found `unittest` instead of statement\n/tmp/tmpwaget08l.d(120):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwaget08l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == '_') {\n            result += string[i];\n \
    \       } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj9dbkigo.d(11): Error: `string` is used as a type\n/tmp/tmpj9dbkigo.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpj9dbkigo.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj9dbkigo.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplexxd1zq.d(11): Error: `string` is used as a type\n/tmp/tmplexxd1zq.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplexxd1zq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplhv8q4bi.d(11): Error: no property `length` for type `string`\n/tmp/tmplhv8q4bi.d(13):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmplhv8q4bi.d(16):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplhv8q4bi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqt5kclg6.d(11): Error: `string` is used as a type\n/tmp/tmpqt5kclg6.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpqt5kclg6.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpqt5kclg6.d(16): Error: no property
    `toUpper` for type `char`\n/tmp/tmpqt5kclg6.d(18): Error: no property `toLower`
    for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqt5kclg6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    c = 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n \
    \           c = 'B';\n        }\n        else if(c == 'c' || c == 'C')\n     \
    \   {\n            c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n\
    \        {\n            c = 'D';\n        }\n        else if(c == 'e' || c ==\
    \ 'E')\n        {\n            c = 'E';\n        }\n        else if(c == 'f' ||\
    \ c == 'F')\n        {\n            c = 'F';\n        }\n        else if(c ==\
    \ 'g' || c == 'G')\n        {\n            c = 'G';\n        }\n        else if(c\
    \ == 'h' || c == 'H')\n        {\n            c = 'H';\n        }\n        else\
    \ if(c == 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n     \
    \   else if(c == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n\
    \        else if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n    \
    \    }\n        else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n\
    \        }\n        else if(c == 'm' || c == 'M')\n        {\n            c =\
    \ 'M';\n        }\n        else if(c == 'n' || c == 'N')\n        {\n        \
    \    c = 'N';\n        }\n        else if(c == 'o' || c == 'O')\n        {\n \
    \           c = 'O';\n        }\n        else if(c == 'p' || c == 'P')\n     \
    \   {\n            c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n\
    \        {\n            c = 'Q';\n        }\n        else if(c == 'r' || c ==\
    \ 'R')\n        {\n            c = 'R';\n        }\n        else if(c == 's' ||\
    \ c == 'S')\n        {\n            c = 'S';\n        }\n        else if(c ==\
    \ 't' || c == 'T')\n        {\n            c = 'T';\n        }\n        else if(c\
    \ == 'u' || c == 'U')\n        {\n            c = 'U';\n        }\n        else\
    \ if(c == 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n     \
    \   else if(c == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n\
    \        else if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n    \
    \    }\n        else if(c == 'y' || c == 'Y')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwaget08l.d(112): Error: found `unittest` instead of statement\n/tmp/tmpwaget08l.d(120):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwaget08l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4j073na.d(11): Error: `string` is used as a type\n/tmp/tmph4j073na.d(12):
    Error: no property `length` for type `string`\n/tmp/tmph4j073na.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4j073na.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukumplat.d(11): Error: `string` is used as a type\n/tmp/tmpukumplat.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpukumplat.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpukumplat.d(17): Error: no property
    `toUpper` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukumplat.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkougp_hx.d(11): Error: no property `begin` for type `string`\n/tmp/tmpkougp_hx.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpkougp_hx.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkougp_hx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8gesrep6.d(11): Error: no property `begin` for type `string`\n/tmp/tmp8gesrep6.d(12):
    Error: no property `end` for type `string`\n/tmp/tmp8gesrep6.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gesrep6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'A')\n            c = 'a';\n        else\
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'B')\n            c\
    \ = 'b';\n        else if(c == 'b')\n            c = 'B';\n        else if(c ==\
    \ 'C')\n            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n\
    \        else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'E')\n            c = 'e';\n     \
    \   else if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n     \
    \       c = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else\
    \ if(c == 'G')\n            c = 'g';\n        else if(c == 'g')\n            c\
    \ = 'G';\n        else if(c == 'H')\n            c = 'h';\n        else if(c ==\
    \ 'h')\n            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n\
    \            c = 'j';\n        else if(c == 'j')\n            c = 'J';\n     \
    \   else if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'M')\n            c\
    \ = 'm';\n        else if(c == 'm')\n            c = 'M';\n        else if(c ==\
    \ 'N')\n            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n\
    \        else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'P')\n            c = 'p';\n     \
    \   else if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n     \
    \       c = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else\
    \ if(c == 'R')\n            c = 'r';\n        else if(c == 'r')\n            c\
    \ = 'R';\n        else if(c == 'S')\n            c = 's';\n        else if(c ==\
    \ 's')\n            c = 'S';\n        else if(c == 'T')\n            c = 't';\n\
    \        else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n\
    \            c = 'u';\n        else if(c == 'u')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpl3ptnp.d(98): Error: found `unittest` instead of statement\n/tmp/tmpxpl3ptnp.d(106):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpl3ptnp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == toupper(c))\n        {\n            c\
    \ = tolower(c);\n        }\n        else if(c == tolower(c))\n        {\n    \
    \        c = toupper(c);\n        }\n        result += c;\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis code doesn't work. `toupper`\
    \ and `tolower` are not standard functions in C++.\n<|/ c |>\n<| c |>\n: They\
    \ are part of the standard library. http://en.cppreference.com/w/cpp/string/byte/toupper\n\
    <|/ c |>\n<| c |>\n: They are part of the standard library. http://en.cppreference.com/w/cpp/string/byte/toupper\n\
    <|/ c |>\n<| c |>\n: They are part of the standard library. http://en.cppreference.com/w/cpp/string/byte/toupper\n\
    <|/ c |>\n<| c |>\n: They are part of the standard library. http://en.cppreference.com/w/cpp/string/byte/toupper\n\
    <|/ c |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cctype>\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_el0x7h2.d(27): Error: declaration expected, not `<`\n/tmp/tmp_el0x7h2.d(30):
    Error: unterminated character constant\n/tmp/tmp_el0x7h2.d(53): Error: declaration
    expected, not `assert`\n/tmp/tmp_el0x7h2.d(54): Error: declaration expected, not
    `assert`\n/tmp/tmp_el0x7h2.d(55): Error: declaration expected, not `assert`\n/tmp/tmp_el0x7h2.d(56):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_el0x7h2.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'c')\n            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n     \
    \       c = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'g')\n            c = 'G';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'h')\n            c = 'H';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n\
    \            c = 'J';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'n')\n            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n     \
    \       c = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'r')\n            c = 'R';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 's')\n            c = 'S';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 't')\n            c = 'T';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n\
    \            c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3hhfqxn.d(98): Error: found `unittest` instead of statement\n/tmp/tmps3hhfqxn.d(106):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3hhfqxn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == '_') {\n            result += string[i];\n \
    \       }\n        else {\n            result += toupper(c);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpziuy9jni.d(11): Error: `string` is used as a type\n/tmp/tmpziuy9jni.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpziuy9jni.d(18): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpziuy9jni.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\t\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_6abq6hc.d(11): Error: no property `begin` for type `string`\n/tmp/tmp_6abq6hc.d(12):
    Error: no property `end` for type `string`\n/tmp/tmp_6abq6hc.d(16): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6abq6hc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t\t*it ^= 0x20;\n\t\telse if(*it >=\
    \ 'A' && *it <= 'Z')\n\t\t\t*it ^= 0x20;\n\t\telse if(*it >= '0' && *it <= '9')\n\
    \t\t\t*it ^= 0x20;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6dyhhvo3.d(11): Error: no property `begin` for type `string`\n/tmp/tmp6dyhhvo3.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp6dyhhvo3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\t\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_6abq6hc.d(11): Error: no property `begin` for type `string`\n/tmp/tmp_6abq6hc.d(12):
    Error: no property `end` for type `string`\n/tmp/tmp_6abq6hc.d(16): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6abq6hc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvw08sk9.d(11): Error: `string` is used as a type\n/tmp/tmpbvw08sk9.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpbvw08sk9.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvw08sk9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplexxd1zq.d(11): Error: `string` is used as a type\n/tmp/tmplexxd1zq.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplexxd1zq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\\
    r' || c == '\\v' || c == '\\f' || c == '\\r') {\n            result += c;\n  \
    \      } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8xdzzhii.d(11): Error: `string` is used as a type\n/tmp/tmp8xdzzhii.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp8xdzzhii.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xdzzhii.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '_' || c == '-' || c == '.' || c\
    \ == '!' || c == '?')\n        {\n            result += c;\n        }\n      \
    \  else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n       \
    \ {\n            result += toupper(c);\n        }\n        else if(c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            result\
    \ += tolower(c);\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpel_nea_d.d(11): Error: `string` is used as a type\n/tmp/tmpel_nea_d.d(21):
    Error: undefined identifier `toupper`\n/tmp/tmpel_nea_d.d(25): Error: undefined
    identifier `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpel_nea_d.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukumplat.d(11): Error: `string` is used as a type\n/tmp/tmpukumplat.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpukumplat.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpukumplat.d(17): Error: no property
    `toUpper` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukumplat.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnfob6af6.d(11): Error: `string` is used as a type\n/tmp/tmpnfob6af6.d(40):
    Error: undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpnfob6af6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukumplat.d(11): Error: `string` is used as a type\n/tmp/tmpukumplat.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpukumplat.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpukumplat.d(17): Error: no property
    `toUpper` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukumplat.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) result += toupper(c);\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi1_ofgxx.d(12): Error: no identifier for declarator `c`\n/tmp/tmpi1_ofgxx.d(12):
    Error: expression expected, not `:`\n/tmp/tmpi1_ofgxx.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpi1_ofgxx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgh0mdg1u.d(11): Error: `string` is used as a type\n/tmp/tmpgh0mdg1u.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgh0mdg1u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(*it<='Z' && *it>='a')\n\t\t\t*it+=32;\n\t\telse if(*it>='A' && *it<='Z')\n\
    \t\t\t*it-=32;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgv868x7x.d(11): Error: no property `begin` for type `string`\n/tmp/tmpgv868x7x.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgv868x7x.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \    {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpka4zox49.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpka4zox49.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9cd29ddh.d(11): Error: `string` is used as a type\n/tmp/tmp9cd29ddh.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9cd29ddh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3rqxcky.d(12): Error: no identifier for declarator `c`\n/tmp/tmpg3rqxcky.d(12):
    Error: expression expected, not `:`\n/tmp/tmpg3rqxcky.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg3rqxcky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'A' || c == 'a') \n        {\n       \
    \     c = 'a';\n        }\n        else if(c == 'B' || c == 'b')\n        {\n\
    \            c = 'b';\n        }\n        else if(c == 'C' || c == 'c')\n    \
    \    {\n            c = 'c';\n        }\n        else if(c == 'D' || c == 'd')\n\
    \        {\n            c = 'd';\n        }\n        else if(c == 'E' || c ==\
    \ 'e')\n        {\n            c = 'e';\n        }\n        else if(c == 'F' ||\
    \ c == 'f')\n        {\n            c = 'f';\n        }\n        else if(c ==\
    \ 'G' || c == 'g')\n        {\n            c = 'g';\n        }\n        else if(c\
    \ == 'H' || c == 'h')\n        {\n            c = 'h';\n        }\n        else\
    \ if(c == 'I' || c == 'i')\n        {\n            c = 'i';\n        }\n     \
    \   else if(c == 'J' || c == 'j')\n        {\n            c = 'j';\n        }\n\
    \        else if(c == 'K' || c == 'k')\n        {\n            c = 'k';\n    \
    \    }\n        else if(c == 'L' || c == 'l')\n        {\n            c = 'l';\n\
    \        }\n        else if(c == 'M' || c == 'm')\n        {\n            c =\
    \ 'm';\n        }\n        else if(c == 'N' || c == 'n')\n        {\n        \
    \    c = 'n';\n        }\n        else if(c == 'O' || c == 'o')\n        {\n \
    \           c = 'o';\n        }\n        else if(c == 'P' || c == 'p')\n     \
    \   {\n            c = 'p';\n        }\n        else if(c == 'Q' || c == 'q')\n\
    \        {\n            c = 'q';\n        }\n        else if(c == 'R' || c ==\
    \ 'r')\n        {\n            c = 'r';\n        }\n        else if(c == 'S' ||\
    \ c == 's')\n        {\n            c = 's';\n        }\n        else if(c ==\
    \ 'T' || c == 't')\n        {\n            c = 't';\n        }\n        else if(c\
    \ == 'U' || c == 'u')\n        {\n            c = 'u';\n        }\n        else\
    \ if(c == 'V' || c == 'v')\n        {\n            c = 'v';\n        }\n     \
    \   else if(c == 'W' || c == 'w')\n        {\n            c = 'w';\n        }\n\
    \        else if(c == 'X' || c == 'x')\n        {\n            c = 'x';\n    \
    \    }\n        else if(c == 'Y' || c == 'y')\n        {\n            c = 'y';\n\
    \        }\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfifut44_.d(116): Error: found `unittest` instead of statement\n/tmp/tmpfifut44_.d(124):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfifut44_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            i++;\n        }\n        result += toupper(c);\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsy5308t3.d(11): Error: `string` is used as a type\n/tmp/tmpsy5308t3.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpsy5308t3.d(20): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsy5308t3.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdm_ry4fx.d(11): Error: `string` is used as a type\n/tmp/tmpdm_ry4fx.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpdm_ry4fx.d(21): Error:
    undefined identifier `toupper`\n/tmp/tmpdm_ry4fx.d(25): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdm_ry4fx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqd5_9447.d(11): Error: `string` is used as a type\n/tmp/tmpqd5_9447.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpqd5_9447.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd5_9447.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7pbjfscv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7pbjfscv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor(int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c\
    \ = string[i];\n\t\tif(c == ' ' || c == '\\t' || c == '\\n' || c == '\\r')\n\t\
    \t\tcontinue;\n\t\telse if(c == 'a')\n\t\t\tc = 'A';\n\t\telse if(c == 'b')\n\t\
    \t\tc = 'B';\n\t\telse if(c == 'c')\n\t\t\tc = 'C';\n\t\telse if(c == 'd')\n\t\
    \t\tc = 'D';\n\t\telse if(c == 'e')\n\t\t\tc = 'E';\n\t\telse if(c == 'f')\n\t\
    \t\tc = 'F';\n\t\telse if(c == 'g')\n\t\t\tc = 'G';\n\t\telse if(c == 'h')\n\t\
    \t\tc = 'H';\n\t\telse if(c == 'i')\n\t\t\tc = 'I';\n\t\telse if(c == 'j')\n\t\
    \t\tc = 'J';\n\t\telse if(c == 'k')\n\t\t\tc = 'K';\n\t\telse if(c == 'l')\n\t\
    \t\tc = 'L';\n\t\telse if(c == 'm')\n\t\t\tc = 'M';\n\t\telse if(c == 'n')\n\t\
    \t\tc = 'N';\n\t\telse if(c == 'o')\n\t\t\tc = 'O';\n\t\telse if(c == 'p')\n\t\
    \t\tc = 'P';\n\t\telse if(c == 'q')\n\t\t\tc = 'Q';\n\t\telse if(c == 'r')\n\t\
    \t\tc = 'R';\n\t\telse if(c == 's')\n\t\t\tc = 'S';\n\t\telse if(c == 't')\n\t\
    \t\tc = 'T';\n\t\telse if(c == 'u')\n\t\t\tc = 'U';\n\t\telse if(c == 'v')\n\t\
    \t\tc = 'V';\n\t\telse if(c == 'w')\n\t\t\tc = 'W';\n\t\telse if(c == 'x')\n\t\
    \t\tc = 'X';\n\t\telse if(c == 'y')\n\t\t\tc = 'Y';\n\t\telse if(c == 'z')\n\t\
    \t\tc = 'Z';\n\t\telse if(c == 'A')\n\t\t\tc = 'a';\n\t\telse if(c == 'B')\n\t\
    \t\tc = 'b';\n\t\telse if(c == 'C')\n\t\t\tc = 'c';\n\t\telse if(c == 'D')\n\t\
    \t\tc = 'd';\n\t\telse if(c == 'E')\n\t\t\tc = 'e';\n\t\telse if(c == 'F')\n\t\
    \t\tc = 'f';\n\t\telse if(c == 'G')\n\t\t\tc = 'g';\n\t\telse if(c == 'H')\n\t\
    \t\tc = 'h';\n\t\t\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpftho4ra2.d(86): Error: found `unittest` instead of statement\n/tmp/tmpftho4ra2.d(94):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpftho4ra2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4j073na.d(11): Error: `string` is used as a type\n/tmp/tmph4j073na.d(12):
    Error: no property `length` for type `string`\n/tmp/tmph4j073na.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4j073na.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            c\
    \ = c.toUpper();\n        }\n        else\n        {\n            c = c.toLower();\n\
    \        }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6xgmmk1_.d(11): Error: `string` is used as a type\n/tmp/tmp6xgmmk1_.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp6xgmmk1_.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmp6xgmmk1_.d(17): Error: no property
    `toUpper` for type `char`\n/tmp/tmp6xgmmk1_.d(21): Error: no property `toLower`
    for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xgmmk1_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1vp1e0pp.d(11): Error: `string` is used as a type\n/tmp/tmp1vp1e0pp.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1vp1e0pp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\
    \t\t\tresult += toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaksiy1ai.d(12): Error: no identifier for declarator `c`\n/tmp/tmpaksiy1ai.d(12):
    Error: expression expected, not `:`\n/tmp/tmpaksiy1ai.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpaksiy1ai.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdm_ry4fx.d(11): Error: `string` is used as a type\n/tmp/tmpdm_ry4fx.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpdm_ry4fx.d(21): Error:
    undefined identifier `toupper`\n/tmp/tmpdm_ry4fx.d(25): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdm_ry4fx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\
    \t\t\tresult += toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaksiy1ai.d(12): Error: no identifier for declarator `c`\n/tmp/tmpaksiy1ai.d(12):
    Error: expression expected, not `:`\n/tmp/tmpaksiy1ai.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpaksiy1ai.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkyigqn4z.d(11): Error: `string` is used as a type\n/tmp/tmpkyigqn4z.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpkyigqn4z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(*it<='Z' && *it>='a')\n\t\t\t*it=toupper(*it);\n\t\telse if(*it>='A' &&\
    \ *it<='Z')\n\t\t\t*it=tolower(*it);\n\t}\n\treturn string;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp15qbzmk3.d(11): Error: no property `begin` for type `string`\n/tmp/tmp15qbzmk3.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp15qbzmk3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprmxofofp.d(11): Error: `string` is used as a type\n/tmp/tmprmxofofp.d(12):
    Error: no property `length` for type `string`\n/tmp/tmprmxofofp.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmxofofp.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8fjm9a0m.d(11): Error: `string` is used as a type\n/tmp/tmp8fjm9a0m.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp8fjm9a0m.d(21): Error:
    undefined identifier `toupper`\n/tmp/tmp8fjm9a0m.d(25): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8fjm9a0m.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\\
    r')\n        {\n            result += c;\n        }\n        else\n        {\n\
    \            result += toupper(c);\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptrz1eys2.d(11): Error: `string` is used as a type\n/tmp/tmptrz1eys2.d(21):
    Error: undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmptrz1eys2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk0wjj6uv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk0wjj6uv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc03fvdsi.d(11): Error: `string` is used as a type\n/tmp/tmpc03fvdsi.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpc03fvdsi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1ild_v8_.d(11): Error: `string` is used as a type\n/tmp/tmp1ild_v8_.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1ild_v8_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case(\"hELLO\")\n    \"Hello\"\n    \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case(\"hELLO\")\n    \"Hello\"\n    \n*/\nstring\
    \ flip_case_upper(string string) \n{\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           string[i] = string[i] + 32;\n        }\n        if(string[i] >= 'a'\
    \ && string[i] <= 'z')\n        {\n            string[i] = string[i] - 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to lowercase.\n    >>> flip_case(\"hELLO\")\n   \
    \ \"hello\"\n    \n*/\nstring flip_case_all(string string) \n{\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip all characters to lowercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"hELLO\")\n    \"hello\"\n    \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81g0qc7h.d(101): Error: unterminated character constant\n/tmp/tmp81g0qc7h.d(102):
    Error: found `unittest` when expecting `)`\n/tmp/tmp81g0qc7h.d(110): Error: found
    `End of File` when expecting `}` following compound statement\n/tmp/tmp81g0qc7h.d(110):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81g0qc7h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n            result += c;\n     \
    \   else\n        {\n            result += toupper(c);\n            result +=\
    \ tolower(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn8g5oa8v.d(11): Error: `string` is used as a type\n/tmp/tmpn8g5oa8v.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpn8g5oa8v.d(19): Error:
    undefined identifier `toupper`\n/tmp/tmpn8g5oa8v.d(20): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8g5oa8v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            result += c;\n        }\n        else\n        {\n      \
    \      result += toupper(c);\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            result += c;\n        }\n       \
    \ else\n        {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ result += c;\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            result += c;\n        }\n        else\n        {\n            result\
    \ += toupper(c);\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(c == '_')\n        {\n       \
    \     c = string[i + 1];\n            result += c;\n        }\n        else\n\
    \        {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprpfzj3_7.d(123): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprpfzj3_7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmpt98pqr.d(11): Error: `string` is used as a type\n/tmp/tmpmpt98pqr.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpmpt98pqr.d(15): Error:
    undefined identifier `islower`\n/tmp/tmpmpt98pqr.d(17): Error: undefined identifier
    `toupper`\n/tmp/tmpmpt98pqr.d(21): Error: undefined identifier `tolower`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmpt98pqr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9cd29ddh.d(11): Error: `string` is used as a type\n/tmp/tmp9cd29ddh.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9cd29ddh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n    >>> flip_case(\"hELLO\")\n    \"\
    Hello\"\n    \n*/\nstring flip_case_lower(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case(\"hELLO\")\n    \"Hello\"\n    \n*/\nstring\
    \ flip_case_upper(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else if(string[i] >= 'a' && string[i] <= 'z')\n        {\n          \
    \  result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip all characters to lowercase and all characters to uppercase.\n\
    \    >>> flip_case(\"hELLO\")\n    \"HELLO\"\n    \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqwnj2rc7.d(107): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwnj2rc7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] + string[i].toUpper();\n\
    \        }\n        else {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq8vivq0t.d(11): Error: `string` is used as a type\n/tmp/tmpq8vivq0t.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpq8vivq0t.d(14): Error:
    no property `toUpper` for type `immutable(char)`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpq8vivq0t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\t\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnoq2nows.d(11): Error: no property `begin` for type `string`\n/tmp/tmpnoq2nows.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpnoq2nows.d(16): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnoq2nows.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        auto lc = tolower(c);\n\
    \        auto uc = toupper(c);\n        result += lc + uc;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfc1y3qdx.d(12): Error: no identifier for declarator `c`\n/tmp/tmpfc1y3qdx.d(12):
    Error: expression expected, not `:`\n/tmp/tmpfc1y3qdx.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfc1y3qdx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp31r8t3jx.d(11): Error: `string` is used as a type\n/tmp/tmp31r8t3jx.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp31r8t3jx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukumplat.d(11): Error: `string` is used as a type\n/tmp/tmpukumplat.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpukumplat.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpukumplat.d(17): Error: no property
    `toUpper` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukumplat.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplexxd1zq.d(11): Error: `string` is used as a type\n/tmp/tmplexxd1zq.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplexxd1zq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            c = toupper(c);\n\
    \        }\n        else if(c == '-' || c == '_')\n        {\n            c =\
    \ tolower(c);\n        }\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0sui7zjy.d(11): Error: `string` is used as a type\n/tmp/tmp0sui7zjy.d(17):
    Error: undefined identifier `toupper`\n/tmp/tmp0sui7zjy.d(21): Error: undefined
    identifier `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0sui7zjy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn10vii78.d(11): Error: no property `length` for type `string`\n/tmp/tmpn10vii78.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn10vii78.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqafmkqz.d(11): Error: no property `length` for type `string`\n/tmp/tmppqafmkqz.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmppqafmkqz.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppqafmkqz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        } else {\n            result += string[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplnr5bowf.d(11): Error: `string` is used as a type\n/tmp/tmplnr5bowf.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplnr5bowf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] + string[i].toUpper();\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            result += string[i] + string[i].toLower();\n\
    \        }\n        else\n        {\n            result += string[i];\n      \
    \  }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n   \
    \ \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] + string[i].toUpper();\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            result += string[i] + string[i].toLower();\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] + string[i].toUpper();\n  \
    \      }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] + string[i].toLower();\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] + string[i].toUpper();\n  \
    \      }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] + string[i].toLower();\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\")\
    \ == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpduz3li_w.d(107): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpduz3li_w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else\n            c = toupper(c);\n \
    \       result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkoety94l.d(11): Error: `string` is used as a type\n/tmp/tmpkoety94l.d(20):
    Error: undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkoety94l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqafmkqz.d(11): Error: no property `length` for type `string`\n/tmp/tmppqafmkqz.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmppqafmkqz.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppqafmkqz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqafmkqz.d(11): Error: no property `length` for type `string`\n/tmp/tmppqafmkqz.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmppqafmkqz.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppqafmkqz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9cd29ddh.d(11): Error: `string` is used as a type\n/tmp/tmp9cd29ddh.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9cd29ddh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvw08sk9.d(11): Error: `string` is used as a type\n/tmp/tmpbvw08sk9.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpbvw08sk9.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvw08sk9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        auto lc = tolower(c);\n\
    \        auto uc = toupper(c);\n        result += (uc != lc) ? uc : lc;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsg6gw487.d(12): Error: no identifier for declarator `c`\n/tmp/tmpsg6gw487.d(12):
    Error: expression expected, not `:`\n/tmp/tmpsg6gw487.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsg6gw487.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmfoit6ky.d(11): Error: no property `length` for type `string`\n/tmp/tmpmfoit6ky.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpmfoit6ky.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmfoit6ky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppbfksidt.d(11): Error: `string` is used as a type\n/tmp/tmppbfksidt.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmppbfksidt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n      \
    \      c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n\
    \        {\n            c = string[i + 1];\n            i++;\n        }\n    \
    \    if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5xlwr4kt.d(144): Error: found `unittest` instead of statement\n/tmp/tmp5xlwr4kt.d(152):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp5xlwr4kt.d(152):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xlwr4kt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'A') {\n            c = 'A';\n \
    \       } else if(c == 'b' || c == 'B') {\n            c = 'B';\n        } else\
    \ if(c == 'c' || c == 'C') {\n            c = 'C';\n        } else if(c == 'd'\
    \ || c == 'D') {\n            c = 'D';\n        } else if(c == 'e' || c == 'E')\
    \ {\n            c = 'E';\n        } else if(c == 'f' || c == 'F') {\n       \
    \     c = 'F';\n        } else if(c == 'g' || c == 'G') {\n            c = 'G';\n\
    \        } else if(c == 'h' || c == 'H') {\n            c = 'H';\n        } else\
    \ if(c == 'i' || c == 'I') {\n            c = 'I';\n        } else if(c == 'j'\
    \ || c == 'J') {\n            c = 'J';\n        } else if(c == 'k' || c == 'K')\
    \ {\n            c = 'K';\n        } else if(c == 'l' || c == 'L') {\n       \
    \     c = 'L';\n        } else if(c == 'm' || c == 'M') {\n            c = 'M';\n\
    \        } else if(c == 'n' || c == 'N') {\n            c = 'N';\n        } else\
    \ if(c == 'o' || c == 'O') {\n            c = 'O';\n        } else if(c == 'p'\
    \ || c == 'P') {\n            c = 'P';\n        } else if(c == 'q' || c == 'Q')\
    \ {\n            c = 'Q';\n        } else if(c == 'r' || c == 'R') {\n       \
    \     c = 'R';\n        } else if(c == 's' || c == 'S') {\n            c = 'S';\n\
    \        } else if(c == 't' || c == 'T') {\n            c = 'T';\n        } else\
    \ if(c == 'u' || c == 'U') {\n            c = 'U';\n        } else if(c == 'v'\
    \ || c == 'V') {\n            c = 'V';\n        } else if(c == 'w' || c == 'W')\
    \ {\n            c = 'W';\n        } else if(c == 'x' || c == 'X') {\n       \
    \     c = 'X';\n        } else if(c == 'y' || c == 'Y') {\n            c = 'Y';\n\
    \        } else if(c == 'z' || c == 'Z') {\n            c = 'Z';\n        } else\
    \ if(c == 'A' || c == 'a') {\n            c = 'a';\n        } else if(c == 'B'\
    \ || c == 'b') {\n            c = 'b';\n        } else if(c == 'C' || c == 'c')\
    \ {\n            c = 'c';\n\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo3xw3p3z.d(73): Error: found `unittest` instead of statement\n/tmp/tmpo3xw3p3z.d(81):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpo3xw3p3z.d(81):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo3xw3p3z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43ln1pd6.d(11): Error: no property `length` for type `string`\n/tmp/tmp43ln1pd6.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmp43ln1pd6.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp43ln1pd6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += toupper(c);\n        }\n        else\
    \ if (c >= 'A' && c <= 'Z') \n        {\n            result += tolower(c);\n \
    \       }\n        else \n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqkyooeja.d(12): Error: no identifier for declarator `c`\n/tmp/tmpqkyooeja.d(12):
    Error: expression expected, not `:`\n/tmp/tmpqkyooeja.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqkyooeja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7pbjfscv.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7pbjfscv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += c.toUpper();\n\
    \        }\n        else\n        {\n            result += c.toLower();\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ojst0bt.d(11): Error: `string` is used as a type\n/tmp/tmp7ojst0bt.d(12):
    Error: no property `length` for type `string`\n/tmp/tmp7ojst0bt.d(21): Error:
    no property `toUpper` for type `char`\n/tmp/tmp7ojst0bt.d(25): Error: no property
    `toLower` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ojst0bt.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukumplat.d(11): Error: `string` is used as a type\n/tmp/tmpukumplat.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpukumplat.d(15): Error:
    no property `toLower` for type `char`\n/tmp/tmpukumplat.d(17): Error: no property
    `toUpper` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukumplat.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvw08sk9.d(11): Error: `string` is used as a type\n/tmp/tmpbvw08sk9.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpbvw08sk9.d(21): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvw08sk9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43ln1pd6.d(11): Error: no property `length` for type `string`\n/tmp/tmp43ln1pd6.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmp43ln1pd6.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp43ln1pd6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'c')\n\
    \            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n     \
    \   else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'e')\n            c = 'E';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n            c\
    \ = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else if(c ==\
    \ 'g')\n            c = 'G';\n        else if(c == 'G')\n            c = 'g';\n\
    \        else if(c == 'h')\n            c = 'H';\n        else if(c == 'H')\n\
    \            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'J')\n            c = 'j';\n        else\
    \ if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n            c\
    \ = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'n')\n\
    \            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'p')\n            c = 'P';\n        else\
    \ if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n            c\
    \ = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else if(c ==\
    \ 'r')\n            c = 'R';\n        else if(c == 'R')\n            c = 'r';\n\
    \        else if(c == 's')\n            c = 'S';\n        else if(c == 'S')\n\
    \            c = 's';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5a9irog0.d(98): Error: found `unittest` instead of statement\n/tmp/tmp5a9irog0.d(106):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5a9irog0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        else if(c == 'b')\n        {\n            c = 'B';\n        }\n\
    \        else if(c == 'B')\n        {\n            c = 'b';\n        }\n     \
    \   else if(c == 'c')\n        {\n            c = 'C';\n        }\n        else\
    \ if(c == 'C')\n        {\n            c = 'c';\n        }\n        else if(c\
    \ == 'd')\n        {\n            c = 'D';\n        }\n        else if(c == 'D')\n\
    \        {\n            c = 'd';\n        }\n        else if(c == 'e')\n     \
    \   {\n            c = 'E';\n        }\n        else if(c == 'E')\n        {\n\
    \            c = 'e';\n        }\n        else if(c == 'f')\n        {\n     \
    \       c = 'F';\n        }\n        else if(c == 'F')\n        {\n          \
    \  c = 'f';\n        }\n        else if(c == 'g')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'G')\n        {\n            c = 'g';\n\
    \        }\n        else if(c == 'h')\n        {\n            c = 'H';\n     \
    \   }\n        else if(c == 'H')\n        {\n            c = 'h';\n        }\n\
    \        else if(c == 'i')\n        {\n            c = 'I';\n        }\n     \
    \   else if(c == 'I')\n        {\n            c = 'i';\n        }\n        else\
    \ if(c == 'j')\n        {\n            c = 'J';\n        }\n        else if(c\
    \ == 'J')\n        {\n            c = 'j';\n        }\n        else if(c == 'k')\n\
    \        {\n            c = 'K';\n        }\n        else if(c == 'K')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'l')\n        {\n\
    \            c = 'L';\n        }\n        else if(c == 'L')\n        {\n     \
    \       c = 'l';\n        }\n        else if(c == 'm')\n        {\n          \
    \  c = 'M';\n        }\n        else if(c == 'M')\n        {\n            c =\
    \ 'm';\n        }\n        else if(c == 'n')\n        {\n            c = 'N';\n\
    \        }\n        else if(c == 'N')\n        {\n            c = 'n';\n     \
    \   }\n        else if(c == 'o')\n        {\n            c = 'O';\n        }\n\
    \        else if(c == 'O')\n        {\n            c = 'o';\n        }\n     \
    \   else if(c == 'p')\n        {\n            c = 'P';\n        }\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyk04wn9c.d(139): Error: found `unittest` instead of statement\n/tmp/tmpyk04wn9c.d(147):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyk04wn9c.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n           \
    \ result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n     \
    \       result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcdydewa4.d(107): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdydewa4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n    \
    \    }\n        else if(c == 'A')\n        {\n            c = 'a';\n        }\n\
    \        else if(c == 'e')\n        {\n            c = 'E';\n        }\n     \
    \   else if(c == 'E')\n        {\n            c = 'e';\n        }\n        else\
    \ if(c == 'i')\n        {\n            c = 'I';\n        }\n        else if(c\
    \ == 'I')\n        {\n            c = 'i';\n        }\n        else if(c == 'o')\n\
    \        {\n            c = 'O';\n        }\n        else if(c == 'O')\n     \
    \   {\n            c = 'o';\n        }\n        else if(c == 'u')\n        {\n\
    \            c = 'U';\n        }\n        else if(c == 'U')\n        {\n     \
    \       c = 'u';\n        }\n        else if(c == 'y')\n        {\n          \
    \  c = 'Y';\n        }\n        else if(c == 'Y')\n        {\n            c =\
    \ 'y';\n        }\n        else\n        {\n            result += c;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk7s8r54s.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk7s8r54s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it) {\n\
    \t\tif(islower(*it)) {\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it\
    \ = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpns70l9or.d(11): Error: no property `begin` for type `string`\n/tmp/tmpns70l9or.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpns70l9or.d(14): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpns70l9or.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm52ufcpm.d(11): Error: no property `begin` for type `string`\n/tmp/tmpm52ufcpm.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpm52ufcpm.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm52ufcpm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplhv8q4bi.d(11): Error: no property `length` for type `string`\n/tmp/tmplhv8q4bi.d(13):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmplhv8q4bi.d(16):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplhv8q4bi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprz9w_09o.d(11): Error: `string` is used as a type\n/tmp/tmprz9w_09o.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprz9w_09o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse\
    \ if(*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it += 32;\n\t\t}\n\t}\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpukwro2_9.d(11): Error: no property `begin` for type `string`\n/tmp/tmpukwro2_9.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpukwro2_9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqafmkqz.d(11): Error: no property `length` for type `string`\n/tmp/tmppqafmkqz.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmppqafmkqz.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppqafmkqz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else\n            c = toupper(c);\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa69kg0nh.d(11): Error: `string` is used as a type\n/tmp/tmpa69kg0nh.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpa69kg0nh.d(20): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa69kg0nh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            result += (char)(c - 'A' + 'a');\n        }\n\
    \        else if (c >= 'a' && c <= 'z') \n        {\n            result += (char)(c\
    \ - 'a' + 'A');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm7jdqznh.d(12): Error: no identifier for declarator `c`\n/tmp/tmpm7jdqznh.d(12):
    Error: expression expected, not `:`\n/tmp/tmpm7jdqznh.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpm7jdqznh.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\n/tmp/tmpm7jdqznh.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm7jdqznh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3rqxcky.d(12): Error: no identifier for declarator `c`\n/tmp/tmpg3rqxcky.d(12):
    Error: expression expected, not `:`\n/tmp/tmpg3rqxcky.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg3rqxcky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string)\n\t{\n\t\tif (islower(c))\n\t\t\tresult\
    \ += toupper(c);\n\t\telse\n\t\t\tresult += tolower(c);\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpky_i1765.d(12): Error: no identifier for declarator `c`\n/tmp/tmpky_i1765.d(12):
    Error: expression expected, not `:`\n/tmp/tmpky_i1765.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpky_i1765.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n     \
    \       c = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n\
    \        {\n            result += c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk771ljsu.d(11): Error: `string` is used as a type\n/tmp/tmpk771ljsu.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpk771ljsu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplexxd1zq.d(11): Error: `string` is used as a type\n/tmp/tmplexxd1zq.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplexxd1zq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3rqxcky.d(12): Error: no identifier for declarator `c`\n/tmp/tmpg3rqxcky.d(12):
    Error: expression expected, not `:`\n/tmp/tmpg3rqxcky.d(12): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg3rqxcky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \    {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpka4zox49.d(11): Error: `string` is used as a type\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpka4zox49.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmooh3ity.d(11): Error: `string` is used as a type\n/tmp/tmpmooh3ity.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmooh3ity.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqafmkqz.d(11): Error: no property `length` for type `string`\n/tmp/tmppqafmkqz.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmppqafmkqz.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppqafmkqz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp995ys0ja.d(12): Error: no identifier for declarator `c`\n/tmp/tmp995ys0ja.d(12):
    Error: expression expected, not `:`\n/tmp/tmp995ys0ja.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmp995ys0ja.d(16): Error: C
    style cast illegal, use `cast(char)(c - \''a\'' + \''A\'')`\n/tmp/tmp995ys0ja.d(20):
    Error: C style cast illegal, use `cast(char)(c - \''A\'' + \''a\'')`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp995ys0ja.d", "-I/tmp"]\n'''
  stdout: b''

language: d
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    while(c <= b)\n    {\n        long long int d = b\
    \ / c;\n        if(d != 0)\n        {\n            flag = true;\n            break;\n\
    \        }\n        c++;\n    }\n    if(flag)\n    {\n        long long int e\
    \ = 2;\n        while(e <= b)\n        {\n            long long int d = b / e;\n\
    \            if(d != 0)\n            {\n                flag = true;\n       \
    \         break;\n            }\n            e++;\n        }\n    }\n    return\
    \ flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm |>\n<| c |>\nThis code does\
    \ not work. Try it with `is_multiply_prime(30L)`.\n<|/ c |>\n<| c |>\nThe code\
    \ works fine for me. Did you try it with `is_multiply_prime(30L)`?\n<|/ c |>\n\
    <| c |>\nYes, I did. `is_multiply_prime(30L)` returns `true` instead of `false`.\n\
    <|/ c |>\n<| c |>\nI tested it on `is_multiply_prime(30L)` returns `false`\n<|/\
    \ c |>\n<| c |>\nI tested it on `is_multiply_prime(30L)` returns `false`\n<|/\
    \ c |>\n<| a tags=c++,primes,algorithm |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5w413jd5.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5w413jd5.d(15): Error: no identifier for declarator `long`\n/tmp/tmp5w413jd5.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5w413jd5.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp5w413jd5.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5w413jd5.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp5w413jd5.d(21): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp5w413jd5.d(21): Error: no
    identifier for declarator `long`\n/tmp/tmp5w413jd5.d(31): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp5w413jd5.d(31): Error: no identifier
    for declarator `long`\n/tmp/tmp5w413jd5.d(34): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp5w413jd5.d(34): Error: no identifier for
    declarator `long`\n/tmp/tmp5w413jd5.d(45): Error: declaration expected, not `<`\n/tmp/tmp5w413jd5.d(68):
    Error: declaration expected, not `assert`\n/tmp/tmp5w413jd5.d(69): Error: declaration
    expected, not `assert`\n/tmp/tmp5w413jd5.d(70): Error: declaration expected, not
    `assert`\n/tmp/tmp5w413jd5.d(71): Error: declaration expected, not `assert`\n/tmp/tmp5w413jd5.d(72):
    Error: declaration expected, not `assert`\n/tmp/tmp5w413jd5.d(73): Error: declaration
    expected, not `assert`\n/tmp/tmp5w413jd5.d(74): Error: declaration expected, not
    `assert`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5w413jd5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n\
    \    long C = 1;\n    long D = 1;\n    long E = 1;\n    long F = 1;\n    long\
    \ G = 1;\n    long H = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n\
    \    long L = 1;\n    long M = 1;\n    long N = 1;\n    long O = 1;\n    long\
    \ P = 1;\n    long Q = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n\
    \    long U = 1;\n    long V = 1;\n    long W = 1;\n    long X = 1;\n    long\
    \ Y = 1;\n    long Z = 1;\n    long A1 = 1;\n    long B1 = 1;\n    long C1 = 1;\n\
    \    long D1 = 1;\n    long E1 = 1;\n    long F1 = 1;\n    long G1 = 1;\n    long\
    \ H1 = 1;\n    long I1 = 1;\n    long J1 = 1;\n    long K1 = 1;\n    long L1 =\
    \ 1;\n    long M1 = 1;\n    long N1 = 1;\n    long O1 = 1;\n    long P1 = 1;\n\
    \    long Q1 = 1;\n    long R1 = 1;\n    long S1 = 1;\n    long T1 = 1;\n    long\
    \ U1 = 1;\n    long V1 = 1;\n    long W1 = 1;\n    long X1 = 1;\n    long Y1 =\
    \ 1;\n    long Z1 = 1;\n    long A2 = 1;\n    long B2 = 1;\n    long C2 = 1;\n\
    \    long D2 = 1;\n    long E2 = 1;\n    long F2 = 1;\n    long G2 = 1;\n    long\
    \ H2 = 1;\n    long I2 = 1;\n    long J2 = 1;\n    long K2 = 1;\n    long L2 =\
    \ 1;\n    long M2 = 1;\n    long N2 = 1;\n    long O2 = 1;\n    long P2 = 1;\n\
    \    long Q2 = 1;\n    long R2 = 1;\n    long S2 = 1;\n    long T2 = 1;\n    long\
    \ U2 = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphyl8zq5h.d(113): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyl8zq5h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int ab =\
    \ 3L;\n    long long int ac = 3L;\n    long long int ad = 3L;\n    long long int\
    \ ae = 3L;\n    long long int af = 3L;\n    long long int ag = 3L;\n    long long\
    \ int ah = 3L;\n    long long int ai = 3L;\n    long long int aj = 3L;\n    long\
    \ long int ak = 3L;\n    long long int al = 3L;\n    long long int am = 3L;\n\
    \    long long int an = 3L;\n    long long int ao = 3L;\n    long long int ap\
    \ = 3L;\n    long long int aq = 3L;\n    long long int ar = 3L;\n    long long\
    \ int as = 3L;\n    long long int at = 3L;\n    long long int au = 3L;\n    long\
    \ long int av = 3L;\n    long long int aw = 3L;\n    long long int ax = 3L;\n\
    \    long long int ay = 3L;\n    long long int az = 3L;\n    long long int ba\
    \ = 3L;\n    long long int bb = 3L;\n    long long int bc = 3L;\n    long long\
    \ int bd = 3L;\n    long long int be = 3L;\n    long long int bf\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0p84bc4.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_0p84bc4.d(15): Error: no identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp_0p84bc4.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp_0p84bc4.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp_0p84bc4.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_0p84bc4.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp_0p84bc4.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_0p84bc4.d(22): Error: no identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp_0p84bc4.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_0p84bc4.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_0p84bc4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    while(a >= b){\n        if(a % b\
    \ == 0){\n            if(b == c){\n                if(c == d){\n             \
    \       return true;\n                }\n                else{\n             \
    \       c++;\n                }\n            }\n            else{\n          \
    \      b++;\n            }\n        }\n        else{\n            b++;\n     \
    \   }\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe\
    \ this would fail for `is_multiply_prime(30)` because `b` is incremented twice\
    \ in the `if` statement.\n<|/ c |>\n<| c |>\nI believe this would fail for `is_multiply_prime(30)`\
    \ because `b` is incremented twice in the `if` statement.\n<|/ c |>\n<| c |>\n\
    I believe this would fail for `is_multiply_prime(30)` because `b` is incremented\
    \ twice in the `if` statement.\n<|/ c |>\n<| c |>\nI believe this would fail for\
    \ `is_multiply_prime(30)` because `b` is incremented twice in the `if` statement.\n\
    <|/ c |>\n<| c |>\nI believe this would fail for `is_multiply_prime(30)` because\
    \ `b` is incremented twice in the `if` statement.\n<|/ c |>\n<| a tags=c++,primes\
    \ |>\n<code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa0mycl89.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpa0mycl89.d(15): Error: no identifier for declarator `long`\n/tmp/tmpa0mycl89.d(36):
    Error: declaration expected, not `<`\n/tmp/tmpa0mycl89.d(59): Error: declaration
    expected, not `assert`\n/tmp/tmpa0mycl89.d(60): Error: declaration expected, not
    `assert`\n/tmp/tmpa0mycl89.d(61): Error: declaration expected, not `assert`\n/tmp/tmpa0mycl89.d(62):
    Error: declaration expected, not `assert`\n/tmp/tmpa0mycl89.d(63): Error: declaration
    expected, not `assert`\n/tmp/tmpa0mycl89.d(64): Error: declaration expected, not
    `assert`\n/tmp/tmpa0mycl89.d(65): Error: declaration expected, not `assert`\n/tmp/tmpa0mycl89.d(66):
    Error: declaration expected, not `assert`\n/tmp/tmpa0mycl89.d(67): Error: declaration
    expected, not `assert`\n/tmp/tmpa0mycl89.d(68): Error: declaration expected, not
    `assert`\n/tmp/tmpa0mycl89.d(69): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpa0mycl89.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = true;\n    while(b != 0)\n    {\n        if(b % d == 0)\n   \
    \     {\n            flag = false;\n            break;\n        }\n        d +=\
    \ 2;\n    }\n    return flag;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/29098174)\n\
    <|/ c |>\n<| c |>\nI believe it does answer the question. He asked how to determine\
    \ if a * 3 is a prime number. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a number is a\
    \ multiple of 3 prime numbers. He also asked how to determine if a \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpev7jh0px.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpev7jh0px.d(15): Error: no identifier for declarator `long`\n/tmp/tmpev7jh0px.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpev7jh0px.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpev7jh0px.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpev7jh0px.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpev7jh0px.d(30): Error: declaration
    expected, not `<`\n/tmp/tmpev7jh0px.d(41): Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(42):
    Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(43): Error: declaration
    expected, not `assert`\n/tmp/tmpev7jh0px.d(44): Error: declaration expected, not
    `assert`\n/tmp/tmpev7jh0px.d(45): Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(46):
    Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(47): Error: declaration
    expected, not `assert`\n/tmp/tmpev7jh0px.d(48): Error: declaration expected, not
    `assert`\n/tmp/tmpev7jh0px.d(49): Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(50):
    Error: declaration expected, not `assert`\n/tmp/tmpev7jh0px.d(51): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpev7jh0px.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    \n    while(true)\n    {\n        long long a = b;\n        long\
    \ long b = c;\n        long long c = d;\n        long long d = e;\n        long\
    \ long e = f;\n        long long f = g;\n        long long g = h;\n        long\
    \ long h = i;\n        long long i = j;\n        long long j = k;\n        long\
    \ long k = l;\n        long long l = m;\n        long long m = n;\n        long\
    \ long n = o;\n        long long o = p;\n        long long p = q;\n        long\
    \ long q = r;\n        long long r = s;\n        long long s = t;\n        long\
    \ long t = u;\n        long long u = v;\n        long long v = w;\n        long\
    \ long w = x;\n        long long x = y;\n        long long y = z;\n        long\
    \ long z = a;\n        \n        if(a == 1)\n        {\n            return true;\n\
    \        }\n        \n        else if(a % 2 == 0)\n        {\n            if(b\
    \ % 2 == 0)\n            {\n                if(c == 1)\n                {\n  \
    \                  return true;\n                }\n                \n       \
    \         else if(c % 2 == 0)\n                {\n                    if(d % 2\
    \ == 0)\n                    {\n                        if(e % 2 == 0)\n     \
    \                   {\n                            if(f % 2 == 0)\n          \
    \                  {\n                                if(g % 2 == 0)\n       \
    \                         {\n                                    if(h % 2 == 0)\n\
    \                                    {\n                                     \
    \   if(i % 2 == 0)\n                                        {\n              \
    \                              if(j % 2 == 0)\n                              \
    \              {\n                                                if(k % 2 ==\
    \ 0)\n                                                {\n                    \
    \                                if(l % 2 == 0)\n                            \
    \                        {\n                                                 \
    \       if(m % 2 == 0)\n                                                     \
    \   {\n                                                            if(n % 2 ==\
    \ 0)\n                                                            {\n        \
    \                                                        if(o % 2 == 0)\n    \
    \                                                            {\n             \
    \                                                       if(p % 2 == 0)\n     \
    \                                                               {\n          \
    \                                                              if(q\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_5xz0qai.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_5xz0qai.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_5xz0qai.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp_5xz0qai.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_5xz0qai.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_5xz0qai.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3LL;\n    long long int c = 5LL;\n    long long int d =\
    \ 7LL;\n    long long int e = 3LL;\n    long long int f = 5LL;\n    long long\
    \ int g = 7LL;\n    long long int h = 3LL;\n    long long int i = 5LL;\n    long\
    \ long int j = 3LL;\n    long long int k = 3LL;\n    long long int l = 5LL;\n\
    \    long long int m = 7LL;\n    long long int n = 5LL;\n    long long int o =\
    \ 3LL;\n    long long int p = 5LL;\n    long long int q = 7LL;\n    long long\
    \ int r = 5LL;\n    long long int s = 7LL;\n    long long int t = 5LL;\n    long\
    \ long int u = 3LL;\n    long long int v = 5LL;\n    long long int w = 3LL;\n\
    \    long long int x = 5LL;\n    long long int y = 7LL;\n    long long int z =\
    \ 3LL;\n    long long int aa = 3LL;\n    long long int bb = 5LL;\n    long long\
    \ int cc = 7LL;\n    long long int dd = 5LL;\n    long long int ee = 3LL;\n  \
    \  long long int ff = 5LL;\n    long long int gg = 7LL;\n    long long int hh\
    \ = 3LL;\n    long long int ii = 5LL;\n    long long int jj = 3LL;\n    long long\
    \ int kk = 3LL;\n    long long int ll = 5LL;\n    long long int mm = 7LL;\n  \
    \  long long int nn = 3LL;\n    long long int oo = 3LL;\n    long long int pp\
    \ = 5LL;\n    long long int qq = 7LL;\n    long long int rr = 5LL;\n    long long\
    \ int ss = 7LL;\n    long long int tt = 5LL;\n    long long int uu = 3LL;\n  \
    \  long long int vv = 5LL;\n    long long int ww = 3LL;\n    long long int xx\
    \ = 5LL;\n    long long int yy = 7LL;\n    long long int zz = 3LL;\n    long long\
    \ int aaa = 3LL;\n    long long int bbb = 5LL;\n    long long int ccc = 7LL;\n\
    \    long long int dd = 5LL;\n    long long \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnzj78s4q.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpnzj78s4q.d(15): Error: no identifier for declarator `long`\n/tmp/tmpnzj78s4q.d(15):
    Error: unrecognized token\n/tmp/tmpnzj78s4q.d(16): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpnzj78s4q.d(16): Error: no identifier
    for declarator `long`\n/tmp/tmpnzj78s4q.d(16): Error: unrecognized token\n/tmp/tmpnzj78s4q.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpnzj78s4q.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpnzj78s4q.d(17): Error: unrecognized
    token\n/tmp/tmpnzj78s4q.d(18): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpnzj78s4q.d(18): Error: no identifier for declarator `long`\n/tmp/tmpnzj78s4q.d(18):
    Error: unrecognized token\n/tmp/tmpnzj78s4q.d(19): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpnzj78s4q.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpnzj78s4q.d(19): Error: unrecognized token\n/tmp/tmpnzj78s4q.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpnzj78s4q.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmpnzj78s4q.d(20): Error: unrecognized
    token\n/tmp/tmpnzj78s4q.d(21): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpnzj78s4q.d(21): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnzj78s4q.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 2;\n    long n = 3;\n    long\
    \ o = 5;\n    long p = 5;\n    long q = 5;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 5;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 3;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 5;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long AA = 3;\n    long BB = 3;\n    long CC = 3;\n\
    \    long DD = 3;\n    long EE = 3;\n    long FF = 3;\n    long GG = 3;\n    long\
    \ HH = 3;\n    long II = 3;\n    long JJ = 3;\n    long KK = 3;\n    long LL =\
    \ 3;\n    long MM = 3;\n    long NN = 3;\n    long OO = 3;\n    long PP = 3;\n\
    \    long QQ = 3;\n    long RR = 3;\n    long SS = 3;\n    long TT = 3;\n    long\
    \ UU = 3;\n    long VV = 5;\n    long WW = 3;\n    long XX = 3;\n    long YY =\
    \ 3;\n    long ZZ = 3;\n    long AAA = 3;\n    long BBB = 3;\n    long CCC = 3;\n\
    \    long DDD = 3;\n    long EEE = 3;\n    long FFF = 3;\n    long GGG = 3;\n\
    \    long HHH = 3;\n    long III = 3;\n    long JJJ = 3;\n    long KKK = 3;\n\
    \    long LLL = 3;\n    long MMM = 3;\n    long NNN = 3;\n    long OOO = 3;\n\
    \    long PPP = 3;\n    long QQQ = 3;\n    long RRR = 3;\n    long SSS = 3;\n\
    \    long TTT = 3;\n    long UUU = 3;\n    \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1qdrd8hn.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1qdrd8hn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 2;\n    long n = 2;\n    long\
    \ o = 2;\n    long p = 3;\n    long q = 3;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    bool result = false;\n    \n \
    \   while(a > 0)\n    {\n        while(a % b == 0)\n        {\n            a /=\
    \ b;\n        }\n        \n        while(a % c == 0)\n        {\n            a\
    \ /= c;\n        }\n        \n        while(a % d == 0)\n        {\n         \
    \   a /= d;\n        }\n        \n        while(a % e == 0)\n        {\n     \
    \       a /= e;\n        }\n        \n        while(a % f == 0)\n        {\n \
    \           a /= f;\n        }\n        \n        while(a % g == 0)\n        {\n\
    \            a /= g;\n        }\n        \n        while(a % h == 0)\n       \
    \ {\n            a /= h;\n        }\n        \n        while(a % i == 0)\n   \
    \     {\n            a /= i;\n        }\n        \n        while(a % j == 0)\n\
    \        {\n            a /= j;\n        }\n        \n        while(a % k == 0)\n\
    \        {\n            a /= k;\n        }\n        \n        while(a % l == 0)\n\
    \        {\n            a /= l;\n        }\n        \n        while(a % m == 0)\n\
    \        {\n            a /= m;\n        }\n        \n        while(a % n == 0)\n\
    \        {\n            a /= n;\n        }\n        \n        while(a % o == 0)\n\
    \        {\n            a /= o;\n        }\n        \n        while(a % p == 0)\n\
    \        {\n            a /= p;\n        }\n        \n        while(a % q == 0)\n\
    \        {\n            a /= q;\n        }\n        \n        while(a % r == 0)\n\
    \        {\n            a /= r;\n        }\n        \n        while(a % s == 0)\n\
    \        {\n            a /= s;\n        }\n        \n        while(a % t == 0)\n\
    \        {\n            a /= t;\n        }\n        \n        while(a % u == 0)\n\
    \        {\n            a \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4rh6c5bc.d(142): Error: found `unittest` when expecting `;`
    following statement\n/tmp/tmp4rh6c5bc.d(157): Error: found `End of File` when
    expecting `}` following compound statement\n/tmp/tmp4rh6c5bc.d(157): Error: found
    `End of File` when expecting `}` following compound statement\n/tmp/tmp4rh6c5bc.d(157):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rh6c5bc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 0;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr1z66sn0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(15): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpr1z66sn0.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpr1z66sn0.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpr1z66sn0.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpr1z66sn0.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpr1z66sn0.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(22): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpr1z66sn0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 0;\n    long long g = 0;\n    long long h = 0;\n \
    \   long long i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long\
    \ l = 0;\n    long long m = 0;\n    long long n = 0;\n    long long o = 0;\n \
    \   long long p = 0;\n    long long q = 0;\n    long long r = 0;\n    long long\
    \ s = 0;\n    long long t = 0;\n    long long u = 0;\n    long long v = 0;\n \
    \   long long w = 0;\n    long long x = 0;\n    long long y = 0;\n    long long\
    \ z = 0;\n    long long A = 0;\n    long long B = 0;\n    long long C = 0;\n \
    \   long long D = 0;\n    long long E = 0;\n    long long F = 0;\n    long long\
    \ G = 0;\n    long long H = 0;\n    long long I = 0;\n    long long J = 0;\n \
    \   long long K = 0;\n    long long L = 0;\n    long long M = 0;\n    long long\
    \ N = 0;\n    long long O = 0;\n    long long P = 0;\n    long long Q = 0;\n \
    \   long long R = 0;\n    long long S = 0;\n    long long T = 0;\n    long long\
    \ U = 0;\n    long long V = 0;\n    long long W = 0;\n    long long X = 0;\n \
    \   long long Y = 0;\n    long long Z = 0;\n    long long Aa = 0;\n    long long\
    \ Bb = 0;\n    long long Cc = 0;\n    long long Dd = 0;\n    long long Ee = 0;\n\
    \    long long Ff = 0;\n    long long Gg = 0;\n    long long Hh = 0;\n    long\
    \ long Ii = 0;\n    long long Jj = 0;\n    long long Kk = 0;\n    long long Ll\
    \ = 0;\n    long long Mm = 0;\n    long long Nn = 0;\n    long long Oo = 0;\n\
    \    long long Pp = 0;\n    long long Qq = 0;\n    long long Rr = 0;\n    long\
    \ long Ss = 0;\n    long long Tt = 0;\n    long long Uu = 0;\n    long long Vv\
    \ = 0;\n    long long Ww = 0;\n    long long Xx = 0;\n    long long Yy = 0;\n\
    \    long long Zz = 0;\n    long long aa = 0;\n    long long bb = 0;\n    long\
    \ long cc = 0;\n    long long dd = 0;\n    long long ee\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppm2l4te0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmppm2l4te0.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmppm2l4te0.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmppm2l4te0.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppm2l4te0.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppm2l4te0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    bool isMultiplyPrime = true;\n    while(a != 0)\n\
    \    {\n        if(a%b == 0)\n        {\n            isMultiplyPrime = false;\n\
    \            break;\n        }\n        b += 2L;\n    }\n    return isMultiplyPrime;\n\
    }\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkioabjyb.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkioabjyb.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkioabjyb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    bool flag = false;\n\
    \    \n    for(int i = 3; i <= b; i+=2)\n    {\n        if(b % i == 0)\n     \
    \   {\n            c = 1;\n            flag = false;\n            break;\n   \
    \     }\n        \n        if(b % i == 1)\n        {\n            c = 2;\n   \
    \         flag = false;\n            break;\n        }\n    }\n    \n    if(flag)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqsrzkhvf.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqsrzkhvf.d(15): Error: no identifier for declarator `long`\n/tmp/tmpqsrzkhvf.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqsrzkhvf.d(16):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqsrzkhvf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while(b < 100) {\n        while(b * c < 100)\
    \ {\n            if(b * c > 100) {\n                flag = true;\n           \
    \     break;\n            }\n            if(b * c == 100) {\n                flag\
    \ = true;\n                break;\n            }\n            if(b * c % 2 ==\
    \ 0) {\n                flag = false;\n                break;\n            }\n\
    \            if(b * c % 3 == 0) {\n                flag = false;\n           \
    \     break;\n            }\n            if(b * c % 5 == 0) {\n              \
    \  flag = false;\n                break;\n            }\n            if(b * c\
    \ % 7 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n            if(b * c % 11 == 0) {\n                flag = false;\n  \
    \              break;\n            }\n            if(b * c % 13 == 0) {\n    \
    \            flag = false;\n                break;\n            }\n          \
    \  if(b * c % 17 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 19 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 23 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 29 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 31 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 37 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 41 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 43 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 47 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 53 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 59 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 61 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 67 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 71 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 73 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 79 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 83 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            if(b * c % 89 == 0) {\n  \
    \              flag = false;\n                break;\n            }\n        \
    \    if(b * c % 97 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            if(b * c % 10\nunittest\n{\n    alias candidate =\
    \ is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxh2f4259.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpxh2f4259.d(15): Error: no identifier for declarator `long`\n/tmp/tmpxh2f4259.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxh2f4259.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpxh2f4259.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxh2f4259.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpxh2f4259.d(131): Error: found `unittest`
    when expecting `)`\n/tmp/tmpxh2f4259.d(146): Error: found `End of File` when expecting
    `}` following compound statement\n/tmp/tmpxh2f4259.d(146): Error: found `End of
    File` when expecting `}` following compound statement\n/tmp/tmpxh2f4259.d(146):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxh2f4259.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    long long A = 2;\n    long long B = 2;\n    long long C = 2;\n \
    \   long long D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long\
    \ G = 2;\n    long long H = 2;\n    long long I = 2;\n    long long J = 2;\n \
    \   long long K = 2;\n    long long L = 2;\n    long long M = 2;\n    long long\
    \ N = 2;\n    long long O = 2;\n    long long P = 2;\n    long long Q = 2;\n \
    \   long long R = 2;\n    long long S = 2;\n    long long T = 2;\n    long long\
    \ U = 2;\n    long long V = 2;\n    long long W = 2;\n    long long X = 2;\n \
    \   long long Y = 2;\n    long long Z = 2;\n    long long A = 2;\n    long long\
    \ B = 2;\n    long long C = 2;\n    long long D = 2;\n    long long E = 2;\n \
    \   long long F = 2;\n    long long G = 2;\n    long long H = 2;\n    long long\
    \ I = 2;\n    long long J = 2;\n    long long K = 2;\n    long long L = 2;\n \
    \   long long M = 2;\n    long long N = 2;\n    long long O = 2;\n    long long\
    \ P = 2;\n    long long Q = 2;\n    long long R = 2;\n    long long S = 2;\n \
    \   long long T = 2;\n    long long U = 2;\n    long long V = 2;\n    long long\
    \ W = 2;\n    long long X = 2;\n    long long Y = 2;\n    long long Z = 2;\n \
    \   long long A = 2;\n    long long B = 2;\n    long long C = 2;\n    long long\
    \ D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long G = 2;\n \
    \   long long H = 2;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxjvhs4p7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpxjvhs4p7.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpxjvhs4p7.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxjvhs4p7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 7L;\n\
    \    long long int n = 3L;\n    long long int o = 7L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 5L;\n    long long int s = 7L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 7L;\n    long long int x = 5L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m;\n    long long int\
    \ N = n;\n    long long int O = o;\n    long long int P = p;\n    long long int\
    \ Q = q;\n    long long int R = r;\n    long long int S = s;\n    long long int\
    \ T = t;\n    long long int U = u;\n    long long int V = v;\n    long long int\
    \ W = w;\n    long long int X = x;\n    long long int Y = y;\n    long long int\
    \ Z = z;\n    long long int a1 = A * A;\n    long long int b1 = B * B;\n    long\
    \ long int c1 = C * C;\n    long long int d1 = D * D;\n    long long int e1 =\
    \ E * E;\n    long long int f1 = F * F;\n    long long int g1 = G * G;\n    long\
    \ long int h1 = \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n  \
    \  assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqzghd95h.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqzghd95h.d(15): Error: no identifier for declarator `long`\n/tmp/tmpqzghd95h.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpqzghd95h.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpqzghd95h.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpqzghd95h.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpqzghd95h.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpqzghd95h.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpqzghd95h.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpqzghd95h.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpqzghd95h.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqzghd95h.d(22): Error: no identifier for declarator `long`\n/tmp/tmpqzghd95h.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpqzghd95h.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqzghd95h.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpqzghd95h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int bb =\
    \ 3L;\n    long long int cc = 3L;\n    long long int dd = 5L;\n    long long int\
    \ ee = 3L;\n    long long int ff = 3L;\n    long long int gg = 3L;\n    long long\
    \ int hh = 3L;\n    long long int ii = 5L;\n    long long int jj = 3L;\n    long\
    \ long int kk = 3L;\n    long long int ll = 5L;\n    long long int mm = 5L;\n\
    \    long long int nn = 3L;\n    long long int oo = 3L;\n    long long int pp\
    \ = 5L;\n    long long int qq = 3L;\n    long long int rr = 5L;\n    long long\
    \ int ss = 3L;\n    long long int tt = 5L;\n    long long int uu = 5L;\n    long\
    \ long int vv = 3L;\n    long long int ww = 3L;\n    long long int xx = 5L;\n\
    \    long long int yy = 5L;\n    long long int zz = 3L;\n    long long int aaa\
    \ = 3L;\n    long long int bbb = 3L;\n    long long int ccc = 3L;\n    long long\
    \ int ddd = 5L;\n    long long int ee\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0jgknfhy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0jgknfhy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp0jgknfhy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp0jgknfhy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp0jgknfhy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp0jgknfhy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp0jgknfhy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0jgknfhy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp0jgknfhy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0jgknfhy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0jgknfhy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool result = false;\n    while(a != 0)\n\
    \    {\n        if(a%b == 0)\n        {\n            if(a%c == 0)\n          \
    \  {\n                result = true;\n                break;\n            }\n\
    \            else\n            {\n                result = false;\n          \
    \      break;\n            }\n        }\n        else\n        {\n           \
    \ b = b + 1;\n            c = c + 1;\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis code doesn't work. Try it with `is_multiply_prime(30L)`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I tested it with `is_multiply_prime(30L)`\
    \ and the result is `true`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `is_multiply_prime(30L)`.\n\
    <|/ c |>\n<| c |>\nI tested it with `is_multiply_prime(30L)` and the result is\
    \ `true`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `is_multiply_prime(30L)`.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpozxiol7g.d(41): Error: declaration expected, not `<`\n/tmp/tmpozxiol7g.d(44):
    Error: unterminated character constant\n/tmp/tmpozxiol7g.d(50): Error: unterminated
    character constant\n/tmp/tmpozxiol7g.d(56): Error: unterminated character constant\n/tmp/tmpozxiol7g.d(64):
    Error: declaration expected, not `assert`\n/tmp/tmpozxiol7g.d(65): Error: declaration
    expected, not `assert`\n/tmp/tmpozxiol7g.d(66): Error: declaration expected, not
    `assert`\n/tmp/tmpozxiol7g.d(67): Error: declaration expected, not `assert`\n/tmp/tmpozxiol7g.d(68):
    Error: declaration expected, not `assert`\n/tmp/tmpozxiol7g.d(69): Error: declaration
    expected, not `assert`\n/tmp/tmpozxiol7g.d(70): Error: declaration expected, not
    `assert`\n/tmp/tmpozxiol7g.d(71): Error: declaration expected, not `assert`\n/tmp/tmpozxiol7g.d(72):
    Error: declaration expected, not `assert`\n/tmp/tmpozxiol7g.d(73): Error: declaration
    expected, not `assert`\n/tmp/tmpozxiol7g.d(74): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozxiol7g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 3;\n    long long int G = 3;\n    long long int H = 3;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 3;\n\
    \    long long int G = 3;\n    long long int H = 3;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkrrqu92k.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkrrqu92k.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkrrqu92k.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkrrqu92k.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkrrqu92k.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkrrqu92k.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkrrqu92k.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkrrqu92k.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkrrqu92k.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkrrqu92k.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkrrqu92k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgogs56_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpsgogs56_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpsgogs56_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpsgogs56_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpsgogs56_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpsgogs56_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpsgogs56_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpsgogs56_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe3zabg8v.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpe3zabg8v.d(15): Error: no identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpe3zabg8v.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpe3zabg8v.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpe3zabg8v.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpe3zabg8v.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpe3zabg8v.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpe3zabg8v.d(22): Error: no identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpe3zabg8v.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpe3zabg8v.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpe3zabg8v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 5L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 5L;\n    long long int a = 5L;\n    long long int b = 5L;\n\
    \    long long int c = 5L;\n    long long int d = 5L;\n    long long int e = 5L;\n\
    \    long long int f = 5L;\n    long long int g = 5L;\n    long long int h = 5L;\n\
    \    long long int i = 5L;\n    long long int j = 5L;\n    long long int k = 5L;\n\
    \    long long int l = 5L;\n    long long int m = 5L;\n    long long int n = 5L;\n\
    \    long long int o = 5L;\n    long long int p = 5L;\n    long long int q = 5L;\n\
    \    long long int r = 5L;\n    long long int s = 5L;\n    long long int t = 5L;\n\
    \    long long int u = 5L;\n    long long int v = 5L;\n    long long int w = 5L;\n\
    \    long long int x = 5L;\n    long long int y = 5L;\n    long long int z = 5L;\n\
    \    long long int a = 5L;\n    long long int b = 5L;\n    long long int c = 5L;\n\
    \    long long int d = 5L;\n    long long int e = 5L;\n    long long int f = 5\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_df6t7bv.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_df6t7bv.d(15): Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp_df6t7bv.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp_df6t7bv.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp_df6t7bv.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_df6t7bv.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp_df6t7bv.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_df6t7bv.d(22): Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_df6t7bv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool result = false;\n    while(a\
    \ > 0)\n    {\n        if((a % b) == 0)\n        {\n            if((a % c) ==\
    \ 0)\n            {\n                if((a % d) == 0)\n                {\n   \
    \                 result = true;\n                    break;\n               \
    \ }\n                else\n                {\n                    result = false;\n\
    \                    break;\n                }\n            }\n            else\n\
    \            {\n                result = false;\n                break;\n    \
    \        }\n        }\n        else\n        {\n            result = false;\n\
    \            break;\n        }\n        b += 2;\n        c += 2;\n        d +=\
    \ 2;\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,primes |>\n<| c |>\n\
    The first `while` loop can be replaced with `if (a % b == 0 || a % c == 0 || a\
    \ % d == 0) return false;`\n<|/ c |>\n<| c |>\nYes, but that would not give the\
    \ correct result for a = 30 for example. He wants it to return true for 30 = 2\
    \ * 3 * 5.\n<|/ c |>\n<| c |>\nYes, but that would not give the correct result\
    \ for a = 30 for example. He wants it to return true for 30 = 2 * 3 * 5.\n<|/\
    \ c |>\n<| c |>\nYes, but that would not give the correct result for a = 30 for\
    \ example. He wants it to return true for 30 = 2 * 3 * 5.\n<|/ c |>\n<| c |>\n\
    Yes, but that would not give the correct result for a = 30 for example. He wants\
    \ it to return true for 30 = 2 * 3 * 5.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <cmath>\nusing namespace std;\nunittest\n{\n   \
    \ alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxa73lxlv.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpxa73lxlv.d(15): Error: no identifier for declarator `long`\n/tmp/tmpxa73lxlv.d(51):
    Error: declaration expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpxa73lxlv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 0;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n \
    \   long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long A = 1;\n    long long B = 1;\n    long long C = 1;\n \
    \   long long D = 1;\n    long long E = 1;\n    long long F = 1;\n    long long\
    \ G = 1;\n    long long H = 1;\n    long long I = 1;\n    long long J = 1;\n \
    \   long long K = 1;\n    long long L = 1;\n    long long M = 1;\n    long long\
    \ N = 1;\n    long long O = 1;\n    long long P = 1;\n    long long Q = 1;\n \
    \   long long R = 1;\n    long long S = 1;\n    long long T = 1;\n    long long\
    \ U = 1;\n    long long V = 1;\n    long long W = 1;\n    long long X = 1;\n \
    \   long long Y = 1;\n    long long Z = 1;\n    long long A1 = 1;\n    long long\
    \ B1 = 1;\n    long long C1 = 1;\n    long long D1 = 1;\n    long long E1 = 1;\n\
    \    long long F1 = 1;\n    long long G1 = 1;\n    long long H1 = 1;\n    long\
    \ long I1 = 1;\n    long long J1 = 1;\n    long long K1 = 1;\n    long long L1\
    \ = 1;\n    long long M1 = 1;\n    long long N1 = 1;\n    long long O1 = 1;\n\
    \    long long P1 = 1;\n    long long Q1 = 1;\n    long long R1 = 1;\n    long\
    \ long S1 = 1;\n    long long T1 = 1;\n    long long U1 = 1;\n    long long V1\
    \ = 1;\n    long long W1 = 1;\n    long long X1 = 1;\n    long long Y1 = 1;\n\
    \    long long Z1 = 1;\n    long long A2 = 1;\n    long long B2 = 1;\n    long\
    \ long C2 = 1;\n    long long D2 = 1;\n    long long E2 = 1;\n    long long F2\
    \ = 1;\n    long long G2 = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8s2bhz1x.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8s2bhz1x.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp8s2bhz1x.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8s2bhz1x.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8s2bhz1x.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    bool flag = false;\n    \n    while (b <= a)\n\
    \    {\n        if ((a % b) == 0)\n        {\n            flag = true;\n     \
    \       break;\n        }\n        b += 2L;\n    }\n    return flag;\n}\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjbkuhozg.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjbkuhozg.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbkuhozg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool isPrime = true;\n    \n    for(long\
    \ long int i = 3; i <= a; i += 2)\n    {\n        long long int temp = i * i;\n\
    \        \n        if(temp % d == 0)\n        {\n            isPrime = false;\n\
    \            break;\n        }\n        \n        temp = temp % d;\n        \n\
    \        if(temp == 0)\n        {\n            isPrime = false;\n            break;\n\
    \        }\n        \n        temp = temp % d;\n        \n        if(temp == 0)\n\
    \        {\n            isPrime = false;\n            break;\n        }\n    \
    \    \n        temp = temp % d;\n        \n        if(temp == 0)\n        {\n\
    \            isPrime = false;\n            break;\n        }\n        \n     \
    \   temp = temp % d;\n        \n        if(temp == 0)\n        {\n           \
    \ isPrime = false;\n            break;\n        }\n        \n        temp = temp\
    \ % d;\n        \n        if(temp == 0)\n        {\n            isPrime = false;\n\
    \            break;\n        }\n        \n        temp = temp % d;\n        \n\
    \        if(temp == 0)\n        {\n            isPrime = false;\n            break;\n\
    \        }\n        \n        temp = temp % d;\n        \n        if(temp == 0)\n\
    \        {\n            isPrime = false;\n            break;\n        }\n    \
    \    \n        temp = temp % d;\n        \n        if(temp == 0)\n        {\n\
    \            isPrime = false;\n            break;\n        }\n        \n     \
    \   temp = temp % d;\n        \n        if(temp == 0)\n        {\n           \
    \ isPrime = false;\n            break;\n        }\n        \n        temp = temp\
    \ % d;\n        \n        if(temp == 0)\n        {\n            isPrime = false;\n\
    \            break;\n        }\n        \n        temp = temp % d;\n        \n\
    \        if(temp == 0)\n        {\n            isPrime = false;\n            break;\n\
    \        }\n        \n        temp = temp % d;\n        \n        if(temp == 0)\n\
    \        {\n            isPrime = false;\n            break;\n        }\n    \
    \    \n        temp = temp % d;\n        \n        if(temp == 0)\n        {\n\
    \            isPrime = false;\n            break;\n        }\n        \n     \
    \   temp = temp % d;\n        \n        if(temp == 0)\n        {\n           \
    \ isPrime = false;\n            break;\n        }\n        \n        temp = temp\
    \ % d;\n        \n        if(temp == 0)\n        {\n            isPrime = false;\n\
    \            break;\n        }\n        \n        temp = temp % d;\n        \n\
    \        if(temp == 0)\n        {\n            isPrime = false;\n            break;\n\
    \        }\n        \n        temp = temp % d;\n        \n        if(temp == 0)\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpii8m2xk5.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpii8m2xk5.d(15): Error: no identifier for declarator `long`\n/tmp/tmpii8m2xk5.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpii8m2xk5.d(18):
    Error: no identifier for declarator `long`\n/tmp/tmpii8m2xk5.d(18): Error: found
    `i` when expecting `.` following int\n/tmp/tmpii8m2xk5.d(18): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpii8m2xk5.d(18): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmpii8m2xk5.d(18): Error:
    expression expected, not `;`\n/tmp/tmpii8m2xk5.d(18): Error: found `i` when expecting
    `)`\n/tmp/tmpii8m2xk5.d(18): Error: found `<=` instead of statement\n/tmp/tmpii8m2xk5.d(18):
    Error: found `)` when expecting `;` following statement\n/tmp/tmpii8m2xk5.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpii8m2xk5.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmpii8m2xk5.d(159): Error: found
    `unittest` instead of statement\n/tmp/tmpii8m2xk5.d(174): Error: found `End of
    File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpii8m2xk5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    while(a != 0)\n    {\n        if(a%b\
    \ == 0)\n        {\n            if(a%c == 0)\n            {\n                if(a%d\
    \ == 0)\n                {\n                    return true;\n               \
    \ }\n            }\n        }\n        b += 2;\n        c += 2;\n        d +=\
    \ 2;\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcpw74ofp.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpcpw74ofp.d(15): Error: no identifier for declarator `long`\n/tmp/tmpcpw74ofp.d(34):
    Error: declaration expected, not `<`\n/tmp/tmpcpw74ofp.d(42): Error: declaration
    expected, not `assert`\n/tmp/tmpcpw74ofp.d(43): Error: declaration expected, not
    `assert`\n/tmp/tmpcpw74ofp.d(44): Error: declaration expected, not `assert`\n/tmp/tmpcpw74ofp.d(45):
    Error: declaration expected, not `assert`\n/tmp/tmpcpw74ofp.d(46): Error: declaration
    expected, not `assert`\n/tmp/tmpcpw74ofp.d(47): Error: declaration expected, not
    `assert`\n/tmp/tmpcpw74ofp.d(48): Error: declaration expected, not `assert`\n/tmp/tmpcpw74ofp.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmpcpw74ofp.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmpcpw74ofp.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmpcpw74ofp.d(52): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpcpw74ofp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    long long int j;\n    long long int k;\n    long long\
    \ int l;\n    long long int m;\n    long long int n;\n    long long int p;\n \
    \   long long int q;\n    long long int r;\n    long long int s;\n    long long\
    \ int t;\n    long long int u;\n    long long int v;\n    long long int w;\n \
    \   long long int x;\n    long long int y;\n    long long int z;\n    long long\
    \ int A;\n    long long int B;\n    long long int C;\n    long long int D;\n \
    \   long long int E;\n    long long int F;\n    long long int G;\n    long long\
    \ int H;\n    long long int I;\n    long long int J;\n    long long int K;\n \
    \   long long int L;\n    long long int M;\n    long long int N;\n    long long\
    \ int P;\n    long long int Q;\n    long long int R;\n    long long int S;\n \
    \   long long int T;\n    long long int U;\n    long long int V;\n    long long\
    \ int W;\n    long long int X;\n    long long int Y;\n    long long int Z;\n \
    \   long long int A;\n    long long int B;\n    long long int C;\n    long long\
    \ int D;\n    long long int E;\n    long long int F;\n    long long int G;\n \
    \   long long int H;\n    long long int I;\n    long long int J;\n    long long\
    \ int K;\n    long long int L;\n    long long int M;\n    long long int N;\n \
    \   long long int P;\n    long long int Q;\n    long long int R;\n    long long\
    \ int S;\n    long long int T;\n    long long int U;\n    long long int V;\n \
    \   long long int W;\n    long long int X;\n    long long int Y;\n    long long\
    \ int Z;\n    long long int A;\n    long long int B;\n    long long int C;\n \
    \   long long int D;\n    long long int E;\n    long long int F;\n    long long\
    \ int G;\n    long long int H;\n    long long int \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3penzjaf.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3penzjaf.d(15): Error: no identifier for declarator `long`\n/tmp/tmp3penzjaf.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp3penzjaf.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp3penzjaf.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp3penzjaf.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp3penzjaf.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp3penzjaf.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp3penzjaf.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp3penzjaf.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp3penzjaf.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3penzjaf.d(22): Error: no identifier for declarator `long`\n/tmp/tmp3penzjaf.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp3penzjaf.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3penzjaf.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp3penzjaf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n\
    \    long C = 1;\n    long D = 1;\n    long E = 1;\n    long F = 1;\n    long\
    \ G = 1;\n    long H = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n\
    \    long L = 1;\n    long M = 1;\n    long N = 1;\n    long O = 1;\n    long\
    \ P = 1;\n    long Q = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n\
    \    long U = 1;\n    long V = 1;\n    long W = 1;\n    long X = 1;\n    long\
    \ Y = 1;\n    long Z = 1;\n    long AA = 1;\n    long AB = 1;\n    long AC = 1;\n\
    \    long AD = 1;\n    long AE = 1;\n    long AF = 1;\n    long AG = 1;\n    long\
    \ AH = 1;\n    long AI = 1;\n    long AJ = 1;\n    long AK = 1;\n    long AL =\
    \ 1;\n    long AM = 1;\n    long AN = 1;\n    long AO = 1;\n    long AP = 1;\n\
    \    long AQ = 1;\n    long AR = 1;\n    long AS = 1;\n    long AT = 1;\n    long\
    \ AU = 1;\n    long AV = 1;\n    long AW = 1;\n    long AX = 1;\n    long AY =\
    \ 1;\n    long AZ = 1;\n    long BA = 1;\n    long BB = 1;\n    long BC = 1;\n\
    \    long BD = 1;\n    long BE = 1;\n    long BF = 1;\n    long BG = 1;\n    long\
    \ BH = 1;\n    long BI = 1;\n    long BJ = 1;\n    long BK = 1;\n    long BL =\
    \ 1;\n    long BM = 1;\n    long BN = 1;\n    long BO = 1;\n    long BP = 1;\n\
    \    long BQ = 1;\n    long BR = 1;\n    long BS = 1;\n    long BT = 1;\n    long\
    \ BU = 1;\n    long BV = 1;\n    long BW = 1;\n    long B\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxlvolvi.d(116): Error: semicolon expected, not `unittest`\n/tmp/tmpsxlvolvi.d(116):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsxlvolvi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    \n    bool result = false;\n    \n    while(!result)\n    {\n  \
    \      long long a = b + c;\n        long long b = d + e;\n        long long c\
    \ = f + g;\n        long long d = h + i;\n        long long e = j + k;\n     \
    \   long long f = l + m;\n        long long g = n + n;\n        long long h =\
    \ o + p;\n        long long i = q + r;\n        long long j = s + s;\n       \
    \ long long k = t + t;\n        long long l = u + v;\n        long long m = w\
    \ + x;\n        long long n = y + y;\n        long long o = z + z;\n        \n\
    \        if(a*b*c*d*e*f*g*h*i*j*k*l*m*n*o == a*b*c*d*e*f*g*h*i*j*k*l*m*n*o)\n\
    \        {\n            result = true;\n        }\n        \n        long long\
    \ x = a + b;\n        long long y = c + d;\n        long long z = e + f;\n   \
    \     long long a = g + h;\n        long long b = i + j;\n        long long c\
    \ = k + l;\n        long long d = m + n;\n        long long e = p + o;\n     \
    \   long long f = q + p;\n        long long g = r + q;\n        long long h =\
    \ s + t;\n        long long i = t + u;\n        long long j = u + v;\n       \
    \ long long k = w + x;\n        long long l = x + y;\n        long long m = y\
    \ + z;\n        long long n = z + a;\n        long long o = a + b;\n        \n\
    \        if(x*y*z*a*b*c*d*e*f*g*h*i*j*k*l*m\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqmddftax.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqmddftax.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpqmddftax.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpqmddftax.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqmddftax.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpqmddftax.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool flag = false;\n    \n    while(a\
    \ != 0)\n    {\n        long long int temp = a % b;\n        if(temp == 0)\n \
    \       {\n            flag = true;\n            break;\n        }\n        else\
    \ if(temp == 1)\n        {\n            flag = false;\n            break;\n  \
    \      }\n        else if(temp > 1)\n        {\n            flag = true;\n   \
    \         break;\n        }\n        \n        a = a / b;\n        b = c * d;\n\
    \        c = d;\n        d = temp;\n    }\n    \n    return flag;\n}\n</code>\n\
    <|/ a tags=c++,primes |>\n<| c |>\nThis code is not correct. `is_multiply_prime(30L)`\
    \ returns `true` but `30 = 2 * 3 * 5` which is not multiply of 3 prime numbers.\
    \ `is_multiply_prime(30L)` should return `false`\n<|/ c |>\n<| c |>\nYes, you\
    \ are right. I missed that point. Thanks for pointing out. I've edited my answer.\n\
    <|/ c |>\n<| c |>\n`is_multiply_prime(30L)` returns `true` but `30 = 2 * 3 * 5`\
    \ which is not multiply of 3 prime numbers. `is_multiply_prime(30L)` should return\
    \ `false`\n<|/ c |>\n<| c |>\nYes, you are right. I missed that point. Thanks\
    \ for pointing out. I've edited my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8dq_m6_e.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8dq_m6_e.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8dq_m6_e.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8dq_m6_e.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmp8dq_m6_e.d(45): Error: declaration
    expected, not `<`\n/tmp/tmp8dq_m6_e.d(51): Error: unterminated character constant\n/tmp/tmp8dq_m6_e.d(57):
    Error: unterminated character constant\n/tmp/tmp8dq_m6_e.d(65): Error: declaration
    expected, not `assert`\n/tmp/tmp8dq_m6_e.d(66): Error: declaration expected, not
    `assert`\n/tmp/tmp8dq_m6_e.d(67): Error: declaration expected, not `assert`\n/tmp/tmp8dq_m6_e.d(68):
    Error: declaration expected, not `assert`\n/tmp/tmp8dq_m6_e.d(69): Error: declaration
    expected, not `assert`\n/tmp/tmp8dq_m6_e.d(70): Error: declaration expected, not
    `assert`\n/tmp/tmp8dq_m6_e.d(71): Error: declaration expected, not `assert`\n/tmp/tmp8dq_m6_e.d(72):
    Error: declaration expected, not `assert`\n/tmp/tmp8dq_m6_e.d(73): Error: declaration
    expected, not `assert`\n/tmp/tmp8dq_m6_e.d(74): Error: declaration expected, not
    `assert`\n/tmp/tmp8dq_m6_e.d(75): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8dq_m6_e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int A = 3L;\n    long long int B = 3L;\n\
    \    long long int C = 3L;\n    long long int D = 5L;\n    long long int E = 3L;\n\
    \    long long int F = 3L;\n    long long int G = 3L;\n    long long int H = 3L;\n\
    \    long long int I = 5L;\n    long long int J = 3L;\n    long long int K = 3L;\n\
    \    long long int L = 3L;\n    long long int M = 5L;\n    long long int N = 3L;\n\
    \    long long int O = 3L;\n    long long int P = 5L;\n    long long int Q = 3L;\n\
    \    long long int R = 5L;\n    long long int S = 3L;\n    long long int T = 5L;\n\
    \    long long int U = 3L;\n    long long int V = 3L;\n    long long int W = 3L;\n\
    \    long long int X = 3L;\n    long long int Y = 3L;\n    long long int Z = 3L;\n\
    \    long long int AA = 3L;\n    long long int BB = 3L;\n    long long int CC\
    \ = 3L;\n    long long int DD = 5L;\n    long long int EE = 3L;\n    long long\
    \ int FF = 3\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphb6jbbdk.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmphb6jbbdk.d(15): Error: no identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmphb6jbbdk.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmphb6jbbdk.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmphb6jbbdk.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmphb6jbbdk.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmphb6jbbdk.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmphb6jbbdk.d(22): Error: no identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmphb6jbbdk.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmphb6jbbdk.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphb6jbbdk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool flag = false;\n    while(b < a)\n\
    \    {\n        c = b * c;\n        if(c == a)\n        {\n            flag =\
    \ true;\n            break;\n        }\n        b++;\n    }\n    return flag;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,primes |>\n<code>\n#include <iostream>\n\
    #include <cmath>\nusing namespace std;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiex_at_r.d(30): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiex_at_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    bool flag = false;\n    \n    while (b <= a)\n    {\n        if (a % b ==\
    \ 0)\n        {\n            flag = true;\n            break;\n        }\n   \
    \     \n        if (a % c == 0)\n        {\n            flag = true;\n       \
    \     break;\n        }\n        \n        if (a % d == 0)\n        {\n      \
    \      flag = true;\n            break;\n        }\n        \n        b += 2L;\n\
    \        c += 2L;\n        d += 2L;\n    }\n    \n    return flag;\n}\n</code>\n\
    <|/ a tags=c++,primes,algorithm |>\n<| c |>\nThis code doesn't work. Try it with\
    \ `is_multiply_prime(30L)`.\n<|/ c |>\n<| c |>\nI tested it and it works fine.\
    \ Did you try it with `is_multiply_prime(30L)`?\n<|/ c |>\n<| c |>\nYes, I did.\
    \ `is_multiply_prime(30L)` returns `true`, but `is_multiply_prime(31L)` returns\
    \ `false`.\n<|/ c |>\n<| c |>\nYes, I tested it and it works fine. Did you try\
    \ it with `is_multiply_prime(30L)`?\n<|/ c |>\n<| c |>\nYes, I tested it and it\
    \ works fine. Did you try it with `is_multiply_prime(30L)`?\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphjwlwm81.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmphjwlwm81.d(15): Error: no identifier for declarator `long`\n/tmp/tmphjwlwm81.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphjwlwm81.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmphjwlwm81.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmphjwlwm81.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmphjwlwm81.d(47): Error: declaration
    expected, not `<`\n/tmp/tmphjwlwm81.d(50): Error: unterminated character constant\n/tmp/tmphjwlwm81.d(70):
    Error: declaration expected, not `assert`\n/tmp/tmphjwlwm81.d(71): Error: declaration
    expected, not `assert`\n/tmp/tmphjwlwm81.d(72): Error: declaration expected, not
    `assert`\n/tmp/tmphjwlwm81.d(73): Error: declaration expected, not `assert`\n/tmp/tmphjwlwm81.d(74):
    Error: declaration expected, not `assert`\n/tmp/tmphjwlwm81.d(75): Error: declaration
    expected, not `assert`\n/tmp/tmphjwlwm81.d(76): Error: declaration expected, not
    `assert`\n/tmp/tmphjwlwm81.d(77): Error: declaration expected, not `assert`\n/tmp/tmphjwlwm81.d(78):
    Error: declaration expected, not `assert`\n/tmp/tmphjwlwm81.d(79): Error: declaration
    expected, not `assert`\n/tmp/tmphjwlwm81.d(80): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphjwlwm81.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n    long\
    \ o = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n\
    \    long C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n\
    \    long L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long\
    \ P = 2;\n    long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n\
    \    long U = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long\
    \ Y = 2;\n    long Z = 2;\n    long AA = 2;\n    long AB = 2;\n    long AC = 2;\n\
    \    long AD = 2;\n    long AE = 2;\n    long AF = 3;\n    long AG = 3;\n    long\
    \ AH = 3;\n    long AI = 2;\n    long AJ = 2;\n    long AK = 2;\n    long AL =\
    \ 2;\n    long AM = 2;\n    long AN = 2;\n    long AO = 2;\n    long AP = 2;\n\
    \    long AQ = 2;\n    long AR = 2;\n    long AS = 2;\n    long AT = 2;\n    long\
    \ AU = 2;\n    long AV = 2;\n    long AW = 2;\n    long AX = 2;\n    long AY =\
    \ 2;\n    long AZ = 2;\n    long BA = 2;\n    long BB = 2;\n    long BC = 2;\n\
    \    long BD = 2;\n    long BE = 2;\n    long BF = 3;\n    long BG = 3;\n    long\
    \ BH = 3;\n    long BI = 2;\n    long BJ = 2;\n    long BK = 2;\n    long BL =\
    \ 2;\n    long BM = 2;\n    long BN = 2;\n    long BO = 2;\n    long BP = 2;\n\
    \    long BQ = 2;\n    long BR = 2;\n    long BS = 2;\n    long BT = 2;\n    long\
    \ BU = 2;\n    long BV = 2;\n    long BW = 2;\n    long B\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuaaw0u6v.d(116): Error: semicolon expected, not `unittest`\n/tmp/tmpuaaw0u6v.d(116):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpuaaw0u6v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n    long\
    \ f = a;\n    long g = a;\n    long h = a;\n    long i = a;\n    long j = a;\n\
    \    long k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n    long\
    \ o = a;\n    long p = a;\n    long q = a;\n    long r = a;\n    long s = a;\n\
    \    long t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n    long\
    \ x = a;\n    long y = a;\n    long z = a;\n    long a = a;\n    long b = a;\n\
    \    long c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long\
    \ g = a;\n    long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n\
    \    long l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long\
    \ p = a;\n    long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n\
    \    long u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    long\
    \ y = a;\n    long z = a;\n    long a = a;\n    long b = a;\n    long c = a;\n\
    \    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n    long\
    \ h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n\
    \    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n    long\
    \ q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n\
    \    long v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n    long\
    \ z = a;\n    long a = a;\n    long b = a;\n    long c = a;\n    long d = a;\n\
    \    long e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n    long\
    \ i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n\
    \    long n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n    long\
    \ r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n\
    \    long w = a;\n    long x = a;\n    \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpya8005x6.d(117): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpya8005x6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 29;\n    long long int m = 51;\n\
    \    long long int n = 59;\n    long long int o = 71;\n    long long int p = 71;\n\
    \    long long int q = 71;\n    long long int r = 71;\n    long long int s = 71;\n\
    \    long long int t = 71;\n    long long int u = 71;\n    long long int v = 71;\n\
    \    long long int w = 71;\n    long long int x = 71;\n    long long int y = 71;\n\
    \    long long int z = 71;\n    long long int a = 71;\n    long long int b = 71;\n\
    \    long long int c = 71;\n    long long int d = 71;\n    long long int e = 71;\n\
    \    long long int f = 71;\n    long long int g = 71;\n    long long int h = 71;\n\
    \    long long int i = 71;\n    long long int j = 71;\n    long long int k = 71;\n\
    \    long long int l = 71;\n    long long int m = 71;\n    long long int n = 71;\n\
    \    long long int o = 71;\n    long long int p = 71;\n    long long int q = 71;\n\
    \    long long int r = 71;\n    long long int s = 71;\n    long long int t = 71;\n\
    \    long long int u = 71;\n    long long int v = 71;\n    long long int w = 71;\n\
    \    long long int x = 71;\n    long long int y = 71;\n    long long int z = 71;\n\
    \    long long int a = 71;\n    long long int b = 71;\n    long long int c = 71;\n\
    \    long long int d = 71;\n    long long int e = 71;\n    long long int f = 71;\n\
    \    long long int g = 71;\n    long long int h = 71;\n    long long int i = 71;\n\
    \    long long int j = 71;\n    long long int k = 71;\n    long long int l = 71;\n\
    \    long long int m = 7\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjclt6qi8.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjclt6qi8.d(15): Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpjclt6qi8.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpjclt6qi8.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpjclt6qi8.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpjclt6qi8.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpjclt6qi8.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjclt6qi8.d(22): Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpjclt6qi8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool result = false;\n    \n    for(long\
    \ long int i = 3; i <= a; i+= 2)\n    {\n        long long int temp = b;\n   \
    \     while(temp <= c)\n        {\n            if(a % temp == 0)\n           \
    \ {\n                result = true;\n                break;\n            }\n \
    \           temp += d;\n        }\n        b += 2;\n        c += 2;\n        d\
    \ += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp21sylw80.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp21sylw80.d(15): Error: no identifier for declarator `long`\n/tmp/tmp21sylw80.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp21sylw80.d(18):
    Error: no identifier for declarator `long`\n/tmp/tmp21sylw80.d(18): Error: found
    `i` when expecting `.` following int\n/tmp/tmp21sylw80.d(18): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmp21sylw80.d(18): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmp21sylw80.d(18): Error:
    expression expected, not `;`\n/tmp/tmp21sylw80.d(18): Error: found `i` when expecting
    `)`\n/tmp/tmp21sylw80.d(18): Error: found `<=` instead of statement\n/tmp/tmp21sylw80.d(18):
    Error: found `)` when expecting `;` following statement\n/tmp/tmp21sylw80.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp21sylw80.d(20):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp21sylw80.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while(b < 100) {\n        if(b % 2 == 0) {\n\
    \            if(b == 2) {\n                flag = true;\n                break;\n\
    \            }\n            if(b == 3 || b == 5) {\n                flag = true;\n\
    \                break;\n            }\n            if(b % 3 == 0) {\n       \
    \         flag = true;\n                break;\n            }\n        }\n   \
    \     \n        while(c * c <= b) {\n            if(c % 2 == 0) {\n          \
    \      if(b % c == 0) {\n                    flag = true;\n                  \
    \  break;\n                }\n            }\n            \n            while(d*d\
    \ <= b) {\n                if(d % 2 == 0) {\n                    if(b % d == 0)\
    \ {\n                        flag = true;\n                        break;\n  \
    \                  }\n                }\n                \n                d +=\
    \ 2;\n            }\n            c += 2;\n        }\n        b += 2;\n    }\n\
    \    \n    return flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm |>\n<| c\
    \ |>\nThe first while loop will never be entered because `b` will always be less\
    \ than 100. Also, the second while loop will never be entered because `c` will\
    \ always be less than `b`.\n<|/ c |>\n<| c |>\nThanks for your comment, I fixed\
    \ the code as you mentioned.\n<|/ c |>\n<| c |>\nThe second while loop will never\
    \ be entered because `d` will always be less than `b`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your comment, I fixed the code as you mentioned.\n<|/ c |>\n<| c |>\nThanks\
    \ for your comment, I fixed the code as you mentioned.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8brcrfsf.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8brcrfsf.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8brcrfsf.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8brcrfsf.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp8brcrfsf.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8brcrfsf.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp8brcrfsf.d(61): Error: declaration
    expected, not `<`\n/tmp/tmp8brcrfsf.d(84): Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(85):
    Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(86): Error: declaration
    expected, not `assert`\n/tmp/tmp8brcrfsf.d(87): Error: declaration expected, not
    `assert`\n/tmp/tmp8brcrfsf.d(88): Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(89):
    Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(90): Error: declaration
    expected, not `assert`\n/tmp/tmp8brcrfsf.d(91): Error: declaration expected, not
    `assert`\n/tmp/tmp8brcrfsf.d(92): Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(93):
    Error: declaration expected, not `assert`\n/tmp/tmp8brcrfsf.d(94): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8brcrfsf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = 5*a;\n    long long int d =\
    \ 7*a;\n    long long int e = 9*a;\n    long long int f = 11*a;\n    long long\
    \ int g = 13*a;\n    long long int h = 15*a;\n    long long int i = 17*a;\n  \
    \  long long int j = 19*a;\n    long long int k = 21*a;\n    long long int l =\
    \ 23*a;\n    long long int m = 25*a;\n    long long int n = 27*a;\n    long long\
    \ int o = 29*a;\n    long long int p = 31*a;\n    long long int q = 33*a;\n  \
    \  long long int r = 35*a;\n    long long int s = 37*a;\n    long long int t =\
    \ 39*a;\n    long long int u = 41*a;\n    long long int v = 43*a;\n    long long\
    \ int w = 45*a;\n    long long int x = 47*a;\n    long long int y = 49*a;\n  \
    \  long long int z = 51*a;\n    long long int aa = 53*a;\n    long long int bb\
    \ = 55*a;\n    long long int cc = 57*a;\n    long long int dd = 59*a;\n    long\
    \ long int ee = 61*a;\n    long long int ff = 63*a;\n    long long int gg = 65*a;\n\
    \    long long int hh = 67*a;\n    long long int ii = 69*a;\n    long long int\
    \ jj = 71*a;\n    long long int kk = 73*a;\n    long long int ll = 75*a;\n   \
    \ long long int mm = 77*a;\n    long long int nn = 79*a;\n    long long int oo\
    \ = 81*a;\n    long long int pp = 83*a;\n    long long int qq = 85*a;\n    long\
    \ long int rr = 87*a;\n    long long int ss = 89*a;\n    long long int tt = 91*a;\n\
    \    long long int uu = 93*a;\n    long long int vv = 95*a;\n    long long int\
    \ ww = 97*a;\n    long long int xx = 99*a;\n    long long int yy = 101*a;\n  \
    \  long long int zz = 103*a;\n    long long int aaa = 105*a;\n    long long int\
    \ bbb = 107*a;\n    long long int ccc = 109*\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0q46i_dn.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0q46i_dn.d(15): Error: no identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp0q46i_dn.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp0q46i_dn.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp0q46i_dn.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp0q46i_dn.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp0q46i_dn.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0q46i_dn.d(22): Error: no identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp0q46i_dn.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0q46i_dn.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0q46i_dn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while(b != 0)\n    {\n        if(b % d == 0)\n\
    \        {\n            flag = true;\n            break;\n        }\n        \n\
    \        d += 2;\n    }\n    \n    if(flag)\n    {\n        return true;\n   \
    \ }\n    else\n    {\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9qh3tf3v.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9qh3tf3v.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9qh3tf3v.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9qh3tf3v.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9qh3tf3v.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9qh3tf3v.d(17): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9qh3tf3v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    bool flag = false;\n    for(long long int i = 3;\
    \ i <= b; i += 2)\n    {\n        if(b % i == 0)\n        {\n            flag\
    \ = true;\n            break;\n        }\n    }\n    return flag;\n}\n</code>\n\
    <|/ a tags=c++,primes,algorithm |>\n<| c |>\nThe first `for` loop can be replaced\
    \ with `for (long long int i = 3; i <= b; i += 2)`\n<|/ c |>\n<| c |>\nThanks\
    \ for the suggestion, I will update my answer.\n<|/ c |>\n<| c |>\nThe first `for`\
    \ loop can be replaced with `for (long long int i = 3; i <= b; i += 2)`\n<|/ c\
    \ |>\n<| c |>\nThanks for the suggestion, I will update my answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <cmath>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3ee4nkit.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3ee4nkit.d(15): Error: no identifier for declarator `long`\n/tmp/tmp3ee4nkit.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3ee4nkit.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmp3ee4nkit.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmp3ee4nkit.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmp3ee4nkit.d(17): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmp3ee4nkit.d(17): Error:
    expression expected, not `;`\n/tmp/tmp3ee4nkit.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmp3ee4nkit.d(17): Error: found `<=` instead of statement\n/tmp/tmp3ee4nkit.d(17):
    Error: found `)` when expecting `;` following statement\n/tmp/tmp3ee4nkit.d(27):
    Error: declaration expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp3ee4nkit.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 5L;\n    long long int l = 7L;\n    long long int m = 7L;\n\
    \    long long int n = 7L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 7L;\n    long long int s = 7L;\n\
    \    long long int t = 7L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E = a;\n\
    \    long long int F = b;\n    long long int G = c; \n    long long int H = d;\
    \ \n    long long int I = a;\n    long long int J = b;\n    long long int K =\
    \ c; \n    long long int L = d; \n    long long int M = a;\n    long long int\
    \ N = b;\n    long long int O = c; \n    long long int P = d; \n    long long\
    \ int Q = a;\n    long long int R = b;\n    long long int S = c; \n    long long\
    \ int T = d; \n    long long int U = a;\n    long long int V = b;\n    long long\
    \ int W = c; \n    long long int X = 3L;\n    long long int Y = 5L;\n    long\
    \ long int Z = 7L;\n    long long int AA = A;\n    long long int BB = B;\n   \
    \ long long int CC = C; \n    long long int DD = D; \n    long long int EE = E;\n\
    \    long long int FF = F;\n    long long int GG = G; \n    long long int HH =\
    \ H; \n    long long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpombgpsfi.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpombgpsfi.d(15): Error: no identifier for declarator `long`\n/tmp/tmpombgpsfi.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpombgpsfi.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpombgpsfi.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpombgpsfi.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpombgpsfi.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpombgpsfi.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpombgpsfi.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpombgpsfi.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpombgpsfi.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpombgpsfi.d(22): Error: no identifier for declarator `long`\n/tmp/tmpombgpsfi.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpombgpsfi.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpombgpsfi.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpombgpsfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n\
    \    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long\
    \ G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n\
    \    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long\
    \ P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n\
    \    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long\
    \ Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long BB = 0;\n    long CC = 0;\n\
    \    long DD = 0;\n    long EE = 0;\n    long FF = 0;\n    long GG = 0;\n    long\
    \ HH = 0;\n    long II = 0;\n    long JJ = 0;\n    long KK = 0;\n    long LL =\
    \ 0;\n    long MM = 0;\n    long NN = 0;\n    long OO = 0;\n    long PP = 0;\n\
    \    long QQ = 0;\n    long RR = 0;\n    long SS = 0;\n    long TT = 0;\n    long\
    \ UU = 0;\n    long VV = 0;\n    long WW = 0;\n    long XX = 0;\n    long YY =\
    \ 0;\n    long ZZ = 0;\n    long AAA = 0;\n    long BBB = 0;\n    long CCC = 0;\n\
    \    long DDD = 0;\n    long EEE = 0;\n    long FFF = 0;\n    long GGG = 0;\n\
    \    long HHH = 0;\n    long III = 0;\n    long JJJ = 0;\n    long KKK = 0;\n\
    \    long LLL = 0;\n    long MMM = 0;\n    long NNN = 0;\n    long OOO = 0;\n\
    \    long PPP = 0;\n    long QQQ = 0;\n    long RRR = 0;\n    long SSS = 0;\n\
    \    long TTT = 0;\n    long UUU = 0;\n    long V\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp07jpe6pt.d(114): Error: semicolon expected, not `unittest`\n/tmp/tmp07jpe6pt.d(114):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp07jpe6pt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 3;\n    long d = 5;\n    long e = 7;\n    long\
    \ f = 9;\n    long g = 11;\n    long h = 13;\n    long i = 17;\n    long j = 21;\n\
    \    long k = 29;\n    long l = 31;\n    long m = 43;\n    long n = 57;\n    long\
    \ o = 61;\n    long p = 69;\n    long q = 83;\n    long r = 97;\n    long s =\
    \ 111;\n    long t = 123;\n    long u = 131;\n    long v = 143;\n    long w =\
    \ 151;\n    long x = 167;\n    long y = 181;\n    long z = 193;\n    long A =\
    \ 233;\n    long B = 285;\n    long C = 317;\n    long D = 369;\n    long E =\
    \ 397;\n    long F = 415;\n    long G = 439;\n    long H = 471;\n    long I =\
    \ 503;\n    long J = 529;\n    long K = 561;\n    long L = 587;\n    long M =\
    \ 611;\n    long N = 641;\n    long O = 673;\n    long P = 715;\n    long Q =\
    \ 749;\n    long R = 791;\n    long S = 831;\n    long T = 873;\n    long U =\
    \ 923;\n    long V = 959;\n    long W = 1001;\n    long X = 1023;\n    long Y\
    \ = 1053;\n    long Z = 1093;\n    long aa = 1133;\n    long bb = 1253;\n    long\
    \ cc = 1373;\n    long dd = 1403;\n    long ee = 1533;\n    long ff = 1673;\n\
    \    long gg = 1803;\n    long hh = 1933;\n    long ii = 2073;\n    long jj =\
    \ 2213;\n    long kk = 2343;\n    long ll = 2473;\n    long mm = 2603;\n    long\
    \ nn = 2733;\n    long oo = 2873;\n    long pp = 3003;\n    long qq = 3033;\n\
    \    long rr = 3137;\n    long ss = 3269;\n    long tt = 3399;\n    long uu =\
    \ 3431;\n    long vv = 3673;\n    long ww = 3807;\n    long xx = 4007;\n    long\
    \ yy = 4033;\n    long zz = 4053;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp65jyc781.d(93): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65jyc781.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E = e;\
    \ \n    long long int F = f; \n    long long int G = g; \n    long long int H\
    \ = h; \n    long long int I = i; \n    long long int J = j; \n    long long int\
    \ K = k; \n    long long int L = l; \n    long long int M = m;\n    long long\
    \ int N = n; \n    long long int O = o; \n    long long int P = p; \n    long\
    \ long int Q = q; \n    long long int R = r;\n    long long int S = s; \n    long\
    \ long int T = t; \n    long long int U = u; \n    long long int V = v; \n   \
    \ long long int W = w; \n    long long int X = x; \n    long long int Y = y; \n\
    \    long long int Z = z; \n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E = e;\
    \ \n    long long int F = f; \n    long long int G = g; \n    long long int H\
    \ = h; \n    long long int I = i; \n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpegvwv5b_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpegvwv5b_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpegvwv5b_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpegvwv5b_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpegvwv5b_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpegvwv5b_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpegvwv5b_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpegvwv5b_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpegvwv5b_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpegvwv5b_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpegvwv5b_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 0;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr1z66sn0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(15): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpr1z66sn0.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpr1z66sn0.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpr1z66sn0.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpr1z66sn0.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpr1z66sn0.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(22): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpr1z66sn0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 0;\n\
    \    long long int e = 0;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5or4pqun.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5or4pqun.d(15): Error: no identifier for declarator `long`\n/tmp/tmp5or4pqun.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp5or4pqun.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp5or4pqun.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp5or4pqun.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp5or4pqun.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp5or4pqun.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp5or4pqun.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp5or4pqun.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp5or4pqun.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5or4pqun.d(22): Error: no identifier for declarator `long`\n/tmp/tmp5or4pqun.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp5or4pqun.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5or4pqun.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5or4pqun.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a / 3;\n    long c = a % 3;\n    long d = b * 5;\n    long e = c\
    \ / 3;\n    long f = c % 3;\n    long g = d * 5;\n    long h = e / 3;\n    long\
    \ i = e % 3;\n    long j = g * 5;\n    long k = h / 3;\n    long l = h % 3;\n\
    \    long m = i * 5;\n    long n = j / 3;\n    long o = j % 3;\n    long p = k\
    \ * 5;\n    long q = l / 3;\n    long r = l % 3;\n    long s = m * 5;\n    long\
    \ t = n / 3;\n    long u = n % 3;\n    long v = p * 5;\n    long w = q / 3;\n\
    \    long x = q % 3;\n    long y = r * 5;\n    long z = s / 3;\n    long A = t\
    \ * 5;\n    long B = u / 3;\n    long C = v / 3;\n    long D = w / 3;\n    long\
    \ E = x / 3;\n    long F = y / 3;\n    long G = z / 3;\n    long H = A / 3;\n\
    \    long I = B / 3;\n    long J = C / 3;\n    long K = D / 3;\n    long L = E\
    \ / 3;\n    long M = F / 3;\n    long N = G / 3;\n    long O = H / 3;\n    long\
    \ P = I / 3;\n    long Q = J / 3;\n    long R = K / 3;\n    long S = L / 3;\n\
    \    long T = M / 3;\n    long U = N / 3;\n    long V = O / 3;\n    long W = P\
    \ / 3;\n    long X = Q / 3;\n    long Y = R / 3;\n    long Z = S / 3;\n    long\
    \ A = T / 3;\n    long B = U / 3;\n    long C = V / 3;\n    long D = W / 3;\n\
    \    long E = X / 3;\n    long F = Y / 3;\n    long G = Z / 3;\n    long H = A\
    \ / 3;\n    long I = B / 3;\n    long J = C / 3;\n    long K = D / 3;\n    long\
    \ L = E / 3;\n    long M = F / 3;\n    long N = G / 3;\n    long O = H / 3;\n\
    \    long P = I / 3;\n    long Q = J / 3;\n    long R = K / 3;\n    long S = L\
    \ / 3;\n    long T = M / 3;\n    \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6dud01l0.d(87): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6dud01l0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    bool result = false;\n    \n    while(!result\
    \ && b < 100) {\n        c = b;\n        \n        for(long i = 3; i <= c; i++)\
    \ {\n            if(a%i == 0) {\n                result = false;\n           \
    \     break;\n            }\n        }\n        \n        if(result) {\n     \
    \       break;\n        }\n        \n        b++;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqq1qs639.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e4d]\n??:? void tmpqq1qs639.__unittest_L38_C1() [0x427abf]\n??:?
    void tmpqq1qs639.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42829c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428223]\n??:? _d_run_main [0x42818e]\n??:? main [0x427bdf]\n??:?
    __libc_start_main [0xaff71554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool result = false;\n    while(a\
    \ != 0)\n    {\n        if(a % b == 0)\n        {\n            if(b == c && b\
    \ == d)\n            {\n                result = true;\n                break;\n\
    \            }\n            else\n            {\n                b += 2;\n   \
    \         }\n        }\n        else\n        {\n            c += 2;\n       \
    \ }\n        a -= 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdqy99yq9.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpdqy99yq9.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdqy99yq9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    long long int j;\n    long long int k;\n    long long\
    \ int n;\n    long long int m;\n    long long int p;\n    long long int q;\n \
    \   long long int r;\n    long long int s;\n    long long int t;\n    long long\
    \ int u;\n    long long int v;\n    long long int w;\n    long long int x;\n \
    \   long long int y;\n    long long int z;\n    long long int A;\n    long long\
    \ int B;\n    long long int C;\n    long long int D;\n    long long int E;\n \
    \   long long int F;\n    long long int G;\n    long long int H;\n    long long\
    \ int I;\n    long long int J;\n    long long int K;\n    long long int L;\n \
    \   long long int M;\n    long long int N;\n    long long int O;\n    long long\
    \ int P;\n    long long int Q;\n    long long int R;\n    long long int S;\n \
    \   long long int T;\n    long long int U;\n    long long int V;\n    long long\
    \ int W;\n    long long int X;\n    long long int Y;\n    long long int Z;\n \
    \   long long int A;\n    long long int B;\n    long long int C;\n    long long\
    \ int D;\n    long long int E;\n    long long int F;\n    long long int G;\n \
    \   long long int H;\n    long long int I;\n    long long int J;\n    long long\
    \ int K;\n    long long int L;\n    long long int M;\n    long long int N;\n \
    \   long long int O;\n    long long int P;\n    long long int Q;\n    long long\
    \ int R;\n    long long int S;\n    long long int T;\n    long long int U;\n \
    \   long long int V;\n    long long int W;\n    long long int X;\n    long long\
    \ int Y;\n    long long int Z;\n    long long int A;\n    long long int B;\n \
    \   long long int C;\n    long long int D;\n    long long int E;\n    long long\
    \ int F;\n    long long int G;\n    long long \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpli13sn_r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpli13sn_r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpli13sn_r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpli13sn_r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpli13sn_r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpli13sn_r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpli13sn_r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpli13sn_r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpli13sn_r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpli13sn_r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpli13sn_r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpli13sn_r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpli13sn_r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpli13sn_r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpli13sn_r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpli13sn_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while (b < 100) {\n        if (std.math.mod(b,\
    \ c) == 0) {\n            if (std.math.mod(b, d) == 0) {\n                flag\
    \ = true;\n                break;\n            }\n        }\n        c++;\n  \
    \      d++;\n    }\n    return flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm,math\
    \ |>\n<| c |>\nThis code doesn't work. `is_multiply_prime(30L)` returns `true`\
    \ even though `30L` is not a multiple of any prime. `is_multiply_prime(30L)` should\
    \ return `false` because `30L` is not a multiple of any prime. `is_multiply_prime(30L)`\
    \ should return `true` because `30L` is equal to `2 * 3 * 5`.\n<|/ c |>\n<| c\
    \ |>\nI edited the code according to your comment. Thanks for pointing out.\n\
    <|/ c |>\n<| c |>\nThis code doesn't work. `is_multiply_prime(30L)` returns `true`\
    \ even though `30L` is not a multiple of any prime. `is_multiply_prime(30L)` should\
    \ return `false` because `30L` is not a multiple of any prime. `is_multiply_prime(30L)`\
    \ should return `true` because `30L` is equal to `2 * 3 * 5`.\n<|/ c |>\n<| c\
    \ |>\nI edited the code according to your comment. Thanks for pointing out.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_f7e5d2l.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_f7e5d2l.d(15): Error: no identifier for declarator `long`\n/tmp/tmp_f7e5d2l.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_f7e5d2l.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp_f7e5d2l.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_f7e5d2l.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp_f7e5d2l.d(32): Error: declaration
    expected, not `<`\n/tmp/tmp_f7e5d2l.d(35): Error: unterminated character constant\n/tmp/tmp_f7e5d2l.d(41):
    Error: unterminated character constant\n/tmp/tmp_f7e5d2l.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmp_f7e5d2l.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmp_f7e5d2l.d(54): Error: declaration expected, not `assert`\n/tmp/tmp_f7e5d2l.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmp_f7e5d2l.d(56): Error: declaration
    expected, not `assert`\n/tmp/tmp_f7e5d2l.d(57): Error: declaration expected, not
    `assert`\n/tmp/tmp_f7e5d2l.d(58): Error: declaration expected, not `assert`\n/tmp/tmp_f7e5d2l.d(59):
    Error: declaration expected, not `assert`\n/tmp/tmp_f7e5d2l.d(60): Error: declaration
    expected, not `assert`\n/tmp/tmp_f7e5d2l.d(61): Error: declaration expected, not
    `assert`\n/tmp/tmp_f7e5d2l.d(62): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_f7e5d2l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n\
    \    long C = 1;\n    long D = 1;\n    long E = 1;\n    long F = 1;\n    long\
    \ G = 1;\n    long H = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n\
    \    long L = 1;\n    long M = 1;\n    long N = 1;\n    long O = 1;\n    long\
    \ P = 1;\n    long Q = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n\
    \    long U = 1;\n    long V = 1;\n    long W = 1;\n    long X = 1;\n    long\
    \ Y = 1;\n    long Z = 1;\n    long AA = 1;\n    long AB = 1;\n    long AC = 1;\n\
    \    long AD = 1;\n    long AE = 1;\n    long AF = 1;\n    long AG = 1;\n    long\
    \ AH = 1;\n    long AI = 1;\n    long AJ = 1;\n    long AK = 1;\n    long AL =\
    \ 1;\n    long AM = 1;\n    long AN = 1;\n    long AO = 1;\n    long AP = 1;\n\
    \    long AQ = 1;\n    long AR = 1;\n    long AS = 1;\n    long AT = 1;\n    long\
    \ AU = 1;\n    long AV = 1;\n    long AW = 1;\n    long AX = 1;\n    long AY =\
    \ 1;\n    long AZ = 1;\n    long BA = 1;\n    long BB = 1;\n    long BC = 1;\n\
    \    long BD = 1;\n    long BE = 1;\n    long BF = 1;\n    long BG = 1;\n    long\
    \ BH = 1;\n    long BI = 1;\n    long BJ = 1;\n    long BK = 1;\n    long BL =\
    \ 1;\n    long BM = 1;\n    long BN = 1;\n    long BO = 1;\n    long BP = 1;\n\
    \    long BQ = 1;\n    long BR = 1;\n    long BS = 1;\n    long BT = 1;\n    long\
    \ BU = 1;\n    long BV = 1;\n    long BW = 1;\n    long B\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxlvolvi.d(116): Error: semicolon expected, not `unittest`\n/tmp/tmpsxlvolvi.d(116):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsxlvolvi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    \n    bool result = false;\n    \n    for(long long int i = 3; i <=\
    \ c; i+=2)\n    {\n        if((c % i) == 0)\n        {\n            if((d % i)\
    \ == 0)\n            {\n                result = true;\n                break;\n\
    \            }\n        }\n    }\n    \n    return result;\n}\nunittest\n{\n \
    \   alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp21d0822u.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp21d0822u.d(15): Error: no identifier for declarator `long`\n/tmp/tmp21d0822u.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp21d0822u.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp21d0822u.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp21d0822u.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp21d0822u.d(21): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp21d0822u.d(21): Error: no
    identifier for declarator `long`\n/tmp/tmp21d0822u.d(21): Error: found `i` when
    expecting `.` following int\n/tmp/tmp21d0822u.d(21): Error: found `=` when expecting
    identifier following `int`.\n/tmp/tmp21d0822u.d(21): Error: found `3` when expecting
    `;` following `for` condition\n/tmp/tmp21d0822u.d(21): Error: expression expected,
    not `;`\n/tmp/tmp21d0822u.d(21): Error: found `i` when expecting `)`\n/tmp/tmp21d0822u.d(21):
    Error: found `<=` instead of statement\n/tmp/tmp21d0822u.d(21): Error: found `)`
    when expecting `;` following statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp21d0822u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_6ota88.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpz_6ota88.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz_6ota88.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpz_6ota88.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpz_6ota88.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpz_6ota88.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpz_6ota88.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(22): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpz_6ota88.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 25;\n    long long int m = 29;\n\
    \    long long int n = 31;\n    long long int o = 27;\n    long long int p = 23;\n\
    \    long long int q = 29;\n    long long int r = 25;\n    long long int s = 29;\n\
    \    long long int t = 27;\n    long long int u = 23;\n    long long int v = 29;\n\
    \    long long int w = 25;\n    long long int x = 31;\n    long long int y = 27;\n\
    \    long long int z = 21;\n    long long int A = 31;\n    long long int B = 31;\n\
    \    long long int C = 31;\n    long long int D = 31;\n    long long int E = 31;\n\
    \    long long int F = 31;\n    long long int G = 31;\n    long long int H = 31;\n\
    \    long long int I = 31;\n    long long int J = 31;\n    long long int K = 31;\n\
    \    long long int L = 31;\n    long long int M = 31;\n    long long int N = 31;\n\
    \    long long int O = 31;\n    long long int P = 31;\n    long long int Q = 31;\n\
    \    long long int R = 31;\n    long long int S = 31;\n    long long int T = 31;\n\
    \    long long int U = 31;\n    long long int V = 31;\n    long long int W = 31;\n\
    \    long long int X = 31;\n    long long int Y = 31;\n    long long int Z = 31;\n\
    \    long long int AA = 31;\n    long long int BB = 31;\n    long long int CC\
    \ = 31;\n    long long int DD = 31;\n    long long int EE = 31;\n    long long\
    \ int FF = 31;\n    long long int GG = 31;\n    long long int HH = 31;\n    long\
    \ long int II = 31;\n    long long int JJ = 31;\n    long long int KK = 31;\n\
    \    long long int LL = 31;\n    long long int MM\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx1yn3tcs.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpx1yn3tcs.d(15): Error: no identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpx1yn3tcs.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpx1yn3tcs.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpx1yn3tcs.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpx1yn3tcs.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpx1yn3tcs.d(22): Error: no identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpx1yn3tcs.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpx1yn3tcs.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpx1yn3tcs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    bool flag = true;\n \
    \   for(long long int i = 3; i <= b; i += 2)\n    {\n        if(b % i == 0)\n\
    \        {\n            flag = false;\n            break;\n        }\n    }\n\
    \    if(flag)\n    {\n        for(long long int i = 3; i <= b; i += 2)\n     \
    \   {\n            if(b % i == 0)\n            {\n                c = i;\n   \
    \             break;\n            }\n        }\n        if(c == 0)\n        {\n\
    \            return false;\n        }\n        for(long long int i = 3; i <= b;\
    \ i += 2)\n        {\n            if(b % i == 0)\n            {\n            \
    \    c = i;\n                break;\n            }\n        }\n        if(c ==\
    \ 0)\n        {\n            return false;\n        }\n        for(long long int\
    \ i = 3; i <= b; i += 2)\n        {\n            if(b % i == 0)\n            {\n\
    \                c = i;\n                break;\n            }\n        }\n  \
    \      if(c == 0)\n        {\n            return false;\n        }\n        for(long\
    \ long int i = 3; i <= b; i += 2)\n        {\n            if(b % i == 0)\n   \
    \         {\n                c = i;\n                break;\n            }\n \
    \       }\n        if(c == 0)\n        {\n            return false;\n        }\n\
    \        for(long long int i = 3; i <= b; i += 2)\n        {\n            if(b\
    \ % i == 0)\n            {\n                c = i;\n                break;\n \
    \           }\n        }\n        if(c == 0)\n        {\n            return false;\n\
    \        }\n        for(long long int i = 3; i <= b; i += 2)\n        {\n    \
    \        if(b % i == 0)\n            {\n                c = i;\n             \
    \   break;\n            }\n        }\n        if(c == 0)\n        {\n        \
    \    return false;\n        }\n        for(long long int i = 3; i <= b; i += 2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                break;\n            }\n        }\n        if(c == 0)\n      \
    \  {\n            return false;\n        }\n        for(long long int i = 3; i\
    \ <= b; i += 2)\n        {\n            if(b % i == 0)\n            {\n      \
    \          c = i;\n                break;\n            }\n        }\n        if(c\
    \ == 0)\n        {\n            return false;\n        }\n        for(long long\
    \ int i = 3; i <= b; i += 2)\n        {\n            if(b % i == 0)\n        \
    \    {\n                c = i;\n                break;\n            }\n      \
    \  }\n        if(c == 0)\n        {\n            return false;\n        }\n  \
    \      for(long long int i = 3; i <= b; i += 2)\n        {\n            if(b %\
    \ i == 0)\n            {\n                c = i;\n                break;\n   \
    \         }\n        }\n        if(c == 0)\nunittest\n{\n    alias candidate =\
    \ is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzwid45yd.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpzwid45yd.d(15): Error: no identifier for declarator `long`\n/tmp/tmpzwid45yd.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpzwid45yd.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpzwid45yd.d(18): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpzwid45yd.d(18): Error:
    no identifier for declarator `long`\n/tmp/tmpzwid45yd.d(18): Error: found `i`
    when expecting `.` following int\n/tmp/tmpzwid45yd.d(18): Error: found `=` when
    expecting identifier following `int`.\n/tmp/tmpzwid45yd.d(18): Error: found `3`
    when expecting `;` following `for` condition\n/tmp/tmpzwid45yd.d(18): Error: expression
    expected, not `;`\n/tmp/tmpzwid45yd.d(18): Error: found `i` when expecting `)`\n/tmp/tmpzwid45yd.d(18):
    Error: found `<=` instead of statement\n/tmp/tmpzwid45yd.d(18): Error: found `)`
    when expecting `;` following statement\n/tmp/tmpzwid45yd.d(28): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpzwid45yd.d(28): Error: no
    identifier for declarator `long`\n/tmp/tmpzwid45yd.d(28): Error: found `i` when
    expecting `.` following int\n/tmp/tmpzwid45yd.d(28): Error: found `=` when expecting
    identifier following `int`.\n/tmp/tmpzwid45yd.d(28): Error: found `3` when expecting
    `;` following `for` condition\n/tmp/tmpzwid45yd.d(28): Error: expression expected,
    not `;`\n/tmp/tmpzwid45yd.d(28): Error: found `i` when expecting `)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzwid45yd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 2;\n\
    \    long long int e = 3;\n    long long int f = 5;\n    long long int g = 7;\n\
    \    long long int h = 9;\n    long long int i = 13;\n    long long int j = 15;\n\
    \    long long int k = 21;\n    long long int l = 23;\n    long long int m = 29;\n\
    \    long long int n = 29;\n    long long int o = 31;\n    long long int p = 21;\n\
    \    long long int q = 23;\n    long long int r = 27;\n    long long int s = 29;\n\
    \    long long int t = 29;\n    long long int u = 31;\n    long long int v = 23;\n\
    \    long long int w = 23;\n    long long int x = 29;\n    long long int y = 29;\n\
    \    long long int z = 31;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m; \n    long long int\
    \ N = n; \n    long long int O = o; \n    long long int P = p; \n    long long\
    \ int Q = q; \n    long long int R = r;\n    long long int S = s; \n    long long\
    \ int T = t; \n    long long int U = u; \n    long long int V = v; \n    long\
    \ long int W = w; \n    long long int X = x; \n    long long int Y = y; \n   \
    \ long long int Z = z; \n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m; \n    \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgqx_pgo8.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgqx_pgo8.d(15): Error: no identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpgqx_pgo8.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpgqx_pgo8.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpgqx_pgo8.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpgqx_pgo8.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgqx_pgo8.d(22): Error: no identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpgqx_pgo8.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgqx_pgo8.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpgqx_pgo8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 7L;\n\
    \    long long int n = 7L;\n    long long int o = 11L;\n    long long int p =\
    \ 13L;\n    long long int q = 13L;\n    long long int r = 17L;\n    long long\
    \ int s = 19L;\n    long long int t = 21L;\n    long long int u = 23L;\n    long\
    \ long int v = 29L;\n    long long int w = 29L;\n    long long int x = 31L;\n\
    \    long long int y = 43L;\n    long long int z = 37L;\n    long long int aa\
    \ = 47L;\n    long long int ab = 59L;\n    long long int ac = 61L;\n    long long\
    \ int ad = 67L;\n    long long int ae = 71L;\n    long long int af = 73L;\n  \
    \  long long int ag = 79L;\n    long long int ah = 81L;\n    long long int ai\
    \ = 87L;\n    long long int aj = 93L;\n    long long int ak = 97L;\n    long long\
    \ int al = 101L;\n    long long int am = 107L;\n    long long int an = 113L;\n\
    \    long long int ao = 119L;\n    long long int ap = 127L;\n    long long int\
    \ aq = 131L;\n    long long int ar = 137L;\n    long long int as = 143L;\n   \
    \ long long int at = 151L;\n    long long int au = 157L;\n    long long int av\
    \ = 173L;\n    long long int aw = 179L;\n    long long int ax = 181L;\n    long\
    \ long int ay = 193L;\n    long long int az = 197L;\n    long long int ba = 209L;\n\
    \    long long int bb = 219L;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj1xzfnan.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpj1xzfnan.d(15): Error: no identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpj1xzfnan.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpj1xzfnan.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpj1xzfnan.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpj1xzfnan.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpj1xzfnan.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpj1xzfnan.d(22): Error: no identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpj1xzfnan.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpj1xzfnan.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpj1xzfnan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while(b != 0)\n    {\n        if(b % d == 0)\n\
    \        {\n            flag = true;\n            break;\n        }\n        d\
    \ += 2;\n    }\n    \n    if(flag)\n    {\n        return true;\n    }\n    else\n\
    \    {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpihty9s6y.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpihty9s6y.d(15): Error: no identifier for declarator `long`\n/tmp/tmpihty9s6y.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihty9s6y.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpihty9s6y.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihty9s6y.d(17): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpihty9s6y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    bool isPrime;\n    for(i=2;i<=a/2;i++)\n    {\n   \
    \     if(a%i==0)\n        {\n            isPrime=false;\n            break;\n\
    \        }\n    }\n    if(isPrime)\n    {\n        return true;\n    }\n    else\n\
    \    {\n        return false;\n    }\n}\n</code>\n<|/ a tags=c++,primes,algorithm\
    \ |>\n<| c |>\nI believe this algorithm is wrong. `is_multiply_prime(30L)` returns\
    \ `true` but `30 = 2 * 3 * 5` which is not prime. `is_multiply_prime(30L)` should\
    \ return `false`\n<|/ c |>\n<| c |>\nYes, you are right. I missed that part. Thanks\
    \ for pointing out. Updated the answer.\n<|/ c |>\n<| a tags=c++,primes,algorithm\
    \ |>\nI wrote a c++ program to find prime numbers. I used the Sieve of Eratosthenes\
    \ algorithm to find prime numbers. I used the Sieve of Eratosthenes algorithm\
    \ to find prime numbers. I used the Sieve of Eratosthenes algorithm to find prime\
    \ numbers. I used the Sieve of Eratosthenes algorithm to find prime numbers. I\
    \ used the Sieve of Eratosthenes algorithm to find prime numbers. I used the Sieve\
    \ of Eratosthenes algorithm to find prime numbers. I used the Sieve of Eratosthenes\
    \ algorithm to find prime numbers. I used the Sieve of Eratosthenes algorithm\
    \ to find prime numbers. I used the Sieve of Eratosthenes algorithm to find prime\
    \ numbers. I used the Sieve of Eratosthenes algorithm to find prime numbers. I\
    \ used the Sieve of Eratosthenes algorithm to find prime numbers. I used the Sieve\
    \ of Eratosthenes algorithm to find prime numbers. I used the Sieve of Eratosthenes\
    \ algorithm to find prime numbers. I used the Sieve of Eratosthenes algorithm\
    \ to find prime numbers. I used the Sieve of Eratosthenes algorithm to find prime\
    \ numbers. I used the Sieve of Eratosthenes algorithm to find prime numbers. I\
    \ used the Sieve of Eratosthenes algorithm to find prime numbers. I used the Sieve\
    \ of Eratosthenes algorithm \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnyq25_po.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpnyq25_po.d(15): Error: no identifier for declarator `long`\n/tmp/tmpnyq25_po.d(34):
    Error: declaration expected, not `<`\n/tmp/tmpnyq25_po.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmpnyq25_po.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmpnyq25_po.d(50): Error: declaration expected, not `assert`\n/tmp/tmpnyq25_po.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpnyq25_po.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpnyq25_po.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpnyq25_po.d(54): Error: declaration expected, not `assert`\n/tmp/tmpnyq25_po.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmpnyq25_po.d(56): Error: declaration
    expected, not `assert`\n/tmp/tmpnyq25_po.d(57): Error: declaration expected, not
    `assert`\n/tmp/tmpnyq25_po.d(58): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnyq25_po.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3LL;\n    long long int c = 3LL;\n    bool flag = false;\n\
    \    while(b <= a)\n    {\n        if(a%b == 0)\n        {\n            flag =\
    \ true;\n            break;\n        }\n        b +=2;\n    }\n    while(b <=\
    \ a)\n    {\n        if(a%c == 0)\n        {\n            flag = true;\n     \
    \       break;\n        }\n        c +=2;\n    }\n    return flag;\n}\n</code>\n\
    <|/ a tags=c++,primes,algorithm |>\n<| c |>\nThis is not an answer. Just a bunch\
    \ of code.\n<|/ c |>\n<| c |>\nThis is not an answer. Just a bunch of code.\n\
    <|/ c |>\n<| c |>\nThis is not an answer. Just a bunch of code.\n<|/ c |>\n<|\
    \ c |>\nThis is not an answer. Just a bunch of code.\n<|/ c |>\n<| c |>\nThis\
    \ is not an answer. Just a bunch of code.\n<|/ c |>\n<| a tags=c++,primes,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6po67s23.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6po67s23.d(15): Error: no identifier for declarator `long`\n/tmp/tmp6po67s23.d(15):
    Error: unrecognized token\n/tmp/tmp6po67s23.d(16): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmp6po67s23.d(16): Error: no identifier
    for declarator `long`\n/tmp/tmp6po67s23.d(16): Error: unrecognized token\n/tmp/tmp6po67s23.d(38):
    Error: declaration expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp6po67s23.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n\
    \    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long\
    \ G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n\
    \    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long\
    \ P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n\
    \    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long\
    \ Y = 0;\n    long Z = 0;\n    long AA = 0;\n    long BB = 0;\n    long CC = 0;\n\
    \    long DD = 0;\n    long EE = 0;\n    long FF = 0;\n    long GG = 0;\n    long\
    \ HH = 0;\n    long II = 0;\n    long JJ = 0;\n    long KK = 0;\n    long LL =\
    \ 0;\n    long MM = 0;\n    long NN = 0;\n    long OO = 0;\n    long PP = 0;\n\
    \    long QQ = 0;\n    long RR = 0;\n    long SS = 0;\n    long TT = 0;\n    long\
    \ UU = 0;\n    long VV = 0;\n    long WW = 0;\n    long XX = 0;\n    long YY =\
    \ 0;\n    long ZZ = 0;\n    long AAA = 0;\n    long BBB = 0;\n    long CCC = 0;\n\
    \    long DDD = 0;\n    long EEE = 0;\n    long FFF = 0;\n    long GGG = 0;\n\
    \    long HHH = 0;\n    long III = 0;\n    long JJJ = 0;\n    long KKK = 0;\n\
    \    long LLL = 0;\n    long MMM = 0;\n    long NNN = 0;\n    long OOO = 0;\n\
    \    long PPP = 0;\n    long QQQ = 0;\n    long RRR = 0;\n    long SSS = 0;\n\
    \    long TTT = 0;\n    long UUU = 0;\n    long V\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1e33fvsq.d(114): Error: semicolon expected, not `unittest`\n/tmp/tmp1e33fvsq.d(114):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1e33fvsq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    \n    bool result = false;\n    \n    while(a\
    \ != 0)\n    {\n        if(a%b == 0)\n        {\n            result = true;\n\
    \            break;\n        }\n        \n        if(a%c == 0)\n        {\n  \
    \          result = true;\n            break;\n        }\n        \n        if(a%d\
    \ == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \        \n        if(a%e == 0)\n        {\n            result = true;\n     \
    \       break;\n        }\n        \n        if(a%f == 0)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        if(a%g\
    \ == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \        \n        if(a%h == 0)\n        {\n            result = true;\n     \
    \       break;\n        }\n        \n        if(a%i == 0)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        if(a%j\
    \ == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \        \n        if(a%k == 0)\n        {\n            result = true;\n     \
    \       break;\n        }\n        \n        if(a%l == 0)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        if(a%m\
    \  == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \        \n        if(a%n == 0)\n        {\n            result = true;\n     \
    \       break;\n        }\n        \n        if(a%o == 0)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        if(a%p\
    \ == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \        \n        if(a\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6bgj12bn.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6bgj12bn.d(15): Error: no identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp6bgj12bn.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp6bgj12bn.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp6bgj12bn.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp6bgj12bn.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp6bgj12bn.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6bgj12bn.d(22): Error: no identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp6bgj12bn.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6bgj12bn.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp6bgj12bn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 3;\n    long d = 5;\n    long e = 7;\n    long\
    \ f = 9;\n    long g = 11;\n    long h = 13;\n    long i = 17;\n    long j = 21;\n\
    \    long k = 29;\n    long l = 31;\n    long m = 43;\n    long n = 53;\n    long\
    \ o = 59;\n    long p = 61;\n    long q = 67;\n    long r = 71;\n    long s =\
    \ 73 % a;\n    long t = 79;\n    long u = 83;\n    long v = 89;\n    long w =\
    \ 97;\n    long x = 103;\n    long y = 109; \n    long z = 133;\n    long a =\
    \ a % 10;\n    long b = a / 10;\n    long c = b * c;\n    long d = c * d;\n  \
    \  long e = d * e;\n    long f = e * f;\n    long g = f * g;\n    long h = g *\
    \ h;\n    long i = h * i;\n    long j = i * j;\n    long k = j * k;\n    long\
    \ l = k * l;\n    long m = l * m;\n    long n = m * n;\n    long o = n * o;\n\
    \    long p = o * p;\n    long q = p * q;\n    long r = q * r;\n    long s = r\
    \ * s;\n    long t = s * t;\n    long u = t * u;\n    long v = u * v;\n    long\
    \ w = v * w;\n    long x = w * x;\n    long y = x * y;\n    long z = y * z;\n\
    \    long a = z * a;\n    long b = z * b;\n    long c = z * c;\n    long d = z\
    \ * d;\n    long e = z * e;\n    long f = z * f;\n    long g = z * g;\n    long\
    \ h = z * h;\n    long i = z * i;\n    long j = z * j;\n    long k = z * k;\n\
    \    long l = z * l;\n    long m = z * m;\n    long n = z * n;\n    long o = z\
    \ * o;\n    long p = z * p;\n    long q = z * q;\n    long r = z * r;\n    long\
    \ s = z * s;\n    long t = z * t;\n    long u = z * u;\n    long v = z * v;\n\
    \    long w = z * w;\n    long x = z * x;\n    long y = z * y;\n    long z = z\
    \ * z;\n    \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprv9jalex.d(93): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprv9jalex.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_6ota88.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpz_6ota88.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz_6ota88.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpz_6ota88.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpz_6ota88.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpz_6ota88.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpz_6ota88.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(22): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpz_6ota88.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgogs56_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpsgogs56_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpsgogs56_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpsgogs56_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpsgogs56_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpsgogs56_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpsgogs56_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpsgogs56_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 0;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n \
    \   long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long a = 1;\n    long long b = 1;\n    long long c = 1;\n \
    \   long long d = 1;\n    long long e = 1;\n    long long f = 0;\n    long long\
    \ g = 1;\n    long long h = 1;\n    long long i = 1;\n    long long j = 1;\n \
    \   long long k = 1;\n    long long l = 1;\n    long long m = 1;\n    long long\
    \ n = 1;\n    long long o = 1;\n    long long p = 1;\n    long long q = 1;\n \
    \   long long r = 1;\n    long long s = 1;\n    long long t = 1;\n    long long\
    \ u = 1;\n    long long v = 1;\n    long long w = 1;\n    long long x = 1;\n \
    \   long long y = 1;\n    long long z = 1;\n    long long a = 1;\n    long long\
    \ b = 1;\n    long long c = 1;\n    long long d = 1;\n    long long e = 1;\n \
    \   long long f = 0;\n    long long g = 1;\n    long long h = 1;\n    long long\
    \ i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long l = 1;\n \
    \   long long m = 1;\n    long long n = 1;\n    long long o = 1;\n    long long\
    \ p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long s = 1;\n \
    \   long long t = 1;\n    long long u = 1;\n    long long v = 1;\n    long long\
    \ w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long z = 1;\n \
    \   long long a = 1;\n    long long b = 1;\n    long long c = 1;\n    long long\
    \ d = 1;\n    long long e = 1;\n    long long f = 0;\n    long long g = 1;\n \
    \   long long h = 1;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7tf7wzub.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7tf7wzub.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp7tf7wzub.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp7tf7wzub.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7tf7wzub.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7tf7wzub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 5L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 7L;\n    long long int s = 7L;\n\
    \    long long int t = 7L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 7L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E = e;\
    \ \n    long long int F = f; \n    long long int G = g; \n    long long int H\
    \ = h; \n    long long int I = i; \n    long long int J = j; \n    long long int\
    \ K = k; \n    long long int L = l; \n    long long int M = m;\n    long long\
    \ int N = n; \n    long long int O = o; \n    long long int P = p; \n    long\
    \ long int Q = q; \n    long long int R = r;\n    long long int S = s; \n    long\
    \ long int T = t; \n    long long int U = u; \n    long long int V = v; \n   \
    \ long long int W = w; \n    long long int X = x; \n    long long int Y = y; \n\
    \    long long int Z = z;\n    long long int a1 = a; \n    long long int b1 =\
    \ b; \n    long long int c1 = c; \n    long long int d1 = d; \n    long long int\
    \ e1 = e; \n    long long int f1 = f; \n    long long int g1 = g; \n    long long\
    \ int h1 = h; \n    long long int \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgscjkpw3.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgscjkpw3.d(15): Error: no identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpgscjkpw3.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpgscjkpw3.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpgscjkpw3.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpgscjkpw3.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpgscjkpw3.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgscjkpw3.d(22): Error: no identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpgscjkpw3.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgscjkpw3.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpgscjkpw3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 43;\n    long long int m = 51;\n\
    \    long long int n = 59;\n    long long int o = 61;\n    long long int p = 67;\n\
    \    long long int q = 71;\n    long long int r = 73;\n    long long int s = 79;\n\
    \    long long int t = 83;\n    long long int u = 89;\n    long long int v = 97;\n\
    \    long long int w = 103;\n    long long int x = 109;\n    long long int y =\
    \ 113;\n    long long int z = 121;\n    long long int a = 100L;\n    long long\
    \ int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n    long\
    \ long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n   \
    \ long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 43;\n    long long int m = 51;\n\
    \    long long int n = 59;\n    long long int o = 61;\n    long long int p = 67;\n\
    \    long long int q = 71;\n    long long int r = 73;\n    long long int s = 79;\n\
    \    long long int t = 83;\n    long long int u = 89;\n    long long int v = 97;\n\
    \    long long int w = 103;\n    long long int x = 109;\n    long long int y =\
    \ 113;\n    long long int z = 121;\n    long long int a = 100L;\n    long long\
    \ int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n    long\
    \ long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n   \
    \ long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 43;\n    long long int \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpie1pu829.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpie1pu829.d(15): Error: no identifier for declarator `long`\n/tmp/tmpie1pu829.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpie1pu829.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpie1pu829.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpie1pu829.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpie1pu829.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpie1pu829.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpie1pu829.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpie1pu829.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpie1pu829.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpie1pu829.d(22): Error: no identifier for declarator `long`\n/tmp/tmpie1pu829.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpie1pu829.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpie1pu829.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpie1pu829.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    bool result = false;\n    \n    for(long long int\
    \ i = 3; i <= b; ++i)\n    {\n        if(!is_prime(i))\n        {\n          \
    \  if(b % i == 0)\n            {\n                result = true;\n           \
    \     break;\n            }\n        }\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnc1h0r2g.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpnc1h0r2g.d(15): Error: no identifier for declarator `long`\n/tmp/tmpnc1h0r2g.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpnc1h0r2g.d(18):
    Error: no identifier for declarator `long`\n/tmp/tmpnc1h0r2g.d(18): Error: found
    `i` when expecting `.` following int\n/tmp/tmpnc1h0r2g.d(18): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpnc1h0r2g.d(18): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmpnc1h0r2g.d(18): Error:
    expression expected, not `;`\n/tmp/tmpnc1h0r2g.d(18): Error: found `i` when expecting
    `)`\n/tmp/tmpnc1h0r2g.d(18): Error: found `<=` instead of statement\n/tmp/tmpnc1h0r2g.d(18):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpnc1h0r2g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    bool flag = false;\n\
    \    \n    for(int i = 1; i < b; i++)\n    {\n        c = b%i;\n        if(c ==\
    \ 0)\n        {\n            flag = true;\n            break;\n        }\n   \
    \ }\n    return flag;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0zjdw7mx.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0zjdw7mx.d(15): Error: no identifier for declarator `long`\n/tmp/tmp0zjdw7mx.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0zjdw7mx.d(16):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp0zjdw7mx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    bool flag = false;\n \
    \   \n    while(a != 0)\n    {\n        if(b == 3)\n        {\n            flag\
    \ = true;\n            break;\n        }\n        \n        while(b * b <= a)\n\
    \        {\n            if(b * c <= a)\n            {\n                if(b *\
    \ d <= a)\n                {\n                    if(b * d <= a)\n           \
    \         {\n                        flag = true;\n                        break;\n\
    \                    }\n                }\n            }\n            \n     \
    \       if(b * c <= a)\n            {\n                flag = true;\n        \
    \        break;\n            }\n            \n            if(b * d <= a)\n   \
    \         {\n                flag = true;\n                break;\n          \
    \  }\n            \n            if(b * d <= a)\n            {\n              \
    \  flag = true;\n                break;\n            }\n            \n       \
    \     if(b * d <= a)\n            {\n                flag = true;\n          \
    \      break;\n            }\n            \n            if(b * d <= a)\n     \
    \       {\n                flag = true;\n                break;\n            }\n\
    \            \n            if(b * d <= a)\n            {\n                flag\
    \ = true;\n                break;\n            }\n            \n            if(b\
    \ * d <= a)\n            {\n                flag = true;\n                break;\n\
    \            }\n            \n            if(b * d <= a)\n            {\n    \
    \            flag = true;\n                break;\n            }\n           \
    \ \n            if(b * d <= a)\n            {\n                flag = true;\n\
    \                break;\n            }\n            \n            if(b * d <=\
    \ a)\n            {\n                flag = true;\n                break;\n  \
    \          }\n            \n            if(b * d <= a)\n            {\n      \
    \          flag = true;\n                break;\n            }\n            \n\
    \            if(b * d <= a)\n            {\n                flag = true;\n   \
    \             break;\n            }\n            \n            if(b * d <= a)\n\
    \            {\n                flag = true;\n                break;\n       \
    \     }\n            \n            if(b * d <= a)\n            {\n           \
    \     flag = true;\n                break;\n            }\n            \n    \
    \        if(b * d <= a)\n            {\n                flag = true;\n       \
    \         break;\n            }\n            \n            if(b * d <= a)\n  \
    \          {\n                flag = true;\n                break;\n         \
    \   }\n            \n            if(b * d <= a)\n            {\n             \
    \   flag = true;\n                break;\n            }\n            \n      \
    \      if(b * d <= a)\n            {\n                flag = true;\n         \
    \       break;\n            }\n            \n            if(b * d <= a)\n    \
    \        {\n                flag = true;\n                break;\n           \
    \ }\n            \n            if(b * d <= a)\n            {\n               \
    \ flag = true;\n                break;\n            }\n            \n        \
    \    if(b * d <= a)\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuj0oa8q9.d(164): Error: found `unittest` instead of statement\n/tmp/tmpuj0oa8q9.d(179):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpuj0oa8q9.d(179):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj0oa8q9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    bool isMultiplyPrime = true;\n    for(long long\
    \ int i = 3L; i <= a; i += 2L)\n    {\n        if((a % i) == 0)\n        {\n \
    \           isMultiplyPrime = false;\n            break;\n        }\n    }\n \
    \   return isMultiplyPrime;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoqbss86n.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpoqbss86n.d(15): Error: no identifier for declarator `long`\n/tmp/tmpoqbss86n.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpoqbss86n.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpoqbss86n.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmpoqbss86n.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpoqbss86n.d(17): Error: found
    `3L` when expecting `;` following `for` condition\n/tmp/tmpoqbss86n.d(17): Error:
    expression expected, not `;`\n/tmp/tmpoqbss86n.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmpoqbss86n.d(17): Error: found `<=` instead of statement\n/tmp/tmpoqbss86n.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpoqbss86n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    long long int j;\n    long long int k;\n    long long\
    \ int m;\n    long long int n;\n    long long int p;\n    long long int q;\n \
    \   long long int r;\n    long long int s;\n    long long int t;\n    long long\
    \ int u;\n    long long int v;\n    long long int w;\n    long long int x;\n \
    \   long long int y;\n    long long int z;\n    long long int aa;\n    long long\
    \ int bb;\n    long long int cc;\n    long long int dd;\n    long long int ee;\n\
    \    long long int ff;\n    long long int gg;\n    long long int hh;\n    long\
    \ long int ii;\n    long long int jj;\n    long long int kk;\n    long long int\
    \ ll;\n    long long int mm;\n    long long int nn;\n    long long int oo;\n \
    \   long long int pp;\n    long long int qq;\n    long long int rr;\n    long\
    \ long int ss;\n    long long int tt;\n    long long int uu;\n    long long int\
    \ vv;\n    long long int ww;\n    long long int xx;\n    long long int yy;\n \
    \   long long int zz;\n    long long int aaa;\n    long long int bbb;\n    long\
    \ long int ccc;\n    long long int ddd;\n    long long int eee;\n    long long\
    \ int fff;\n    long long int ggg;\n    long long int hhh;\n    long long int\
    \ iii;\n    long long int jjj;\n    long long int kkk;\n    long long int lll;\n\
    \    long long int mmm;\n    long long int nnn;\n    long long int ooo;\n    long\
    \ long int ppp;\n    long long int qqq;\n    long long int rqq;\n    long long\
    \ int sss;\n    long long int ttt;\n    long long int uuu;\n    long long int\
    \ vvv;\n    long long int www;\n    long long int xxx;\n    long long int yyy;\n\
    \    long long int zzz;\n    long long int aaa2;\n    long long int bbb2;\n  \
    \  long long int ccc2;\n    long long int ddd2;\n    long long int eee2;\n   \
    \ \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppwf537ul.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmppwf537ul.d(15): Error: no identifier for declarator `long`\n/tmp/tmppwf537ul.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmppwf537ul.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmppwf537ul.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmppwf537ul.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmppwf537ul.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmppwf537ul.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmppwf537ul.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmppwf537ul.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmppwf537ul.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmppwf537ul.d(22): Error: no identifier for declarator `long`\n/tmp/tmppwf537ul.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmppwf537ul.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmppwf537ul.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmppwf537ul.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3LL;\n    long long int c = 3LL;\n    long long int d =\
    \ 5LL;\n    long long int e = 3LL;\n    long long int f = 3LL;\n    long long\
    \ int g = 3LL;\n    long long int h = 3LL;\n    long long int i = 5LL;\n    long\
    \ long int j = 3LL;\n    long long int k = 3LL;\n    long long int l = 3LL;\n\
    \    long long int m = 5LL;\n    long long int n = 3LL;\n    long long int o =\
    \ 3LL;\n    long long int p = 5LL;\n    long long int q = 3LL;\n    long long\
    \ int r = 5LL;\n    long long int s = 3LL;\n    long long int t = 5LL;\n    long\
    \ long int u = 3LL;\n    long long int v = 3LL;\n    long long int w = 3LL;\n\
    \    long long int x = 3LL;\n    long long int y = 3LL;\n    long long int z =\
    \ 3LL;\n    long long int aa = 3LL;\n    long long int bb = 3LL;\n    long long\
    \ int cc = 3LL;\n    long long int dd = 3LL;\n    long long int ee = 3LL;\n  \
    \  long long int ff = 3LL;\n    long long int gg = 3LL;\n    long long int hh\
    \ = 3LL;\n    long long int ii = 3LL;\n    long long int jj = 3LL;\n    long long\
    \ int kk = 3LL;\n    long long int ll = 3LL;\n    long long int mm = 3LL;\n  \
    \  long long int nn = 3LL;\n    long long int oo = 3LL;\n    long long int pp\
    \ = 3LL;\n    long long int qq = 3LL;\n    long long int rr = 3LL;\n    long long\
    \ int ss = 0LL;\n    long long int tt = 3LL;\n    long long int uu = 3LL;\n  \
    \  long long int vv = 3LL;\n    long long int ww = 3LL;\n    long long int xx\
    \ = 3LL;\n    long long int yy = 3LL;\n    long long int zz = 3LL;\n    long long\
    \ int aaa = 3LL;\n    long long int bbb = 3LL;\n    long long int ccc = 3LL;\n\
    \    long long int ddd = 3LL;\n    long long int eee = 3LL;\n    long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz3ac6vj0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz3ac6vj0.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz3ac6vj0.d(15):
    Error: unrecognized token\n/tmp/tmpz3ac6vj0.d(16): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpz3ac6vj0.d(16): Error: no identifier
    for declarator `long`\n/tmp/tmpz3ac6vj0.d(16): Error: unrecognized token\n/tmp/tmpz3ac6vj0.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz3ac6vj0.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpz3ac6vj0.d(17): Error: unrecognized
    token\n/tmp/tmpz3ac6vj0.d(18): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz3ac6vj0.d(18): Error: no identifier for declarator `long`\n/tmp/tmpz3ac6vj0.d(18):
    Error: unrecognized token\n/tmp/tmpz3ac6vj0.d(19): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpz3ac6vj0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz3ac6vj0.d(19): Error: unrecognized token\n/tmp/tmpz3ac6vj0.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz3ac6vj0.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmpz3ac6vj0.d(20): Error: unrecognized
    token\n/tmp/tmpz3ac6vj0.d(21): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz3ac6vj0.d(21): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3ac6vj0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 3L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 3L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 3L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 3L;\n\
    \    long long int q = 3L;\n    long long int r = 3L;\n    long long int s = 3L;\n\
    \    long long int t = 3L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int A = 3L;\n    long long int B = 3L;\n\
    \    long long int C = 3L;\n    long long int D = 3L;\n    long long int E = 3L;\n\
    \    long long int F = 3L;\n    long long int G = 3L;\n    long long int H = 3L;\n\
    \    long long int I = 3L;\n    long long int J = 3L;\n    long long int K = 3L;\n\
    \    long long int L = 3L;\n    long long int M = 3L;\n    long long int N = 3L;\n\
    \    long long int O = 3L;\n    long long int P = 3L;\n    long long int Q = 3L;\n\
    \    long long int R = 3L;\n    long long int S = 3L;\n    long long int T = 3L;\n\
    \    long long int U = 3L;\n    long long int V = 3L;\n    long long int W = 3L;\n\
    \    long long int X = 3L;\n    long long int Y = 3L;\n    long long int Z = 3L;\n\
    \    long long int A = 3L;\n    long long int B = 3L;\n    long long int C = 3L;\n\
    \    long long int D = 3L;\n    long long int E = 3L;\n    long long int F = 3\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9lh7v4da.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9lh7v4da.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9lh7v4da.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9lh7v4da.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9lh7v4da.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9lh7v4da.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9lh7v4da.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9lh7v4da.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9lh7v4da.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    long long A = 2;\n    long long B = 2;\n    long long C = 2;\n \
    \   long long D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long\
    \ G = 2;\n    long long H = 2;\n    long long I = 2;\n    long long J = 2;\n \
    \   long long K = 2;\n    long long L = 2;\n    long long M = 2;\n    long long\
    \ N = 2;\n    long long O = 2;\n    long long P = 2;\n    long long Q = 2;\n \
    \   long long R = 2;\n    long long S = 2;\n    long long T = 2;\n    long long\
    \ U = 2;\n    long long V = 2;\n    long long W = 2;\n    long long X = 2;\n \
    \   long long Y = 2;\n    long long Z = 2;\n    long long A = 2;\n    long long\
    \ B = 2;\n    long long C = 2;\n    long long D = 2;\n    long long E = 2;\n \
    \   long long F = 2;\n    long long G = 2;\n    long long H = 2;\n    long long\
    \ I = 2;\n    long long J = 2;\n    long long K = 2;\n    long long L = 2;\n \
    \   long long M = 2;\n    long long N = 2;\n    long long O = 2;\n    long long\
    \ P = 2;\n    long long Q = 2;\n    long long R = 2;\n    long long S = 2;\n \
    \   long long T = 2;\n    long long U = 2;\n    long long V = 2;\n    long long\
    \ W = 2;\n    long long X = 2;\n    long long Y = 2;\n    long long Z = 2;\n \
    \   long long A = 2;\n    long long B = 2;\n    long long C = 2;\n    long long\
    \ D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long G = 2;\n \
    \   long long H = 2;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxjvhs4p7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpxjvhs4p7.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpxjvhs4p7.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxjvhs4p7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m;\n    long long int\
    \ N = n; \n    long long int O = o; \n    long long int P = p; \n    long long\
    \ int Q = q; \n    long long int R = r;\n    long long int S = s; \n    long long\
    \ int T = t; \n    long long int U = u; \n    long long int V = v; \n    long\
    \ long int W = w; \n    long long int X = x; \n    long long int Y = y; \n   \
    \ long long int Z = z;\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n \
    \   assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8ftxd2xc.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8ftxd2xc.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp8ftxd2xc.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp8ftxd2xc.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp8ftxd2xc.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp8ftxd2xc.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8ftxd2xc.d(22): Error: no identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp8ftxd2xc.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8ftxd2xc.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp8ftxd2xc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 7L;\n\
    \    long long int n = 7L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 7L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 7L;\n    long long int x = 7L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m;\n    long long int\
    \ N = n;\n    long long int O = o;\n    long long int P = p;\n    long long int\
    \ Q = q;\n    long long int R = r;\n    long long int S = s;\n    long long int\
    \ T = t;\n    long long int U = u;\n    long long int V = v;\n    long long int\
    \ W = w;\n    long long int X = x;\n    long long int Y = y;\n    long long int\
    \ Z = z;\n    long long int A = a;\n    long long int B = b;\n    long long int\
    \ C = c; \n    long long int D = d; \n    long long int E; \n    long long int\
    \ F = f; \n    long long int G = g; \n    long long int H = h; \n    long long\
    \ int I = i; \n    long long int J = j; \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5z0_3vv7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5z0_3vv7.d(15): Error: no identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp5z0_3vv7.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp5z0_3vv7.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp5z0_3vv7.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp5z0_3vv7.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5z0_3vv7.d(22): Error: no identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp5z0_3vv7.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5z0_3vv7.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5z0_3vv7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 5L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F; \n    long long int G; \n    long long int H; \n    long\
    \ long int I; \n    long long int J; \n    long long int K; \n    long long int\
    \ L; \n    long long int M; \n    long long int N; \n    long long int O; \n \
    \   long long int P; \n    long long int Q; \n    long long int R; \n    long\
    \ long int S; \n    long long int T; \n    long long int U; \n    long long int\
    \ V; \n    long long int W; \n    long long int X; \n    long long int Y; \n \
    \   long long int Z; \n    long long int AA; \n    long long int AB; \n    long\
    \ long int AC; \n    long long int AD; \n    long long int AE; \n    long long\
    \ int AF; \n    long long int AG; \n    long long int AH; \n    long long int\
    \ AI; \n    long long int AJ; \n    long long int AK; \n    long long int AL;\
    \ \n    long long int AM; \n    long long int AN; \n    \nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplb1ow8wo.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmplb1ow8wo.d(15): Error: no identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmplb1ow8wo.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmplb1ow8wo.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmplb1ow8wo.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmplb1ow8wo.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmplb1ow8wo.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmplb1ow8wo.d(22): Error: no identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmplb1ow8wo.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmplb1ow8wo.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmplb1ow8wo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 5L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 5L;\n    long long int a = 5L;\n    long long int b = 5L;\n\
    \    long long int c = 5L;\n    long long int d = 5L;\n    long long int e = 5L;\n\
    \    long long int f = 5L;\n    long long int g = 5L;\n    long long int h = 5L;\n\
    \    long long int i = 5L;\n    long long int j = 5L;\n    long long int k = 5L;\n\
    \    long long int l = 5L;\n    long long int m = 5L;\n    long long int n = 5L;\n\
    \    long long int o = 5L;\n    long long int p = 5L;\n    long long int q = 5L;\n\
    \    long long int r = 5L;\n    long long int s = 5L;\n    long long int t = 5L;\n\
    \    long long int u = 5L;\n    long long int v = 5L;\n    long long int w = 5L;\n\
    \    long long int x = 5L;\n    long long int y = 5L;\n    long long int z = 5L;\n\
    \    long long int a = 5L;\n    long long int b = 5L;\n    long long int c = 5L;\n\
    \    long long int d = 5L;\n    long long int e = 5L;\n    long long int f = 5\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_df6t7bv.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_df6t7bv.d(15): Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp_df6t7bv.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp_df6t7bv.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp_df6t7bv.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_df6t7bv.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp_df6t7bv.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_df6t7bv.d(22): Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp_df6t7bv.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_df6t7bv.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_df6t7bv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1sky61ta.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp1sky61ta.d(15): Error: no identifier for declarator `long`\n/tmp/tmp1sky61ta.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp1sky61ta.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp1sky61ta.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp1sky61ta.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp1sky61ta.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp1sky61ta.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp1sky61ta.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp1sky61ta.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp1sky61ta.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp1sky61ta.d(22): Error: no identifier for declarator `long`\n/tmp/tmp1sky61ta.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp1sky61ta.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1sky61ta.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1sky61ta.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    bool result = false;\n    for(long long int i =\
    \ 2; i <= b; ++i)\n    {\n        if(b % i == 0)\n        {\n            result\
    \ = true;\n            break;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppepujyfy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmppepujyfy.d(15): Error: no identifier for declarator `long`\n/tmp/tmppepujyfy.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppepujyfy.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmppepujyfy.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmppepujyfy.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmppepujyfy.d(17): Error: found
    `2` when expecting `;` following `for` condition\n/tmp/tmppepujyfy.d(17): Error:
    expression expected, not `;`\n/tmp/tmppepujyfy.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmppepujyfy.d(17): Error: found `<=` instead of statement\n/tmp/tmppepujyfy.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmppepujyfy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 31;\n\
    \    long long int k = 29;\n    long long int l = 31;\n    long long int m = 51;\n\
    \    long long int n = 59;\n    long long int o = 71;\n    long long int p = 71;\n\
    \    long long int q = 71;\n    long long int r = 71;\n    long long int s = 71;\n\
    \    long long int t = 71;\n    long long int u = 71;\n    long long int v = 71;\n\
    \    long long int w = 71;\n    long long int x = 71;\n    long long int y = 71;\n\
    \    long long int z = 7;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F; \n    long long int G; \n    long long int H; \n    long\
    \ long int I; \n    long long int J; \n    long long int K; \n    long long int\
    \ L; \n    long long int M; \n    long long int N; \n    long long int O; \n \
    \   long long int P; \n    long long int Q; \n    long long int R; \n    long\
    \ long int S; \n    long long int T; \n    long long int U; \n    long long int\
    \ V; \n    long long int W; \n    long long int X; \n    long long int Y; \n \
    \   long long int Z; \n    long long int A = a;\n    long long int B = b;\n  \
    \  long long int C = c; \n    long long int D = d; \n    long long int E; \n \
    \   long long int F; \n    long long int G; \n    long long int H; \n    long\
    \ long int I; \n    long long int J; \n    long long int K; \n    long long int\
    \ L; \n    long long int M; \n    long long int N; \n    long long int O; \n \
    \   long long int P; \n    long long int Q; \n    long \nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ab_gdc0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7ab_gdc0.d(15): Error: no identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp7ab_gdc0.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp7ab_gdc0.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp7ab_gdc0.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp7ab_gdc0.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7ab_gdc0.d(22): Error: no identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp7ab_gdc0.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7ab_gdc0.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7ab_gdc0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = 1;\n    long long int b = 1;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 0;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpihkjx47h.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpihkjx47h.d(15): Error: no identifier for declarator `long`\n/tmp/tmpihkjx47h.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpihkjx47h.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpihkjx47h.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpihkjx47h.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpihkjx47h.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpihkjx47h.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpihkjx47h.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpihkjx47h.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpihkjx47h.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpihkjx47h.d(22): Error: no identifier for declarator `long`\n/tmp/tmpihkjx47h.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpihkjx47h.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpihkjx47h.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpihkjx47h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    long long int j;\n    long long int k;\n    long long\
    \ int l;\n    long long int m;\n    long long int n;\n    long long int p;\n \
    \   long long int q;\n    long long int r;\n    long long int s;\n    long long\
    \ int t;\n    long long int u;\n    long long int v;\n    long long int w;\n \
    \   long long int x;\n    long long int y;\n    long long int z;\n    long long\
    \ int aa;\n    long long int bb;\n    long long int cc;\n    long long int dd;\n\
    \    long long int ee;\n    long long int ff;\n    long long int gg;\n    long\
    \ long int hh;\n    long long int ii;\n    long long int jj;\n    long long int\
    \ kk;\n    long long int ll;\n    long long int mm;\n    long long int nn;\n \
    \   long long int oo;\n    long long int pp;\n    long long int qq;\n    long\
    \ long int rr;\n    long long int ss;\n    long long int tt;\n    long long int\
    \ uu;\n    long long int vv;\n    long long int ww;\n    long long int xx;\n \
    \   long long int yy;\n    long long int zz;\n    long long int aaa;\n    long\
    \ long int bbb;\n    long long int ccc;\n    long long int ddd;\n    long long\
    \ int eee;\n    long long int fff;\n    long long int ggg;\n    long long int\
    \ hhh;\n    long long int iii;\n    long long int jjj;\n    long long int kkk;\n\
    \    long long int lll;\n    long long int mmm;\n    long long int nnn;\n    long\
    \ long int ooo;\n    long long int ppp;\n    long long int qqq;\n    long long\
    \ int rqq;\n    long long int sss;\n    long long int ttt;\n    long long int\
    \ uuu;\n    long long int vvv;\n    long long int www;\n    long long int xxx;\n\
    \    long long int yyy;\n    long long int zzz;\n    long long int aaa2;\n   \
    \ long long int bbb2;\n    long long int ccc2;\n    long long int ddd2;\n    long\
    \ long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv47wcfk4.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpv47wcfk4.d(15): Error: no identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpv47wcfk4.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpv47wcfk4.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpv47wcfk4.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpv47wcfk4.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpv47wcfk4.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpv47wcfk4.d(22): Error: no identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpv47wcfk4.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpv47wcfk4.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpv47wcfk4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 3L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 3L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 3L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 3L;\n\
    \    long long int q = 3L;\n    long long int r = 3L;\n    long long int s = 3L;\n\
    \    long long int t = 3L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int A = 3L;\n    long long int B = 3L;\n\
    \    long long int C = 3L;\n    long long int D = 3L;\n    long long int E = 3L;\n\
    \    long long int F = 3L;\n    long long int G = 3L;\n    long long int H = 3L;\n\
    \    long long int I = 3L;\n    long long int J = 3L;\n    long long int K = 3L;\n\
    \    long long int L = 3L;\n    long long int M = 3L;\n    long long int N = 3L;\n\
    \    long long int O = 3L;\n    long long int P = 3L;\n    long long int Q = 3L;\n\
    \    long long int R = 3L;\n    long long int S = 3L;\n    long long int T = 3L;\n\
    \    long long int U = 3L;\n    long long int V = 3L;\n    long long int W = 3L;\n\
    \    long long int X = 3L;\n    long long int Y = 3L;\n    long long int Z = 3L;\n\
    \    long long int A = 3L;\n    long long int B = 3L;\n    long long int C = 3L;\n\
    \    long long int D = 3L;\n    long long int E = 3L;\n    long long int F = 3\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9lh7v4da.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9lh7v4da.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9lh7v4da.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9lh7v4da.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9lh7v4da.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9lh7v4da.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9lh7v4da.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9lh7v4da.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9lh7v4da.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9lh7v4da.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9lh7v4da.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 5L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 5L;\n    long long int a = 5L;\n    long long int b = 5L;\n\
    \    long long int c = 5L;\n    long long int d = 5L;\n    long long int e = 5L;\n\
    \    long long int f = 5L;\n    long long int g = 5L;\n    long long int h = 5L;\n\
    \    long long int i = 5L;\n    long long int j = 5L;\n    long long int k = 5L;\n\
    \    long long int l = 5L;\n    long long int m = 5L;\n    long long int n = 5L;\n\
    \    long long int o = 5L;\n    long long int p = 5L;\n    long long int q = 5L;\n\
    \    long long int r = 5L;\n    long long int s = 5L;\n    long long int t = 5L;\n\
    \    long long int u = 5L;\n    long long int v = 5L;\n    long long int w = 5L;\n\
    \    long long int x = 5L;\n    long long int y = 5L;\n    long long int z = 5L;\n\
    \    long long int a = 5L;\n    long long int b = 5L;\n    long long int c = 5L;\n\
    \    long long int d = 5L;\n    long long int e = 5L;\n    long long int f = 5\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu9l957dw.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpu9l957dw.d(15): Error: no identifier for declarator `long`\n/tmp/tmpu9l957dw.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpu9l957dw.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpu9l957dw.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpu9l957dw.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpu9l957dw.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpu9l957dw.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpu9l957dw.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpu9l957dw.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpu9l957dw.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpu9l957dw.d(22): Error: no identifier for declarator `long`\n/tmp/tmpu9l957dw.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpu9l957dw.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu9l957dw.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpu9l957dw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    bool flag = false;\n\
    \    while(b < a)\n    {\n        c = b + c;\n        if(c < a)\n        {\n \
    \           flag = true;\n            break;\n        }\n        b++;\n    }\n\
    \    return flag;\n}\n</code>\n<|/ a tags=c++,primes |>\n<| c |>\nThis code doesn't\
    \ work. `is_multiply_prime(30L)` returns `true` when it should be `false`\n<|/\
    \ c |>\n<| c |>\nI didn't test it but I think it works. I tested it on `is_multiply_prime(30L)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt doesn't work for `is_multiply_prime(30L)`\
    \ returns `true`\n<|/ c |>\n<| c |>\nI tested it on `is_multiply_prime(30L)` returns\
    \ `false`\n<|/ c |>\n<| c |>\nI tested it on `is_multiply_prime(30L)` returns\
    \ `false`\n<|/ c |>\n<| a tags=c++,primes |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqopgqero.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqopgqero.d(15): Error: no identifier for declarator `long`\n/tmp/tmpqopgqero.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqopgqero.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpqopgqero.d(30): Error: declaration
    expected, not `<`\n/tmp/tmpqopgqero.d(33): Error: unterminated character constant\n/tmp/tmpqopgqero.d(36):
    Error: unterminated character constant\n/tmp/tmpqopgqero.d(39): Error: unterminated
    character constant\n/tmp/tmpqopgqero.d(53): Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(54):
    Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(55): Error: declaration
    expected, not `assert`\n/tmp/tmpqopgqero.d(56): Error: declaration expected, not
    `assert`\n/tmp/tmpqopgqero.d(57): Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(58):
    Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(59): Error: declaration
    expected, not `assert`\n/tmp/tmpqopgqero.d(60): Error: declaration expected, not
    `assert`\n/tmp/tmpqopgqero.d(61): Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(62):
    Error: declaration expected, not `assert`\n/tmp/tmpqopgqero.d(63): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqopgqero.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 7L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 7L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int ab =\
    \ 5L;\n    long long int ac = 3L;\n    long long int ad = 5L;\n    long long int\
    \ ae = 3L;\n    long long int af = 5L;\n    long long int ag = 7L;\n    long long\
    \ int ah = 3L;\n    long long int ai = 5L;\n    long long int aj = 3L;\n    long\
    \ long int ak = 3L;\n    long long int al = 5L;\n    long long int am = 5L;\n\
    \    long long int an = 5L;\n    long long int ao = 3L;\n    long long int ap\
    \ = 5L;\n    long long int aq = 3L;\n    long long int ar = 5L;\n    long long\
    \ int as = 5L;\n    long long int at = 7L;\n    long long int au = 3L;\n    long\
    \ long int av = 5L;\n    long long int aw = 5L;\n    long long int ax = 7L;\n\
    \    long long int ay = 5L;\n    long long int az = 3L;\n    long long int ba\
    \ = 3L;\n    long long int bb = 5L;\n    long long int bc = 3L;\n    long long\
    \ int bd = 5L;\n    long long int be = 3L;\n    long long int \nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3qbej5pa.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3qbej5pa.d(15): Error: no identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp3qbej5pa.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp3qbej5pa.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp3qbej5pa.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp3qbej5pa.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp3qbej5pa.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3qbej5pa.d(22): Error: no identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp3qbej5pa.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3qbej5pa.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp3qbej5pa.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool result = false;\n    \n    while(c\
    \ < a)\n    {\n        if(a%b == 0)\n        {\n            result = true;\n \
    \           break;\n        }\n        \n        c += b;\n        b++;\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpitbrcggp.d(40): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e25]\n??:? void tmpitbrcggp.__unittest_L33_C1() [0x427ad5]\n??:?
    void tmpitbrcggp.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428274]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281fb]\n??:? _d_run_main [0x428166]\n??:? main [0x427bb7]\n??:?
    __libc_start_main [0x2707a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a / 2;\n    long c = a % 2;\n    bool isPrime = true;\n    \n  \
    \  for(long i = 3; i <= b; i += 2)\n    {\n        if((a % i) == 0)\n        {\n\
    \            isPrime = false;\n            break;\n        }\n    }\n    \n  \
    \  if(isPrime)\n    {\n        for(long i = 3; i <= c; i += 2)\n        {\n  \
    \          if((a % i) == 0)\n            {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n    }\n    \n    return isPrime;\n\
    }\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplf3gllv1.d(46): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e6d]\n??:? void tmplf3gllv1.__unittest_L42_C1() [0x427ac2]\n??:?
    void tmplf3gllv1.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa26]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9fd]\n??:? runModuleUnitTests [0x42b969]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428243]\n??:? _d_run_main [0x4281ae]\n??:? main [0x427c03]\n??:?
    __libc_start_main [0x2dadf554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    long long A = 2;\n    long long B = 2;\n    long long C = 2;\n \
    \   long long D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long\
    \ G = 2;\n    long long H = 2;\n    long long I = 2;\n    long long J = 2;\n \
    \   long long K = 2;\n    long long L = 2;\n    long long M = 2;\n    long long\
    \ N = 2;\n    long long O = 2;\n    long long P = 2;\n    long long Q = 2;\n \
    \   long long R = 2;\n    long long S = 2;\n    long long T = 2;\n    long long\
    \ U = 2;\n    long long V = 2;\n    long long W = 2;\n    long long X = 2;\n \
    \   long long Y = 2;\n    long long Z = 2;\n    long long A = 2;\n    long long\
    \ B = 2;\n    long long C = 2;\n    long long D = 2;\n    long long E = 2;\n \
    \   long long F = 2;\n    long long G = 2;\n    long long H = 2;\n    long long\
    \ I = 2;\n    long long J = 2;\n    long long K = 2;\n    long long L = 2;\n \
    \   long long M = 2;\n    long long N = 2;\n    long long O = 2;\n    long long\
    \ P = 2;\n    long long Q = 2;\n    long long R = 2;\n    long long S = 2;\n \
    \   long long T = 2;\n    long long U = 2;\n    long long V = 2;\n    long long\
    \ W = 2;\n    long long X = 2;\n    long long Y = 2;\n    long long Z = 2;\n \
    \   long long A = 2;\n    long long B = 2;\n    long long C = 2;\n    long long\
    \ D = 2;\n    long long E = 2;\n    long long F = 2;\n    long long G = 2;\n \
    \   long long H = 2;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxjvhs4p7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpxjvhs4p7.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpxjvhs4p7.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxjvhs4p7.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxjvhs4p7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgogs56_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpsgogs56_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpsgogs56_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpsgogs56_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpsgogs56_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpsgogs56_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpsgogs56_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpsgogs56_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    bool result = false;\n    \n \
    \   while(a > 0)\n    {\n        long temp = a;\n        a = a / 10;\n       \
    \ temp = temp * 10;\n        \n        long temp2 = b;\n        b = b / 10;\n\
    \        temp = temp * 10;\n        \n        long temp3 = c;\n        c = c /\
    \ 10;\n        temp = temp * 10;\n        \n        long temp4 = d;\n        d\
    \ = d / 10;\n        temp = temp * 10;\n        \n        long temp5 = e;\n  \
    \      e = e / 10;\n        temp = temp * 10;\n        \n        long temp6 =\
    \ f;\n        f = f / 10;\n        temp = temp * 10;\n        \n        long temp7\
    \ = g;\n        g = g / 10;\n        temp = temp * 10;\n        \n        long\
    \ temp8 = h;\n        h = h / 10;\n        temp = temp * 10;\n        \n     \
    \   long temp9 = i;\n        i = i / 10;\n        temp = temp * 10;\n        \n\
    \        long temp10 = j;\n        j = j / 10;\n        temp = temp * 10;\n  \
    \      \n        long temp11 = k;\n        k = k / 10;\n        temp = temp *\
    \ 10;\n        \n        long temp12 = l;\n        l = l / 10;\n        temp =\
    \ temp * 10;\n        \n        long temp13 = m;\n        m = m / 10;\n      \
    \  temp = temp * 10;\n        \n        long temp14 = n;\n        n = n / 10;\n\
    \        temp = temp * 10;\n        \n        long temp15 = o;\n        o = o\
    \ / 10;\n        temp = temp * 10;\n        \n        long temp16 = p;\n     \
    \   p = p / 10;\n        temp = temp * 10;\n        \n        long temp17 = q;\n\
    \        q = q / 10;\n        temp = temp * 10;\n        \n        long temp18\
    \ = r;\n        r = r / 10;\n        temp = temp * 10;\n        \n        long\
    \ temp19 = s;\n        s = s / 10;\n        \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz9htlw_i.d(119): Error: found `unittest` instead of statement\n/tmp/tmpz9htlw_i.d(134):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz9htlw_i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool flag = false;\n    \n    for(long\
    \ long int i = 3; i <= a; i++){\n        long long int temp = i * i;\n       \
    \ if(temp > a){\n            flag = true;\n            break;\n        }\n   \
    \     else if(temp == a){\n            flag = true;\n            break;\n    \
    \    }\n        else if(temp % 2 == 0){\n            flag = false;\n         \
    \   break;\n        }\n        else if(temp % 3 == 0){\n            flag = false;\n\
    \            break;\n        }\n        else if(temp % 5 == 0){\n            flag\
    \ = false;\n            break;\n        }\n        else if(temp % 7 == 0){\n \
    \           flag = false;\n            break;\n        }\n        else if(temp\
    \ % d == 0){\n            flag = false;\n            break;\n        }\n     \
    \   else if(temp % c == 0){\n            flag = false;\n            break;\n \
    \       }\n        else if(temp % b == 0){\n            flag = false;\n      \
    \      break;\n        }\n        else if(temp % a == 0){\n            flag =\
    \ false;\n            break;\n        }\n        else if(temp % i == 0){\n   \
    \         flag = false;\n            break;\n        }\n        else if(temp %\
    \ d == 0){\n            flag = false;\n            break;\n        }\n       \
    \ else if(temp % c == 0){\n            flag = false;\n            break;\n   \
    \     }\n        else if(temp % b == 0){\n            flag = false;\n        \
    \    break;\n        }\n        else if(temp % a == 0){\n            flag = false;\n\
    \            break;\n        }\n        else if(temp % i == 0){\n            flag\
    \ = false;\n            break;\n        }\n        else if(temp % d == 0){\n \
    \           flag = false;\n            break;\n        }\n        else if(temp\
    \ % c == 0){\n            flag = false;\n            break;\n        }\n     \
    \   else if(temp % b == 0){\n            flag = false;\n            break;\n \
    \       }\n        else if(temp % a == 0){\n            flag = false;\n      \
    \      break;\n        }\n        else if(temp % i == 0){\n            flag =\
    \ false;\n            break;\n        }\n        else if(temp % d == 0){\n   \
    \         flag = false;\n            break;\n        }\n        else if(temp %\
    \ c == 0){\n            flag = false;\n            break;\n        }\n       \
    \ else if(temp % b == 0){\n            flag = false;\n            break;\n   \
    \     }\n        else if(temp % a == 0){\n            flag = false;\n        \
    \    break;\n        }\n        else if(temp % i == 0){\n            flag = false;\n\
    \            break;\n        }\n        else if(temp % d == 0){\n            flag\
    \ = false;\n            break;\n        }\n        else if(temp % c == 0){\n \
    \           flag = false;\n            break;\n        }\n        else if(temp\
    \ % b == 0){\n            flag = false;\n            break;\n        }\n     \
    \   else if(temp\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n  \
    \  assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9rdo4qrg.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9rdo4qrg.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9rdo4qrg.d(18):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9rdo4qrg.d(18):
    Error: no identifier for declarator `long`\n/tmp/tmp9rdo4qrg.d(18): Error: found
    `i` when expecting `.` following int\n/tmp/tmp9rdo4qrg.d(18): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmp9rdo4qrg.d(18): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmp9rdo4qrg.d(18): Error:
    expression expected, not `;`\n/tmp/tmp9rdo4qrg.d(18): Error: found `i` when expecting
    `)`\n/tmp/tmp9rdo4qrg.d(18): Error: found `<=` instead of statement\n/tmp/tmp9rdo4qrg.d(18):
    Error: found `)` when expecting `;` following statement\n/tmp/tmp9rdo4qrg.d(19):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9rdo4qrg.d(19):
    Error: no identifier for declarator `long`\n/tmp/tmp9rdo4qrg.d(137): Error: found
    `unittest` when expecting `)`\n/tmp/tmp9rdo4qrg.d(152): Error: found `End of File`
    when expecting `}` following compound statement\n/tmp/tmp9rdo4qrg.d(152): Error:
    found `End of File` when expecting `}` following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp9rdo4qrg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n    long\
    \ o = 2;\n    long p = 3;\n    long q = 3;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaox33tzi.d(114): Error: expression expected, not `unittest`\n/tmp/tmpaox33tzi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmpaox33tzi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpaox33tzi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    bool flag = false;\n\
    \    \n    while (b <= a)\n    {\n        c = b + c;\n        if (is_prime(c))\n\
    \        {\n            flag = true;\n            break;\n        }\n        b++;\n\
    \    }\n    return flag;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzi94hvi7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpzi94hvi7.d(15): Error: no identifier for declarator `long`\n/tmp/tmpzi94hvi7.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpzi94hvi7.d(16):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpzi94hvi7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    bool flag = false;\n    \n    while (b < 100) {\n\
    \        if (b == c && b == d && b == e) {\n            flag = true;\n       \
    \     break;\n        }\n        if (b > c && b > d && b > e) {\n            flag\
    \ = false;\n            break;\n        }\n        \n        if (b == c || b ==\
    \ d || b == e) {\n            flag = true;\n            break;\n        }\n  \
    \      \n        if (b > c && b > d && b > e) {\n            flag = false;\n \
    \           break;\n        }\n        \n        if (b == c || b == d || b ==\
    \ e) {\n            flag = true;\n            break;\n        }\n        \n  \
    \      if (b > c && b > d && b > e) {\n            flag = false;\n           \
    \ break;\n        }\n        \n        if (b == c || b == d || b == e) {\n   \
    \         flag = true;\n            break;\n        }\n        \n        if (b\
    \ > c && b > d && b > e) {\n            flag = false;\n            break;\n  \
    \      }\n        \n        if (b == c || b == d || b == e) {\n            flag\
    \ = true;\n            break;\n        }\n        \n        if (b > c && b > d\
    \ && b > e) {\n            flag = false;\n            break;\n        }\n    \
    \    \n        if (b == c || b == d || b == e) {\n            flag = true;\n \
    \           break;\n        }\n        \n        if (b > c && b > d && b > e)\
    \ {\n            flag = false;\n            break;\n        }\n        \n    \
    \    if (b == c || b == d || b == e) {\n            flag = true;\n           \
    \ break;\n        }\n        \n        if (b > c && b > d && b > e) {\n      \
    \      flag = false;\n            break;\n        }\n        \n        if (b ==\
    \ c || b == d || b == e) {\n            flag = true;\n            break;\n   \
    \     }\n        \n        if (b > c && b > d && b > e) {\n            flag =\
    \ false;\n            break;\n        }\n        \n        if (b == c || b ==\
    \ d || b == e) {\n            flag = true;\n            break;\n        }\n  \
    \      \n        if (b > c && b > d && b > e) {\n            flag = false;\n \
    \           break;\n        }\n        \n        if (b == c || b == d || b ==\
    \ e) {\n            flag = true;\n            break;\n        }\n        \n  \
    \      if (b > c && b > d && b > e) {\n            flag = false;\n           \
    \ break;\n        }\n        \n        if (b == c || b == d || b == e) {\n   \
    \         flag = true;\n            break;\n        }\n\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7zafcg6h.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7zafcg6h.d(15): Error: no identifier for declarator `long`\n/tmp/tmp7zafcg6h.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7zafcg6h.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp7zafcg6h.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7zafcg6h.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp7zafcg6h.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp7zafcg6h.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp7zafcg6h.d(126): Error: found `unittest`
    instead of statement\n/tmp/tmp7zafcg6h.d(141): Error: found `End of File` when
    expecting `}` following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp7zafcg6h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n\
    \    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long\
    \ G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n\
    \    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long\
    \ P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n\
    \    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long\
    \ Y = 0;\n    long Z = 0;\n    long A2 = 0;\n    long B2 = 0;\n    long C2 = 0;\n\
    \    long D2 = 0;\n    long E2 = 0;\n    long F2 = 0;\n    long G2 = 0;\n    long\
    \ H2 = 0;\n    long I2 = 0;\n    long J2 = 0;\n    long K2 = 0;\n    long L2 =\
    \ 0;\n    long M2 = 0;\n    long N2 = 0;\n    long O2 = 0;\n    long P2 = 0;\n\
    \    long Q2 = 0;\n    long R2 = 0;\n    long S2 = 0;\n    long T2 = 0;\n    long\
    \ U2 = 0;\n    long V2 = 0;\n    long W2 = 0;\n    long X2 = 0;\n    long Y2 =\
    \ 0;\n    long Z2 = 0;\n    long A3 = 0;\n    long B3 = 0;\n    long C3 = 0;\n\
    \    long D3 = 0;\n    long E3 = 0;\n    long F3 = 0;\n    long G3 = 0;\n    long\
    \ H3 = 0;\n    long I3 = 0;\n    long J3 = 0;\n    long K3 = 0;\n    long L3 =\
    \ 0;\n    long M3 = 0;\n    long N3 = 0;\n    long O3 = 0;\n    long P3 = 0;\n\
    \    long Q3 = 0;\n    long R3 = 0;\n    long S3 = 0;\n    long T3 = 0;\n    long\
    \ U3 = 0;\n    long V3 = 0;\n    long W3 = 0;\n    long X3 = 0;\n    long Y3 =\
    \ 0;\n    long Z\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n  \
    \  assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpom8j_add.d(118): Error: semicolon expected, not `unittest`\n/tmp/tmpom8j_add.d(118):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpom8j_add.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 5L;\n    long long int p = 5L;\n\
    \    long long int q = 5L;\n    long long int r = 5L;\n    long long int s = 5L;\n\
    \    long long int t = 5L;\n    long long int u = 5L;\n    long long int v = 5L;\n\
    \    long long int w = 5L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 5L;\n    long long int a = 5L;\n    long long int b = 5L;\n\
    \    long long int c = 5L;\n    long long int d = 5L;\n    long long int e = 5L;\n\
    \    long long int f = 5L;\n    long long int g = 5L;\n    long long int h = 5L;\n\
    \    long long int i = 5L;\n    long long int j = 5L;\n    long long int k = 5L;\n\
    \    long long int l = 5L;\n    long long int m = 5L;\n    long long int n = 5L;\n\
    \    long long int o = 5L;\n    long long int p = 5L;\n    long long int q = 5L;\n\
    \    long long int r = 5L;\n    long long int s = 5L;\n    long long int t = 5L;\n\
    \    long long int u = 5L;\n    long long int v = 5L;\n    long long int w = 5L;\n\
    \    long long int x = 5L;\n    long long int y = 5L;\n    long long int z = 5L;\n\
    \    long long int a = 5L;\n    long long int b = 5L;\n    long long int c = 5L;\n\
    \    long long int d = 5L;\n    long long int e = 5L;\n    long long int f = 5\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpey827bab.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpey827bab.d(15): Error: no identifier for declarator `long`\n/tmp/tmpey827bab.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpey827bab.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpey827bab.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpey827bab.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpey827bab.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpey827bab.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpey827bab.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpey827bab.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpey827bab.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpey827bab.d(22): Error: no identifier for declarator `long`\n/tmp/tmpey827bab.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpey827bab.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpey827bab.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpey827bab.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgogs56_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpsgogs56_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpsgogs56_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpsgogs56_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpsgogs56_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpsgogs56_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpsgogs56_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpsgogs56_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while (b < 100) {\n        if (is_prime(b))\
    \ {\n            if (is_prime(c)) {\n                if (is_prime(d)) {\n    \
    \                flag = true;\n                    break;\n                }\n\
    \                else {\n                    d = c + d;\n                }\n \
    \           }\n            else {\n                c = c + c;\n            }\n\
    \        }\n        else {\n            b = b + b;\n        }\n    }\n    \n \
    \   return flag;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n\
    \    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwogc6tw7.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpwogc6tw7.d(15): Error: no identifier for declarator `long`\n/tmp/tmpwogc6tw7.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwogc6tw7.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpwogc6tw7.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwogc6tw7.d(17): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpwogc6tw7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    bool flag = true;\n    for(i=3; i<=a; i+=2)\n    {\n\
    \        if(a%i==0)\n        {\n            flag = false;\n            break;\n\
    \        }\n    }\n    return flag;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,primes\
    \ |>\n<code>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp93t6xs_s.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp93t6xs_s.d(15): Error: no identifier for declarator `long`\n/tmp/tmp93t6xs_s.d(27):
    Error: declaration expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp93t6xs_s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool result = false;\n    \n    while\
    \ (b <= a)\n    {\n        if (a % b == 0)\n        {\n            while (c <=\
    \ b)\n            {\n                if (a % c == 0)\n                {\n    \
    \                while (d <= b)\n                    {\n                     \
    \   if (a % d == 0)\n                        {\n                            result\
    \ = true;\n                            break;\n                        }\n   \
    \                     else\n                        {\n                      \
    \      d++;\n                        }\n                    }\n              \
    \      break;\n                }\n                else\n                {\n  \
    \                  c++;\n                }\n            }\n            break;\n\
    \        }\n        else\n        {\n            b++;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3z4cvu6i.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3z4cvu6i.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z4cvu6i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = 1;\n    long long int b = 1;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9znzzhbm.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9znzzhbm.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9znzzhbm.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9znzzhbm.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9znzzhbm.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9znzzhbm.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9znzzhbm.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9znzzhbm.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9znzzhbm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = a;\n    bool flag = false;\n    while(b <= 100\
    \ && c <= 100) {\n        if(is_prime(b) && is_prime(c)) {\n            if((c\
    \ % b) == 0) {\n                flag = true;\n                break;\n       \
    \     }\n        }\n        b++;\n        c++;\n    }\n    return flag;\n}\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjt_be19k.d(19): Error: undefined identifier `is_prime`\n/tmp/tmpjt_be19k.d(19):
    Error: undefined identifier `is_prime`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpjt_be19k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    bool\
    \ flag = false;\n    \n    while(b < 100) \n    {\n        while(b * c < 100)\
    \ \n        {\n            if(b * c > 100) \n            {\n                flag\
    \ = true;\n                break;\n            }\n            \n            if(b\
    \ * c == 100) \n            {\n                flag = true;\n                break;\n\
    \            }\n            \n            if(b * c % 2 == 0) \n            {\n\
    \                flag = false;\n                break;\n            }\n      \
    \      \n            if(b * c % 3 == 0) \n            {\n                flag\
    \ = false;\n                break;\n            }\n            \n            if(b\
    \ * c % 5 == 0) \n            {\n                flag = false;\n             \
    \   break;\n            }\n            \n            if(b * c % 7 == 0) \n   \
    \         {\n                flag = false;\n                break;\n         \
    \   }\n            \n            if(b * c % 11 == 0) \n            {\n       \
    \         flag = false;\n                break;\n            }\n            \n\
    \            if(b * c % 13 == 0) \n            {\n                flag = false;\n\
    \                break;\n            }\n            \n            if(b * c % 17\
    \ == 0) \n            {\n                flag = false;\n                break;\n\
    \            }\n            \n            if(b * c % 19 == 0) \n            {\n\
    \                flag = false;\n                break;\n            }\n      \
    \      \n            if(b * c % 23 == 0) \n            {\n                flag\
    \ = false;\n                break;\n            }\n            \n            if(b\
    \ * c % 29 == 0) \n            {\n                flag = false;\n            \
    \    break;\n            }\n            \n            if(b * c % 31 == 0) \n \
    \           {\n                flag = false;\n                break;\n       \
    \     }\n            \n            if(b * c % 37 == 0) \n            {\n     \
    \           flag = false;\n                break;\n            }\n           \
    \ \n            if(b * c % 41 == 0) \n            {\n                flag = false;\n\
    \                break;\n            }\n            \n            if(b * c % 43\
    \ == 0) \n            {\n                flag = false;\n                break;\n\
    \            }\n            \n            if(b * c % 47 == 0) \n            {\n\
    \                flag = false;\n                break;\n            }\n      \
    \      \n            if(b * c % 53 == 0) \n            {\n                flag\
    \ = false;\n                break;\n            }\n            \n            if(b\
    \ * c % 59 == 0) \n            {\n                flag = false;\n            \
    \    break;\n            }\n            \n            if(b * c % 61 == 0) \n \
    \           {\n                flag = false;\n                break;\n       \
    \     }\n            \n            if(b * c % 67 == 0) \n            {\n     \
    \           flag = false;\n                break;\n            }\n           \
    \ \n            if(b * c % \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp40msxzt8.d(152): Error: expression expected, not `unittest`\n/tmp/tmp40msxzt8.d(153):
    Error: found `{` when expecting `)`\n/tmp/tmp40msxzt8.d(167): Error: found `End
    of File` when expecting `}` following compound statement\n/tmp/tmp40msxzt8.d(167):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40msxzt8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n\
    \    long C = 1;\n    long D = 1;\n    long E = 1;\n    long F = 1;\n    long\
    \ G = 1;\n    long H = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n\
    \    long L = 1;\n    long M = 1;\n    long N = 1;\n    long O = 1;\n    long\
    \ P = 1;\n    long Q = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n\
    \    long U = 1;\n    long V = 1;\n    long W = 1;\n    long X = 1;\n    long\
    \ Y = 1;\n    long Z = 1;\n    long A1 = 1;\n    long B1 = 1;\n    long C1 = 1;\n\
    \    long D1 = 1;\n    long E1 = 1;\n    long F1 = 1;\n    long G1 = 1;\n    long\
    \ H1 = 1;\n    long I1 = 1;\n    long J1 = 1;\n    long K1 = 1;\n    long L1 =\
    \ 1;\n    long M1 = 1;\n    long N1 = 1;\n    long O1 = 1;\n    long P1 = 1;\n\
    \    long Q1 = 1;\n    long R1 = 1;\n    long S1 = 1;\n    long T1 = 1;\n    long\
    \ U1 = 1;\n    long V1 = 1;\n    long W1 = 1;\n    long X1 = 1;\n    long Y1 =\
    \ 1;\n    long Z1 = 1;\n    long A2 = 1;\n    long B2 = 1;\n    long C2 = 1;\n\
    \    long D2 = 1;\n    long E2 = 1;\n    long F2 = 1;\n    long G2 = 1;\n    long\
    \ H2 = 1;\n    long I2 = 1;\n    long J2 = 1;\n    long K2 = 1;\n    long L2 =\
    \ 1;\n    long M2 = 1;\n    long N2 = 1;\n    long O2 = 1;\n    long P2 = 1;\n\
    \    long Q2 = 1;\n    long R2 = 1;\n    long S2 = 1;\n    long T2 = 1;\n    long\
    \ U2 = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphyl8zq5h.d(113): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyl8zq5h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = 1;\n    bool flag = true;\n    for(long i = 3;\
    \ i <= b; i += 2)\n    {\n        if(b % i == 0)\n        {\n            flag\
    \ = false;\n            break;\n        }\n    }\n    if(flag)\n    {\n      \
    \  for(long i = 3; i <= b; i += 2)\n        {\n            if(b % i == 0)\n  \
    \          {\n                flag = false;\n                break;\n        \
    \    }\n        }\n    }\n    return flag;\n}\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp02lo8x2g.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e45]\n??:? void tmp02lo8x2g.__unittest_L39_C1() [0x427abb]\n??:?
    void tmp02lo8x2g.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42821b]\n??:? _d_run_main [0x428186]\n??:? main [0x427bdb]\n??:?
    __libc_start_main [0x9be31554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = 1;\n    long long int b = 1;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9znzzhbm.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9znzzhbm.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9znzzhbm.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9znzzhbm.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9znzzhbm.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9znzzhbm.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9znzzhbm.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9znzzhbm.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9znzzhbm.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9znzzhbm.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9znzzhbm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 5;\n    long j = 5;\n\
    \    long k = 5;\n    long l = 5;\n    long m = 5;\n    long n = 5;\n    long\
    \ o = 5;\n    long p = 5;\n    long q = 5;\n    long r = 5;\n    long s = 5;\n\
    \    long t = 5;\n    long u = 5;\n    long v = 5;\n    long w = 5;\n    long\
    \ x = 5;\n    long y = 5;\n    long z = 5;\n    long a = 100;\n    long b = 100;\n\
    \    long c = 100;\n    long d = 100;\n    long e = 100;\n    long f = 100;\n\
    \    long g = 100;\n    long h = 100;\n    long i = 100;\n    long j = 100;\n\
    \    long k = 100;\n    long l = 100;\n    long m = 100;\n    long n = 100;\n\
    \    long o = 100;\n    long p = 100;\n    long q = 100;\n    long r = 100;\n\
    \    long s = 100;\n    long t = 100;\n    long u = 100;\n    long v = 100;\n\
    \    long w = 100;\n    long x = 100;\n    long y = 100;\n    long z = 100;\n\
    \    long a = 100;\n    long b = 100;\n    long c = 100;\n    long d = 100;\n\
    \    long e = 100;\n    long f = 100;\n    long g = 100;\n    long h = 100;\n\
    \    long i = 100;\n    long j = 100;\n    long k = 100;\n    long l = 100;\n\
    \    long m = 100;\n    long n = 100;\n    long o = 100;\n    long p = 100;\n\
    \    long q = 100;\n    long r = 100;\n    long s = 100;\n    long t = 100;\n\
    \    long u = 100;\n    long v = 100;\n    long w = 100;\n    long x = 100;\n\
    \    long y = 100;\n    long z = 100;\n    long a = 100;\n    long b = 100;\n\
    \    long c = 100;\n    long d = 100;\n    long e = 100;\n    long f = 100;\n\
    \    long g = 100;\n    long h = 100;\n    long i = 100;\n    long j = 100;\n\
    \    long k = 100;\n    long l = 100;\n    long m = 100;\n    long n = 100;\n\
    \    long o = 100;\n    long p = 100;\n    long q = 100;\n    long r = 100;\n\
    \    long s = 100;\n    long t = 100;\n    long u = 100;\n    long v = 100;\n\
    \    long w = 100;\n    long x = 100;\n    long y = 100;\n\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxxptt562.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxxptt562.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 5L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    bool result = false;\n    \n    while(a != 0)\n\
    \    {\n        if((a % b) == 0)\n        {\n            a = a / b;\n        \
    \    result = true;\n        }\n        \n        if((a % c) == 0)\n        {\n\
    \            a = a / c;\n            result = true;\n        }\n        \n   \
    \     if((a % d) == 0)\n        {\n            a = a / d;\n            result\
    \ = true;\n        }\n        \n        if((a % e) == 0)\n        {\n        \
    \    a = a / e;\n            result = true;\n        }\n        \n        if((a\
    \ % f) == 0)\n        {\n            a = a / f;\n            result = true;\n\
    \        }\n        \n        if((a % g) == 0)\n        {\n            a = a /\
    \ g;\n            result = true;\n        }\n        \n        if((a % h) == 0)\n\
    \        {\n            a = a / h;\n            result = true;\n        }\n  \
    \      \n        if((a % i) == 0)\n        {\n            a = a / i;\n       \
    \     result = true;\n        }\n        \n        if((a % j) == 0)\n        {\n\
    \            a = a / j;\n            result = true;\n        }\n        \n   \
    \     if((a % k) == 0)\n        {\n            a = a / k;\n            result\
    \ = true;\n        }\n        \n        if((a % l) == 0)\n        {\n        \
    \    a = a / l;\n            result = true;\n        }\n        \n        if((a\
    \ % m) == 0)\n        {\n            a = a / m;\n            result = true;\n\
    \        }\n        \n        if((a \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6lty53yc.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6lty53yc.d(15): Error: no identifier for declarator `long`\n/tmp/tmp6lty53yc.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp6lty53yc.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp6lty53yc.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp6lty53yc.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp6lty53yc.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp6lty53yc.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp6lty53yc.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp6lty53yc.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp6lty53yc.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6lty53yc.d(22): Error: no identifier for declarator `long`\n/tmp/tmp6lty53yc.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp6lty53yc.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6lty53yc.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp6lty53yc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 5L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int ab =\
    \ 3L;\n    long long int ac = 3L;\n    long long int ad = 3L;\n    long long int\
    \ ae = 3L;\n    long long int af = 3L;\n    long long int ag = 3L;\n    long long\
    \ int ah = 3L;\n    long long int ai = 3L;\n    long long int aj = 3L;\n    long\
    \ long int ak = 3L;\n    long long int al = 3L;\n    long long int am = 3L;\n\
    \    long long int an = 3L;\n    long long int ao = 3L;\n    long long int ap\
    \ = 3L;\n    long long int aq = 3L;\n    long long int ar = 3L;\n    long long\
    \ int as = 3L;\n    long long int at = 3L;\n    long long int au = 3L;\n    long\
    \ long int av = 3L;\n    long long int aw = 3L;\n    long long int ax = 3L;\n\
    \    long long int ay = 3L;\n    long long int az = 3L;\n    long long int ba\
    \ = 3L;\n    long long int bb = 3L;\n    long long int bc = 3L;\n    long long\
    \ int bd = 3L;\n    long long int be = 3L;\n    long long int bf\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7liyl8g0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7liyl8g0.d(15): Error: no identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp7liyl8g0.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp7liyl8g0.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp7liyl8g0.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp7liyl8g0.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp7liyl8g0.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp7liyl8g0.d(22): Error: no identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp7liyl8g0.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp7liyl8g0.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7liyl8g0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    bool result = false;\n\
    \    \n    while (b > 0) {\n        if (b%c == 0)\n            result = true;\n\
    \        b += c;\n        c++;\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=c++,primes,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <cmath>\nusing namespace std;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgzr85eur.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgzr85eur.d(15): Error: no identifier for declarator `long`\n/tmp/tmpgzr85eur.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgzr85eur.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpgzr85eur.d(27): Error: declaration
    expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzr85eur.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n    long\
    \ o = 2;\n    long p = 3;\n    long q = 3;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplv6iu7of.d(114): Error: expression expected, not `unittest`\n/tmp/tmplv6iu7of.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmplv6iu7of.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplv6iu7of.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rgu9gfi.d(114): Error: expression expected, not `unittest`\n/tmp/tmp_rgu9gfi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmp_rgu9gfi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_rgu9gfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool result = false;\n    \n    while(a\
    \ != 0)\n    {\n        if(b == c && c == d)\n        {\n            result =\
    \ true;\n            break;\n        }\n        \n        if(b == d)\n       \
    \ {\n            result = false;\n            break;\n        }\n        \n  \
    \      if(b == c)\n        {\n            result = false;\n            break;\n\
    \        }\n        \n        if(b == d)\n        {\n            result = false;\n\
    \            break;\n        }\n        \n        if(b == c + d)\n        {\n\
    \            result = false;\n            break;\n        }\n        \n      \
    \  if(b == c + d)\n        {\n            result = false;\n            break;\n\
    \        }\n        \n        if(b == c + d)\n        {\n            result =\
    \ false;\n            break;\n        }\n        \n        if(b == c + d)\n  \
    \      {\n            result = false;\n            break;\n        }\n       \
    \ \n        if(b == c + d)\n        {\n            result = false;\n         \
    \   break;\n        }\n        \n        if(b == c + d)\n        {\n         \
    \   result = false;\n            break;\n        }\n        \n        if(b ==\
    \ c + d)\n        {\n            result = false;\n            break;\n       \
    \ }\n        \n        if(b == c + d)\n        {\n            result = false;\n\
    \            break;\n        }\n        \n        if(b == c + d)\n        {\n\
    \            result = false;\n            break;\n        }\n        \n      \
    \  if(b == c + d)\n        {\n            result = false;\n            break;\n\
    \        }\n        \n        if(b == c + d)\n        {\n            result =\
    \ false;\n            break;\n        }\n        \n        if(b == c + d)\n  \
    \      {\n            result = false;\n            break;\n        }\n       \
    \ \n        if(b == c + d)\n        {\n            result = false;\n         \
    \   break;\n        }\n        \n        if(b == c + d)\n        {\n         \
    \   result = false;\n            break;\n        }\n        \n        if(b ==\
    \ c + d)\n        {\n            result = false;\n            break;\n       \
    \ }\n        \n        if(b == c + d)\n        {\n            result = false;\n\
    \            break;\n        }\n        \n        if(b == c + d)\n        {\n\
    \            result = false;\n            break;\n        }\n        \n      \
    \  if(b == c + d)\n        {\n            result = false;\n            break;\n\
    \        }\n        \n        if(b == c + d)\n        {\n            result =\
    \ false;\n            break;\n        }\n        \n        if(b == c + d)\n  \
    \      {\n            result = false;\n            break;\n        }\n       \
    \ \n        if(b == c + d)\n        {\n            result = false;\n         \
    \   break;\n        }\n        \n        if(b == c + d)\n        {\n         \
    \   result = false;\n            break;\n        }\n        \n        if(b ==\
    \ c + d)\n        {\n            result = false;\n            break;\n       \
    \ }\n        \n        if(b == c + d)\n        {\n            result = false;\n\
    \            break;\n        }\n        \n        if(b == c + d)\n        {\n\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaekvfhhf.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpaekvfhhf.d(15): Error: no identifier for declarator `long`\n/tmp/tmpaekvfhhf.d(191):
    Error: found `unittest` instead of statement\n/tmp/tmpaekvfhhf.d(206): Error:
    found `End of File` when expecting `}` following compound statement\n/tmp/tmpaekvfhhf.d(206):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaekvfhhf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    bool flag = false;\n    \n    for(long long int i = 3L; i <= a; i += 2L)\
    \ \n    {\n        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n \
    \       {\n            flag = true;\n        }\n        \n        if((i % 2L ==\
    \ 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag = true;\n\
    \        }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L ==\
    \ 0L)) \n        {\n            flag = true;\n        }\n        \n        if((i\
    \ % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag\
    \ = true;\n        }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) &&\
    \ (i % 5L == 0L)) \n        {\n            flag = true;\n        }\n        \n\
    \        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n\
    \            flag = true;\n        }\n        \n        if((i % 2L == 0L) && (i\
    \ % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag = true;\n     \
    \   }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L))\
    \ \n        {\n            flag = true;\n        }\n        \n        if((i %\
    \ 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag\
    \ = true;\n        }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) &&\
    \ (i % 5L == 0L)) \n        {\n            flag = true;\n        }\n        \n\
    \        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n\
    \            flag = true;\n        }\n        \n        if((i % 2L == 0L) && (i\
    \ % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag = true;\n     \
    \   }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L))\
    \ \n        {\n            flag = true;\n        }\n        \n        if((i %\
    \ 2L == 0L) && (i % 3L == 0L) && (i % 5L == 0L)) \n        {\n            flag\
    \ = true;\n        }\n        \n        if((i % 2L == 0L) && (i % 3L == 0L) &&\
    \ (i % 5L == 0L)) \n        {\n            \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsp9uban8.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsp9uban8.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsp9uban8.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsp9uban8.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsp9uban8.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsp9uban8.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsp9uban8.d(20): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsp9uban8.d(20): Error: no
    identifier for declarator `long`\n/tmp/tmpsp9uban8.d(20): Error: found `i` when
    expecting `.` following int\n/tmp/tmpsp9uban8.d(20): Error: found `=` when expecting
    identifier following `int`.\n/tmp/tmpsp9uban8.d(20): Error: found `3L` when expecting
    `;` following `for` condition\n/tmp/tmpsp9uban8.d(20): Error: expression expected,
    not `;`\n/tmp/tmpsp9uban8.d(20): Error: found `i` when expecting `)`\n/tmp/tmpsp9uban8.d(20):
    Error: found `<=` instead of statement\n/tmp/tmpsp9uban8.d(20): Error: found `)`
    when expecting `;` following statement\n/tmp/tmpsp9uban8.d(95): Error: found `unittest`
    instead of statement\n/tmp/tmpsp9uban8.d(110): Error: found `End of File` when
    expecting `}` following compound statement\n/tmp/tmpsp9uban8.d(110): Error: found
    `End of File` when expecting `}` following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpsp9uban8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    bool result = false;\n    \n    while (a\
    \ != 0)\n    {\n        if (a % b == 0)\n        {\n            a /= b;\n    \
    \        c += 1;\n        }\n        else\n        {\n            a /= b;\n  \
    \          c += 2;\n        }\n        \n        if (c > 3)\n        {\n     \
    \       result = true;\n            break;\n        }\n        \n        b +=\
    \ 2;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppv389pse.d(47): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e4d]\n??:? void tmppv389pse.__unittest_L43_C1() [0x427a9e]\n??:?
    void tmppv389pse.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42829c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428223]\n??:? _d_run_main [0x42818e]\n??:? main [0x427bdf]\n??:?
    __libc_start_main [0x98f8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 29;\n    long long int m = 51;\n\
    \    long long int n = 59;\n    long long int o = 71;\n    long long int p = 71;\n\
    \    long long int q = 71;\n    long long int r = 71;\n    long long int s = 71;\n\
    \    long long int t = 71;\n    long long int u = 71;\n    long long int v = 71;\n\
    \    long long int w = 71;\n    long long int x = 71;\n    long long int y = 71;\n\
    \    long long int z = 71;\n    long long int a = 71;\n    long long int b = 71;\n\
    \    long long int c = 71;\n    long long int d = 71;\n    long long int e = 71;\n\
    \    long long int f = 71;\n    long long int g = 71;\n    long long int h = 71;\n\
    \    long long int i = 71;\n    long long int j = 71;\n    long long int k = 71;\n\
    \    long long int l = 71;\n    long long int m = 71;\n    long long int n = 71;\n\
    \    long long int o = 71;\n    long long int p = 71;\n    long long int q = 71;\n\
    \    long long int r = 71;\n    long long int s = 71;\n    long long int t = 71;\n\
    \    long long int u = 71;\n    long long int v = 71;\n    long long int w = 71;\n\
    \    long long int x = 71;\n    long long int y = 71;\n    long long int z = 71;\n\
    \    long long int a = 71;\n    long long int b = 71;\n    long long int c = 71;\n\
    \    long long int d = 71;\n    long long int e = 71;\n    long long int f = 71;\n\
    \    long long int g = 71;\n    long long int h = 71;\n    long long int i = 71;\n\
    \    long long int j = 71;\n    long long int k = 71;\n    long long int l = 71;\n\
    \    long long int m = 7\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjclt6qi8.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjclt6qi8.d(15): Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpjclt6qi8.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpjclt6qi8.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpjclt6qi8.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpjclt6qi8.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpjclt6qi8.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjclt6qi8.d(22): Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpjclt6qi8.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjclt6qi8.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpjclt6qi8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    \n    while(b > 0)\n    {\n        if(b % 2 == 0)\n\
    \        {\n            if(c == 3)\n            {\n                flag = true;\n\
    \                break;\n            }\n            else\n            {\n    \
    \            c = c + 1;\n            }\n        }\n        else\n        {\n \
    \           if(c == 3)\n            {\n                flag = true;\n        \
    \        break;\n            }\n            else\n            {\n            \
    \    d = d + 1;\n            }\n        }\n        b = b / 2;\n    }\n    return\
    \ flag;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc4s8rl1a.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpc4s8rl1a.d(15): Error: no identifier for declarator `long`\n/tmp/tmpc4s8rl1a.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpc4s8rl1a.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpc4s8rl1a.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpc4s8rl1a.d(17): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpc4s8rl1a.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool flag = false;\n    while(b > 0)\n    {\n        if(b % 2 == 0)\n   \
    \     {\n            if(c == 3)\n            {\n                flag = true;\n\
    \                break;\n            }\n            else\n            {\n    \
    \            c = c + 1;\n            }\n        }\n        else\n        {\n \
    \           if(c == 3)\n            {\n                flag = true;\n        \
    \        break;\n            }\n            else\n            {\n            \
    \    c = c + 1;\n            }\n        }\n        d = d + 1;\n        b = b /\
    \ 2;\n    }\n    return flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm |>\n\
    <| c |>\nI see no reason to assume that `b` is less than 100. `b` could easily\
    \ be greater than 100. Also, `c` and `d` should be `long long int` not `int`.\n\
    <|/ c |>\n<| c |>\nI agree with you. But the OP didn't specify what is the upper\
    \ limit of b. He just said that he wants to find out if b is multiply of 3 prime\
    \ numbers. So I assumed that b is less than 100. Also I assumed that c is less\
    \ than 100 and d is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b is less than 100. Also I assumed that b is less than 100. Also\
    \ I assumed that b\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n\
    \    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgallp0t4.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpgallp0t4.d(15): Error: no identifier for declarator `long`\n/tmp/tmpgallp0t4.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgallp0t4.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpgallp0t4.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpgallp0t4.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpgallp0t4.d(50): Error: declaration
    expected, not `<`\n/tmp/tmpgallp0t4.d(56): Error: unterminated character constant\n/tmp/tmpgallp0t4.d(61):
    Error: declaration expected, not `assert`\n/tmp/tmpgallp0t4.d(62): Error: declaration
    expected, not `assert`\n/tmp/tmpgallp0t4.d(63): Error: declaration expected, not
    `assert`\n/tmp/tmpgallp0t4.d(64): Error: declaration expected, not `assert`\n/tmp/tmpgallp0t4.d(65):
    Error: declaration expected, not `assert`\n/tmp/tmpgallp0t4.d(66): Error: declaration
    expected, not `assert`\n/tmp/tmpgallp0t4.d(67): Error: declaration expected, not
    `assert`\n/tmp/tmpgallp0t4.d(68): Error: declaration expected, not `assert`\n/tmp/tmpgallp0t4.d(69):
    Error: declaration expected, not `assert`\n/tmp/tmpgallp0t4.d(70): Error: declaration
    expected, not `assert`\n/tmp/tmpgallp0t4.d(71): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgallp0t4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 3;\n\
    \    long long int q = 3;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 3;\n\
    \    long long int w = 3;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 3;\n    long long int G = 3;\n    long long int H = 3;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 3;\n    long long int Q = 3;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 3;\n    long long int W = 3;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 3;\n\
    \    long long int G = 3;\n    long long int H = 3;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 3;\n    long long int Q = 3;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 3;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp31byjrwl.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp31byjrwl.d(15): Error: no identifier for declarator `long`\n/tmp/tmp31byjrwl.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp31byjrwl.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp31byjrwl.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp31byjrwl.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp31byjrwl.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp31byjrwl.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp31byjrwl.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp31byjrwl.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp31byjrwl.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp31byjrwl.d(22): Error: no identifier for declarator `long`\n/tmp/tmp31byjrwl.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp31byjrwl.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp31byjrwl.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp31byjrwl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 5L;\n    long long int l = 7L;\n    long long int m = 7L;\n\
    \    long long int n = 7L;\n    long long int o = 7L;\n    long long int p = 7L;\n\
    \    long long int q = 7L;\n    long long int r = 7L;\n    long long int s = 7L;\n\
    \    long long int t = 7L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = 3L;\n    long long int B = 5L;\n\
    \    long long int C = 3L;\n    long long int D = 5L;\n    long long int E = 3L;\n\
    \    long long int F = 5L;\n    long long int G = 7L;\n    long long int H = 3L;\n\
    \    long long int I = 5L;\n    long long int J = 3L;\n    long long int K = 5L;\n\
    \    long long int L = 7L;\n    long long int M = 7L;\n    long long int N = 3L;\n\
    \    long long int O = 5L;\n    long long int P = 7L;\n    long long int Q = 7L;\n\
    \    long long int R = 7L;\n    long long int S = 3L;\n    long long int T = 5L;\n\
    \    long long int U = 3L;\n    long long int V = 5L;\n    long long int W = 3L;\n\
    \    long long int X = 3L;\n    long long int Y = 5L;\n    long long int Z = 7L;\n\
    \    long long int AA = 3L;\n    long long int AB = 5L;\n    long long int AC\
    \ = 3L;\n    long long int AD = 5L;\n    long long int AE = 3L;\n    long long\
    \ int AF = 5\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3uh2b5ov.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3uh2b5ov.d(15): Error: no identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp3uh2b5ov.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp3uh2b5ov.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp3uh2b5ov.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp3uh2b5ov.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp3uh2b5ov.d(22): Error: no identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp3uh2b5ov.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3uh2b5ov.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp3uh2b5ov.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool flag = false;\n    \n    while (b\
    \ <= a)\n    {\n        c = b * c;\n        if (c == a)\n        {\n         \
    \   flag = true;\n            break;\n        }\n        b++;\n    }\n    return\
    \ flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm |>\n<| c |>\nThe first example\
    \ is wrong. `is_multiply_prime(30L)` returns `true` but `30 = 2 * 3 * 5` which\
    \ is not true.\n<|/ c |>\n<| c |>\nYes, you are right. My mistake. Thanks for\
    \ pointing out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm_y9cb19.d(31): Error: declaration expected, not `<`\n/tmp/tmpm_y9cb19.d(45):
    Error: declaration expected, not `assert`\n/tmp/tmpm_y9cb19.d(46): Error: declaration
    expected, not `assert`\n/tmp/tmpm_y9cb19.d(47): Error: declaration expected, not
    `assert`\n/tmp/tmpm_y9cb19.d(48): Error: declaration expected, not `assert`\n/tmp/tmpm_y9cb19.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmpm_y9cb19.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmpm_y9cb19.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmpm_y9cb19.d(52): Error: declaration expected, not `assert`\n/tmp/tmpm_y9cb19.d(53):
    Error: declaration expected, not `assert`\n/tmp/tmpm_y9cb19.d(54): Error: declaration
    expected, not `assert`\n/tmp/tmpm_y9cb19.d(55): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_y9cb19.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 29;\n    long long int m = 41;\n\
    \    long long int n = 43;\n    long long int o = 49;\n    long long int p = 53;\n\
    \    long long int q = 59;\n    long long int r = 61;\n    long long int s = 67;\n\
    \    long long int t = 71;\n    long long int u = 73;\n    long long int v = 79;\n\
    \    long long int w = 83;\n    long long int x = 89;\n    long long int y = 93;\n\
    \    long long int z = 99;\n    long long int a = 100L;\n    long long int b =\
    \ 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n    long long int\
    \ e = 11;\n    long long int f = 13;\n    long long int g = 17;\n    long long\
    \ int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n    long\
    \ long int k = 31;\n    long long int l = 29;\n    long long int m = 41;\n   \
    \ long long int n = 43;\n    long long int o = 49;\n    long long int p = 53;\n\
    \    long long int q = 59;\n    long long int r = 61;\n    long long int s = 67;\n\
    \    long long int t = 71;\n    long long int u = 73;\n    long long int v = 79;\n\
    \    long long int w = 83;\n    long long int x = 89;\n    long long int y = 93;\n\
    \    long long int z = 99;\n    long long int a = 100L;\n    long long int b =\
    \ 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n    long long int\
    \ e = 11;\n    long long int f = 13;\n    long long int g = 17;\n    long long\
    \ int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n    long\
    \ long int k = 31;\n    long long int l = 29;\n    long long int \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6rnueo0d.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6rnueo0d.d(15): Error: no identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp6rnueo0d.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp6rnueo0d.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp6rnueo0d.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp6rnueo0d.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp6rnueo0d.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp6rnueo0d.d(22): Error: no identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp6rnueo0d.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp6rnueo0d.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp6rnueo0d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    bool result = false;\n    \n    while(c <= b)\n    {\n        if(is_prime(c))\n\
    \        {\n            if(b % c == 0)\n            {\n                result\
    \ = true;\n                break;\n            }\n        }\n        \n      \
    \  c += d;\n        d += 2;\n    }\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpohy8d59x.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpohy8d59x.d(15): Error: no identifier for declarator `long`\n/tmp/tmpohy8d59x.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpohy8d59x.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpohy8d59x.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpohy8d59x.d(17): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpohy8d59x.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    bool isPrime = true;\n    for(long long int i\
    \ = 3L; i <= a; i += 2L) \n    {\n        if((a % i) == 0)\n        {\n      \
    \      isPrime = false;\n            break;\n        }\n    }\n    return isPrime;\n\
    }\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpct2k3ius.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpct2k3ius.d(15): Error: no identifier for declarator `long`\n/tmp/tmpct2k3ius.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpct2k3ius.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpct2k3ius.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmpct2k3ius.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpct2k3ius.d(17): Error: found
    `3L` when expecting `;` following `for` condition\n/tmp/tmpct2k3ius.d(17): Error:
    expression expected, not `;`\n/tmp/tmpct2k3ius.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmpct2k3ius.d(17): Error: found `<=` instead of statement\n/tmp/tmpct2k3ius.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpct2k3ius.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rgu9gfi.d(114): Error: expression expected, not `unittest`\n/tmp/tmp_rgu9gfi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmp_rgu9gfi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_rgu9gfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    bool result = false;\n\
    \    \n    while(c <= b)\n    {\n        if(b % c == 0)\n        {\n         \
    \   result = true;\n            break;\n        }\n        c += 2;\n    }\n  \
    \  \n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbrlkj_jk.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpbrlkj_jk.d(15): Error: no identifier for declarator `long`\n/tmp/tmpbrlkj_jk.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpbrlkj_jk.d(16):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpbrlkj_jk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = 2;\n    long long c = 1;\n    long long d = 1;\n    long long\
    \ e = 1;\n    long long f = 0;\n    long long g = 1;\n    long long h = 1;\n \
    \   long long i = 1;\n    long long j = 1;\n    long long k = 1;\n    long long\
    \ l = 1;\n    long long m = 1;\n    long long n = 1;\n    long long o = 1;\n \
    \   long long p = 1;\n    long long q = 1;\n    long long r = 1;\n    long long\
    \ s = 1;\n    long long t = 1;\n    long long u = 1;\n    long long v = 1;\n \
    \   long long w = 1;\n    long long x = 1;\n    long long y = 1;\n    long long\
    \ z = 1;\n    long long a = a;\n    long long b = b;\n    long long c = c;\n \
    \   long long d = d;\n    long long e = e;\n    long long f = f;\n    long long\
    \ g = g;\n    long long h = h;\n    long long i = i;\n    long long j = j;\n \
    \   long long k = k;\n    long long l = l;\n    long long m = m;\n    long long\
    \ n = n;\n    long long o = o;\n    long long p = p;\n    long long q = q;\n \
    \   long long r = r;\n    long long s = s;\n    long long t = t;\n    long long\
    \ u = u;\n    long long v = v;\n    long long w = w;\n    long long x = x;\n \
    \   long long y = y;\n    long long z = z;\n    long long a = a;\n    long long\
    \ b = b;\n    long long c = c;\n    long long d = d;\n    long long e = e;\n \
    \   long long f = f;\n    long long g = g;\n    long long h = h;\n    long long\
    \ i = i;\n    long long j = j;\n    long long k = k;\n    long long l = l;\n \
    \   long long m = m;\n    long long n = n;\n    long long o = o;\n    long long\
    \ p = p;\n    long long q = q;\n    long long r = r;\n    long long s = s;\n \
    \   long long t = t;\n    long long u = u;\n    long long v = v;\n    long long\
    \ w = w;\n    long long x = x;\n    long long y = y;\n    long long z = z;\n \
    \   long long a = a;\n    long long b = b;\n    long long c = c;\n    long long\
    \ d = d;\n    long long e = e;\n    long long f = f;\n\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps84x0rai.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmps84x0rai.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmps84x0rai.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmps84x0rai.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps84x0rai.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps84x0rai.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = 5*a;\n    long long int d =\
    \ 7*a;\n    long long int e = 11*a;\n    long long int f = 13*a;\n    long long\
    \ int g = 17*a;\n    long long int h = 19*a;\n    long long int i = 23*a;\n  \
    \  long long int j = 29*a;\n    long long int k = 31*a;\n    long long int l =\
    \ 33*a;\n    long long int m = 37*a;\n    long long int n = 41*a;\n    long long\
    \ int o = 43*a;\n    long long int p = 47*a;\n    long long int q = 51*a;\n  \
    \  long long int r = 53*a;\n    long long int s = 59*a;\n    long long int t =\
    \ 61*a;\n    long long int u = 67*a;\n    long long int v = 71*a;\n    long long\
    \ int w = 73*a;\n    long long int x = 79*a;\n    long long int y = 83*a;\n  \
    \  long long int z = 89*a;\n    long long int aa = 97*a;\n    long long int bb\
    \ = 101*a;\n    long long int cc = 103*a;\n    long long int dd = 107*a;\n   \
    \ long long int ee = 110*a;\n    long long int ff = 113*a;\n    long long int\
    \ gg = 117*a;\n    long long int hh = 120*a;\n    long long int ii = 121*a;\n\
    \    long long int jj = 123*a;\n    long long int kk = 127*a;\n    long long int\
    \ ll = 130*a;\n    long long int mm = 131*a;\n    long long int nn = 133*a;\n\
    \    long long int oo = 137*a;\n    long long int pp = 140*a;\n    long long int\
    \ qq = 141*a;\n    long long int rr = 143*a;\n    long long int ss = 147*a;\n\
    \    long long int tt = 150*a;\n    long long int uu = 151*a;\n    long long int\
    \ vv = 153*a;\n    long long int ww = 157*a;\n    long long int xx = 159*a;\n\
    \    long long int yy = 161*a;\n    long long int zz = 163*a;\n    long long int\
    \ aaa = 167*a;\n    long long int bbb = 171*a;\n    long long int ccc = 173*a;\n\
    \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8rcc80eg.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8rcc80eg.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp8rcc80eg.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp8rcc80eg.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp8rcc80eg.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp8rcc80eg.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp8rcc80eg.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8rcc80eg.d(22): Error: no identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp8rcc80eg.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8rcc80eg.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp8rcc80eg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 7L;\n    long long int l = 5L;\n    long long int m = 7L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 5L;\n    long long int s = 7L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 7L;\n    long long int x = 5L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int ab =\
    \ 5L;\n    long long int ac = 7L;\n    long long int ad = 5L;\n    long long int\
    \ ae = 7L;\n    long long int af = 5L;\n    long long int ag = 7L;\n    long long\
    \ int ah = 3L;\n    long long int ai = 5L;\n    long long int aj = 3L;\n    long\
    \ long int ak = 7L;\n    long long int al = 5L;\n    long long int am = 7L;\n\
    \    long long int an = 5L;\n    long long int ao = 3L;\n    long long int ap\
    \ = 5L;\n    long long int aq = 7L;\n    long long int ar = 5L;\n    long long\
    \ int as = 7L;\n    long long int at = 5L;\n    long long int au = 3L;\n    long\
    \ long int av = 5L;\n    long long int aw = 7L;\n    long long int ax = 5L;\n\
    \    long long int ay = 7L;\n    long long int az = 3L;\n    long long int ba\
    \ = 3L;\n    long long int bb = 5L;\n    long long int bc = 7L;\n    long long\
    \ int bd = 5L;\n    long long int be = 7L;\n    long long \nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb1zthuwk.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpb1zthuwk.d(15): Error: no identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpb1zthuwk.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpb1zthuwk.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpb1zthuwk.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpb1zthuwk.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpb1zthuwk.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpb1zthuwk.d(22): Error: no identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpb1zthuwk.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpb1zthuwk.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpb1zthuwk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 3;\n    long long int j = 3;\n\
    \    long long int k = 3;\n    long long int l = 3;\n    long long int m = 3;\n\
    \    long long int n = 3;\n    long long int o = 3;\n    long long int p = 3;\n\
    \    long long int q = 3;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 3;\n\
    \    long long int w = 3;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 3;\n    long long int B = 3;\n\
    \    long long int C = 3;\n    long long int D = 3;\n    long long int E = 3;\n\
    \    long long int F = 3;\n    long long int G = 3;\n    long long int H = 3;\n\
    \    long long int I = 3;\n    long long int J = 3;\n    long long int K = 3;\n\
    \    long long int L = 3;\n    long long int M = 3;\n    long long int N = 3;\n\
    \    long long int O = 3;\n    long long int P = 3;\n    long long int Q = 3;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 3;\n    long long int W = 3;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 3;\n    long long int B = 3;\n    long long int C = 3;\n\
    \    long long int D = 3;\n    long long int E = 3;\n    long long int F = 3;\n\
    \    long long int G = 3;\n    long long int H = 3;\n    long long int I = 3;\n\
    \    long long int J = 3;\n    long long int K = 3;\n    long long int L = 3;\n\
    \    long long int M = 3;\n    long long int N = 3;\n    long long int O = 3;\n\
    \    long long int P = 3;\n    long long int Q = 3;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 3;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplrlyckor.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmplrlyckor.d(15): Error: no identifier for declarator `long`\n/tmp/tmplrlyckor.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmplrlyckor.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmplrlyckor.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmplrlyckor.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmplrlyckor.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmplrlyckor.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmplrlyckor.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmplrlyckor.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmplrlyckor.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmplrlyckor.d(22): Error: no identifier for declarator `long`\n/tmp/tmplrlyckor.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmplrlyckor.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmplrlyckor.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmplrlyckor.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a / 3;\n    long c = a % 3;\n    long d = b * 3;\n    long e = c\
    \ / 5;\n    long f = c % 5;\n    long g = d * 5;\n    long h = e * 5;\n    long\
    \ i = g / 7;\n    long j = g % 7;\n    long k = h * 7;\n    long l = i * 7;\n\
    \    long m = j * 7;\n    long n = k * 7;\n    long o = l * 7;\n    long p = m\
    \ * 7;\n    long q = n * 7;\n    long r = o * 7;\n    long s = p * 7;\n    long\
    \ t = q * 7;\n    long u = r * 7;\n    long v = s * 7;\n    long w = t * 7;\n\
    \    long x = u * 7;\n    long y = v * 7;\n    long z = w * 7;\n    \n    if (a\
    \ == 1) \n    {\n        return true;\n    }\n    if (a == 2) \n    {\n      \
    \  return true;\n    }\n    if (a == 3) \n    {\n        return true;\n    }\n\
    \    if (a == 4) \n    {\n        return true;\n    }\n    if (a == 5) \n    {\n\
    \        return true;\n    }\n    if (a == 6) \n    {\n        return true;\n\
    \    }\n    if (a == 7) \n    {\n        return true;\n    }\n    if (a == 8)\
    \ \n    {\n        return true;\n    }\n    if (a == 9) \n    {\n        return\
    \ true;\n    }\n    if (a == 10) \n    {\n        return true;\n    }\n    if\
    \ (a == 11) \n    {\n        return true;\n    }\n    if (a == 12) \n    {\n \
    \       return true;\n    }\n    if (a == 13) \n    {\n        return true;\n\
    \    }\n    if (a == 14) \n    {\n        return true;\n    }\n    if (a == 15)\
    \ \n    {\n        return true;\n    }\n    if (a == 16) \n    {\n        return\
    \ true;\n    }\n    if (a == 17) \n    {\n        return true;\n    }\n    if\
    \ (a == 18) \n    {\n        return true;\n    }\n    if (a == 19) \n    {\n \
    \       return true;\n    }\n    if (a == 20) \n    {\n        return true;\n\
    \    }\n    if (a == 21) \n    {\n        return true;\n    }\n    if (a == 22)\
    \ \n    {\n        return true;\n    }\n    if (a == 23) \n    {\n        return\
    \ true;\n    }\n    if (a == 24) \n    {\n        return true;\n    }\n    if\
    \ (a == 25) \n    {\n        return true;\n    }\n    if (a == 26) \n    {\n \
    \       return true;\n    }\n    if (a == 27) \n    {\n        return true;\n\
    \    }\n    if (a == 28) \n    {\n        return true;\n    }\n    if (a == 29)\
    \ \n    {\n        return true;\n    }\n    if (a == 30) \n    {\n        return\
    \ true;\n    }\n    if (a == 31) \n    {\n        return true;\n    }\n    if\
    \ (a == 32) \n    {\n        return true;\n    }\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdr5zge0t.d(169): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdr5zge0t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5j3mygi2.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5j3mygi2.d(15): Error: no identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp5j3mygi2.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp5j3mygi2.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp5j3mygi2.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp5j3mygi2.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp5j3mygi2.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5j3mygi2.d(22): Error: no identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp5j3mygi2.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp5j3mygi2.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5j3mygi2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5, d = 7;\n    bool flag = false;\n    while(a >\
    \ 0)\n    {\n        if(a % b == 0)\n        {\n            if(b == c)\n     \
    \       {\n                flag = true;\n                break;\n            }\n\
    \            else\n            {\n                b += 2;\n            }\n   \
    \     }\n        else\n        {\n            if(a % d == 0)\n            {\n\
    \                flag = true;\n                break;\n            }\n       \
    \     else\n            {\n                d += 2;\n            }\n        }\n\
    \        a -= 1;\n    }\n    return flag;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work. Try it with `is_multiply_prime(30L)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works fine. Can you give me an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\nIt doesn't work for `is_multiply_prime(30L)`. Try\
    \ it with `is_multiply_prime(30L)`.\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine. Can you give me an example where it doesn't work?\n<|/ c |>\n<| c |>\n\
    It doesn't work for `is_multiply_prime(30L)`. Try it with `is_multiply_prime(30L)`.\n\
    <|/ c |>\n<| a tags=c++,primes,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <cmath>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmmlk81hn.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpmmlk81hn.d(15): Error: no identifier for declarator `long`\n/tmp/tmpmmlk81hn.d(47):
    Error: declaration expected, not `<`\n/tmp/tmpmmlk81hn.d(50): Error: unterminated
    character constant\n/tmp/tmpmmlk81hn.d(53): Error: unterminated character constant\n/tmp/tmpmmlk81hn.d(56):
    Error: unterminated character constant\n/tmp/tmpmmlk81hn.d(59): Error: unterminated
    character constant\n/tmp/tmpmmlk81hn.d(62): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmmlk81hn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 3;\n    long d = 5;\n    long e = 7;\n    long\
    \ f = 9;\n    long g = 11;\n    long h = 13;\n    long i = 17;\n    long j = 21;\n\
    \    long k = 29;\n    long l = 31;\n    long m = 43;\n    long n = 57;\n    long\
    \ o = 61;\n    long p = 69;\n    long q = 83;\n    long r = 97;\n    long s =\
    \ 111;\n    long t = 123;\n    long u = 131;\n    long v = 143;\n    long w =\
    \ 151;\n    long x = 163;\n    long y = 177;\n    long z = 191;\n    long A =\
    \ 233;\n    long B = 285;\n    long C = 317;\n    long D = 369;\n    long E =\
    \ 397;\n    long F = 431;\n    long G = 473;\n    long H = 519;\n    long I =\
    \ 571;\n    long J = 619;\n    long K = 671;\n    long L = 721;\n    long M =\
    \ 769;\n    long N = 829;\n    long O = 881;\n    long P = 927;\n    long Q =\
    \ 987;\n    long R = 1071;\n    long S = 1131;\n    long T = 1253;\n    long U\
    \ = 1343;\n    long V = 1453;\n    long W = 1553;\n    long X = 1653;\n    long\
    \ Y = 1753;\n    long Z = 1851;\n    long aa = 251;\n    long bb = 333;\n    long\
    \ cc = 493;\n    long dd = 673;\n    long ee = 831;\n    long ff = 993;\n    long\
    \ gg = 1123;\n    long hh = 1273;\n    long ii = 1423;\n    long jj = 1673;\n\
    \    long kk = 1823;\n    long ll = 2073;\n    long mm = 2293;\n    long nn =\
    \ 2573;\n    long oo = 2803;\n    long pp = 2953;\n    long qq = 3131;\n    long\
    \ rr = 3371;\n    long ss = 3631;\n    long tt = 3911;\n    long uu = 4233;\n\
    \    long vv = 4373;\n    long ww = 4623;\n    long xx = 4773;\n    long yy =\
    \ 4973;\n    long zz\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n\
    \    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3ewi0d5y.d(92): Error: semicolon expected, not `unittest`\n/tmp/tmp3ewi0d5y.d(92):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp3ewi0d5y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    bool result\
    \ = false;\n    \n    while(c <= b)\n    {\n        if(c % d == 0)\n        {\n\
    \            result = true;\n            break;\n        }\n        \n       \
    \ d += 2;\n        c += 2;\n    }\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_d8a4owt.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_d8a4owt.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_d8a4owt.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_d8a4owt.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    bool flag = false;\n    \n    while(b <= a)\n    {\n        if(b == a)\n\
    \        {\n            flag = true;\n            break;\n        }\n        \n\
    \        if(b % 2 == 0)\n        {\n            if(b == 3)\n            {\n  \
    \              flag = true;\n                break;\n            }\n         \
    \   \n            if(b == 5)\n            {\n                flag = true;\n  \
    \              break;\n            }\n        }\n        \n        if(b % 3 ==\
    \ 0)\n        {\n            if(b == 5)\n            {\n                flag =\
    \ true;\n                break;\n            }\n            \n            if(b\
    \ == 7)\n            {\n                flag = true;\n                break;\n\
    \            }\n        }\n        \n        if(b % 5 == 0)\n        {\n     \
    \       if(b == 7)\n            {\n                flag = true;\n            \
    \    break;\n            }\n        }\n        \n        b += 2;\n    }\n    \n\
    \    return flag;\n}\n</code>\n<|/ a tags=c++,primes,algorithm |>\n<| c |>\nThe\
    \ `while` loop will never terminate because `b` will never be incremented.\n<|/\
    \ c |>\n<| c |>\nYes, I noticed that after I posted my answer. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a tags=c++,primes,algorithm |>\n<code>\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_p5tjc2p.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_p5tjc2p.d(15): Error: no identifier for declarator `long`\n/tmp/tmp_p5tjc2p.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_p5tjc2p.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp_p5tjc2p.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_p5tjc2p.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp_p5tjc2p.d(72): Error: declaration
    expected, not `<`\n/tmp/tmp_p5tjc2p.d(86): Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(87):
    Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(88): Error: declaration
    expected, not `assert`\n/tmp/tmp_p5tjc2p.d(89): Error: declaration expected, not
    `assert`\n/tmp/tmp_p5tjc2p.d(90): Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(91):
    Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(92): Error: declaration
    expected, not `assert`\n/tmp/tmp_p5tjc2p.d(93): Error: declaration expected, not
    `assert`\n/tmp/tmp_p5tjc2p.d(94): Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(95):
    Error: declaration expected, not `assert`\n/tmp/tmp_p5tjc2p.d(96): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_p5tjc2p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3LL;\n    long long int c = 3LL;\n    long long int d =\
    \ 3LL;\n    long long int e = 3LL;\n    long long int f = 3LL;\n    long long\
    \ int g = 3LL;\n    long long int h = 3LL;\n    long long int i = 3LL;\n    long\
    \ long int j = 3LL;\n    long long int k = 3LL;\n    long long int l = 3LL;\n\
    \    long long int m = 3LL;\n    long long int n = 3LL;\n    long long int o =\
    \ 3LL;\n    long long int p = 3LL;\n    long long int q = 3LL;\n    long long\
    \ int r = 3LL;\n    long long int s = 3LL;\n    long long int t = 3LL;\n    long\
    \ long int u = 3LL;\n    long long int v = 3LL;\n    long long int w = 3LL;\n\
    \    long long int x = 3LL;\n    long long int y = 3LL;\n    long long int z =\
    \ 3LL;\n    long long int A = 3LL;\n    long long int B = 3LL;\n    long long\
    \ int C = 3LL;\n    long long int D = 3LL;\n    long long int E = 3LL;\n    long\
    \ long int F = 3LL;\n    long long int G = 3LL;\n    long long int H = 3LL;\n\
    \    long long int I = 3LL;\n    long long int J = 3LL;\n    long long int K =\
    \ 3LL;\n    long long int L = 3LL;\n    long long int M = 3LL;\n    long long\
    \ int N = 3LL;\n    long long int O = 3LL;\n    long long int P = 3LL;\n    long\
    \ long int Q = 3LL;\n    long long int R = 3LL;\n    long long int S = 3LL;\n\
    \    long long int T = 3LL;\n    long long int U = 3LL;\n    long long int V =\
    \ 3LL;\n    long long int W = 3LL;\n    long long int X = 3LL;\n    long long\
    \ int Y = 3LL;\n    long long int Z = 3LL;\n    long long int AA = 3LL;\n    long\
    \ long int BB = 3LL;\n    long long int CC = 3LL;\n    long long int DD = 3LL;\n\
    \    long long int EE = 3LL;\n    long long int FF = 3\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp966v7vz2.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp966v7vz2.d(15): Error: no identifier for declarator `long`\n/tmp/tmp966v7vz2.d(15):
    Error: unrecognized token\n/tmp/tmp966v7vz2.d(16): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmp966v7vz2.d(16): Error: no identifier
    for declarator `long`\n/tmp/tmp966v7vz2.d(16): Error: unrecognized token\n/tmp/tmp966v7vz2.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp966v7vz2.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmp966v7vz2.d(17): Error: unrecognized
    token\n/tmp/tmp966v7vz2.d(18): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp966v7vz2.d(18): Error: no identifier for declarator `long`\n/tmp/tmp966v7vz2.d(18):
    Error: unrecognized token\n/tmp/tmp966v7vz2.d(19): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmp966v7vz2.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp966v7vz2.d(19): Error: unrecognized token\n/tmp/tmp966v7vz2.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp966v7vz2.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmp966v7vz2.d(20): Error: unrecognized
    token\n/tmp/tmp966v7vz2.d(21): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp966v7vz2.d(21): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp966v7vz2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rgu9gfi.d(114): Error: expression expected, not `unittest`\n/tmp/tmp_rgu9gfi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmp_rgu9gfi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_rgu9gfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 3;\n    long d = 5;\n    long e = 7;\n    long\
    \ f = 9;\n    long g = 11;\n    long h = 13;\n    long i = 17;\n    long j = 21;\n\
    \    long k = 29;\n    long l = 33;\n    long m = 43;\n    long n = 53;\n    long\
    \ o = 59;\n    long p = 67;\n    long q = 81;\n    long r = 89;\n    long s =\
    \ 97;\n    long t = 103;\n    long u = 111;\n    long v = 127;\n    long w = 131;\n\
    \    long x = 139;\n    long y = 147;\n    long z = 15;\n    long a = 100;\n \
    \   long b = 100;\n    long c = 100;\n    long d = 100;\n    long e = 100;\n \
    \   long f = 100;\n    long g = 100;\n    long h = 100;\n    long i = 100;\n \
    \   long j = 100;\n    long k = 100;\n    long l = 100;\n    long m = 100;\n \
    \   long n = 100;\n    long o = 100;\n    long p = 100;\n    long q = 100;\n \
    \   long r = 100;\n    long s = 100;\n    long t = 100;\n    long u = 100;\n \
    \   long v = 100;\n    long w = 100;\n    long x = 100;\n    long y = 100;\n \
    \   long z = 100;\n    long a = 100;\n    long b = 100;\n    long c = 100;\n \
    \   long d = 100;\n    long e = 100;\n    long f = 100;\n    long g = 100;\n \
    \   long h = 100;\n    long i = 100;\n    long j = 100;\n    long k = 100;\n \
    \   long l = 100;\n    long m = 100;\n    long n = 100;\n    long o = 100;\n \
    \   long p = 100;\n    long q = 100;\n    long r = 100;\n    long s = 100;\n \
    \   long t = 100;\n    long u = 100;\n    long v = 100;\n    long w = 100;\n \
    \   long x = 100;\n    long y = 100;\n    long z = 100;\n    long a = 100;\n \
    \   long b = 100;\n    long c = 100;\n    long d = 100;\n    long e = 100;\n \
    \   long f = 100;\n    long g = 100;\n    long h = 100;\n    long i = 100;\n \
    \   long j = 100;\n    long k = 100;\n    long l = 100;\n    long m = 100;\n \
    \   long n = 100;\n    long o = 100;\n    long p = 100;\n    long q = 100;\n \
    \   long r = 100;\n    long s = 100;\n    long t = 100;\n    long u = 100;\n \
    \   long v = 100;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n \
    \   assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L)\
    \ == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L)\
    \ == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L)\
    \ == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2bx21sdr.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2bx21sdr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = 5*a;\n    long long int d =\
    \ 7*a;\n    long long int e = 11*a;\n    long long int f = 13*a;\n    long long\
    \ int g = 17*a;\n    long long int h = 19*a;\n    long long int i = 23*a;\n  \
    \  long long int j = 29*a;\n    long long int k = 31*a;\n    long long int l =\
    \ 33*a;\n    long long int m = 37*a;\n    long long int n = 39*a;\n    long long\
    \ int p = 43*a;\n    long long int q = 47*a;\n    long long int r = 51*a;\n  \
    \  long long int s = 53*a;\n    long long int t = 59*a;\n    long long int u =\
    \ 61*a;\n    long long int v = 67*a;\n    long long int w = 71*a;\n    long long\
    \ int x = 79*a;\n    long long int y = 83*a;\n    long long int z = 89*a;\n  \
    \  long long int aa = 97*a;\n    long long int bb = 101*a;\n    long long int\
    \ cc = 105*a;\n    long long int dd = 111*a;\n    long long int ee = 117*a;\n\
    \    long long int ff = 121*a;\n    long long int gg = 127*a;\n    long long int\
    \ hh = 131*a;\n    long long int ii = 137*a;\n    long long int jj = 143*a;\n\
    \    long long int kk = 149*a;\n    long long int ll = 151*a;\n    long long int\
    \ mm = 157*a;\n    long long int nn = 163*a;\n    long long int pp = 169*a;\n\
    \    long long int qq = 173*a;\n    long long int rr = 179*a;\n    long long int\
    \ ss = 183*a;\n    long long int tt = 189*a;\n    long long int uu = 195*a;\n\
    \    long long int vv = 201*a;\n    long long int ww = 207*a;\n    long long int\
    \ xx = 211*a;\n    long long int yy = 215*a;\n    long long int zz = 221*a;\n\
    \    long long int aaa = a+1;\n    long long int bbb = b+1;\n    long long int\
    \ ccc = c+1;\n    long long int ddd = d+1;\n    long long int eee = e+1;\n   \
    \ long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyz9zxidb.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpyz9zxidb.d(15): Error: no identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpyz9zxidb.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpyz9zxidb.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpyz9zxidb.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpyz9zxidb.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpyz9zxidb.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpyz9zxidb.d(22): Error: no identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpyz9zxidb.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyz9zxidb.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyz9zxidb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 11L;\n    long long int i = 13L;\n    long long int j =\
    \ 17L;\n    long long int k = 19L;\n    long long int l = 23L;\n    long long\
    \ int m = 29L;\n    long long int n = 31L;\n    long long int o = 43L;\n    long\
    \ long int p = 47L;\n    long long int q = 59L;\n    long long int r = 61L;\n\
    \    long long int s = 73L;\n    long long int t = 79L;\n    long long int u =\
    \ 83L;\n    long long int v = 89L;\n    long long int w = 101L;\n    long long\
    \ int x = 113L;\n    long long int y = 127L;\n    long long int z = 131L;\n  \
    \  long long int a = 171L;\n    long long int b = 191L;\n    long long int c =\
    \ 231L;\n    long long int d = 291L;\n    long long int e = 371L;\n    long long\
    \ int f = 419L;\n    long long int g = 479L;\n    long long int h = 519L;\n  \
    \  long long int i = 579L;\n    long long int j = 619L;\n    long long int k =\
    \ 679L;\n    long long int l = 729L;\n    long long int m = 799L;\n    long long\
    \ int n = 839L;\n    long long int o = 899L;\n    long long int p = 1059L;\n \
    \   long long int q = 1159L;\n    long long int r = 1259L;\n    long long int\
    \ s = 1359L;\n    long long int t = 1459L;\n    long long int u = 1559L;\n   \
    \ long long int v = 1659L;\n    long long int w = 1759L;\n    long long int x\
    \ = 1859L;\n    long long int y = 1959L;\n    long long int z = 2039L;\n    long\
    \ long int a = 2199L;\n    long long int b = 2399L;\n    long long int c = \n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm0in8wfm.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpm0in8wfm.d(15): Error: no identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpm0in8wfm.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpm0in8wfm.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpm0in8wfm.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpm0in8wfm.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpm0in8wfm.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpm0in8wfm.d(22): Error: no identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpm0in8wfm.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpm0in8wfm.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpm0in8wfm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3, c = 5;\n    bool result = false;\n    \n    while (b\
    \ <= a)\n    {\n        if ((a % b) == 0)\n        {\n            result = true;\n\
    \            break;\n        }\n        \n        if ((a % c) == 0)\n        {\n\
    \            result = true;\n            break;\n        }\n        \n       \
    \ b += 2;\n        c += 2;\n    }\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5t5mkcii.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5t5mkcii.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t5mkcii.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = 2;\n    long d = 2;\n    bool flag = true;\n  \
    \  while(b < 100) {\n        if(!is_prime(b)) {\n            flag = false;\n \
    \           break;\n        }\n        while(b < 100) {\n            if(b % c\
    \ == 0) {\n                flag = false;\n                break;\n           \
    \ }\n            if(b % d == 0) {\n                flag = false;\n           \
    \     break;\n            }\n            c += 2;\n            d += 2;\n      \
    \  }\n        b += 1;\n    }\n    return flag;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This code does not work. `is_prime` returns true for prime numbers. `is_multiply_prime`\
    \ returns true for numbers that are not prime. `is_multiply_prime(30L)` returns\
    \ `true`, but `is_multiply_prime(30L)` should return `false`.\n<|/ c |>\n<| c\
    \ |>\nI edited my answer, I forgot to add `!` before `is_prime` function\n<|/\
    \ c |>\n<| c |>\nI edited my answer, I forgot to add `!` before `is_prime` function\n\
    <|/ c |>\n<| c |>\nI edited my answer, I forgot to add `!` before `is_prime` function\n\
    <|/ c |>\n<| c |>\nI edited my answer, I forgot to add `!` before `is_prime` function\n\
    <|/ c |>\n<| a tags=c++,primes,algorithm |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5k5vrwl1.d(40): Error: declaration expected, not `<`\n/tmp/tmp5k5vrwl1.d(63):
    Error: declaration expected, not `assert`\n/tmp/tmp5k5vrwl1.d(64): Error: declaration
    expected, not `assert`\n/tmp/tmp5k5vrwl1.d(65): Error: declaration expected, not
    `assert`\n/tmp/tmp5k5vrwl1.d(66): Error: declaration expected, not `assert`\n/tmp/tmp5k5vrwl1.d(67):
    Error: declaration expected, not `assert`\n/tmp/tmp5k5vrwl1.d(68): Error: declaration
    expected, not `assert`\n/tmp/tmp5k5vrwl1.d(69): Error: declaration expected, not
    `assert`\n/tmp/tmp5k5vrwl1.d(70): Error: declaration expected, not `assert`\n/tmp/tmp5k5vrwl1.d(71):
    Error: declaration expected, not `assert`\n/tmp/tmp5k5vrwl1.d(72): Error: declaration
    expected, not `assert`\n/tmp/tmp5k5vrwl1.d(73): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5k5vrwl1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3LL;\n    long long int c = 5LL;\n    long long int d =\
    \ 7LL;\n    long long int e = 3LL;\n    long long int f = 5LL;\n    long long\
    \ int g = 7LL;\n    long long int h = 3LL;\n    long long int i = 5LL;\n    long\
    \ long int j = 3LL;\n    long long int k = 3LL;\n    long long int l = 5LL;\n\
    \    long long int m = 7LL;\n    long long int n = 5LL;\n    long long int o =\
    \ 3LL;\n    long long int p = 5LL;\n    long long int q = 7LL;\n    long long\
    \ int r = 5LL;\n    long long int s = 7LL;\n    long long int t = 5LL;\n    long\
    \ long int u = 3LL;\n    long long int v = 5LL;\n    long long int w = 7LL;\n\
    \    long long int x = 5LL;\n    long long int y = 7LL;\n    long long int z =\
    \ 3LL;\n    long long int aa = 3LL;\n    long long int bb = 5LL;\n    long long\
    \ int cc = 7LL;\n    long long int dd = 5LL;\n    long long int ee = 3LL;\n  \
    \  long long int ff = 5LL;\n    long long int gg = 7LL;\n    long long int hh\
    \ = 3LL;\n    long long int ii = 5LL;\n    long long int jj = 3LL;\n    long long\
    \ int kk = 3LL;\n    long long int ll = 5LL;\n    long long int mm = 7LL;\n  \
    \  long long int nn = 3LL;\n    long long int oo = 3LL;\n    long long int pp\
    \ = 5LL;\n    long long int qq = 7LL;\n    long long int rr = 5LL;\n    long long\
    \ int ss = 7LL;\n    long long int tt = 5LL;\n    long long int uu = 3LL;\n  \
    \  long long int vv = 5LL;\n    long long int ww = 7LL;\n    long long int xx\
    \ = 5LL;\n    long long int yy = 7LL;\n    long long int zz = 3LL;\n    long long\
    \ int aaa = 3LL;\n    long long int bbb = 5LL;\n    long long int ccc = 7LL;\n\
    \    long long int dd = 5LL;\n    long long \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpncv1mr81.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpncv1mr81.d(15): Error: no identifier for declarator `long`\n/tmp/tmpncv1mr81.d(15):
    Error: unrecognized token\n/tmp/tmpncv1mr81.d(16): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpncv1mr81.d(16): Error: no identifier
    for declarator `long`\n/tmp/tmpncv1mr81.d(16): Error: unrecognized token\n/tmp/tmpncv1mr81.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpncv1mr81.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpncv1mr81.d(17): Error: unrecognized
    token\n/tmp/tmpncv1mr81.d(18): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpncv1mr81.d(18): Error: no identifier for declarator `long`\n/tmp/tmpncv1mr81.d(18):
    Error: unrecognized token\n/tmp/tmpncv1mr81.d(19): Error: use `long` for a 64
    bit integer instead of `long long`\n/tmp/tmpncv1mr81.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpncv1mr81.d(19): Error: unrecognized token\n/tmp/tmpncv1mr81.d(20):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpncv1mr81.d(20):
    Error: no identifier for declarator `long`\n/tmp/tmpncv1mr81.d(20): Error: unrecognized
    token\n/tmp/tmpncv1mr81.d(21): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpncv1mr81.d(21): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpncv1mr81.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 0;\n    long long int f = 1;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = 1;\n    long long int b = 1;\n\
    \    long long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n\
    \    long long int f = 1;\n    long long int g = 1;\n    long long int h = 1;\n\
    \    long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n\
    \    long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n\
    \    long long int d = 1;\n    long long int e = 1;\n    long long int f = 1;\n\
    \    long long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n\
    \    long long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n\
    \    long long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n\
    \    long long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n\
    \    long long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n\
    \    long long int v = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2auojf5.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpu2auojf5.d(15): Error: no identifier for declarator `long`\n/tmp/tmpu2auojf5.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpu2auojf5.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpu2auojf5.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpu2auojf5.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpu2auojf5.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpu2auojf5.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpu2auojf5.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpu2auojf5.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpu2auojf5.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpu2auojf5.d(22): Error: no identifier for declarator `long`\n/tmp/tmpu2auojf5.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpu2auojf5.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu2auojf5.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpu2auojf5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    bool result = false;\n\
    \    \n    while(b != 0)\n    {\n        if(b % c == 0)\n        {\n         \
    \   result = true;\n            break;\n        }\n        \n        c = c + 1;\n\
    \        b = b / c;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8eozyq5g.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8eozyq5g.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8eozyq5g.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8eozyq5g.d(16):
    Error: no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp8eozyq5g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    bool flag = false;\n    \n    while(c <= b)\n \
    \   {\n        while(b % d == 0)\n        {\n            d += 2;\n        }\n\
    \        while(b % e == 0)\n        {\n            e += 2;\n        }\n      \
    \  if(d == e)\n        {\n            flag = true;\n            break;\n     \
    \   }\n        c += 2;\n    }\n    return flag;\n}\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8frjx2oc.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp8frjx2oc.d(15): Error: no identifier for declarator `long`\n/tmp/tmp8frjx2oc.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8frjx2oc.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp8frjx2oc.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp8frjx2oc.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp8frjx2oc.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp8frjx2oc.d(18): Error: no
    identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8frjx2oc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_6ota88.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpz_6ota88.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz_6ota88.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpz_6ota88.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpz_6ota88.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpz_6ota88.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpz_6ota88.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(22): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpz_6ota88.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 5;\n    long long int j = 5;\n\
    \    long long int k = 5;\n    long long int l = 5;\n    long long int m = 5;\n\
    \    long long int n = 5;\n    long long int o = 5;\n    long long int p = 5;\n\
    \    long long int q = 5;\n    long long int r = 5;\n    long long int s = 5;\n\
    \    long long int t = 5;\n    long long int u = 5;\n    long long int v = 5;\n\
    \    long long int w = 5;\n    long long int x = 5;\n    long long int y = 5;\n\
    \    long long int z = 5;\n    \n    while(c <= b)\n    {\n        while(d <=\
    \ b)\n        {\n            while(e <= b)\n            {\n                while(f<=b)\n\
    \                {\n                    while(g<=b)\n                    {\n \
    \                       while(h<=b)\n                        {\n             \
    \               while(i<=b)\n                            {\n                 \
    \               while(j<=b)\n                                {\n             \
    \                       while(k<=b)\n                                    {\n \
    \                                       while(l<=b)\n                        \
    \                {\n                                            while(m<=b)\n\
    \                                            {\n                             \
    \                   while(n<=b)\n                                            \
    \    {\n                                                    while(o<=b)\n    \
    \                                                {\n                         \
    \                               while(p<=b)\n                                \
    \                        {\n                                                 \
    \           while(q<=b)\n                                                    \
    \        {\n                                                                while(r<=b)\n\
    \                                                                {\n         \
    \                                                           while(s<=b)\n    \
    \                                                                {\n         \
    \                                                               while(t<=b)\n\
    \                                                                        {\n \
    \                                                                           while(u<=b)\n\
    \                                                                            {\n\
    \                                                                            \
    \    while(v<=b)\n                                                           \
    \                     {\n                                                    \
    \                                while(w<=b)\n                               \
    \                                                     {\n                    \
    \                                                                    while(x<=b)\n\
    \                                                                            \
    \            {\n                                                             \
    \                               while(y=<=b)\n                               \
    \                                                             {\n            \
    \                                                                            \
    \        while(z<=b)\n                                                       \
    \                                         {\n                                \
    \                                                                    if(c % 2\
    \ == 0)\n                                                                    \
    \                                {\n                                         \
    \                                                               if(d % 2 == 0)\n\
    \                                                                            \
    \                            {\n                                             \
    \                                                               if(e % 2 == 0)\n\
    \                                                                            \
    \                                {\n                                         \
    \                                                                       if(f %\
    \ 2 == 0)\n                                                                  \
    \                                              {\n                           \
    \                                                                            \
    \             if(g % 2 == 0)\n                                               \
    \                                                                     {\n    \
    \                                                                            \
    \                                        if(h % 2 == 0)\n                    \
    \                                                                            \
    \                        {\n                                                 \
    \                                                                           if(i%2\
    \ == 0)\n                                                                    \
    \                                                        {\n                 \
    \                                                                            \
    \                                   if(j%2 == 0)\n                           \
    \                                                                            \
    \                         {\n                                                \
    \                                                                            \
    \        if(k%2 == 0)\n                                                      \
    \                                                                            \
    \  {\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuuwcm5zx.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpuuwcm5zx.d(15): Error: no identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpuuwcm5zx.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpuuwcm5zx.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpuuwcm5zx.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpuuwcm5zx.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpuuwcm5zx.d(22): Error: no identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpuuwcm5zx.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuuwcm5zx.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpuuwcm5zx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    bool flag = false;\n    long d = 2;\n \
    \   long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i\
    \ = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n \
    \   long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long r\
    \ = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n \
    \   long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long A\
    \ = 2;\n    long B = 2;\n    long C = 2;\n    long D = 2;\n    long E = 2;\n \
    \   long F = 3;\n    long G = 3;\n    long H = 3;\n    long I = 2;\n    long J\
    \ = 2;\n    long K = 2;\n    long L = 2;\n    long M = 2;\n    long N = 2;\n \
    \   long O = 2;\n    long P = 2;\n    long Q = 2;\n    long R = 2;\n    long S\
    \ = 2;\n    long T = 2;\n    long U = 2;\n    long V = 2;\n    long W = 2;\n \
    \   long X = 2;\n    long Y = 2;\n    long Z = 2;\n    long AA = 2;\n    long\
    \ AB = 2;\n    long AC = 2;\n    long AD = 2;\n    long AE = 2;\n    long AF =\
    \ 3;\n    long AG = 3;\n    long AH = 3;\n    long AI = 2;\n    long AJ = 2;\n\
    \    long AK = 2;\n    long AL = 2;\n    long AM = 2;\n    long AN = 2;\n    long\
    \ AO = 2;\n    long AP = 2;\n    long AQ = 2;\n    long AR = 2;\n    long AS =\
    \ 2;\n    long AT = 2;\n    long AU = 2;\n    long AV = 2;\n    long AW = 2;\n\
    \    long AX = 2;\n    long AY = 2;\n    long AZ = 2;\n    long BA = 2;\n    long\
    \ BB = 2;\n    long BC = 2;\n    long BD = 2;\n    long BE = 2;\n    long BF =\
    \ 3;\n    long BG = 3;\n    long BH = 3;\n    long BI = 2;\n    long BJ = 2;\n\
    \    long BK = 2;\n    long BL = 2;\n    long BM = 2;\n    long BN = 2;\n    long\
    \ BO = 2;\n    long BP = 2;\n    long BQ = 2;\n    long BR = 2;\n    long BS =\
    \ 2;\n    long BT = 2;\n    long BU = 2;\n    long BV = 2;\n    long BW\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplqo8k2hk.d(116): Error: semicolon expected, not `unittest`\n/tmp/tmplqo8k2hk.d(116):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplqo8k2hk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 1;\n    bool flag = false;\n    for(long\
    \ long i = 3; i <= b; i += 2)\n    {\n        if(a % i == 0)\n        {\n    \
    \        c = 1;\n            flag = true;\n            break;\n        }\n   \
    \     else\n        {\n            c++;\n        }\n    }\n    if(flag)\n    {\n\
    \        return true;\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,primes\
    \ |>\n<| c |>\nThis code will give wrong output for large numbers. Try with 1000000000.\n\
    <|/ c |>\n<| c |>\nI tested it with 1000000000 and it works fine.\n<|/ c |>\n\
    <| c |>\nI tested it with 1000000000 and it works fine.\n<|/ c |>\n<| c |>\nI\
    \ tested it with 1000000000 and it works fine.\n<|/ c |>\n<| c |>\nI tested it\
    \ with 1000000000 and it works fine.\n<|/ c |>\n<| a tags=c++,primes |>\n<code>\n\
    #include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n\
    #include <ctime>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n\
    #include <iomanip>\n#include <sstream>\n#include <string>\n#include <set>\n#include\
    \ <map>\n#include <list>\n#include <queue>\n#include <stack>\n#include <memory>\n\
    #include <iostream>\n#include <functional>\n#include <new>\n#include <algorithm>\n\
    #include <cmath>\n#include <ctime>\n#include <cstdlib>\n#include <cstring>\n#include\
    \ <vector>\n#include <algorithm>\n#include <iomanip>\n#include <sstream>\n#include\
    \ <string>\n#include <set>\n#include <map>\n#include <list>\n#include <queue>\n\
    #include <stack>\n#include <memory>\n#include <iostream>\n#include <functional>\n\
    #include <new>\n#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include\
    \ <cstdlib>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include\
    \ <iomanip>\n#include <sstream>\n#include <string>\n#include <set>\n#include <map>\n\
    #include <list>\n#include <queue>\n#include <stack>\n#include <memory>\n#include\
    \ <iostream>\n#include <functional>\n#include <new>\n#include <algorithm>\n#include\
    \ <cmath>\n#include <ctime>\n#include <cstdlib>\n#include <cstring>\n#include\
    \ <vector>\n#include <algorithm>\n#include <iomanip>\n#include <sstream>\n#include\
    \ <string>\n#include <set>\n#include <map\nunittest\n{\n    alias candidate =\
    \ is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprh33j44y.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmprh33j44y.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmprh33j44y.d(18): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmprh33j44y.d(37): Error: declaration expected,
    not `<`\n/tmp/tmprh33j44y.d(130): Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(131):
    Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(132): Error: declaration
    expected, not `assert`\n/tmp/tmprh33j44y.d(133): Error: declaration expected,
    not `assert`\n/tmp/tmprh33j44y.d(134): Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(135):
    Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(136): Error: declaration
    expected, not `assert`\n/tmp/tmprh33j44y.d(137): Error: declaration expected,
    not `assert`\n/tmp/tmprh33j44y.d(138): Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(139):
    Error: declaration expected, not `assert`\n/tmp/tmprh33j44y.d(140): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprh33j44y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    long long A = 2;\n    long long B = 2;\n    long long C = 2;\n \
    \   long long D = 2;\n    long long E = 2;\n    long long F = 3;\n    long long\
    \ G = 3;\n    long long H = 3;\n    long long I = 2;\n    long long J = 2;\n \
    \   long long K = 2;\n    long long L = 2;\n    long long M = 2;\n    long long\
    \ N = 2;\n    long long O = 2;\n    long long P = 2;\n    long long Q = 2;\n \
    \   long long R = 2;\n    long long S = 2;\n    long long T = 2;\n    long long\
    \ U = 2;\n    long long V = 2;\n    long long W = 2;\n    long long X = 2;\n \
    \   long long Y = 2;\n    long long Z = 2;\n    long long A = 2;\n    long long\
    \ B = 2;\n    long long C = 2;\n    long long D = 2;\n    long long E = 2;\n \
    \   long long F = 3;\n    long long G = 3;\n    long long H = 3;\n    long long\
    \ I = 2;\n    long long J = 2;\n    long long K = 2;\n    long long L = 2;\n \
    \   long long M = 2;\n    long long N = 2;\n    long long O = 2;\n    long long\
    \ P = 2;\n    long long Q = 2;\n    long long R = 2;\n    long long S = 2;\n \
    \   long long T = 2;\n    long long U = 2;\n    long long V = 2;\n    long long\
    \ W = 2;\n    long long X = 2;\n    long long Y = 2;\n    long long Z = 2;\n \
    \   long long A = 2;\n    long long B = 2;\n    long long C = 2;\n    long long\
    \ D = 2;\n    long long E = 2;\n    long long F = 3;\n    long long G = 3;\n \
    \   long long H = 3;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphw1826ci.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmphw1826ci.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmphw1826ci.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmphw1826ci.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphw1826ci.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    bool flag = false;\n    for(i=2;i<=a;i++)\n    {\n\
    \        if(a%i==0)\n        {\n            flag = true;\n            break;\n\
    \        }\n    }\n    return flag;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdusaecsm.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpdusaecsm.d(15): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdusaecsm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rgu9gfi.d(114): Error: expression expected, not `unittest`\n/tmp/tmp_rgu9gfi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmp_rgu9gfi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_rgu9gfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 2L;\n    long long int d = 1L;\n\
    \    long long int e = 1L;\n    long long int f = 1L;\n    long long int g = 1L;\n\
    \    long long int h = 1L;\n    long long int i = 2L;\n    long long int j = 1L;\n\
    \    long long int k = 1L;\n    long long int l = 1L;\n    long long int m = 2L;\n\
    \    long long int n = 2L;\n    long long int o = 1L;\n    long long int p = 2L;\n\
    \    long long int q = 1L;\n    long long int r = 1L;\n    long long int s = 2L;\n\
    \    long long int t = 1L;\n    long long int u = 1L;\n    long long int v = 1L;\n\
    \    long long int w = 1L;\n    long long int x = 2L;\n    long long int y = 2L;\n\
    \    long long int z = 1L;\n    long long int A = 1L;\n    long long int B = 1L;\n\
    \    long long int C = 1L;\n    long long int D = 1L;\n    long long int E = 1L;\n\
    \    long long int F = 1L;\n    long long int G = 1L;\n    long long int H = 1L;\n\
    \    long long int I = 1L;\n    long long int J = 1L;\n    long long int K = 1L;\n\
    \    long long int L = 1L;\n    long long int M = 1L;\n    long long int N = 1L;\n\
    \    long long int O = 1L;\n    long long int P = 1L;\n    long long int Q = 1L;\n\
    \    long long int R = 1L;\n    long long int S = 1L;\n    long long int T = 1L;\n\
    \    long long int U = 1L;\n    long long int V = 1L;\n    long long int W = 1L;\n\
    \    long long int X = 1L;\n    long long int Y = 1L;\n    long long int Z = 1L;\n\
    \    long long int A = 1L;\n    long long int B = 1L;\n    long long int C = 1L;\n\
    \    long long int D = 1L;\n    long long int E = 1L;\n    long long int F = 1\n\
    unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn68q0lhx.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpn68q0lhx.d(15): Error: no identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpn68q0lhx.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpn68q0lhx.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpn68q0lhx.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpn68q0lhx.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpn68q0lhx.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpn68q0lhx.d(22): Error: no identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpn68q0lhx.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpn68q0lhx.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpn68q0lhx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_6ota88.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpz_6ota88.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz_6ota88.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpz_6ota88.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpz_6ota88.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpz_6ota88.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpz_6ota88.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(22): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpz_6ota88.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_6ota88.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(15): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpz_6ota88.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpz_6ota88.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpz_6ota88.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpz_6ota88.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpz_6ota88.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpz_6ota88.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpz_6ota88.d(22): Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpz_6ota88.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz_6ota88.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpz_6ota88.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool result = false;\n    \n    while(a\
    \ > 0)\n    {\n        if(a % b == 0)\n        {\n            if(b == c)\n   \
    \         {\n                result = true;\n                break;\n        \
    \    }\n            else\n            {\n                b = b + 1;\n        \
    \    }\n        }\n        else\n        {\n            b = b + 1;\n        }\n\
    \        c = c + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 5L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 5L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 3L;\n    long long int y = 3L;\n\
    \    long long int z = 3L;\n    long long int aa = 3L;\n    long long int bb =\
    \ 3L;\n    long long int cc = 3L;\n    long long int dd = 5L;\n    long long int\
    \ ee = 3L;\n    long long int ff = 3L;\n    long long int gg = 5L;\n    long long\
    \ int hh = 3L;\n    long long int ii = 5L;\n    long long int jj = 3L;\n    long\
    \ long int kk = 3L;\n    long long int ll = 5L;\n    long long int mm = 5L;\n\
    \    long long int nn = 3L;\n    long long int oo = 3L;\n    long long int pp\
    \ = 5L;\n    long long int qq = 3L;\n    long long int rr = 5L;\n    long long\
    \ int ss = 3L;\n    long long int tt = 5L;\n    long long int uu = 3L;\n    long\
    \ long int vv = 3L;\n    long long int ww = 3L;\n    long long int xx = 3L;\n\
    \    long long int yy = 3L;\n    long long int zz = 3L;\n    long long int aaa\
    \ = 3L;\n    long long int bbb = 3L;\n    long long int ccc = 3L;\n    long long\
    \ int ddd = 5L;\n    long long int eee = 3\nunittest\n{\n    alias candidate =\
    \ is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_fkqjat.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp2_fkqjat.d(15): Error: no identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp2_fkqjat.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp2_fkqjat.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp2_fkqjat.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp2_fkqjat.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp2_fkqjat.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp2_fkqjat.d(22): Error: no identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp2_fkqjat.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2_fkqjat.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp2_fkqjat.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 5L;\n    long long int d = 7L;\n\
    \    long long int e = 11;\n    long long int f = 13;\n    long long int g = 17;\n\
    \    long long int h = 21;\n    long long int i = 23;\n    long long int j = 29;\n\
    \    long long int k = 31;\n    long long int l = 33;\n    long long int m = 37;\n\
    \    long long int n = 39;\n    long long int o = 43;\n    long long int p = 47;\n\
    \    long long int q = 51;\n    long long int r = 55;\n    long long int s = 59;\n\
    \    long long int t = 63;\n    long long int u = 67;\n    long long int v = 71;\n\
    \    long long int w = 75;\n    long long int x = 79;\n    long long int y = 83;\n\
    \    long long int z = 9;\n    long long int A = 1;\n    long long int B = 2;\n\
    \    long long int C = 3;\n    long long int D = 4;\n    long long int E = 5;\n\
    \    long long int F = 6;\n    long long int G = 7;\n    long long int H = 8;\n\
    \    long long int I = 9;\n    long long int J = 10;\n    long long int K = 11;\n\
    \    long long int L = 12;\n    long long int M = 13;\n    long long int N = 14;\n\
    \    long long int O = 15;\n    long long int P = 16;\n    long long int Q = 17;\n\
    \    long long int R = 18;\n    long long int S = 19;\n    long long int T = 20;\n\
    \    long long int U = 21;\n    long long int V = 22;\n    long long int W = 23;\n\
    \    long long int X = 24;\n    long long int Y = 25;\n    long long int Z = 26;\n\
    \    long long int aa = 1;\n    long long int bb = 2;\n    long long int cc =\
    \ 3;\n    long long int dd = 4;\n    long long int ee = 5;\n    long long int\
    \ ff = 6;\n    long long int gg = 7;\n    long long int hh = 8;\n    long long\
    \ int ii = 9;\n    long long int jj = 10;\n    long long int kk = 11;\n    long\
    \ long int ll = 12;\n    long long int mm = 13;\n    long long int nn = 14;\n\
    \    long long int oo = 15;\n    long long int pp = 16;\n    long long int qq\
    \ = \nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
    \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) ==\
    \ true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) ==\
    \ false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) ==\
    \ false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1xgb941l.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp1xgb941l.d(15): Error: no identifier for declarator `long`\n/tmp/tmp1xgb941l.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp1xgb941l.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp1xgb941l.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp1xgb941l.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp1xgb941l.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp1xgb941l.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp1xgb941l.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp1xgb941l.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp1xgb941l.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp1xgb941l.d(22): Error: no identifier for declarator `long`\n/tmp/tmp1xgb941l.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp1xgb941l.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp1xgb941l.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1xgb941l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = a;\n    bool isPrime = true;\n    while(c < 100)\
    \ {\n        long d = c % b;\n        if(d == 0) {\n            isPrime = false;\n\
    \            break;\n        }\n        c += 1;\n        b += 1;\n    }\n    return\
    \ isPrime;\n}\n</code>\n<|/ a tags=c++,primes |>\n<| c |>\nThis code does not\
    \ work. `is_multiply_prime(30L)` returns `true` but `is_multiply_prime(31L)` returns\
    \ `false`.\n<|/ c |>\n<| c |>\nI tested it on ideone and it works. I guess you\
    \ missed something in the code. Can you please post the code you tested?\n<|/\
    \ c |>\n<| c |>\nI tested it on ideone and it works. I guess you missed something\
    \ in the code. Can you please post the code you tested?\n<|/ c |>\n<| c |>\nI\
    \ tested it on ideone and it works. I guess you missed something in the code.\
    \ Can you please post the code you tested?\n<|/ c |>\n<| c |>\nI tested it on\
    \ ideone and it works. I guess you missed something in the code. Can you please\
    \ post the code you tested?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <cmath>\nusing namespace std;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa1ff3cwf.d(29): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa1ff3cwf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long b = a;\n    long long c = 2;\n    long long d = 2;\n    long long\
    \ e = 2;\n    long long f = 3;\n    long long g = 3;\n    long long h = 3;\n \
    \   long long i = 2;\n    long long j = 2;\n    long long k = 2;\n    long long\
    \ l = 2;\n    long long m = 2;\n    long long n = 2;\n    long long o = 2;\n \
    \   long long p = 2;\n    long long q = 2;\n    long long r = 2;\n    long long\
    \ s = 2;\n    long long t = 2;\n    long long u = 2;\n    long long v = 2;\n \
    \   long long w = 2;\n    long long x = 2;\n    long long y = 2;\n    long long\
    \ z = 2;\n    long long A = 2;\n    long long B = 2;\n    long long C = 2;\n \
    \   long long D = 2;\n    long long E = 2;\n    long long F = 3;\n    long long\
    \ G = 3;\n    long long H = 3;\n    long long I = 2;\n    long long J = 2;\n \
    \   long long K = 2;\n    long long L = 2;\n    long long M = 2;\n    long long\
    \ N = 2;\n    long long O = 2;\n    long long P = 2;\n    long long Q = 2;\n \
    \   long long R = 2;\n    long long S = 2;\n    long long T = 2;\n    long long\
    \ U = 2;\n    long long V = 2;\n    long long W = 2;\n    long long X = 2;\n \
    \   long long Y = 2;\n    long long Z = 2;\n    long long A = 2;\n    long long\
    \ B = 2;\n    long long C = 2;\n    long long D = 2;\n    long long E = 2;\n \
    \   long long F = 3;\n    long long G = 3;\n    long long H = 3;\n    long long\
    \ I = 2;\n    long long J = 2;\n    long long K = 2;\n    long long L = 2;\n \
    \   long long M = 2;\n    long long N = 2;\n    long long O = 2;\n    long long\
    \ P = 2;\n    long long Q = 2;\n    long long R = 2;\n    long long S = 2;\n \
    \   long long T = 2;\n    long long U = 2;\n    long long V = 2;\n    long long\
    \ W = 2;\n    long long X = 2;\n    long long Y = 2;\n    long long Z = 2;\n \
    \   long long A = 2;\n    long long B = 2;\n    long long C = 2;\n    long long\
    \ D = 2;\n    long long E = 2;\n    long long F = 3;\n    long long G = 3;\n \
    \   long long H = 3;\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphw1826ci.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmphw1826ci.d(16): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmphw1826ci.d(17): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmphw1826ci.d(18): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(19): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(21): Error:
    use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(22):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(24):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(25):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(26):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(27):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(28):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(29):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(30):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(31):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(32):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(33):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphw1826ci.d(34):
    Error: use `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphw1826ci.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 2;\n    long long int d = 2;\n\
    \    long long int e = 2;\n    long long int f = 3;\n    long long int g = 3;\n\
    \    long long int h = 3;\n    long long int i = 2;\n    long long int j = 2;\n\
    \    long long int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n\
    \    long long int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n\
    \    long long int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n\
    \    long long int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n\
    \    long long int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n\
    \    long long int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n\
    \    long long int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n\
    \    long long int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n\
    \    long long int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n\
    \    long long int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n\
    \    long long int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n\
    \    long long int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n\
    \    long long int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n\
    \    long long int V = 2;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9wqoerwy.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(15): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp9wqoerwy.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp9wqoerwy.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp9wqoerwy.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp9wqoerwy.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp9wqoerwy.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp9wqoerwy.d(22): Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp9wqoerwy.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp9wqoerwy.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9wqoerwy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool result = false;\n    \n    while (a\
    \ > 0)\n    {\n        if (a % b == 0)\n        {\n            c = 1;\n      \
    \  }\n        else\n        {\n            c++;\n        }\n        if (c > 3)\n\
    \        {\n            result = true;\n            break;\n        }\n      \
    \  b++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvgt_1zkb.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e2d]\n??:? void tmpvgt_1zkb.__unittest_L38_C1() [0x427a7e]\n??:?
    void tmpvgt_1zkb.__modtest() [0x427bac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42827c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428203]\n??:? _d_run_main [0x42816e]\n??:? main [0x427bbf]\n??:?
    __libc_start_main [0x872d4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = a;\n    long c = a;\n    long d = a;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n\
    \    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long\
    \ bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk =\
    \ 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n\
    \    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long\
    \ bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\
    \ 0;\n    long by = 0;\n    long bz = 0;\n    long ca = 0;\n    long cb = 0;\n\
    \    long cc = 0;\n    long cd = 0;\n    long ce = 0;\n    long cf = 0;\n    long\
    \ cg = 0;\n    long ch = 0;\n    long ci = 0;\n    long cj = 0;\n    long ck =\
    \ 0;\n    long cl = 0;\n    long cm = 0;\n    long cn = 0;\n    long co = 0;\n\
    \    long cp = 0;\n    long cq = 0;\n    long cr = 0;\n    long cs = 0;\n    long\
    \ ct = 0;\n    long cu = 0;\n    long cv = 0;\n    long cw = 0;\n    long cx =\
    \ 0;\n    long cy = 0;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjvctg6v4.d(117): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjvctg6v4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = 5*a;\n    long long int d =\
    \ 7*a;\n    long long int e*;\n    bool f = (b > c);\n    bool g = (b > d);\n\
    \    bool h = (c > d);\n    bool i = (e > d);\n    bool j = (e > c);\n    bool\
    \ k = (f && g);\n    bool l = (f && h);\n    bool m = (g && h);\n    bool n =\
    \ (i && j);\n    bool o = (i && k);\n    bool p = (j && k);\n    bool q = (l &&\
    \ m);\n    bool r = (l && n);\n    bool s = (m && n);\n    bool t = (o && p);\n\
    \    bool u = (o && q);\n    bool v = (p && q);\n    bool w = (r && s);\n    bool\
    \ x = (r && t);\n    bool y = (s && t);\n    bool z = (t && u);\n    bool A =\
    \ (v && w);\n    bool B = (v && x);\n    bool C = (w && x);\n    bool D = (x &&\
    \ y);\n    bool E = (y && z);\n    bool F = (z && A);\n    bool G = (A && B);\n\
    \    bool H = (B && C);\n    bool I = (C && D);\n    bool J = (D && E);\n    bool\
    \ K = (E && F);\n    bool L = (F && G);\n    bool M = (G && H);\n    bool N =\
    \ (H && I);\n    bool O = (I && J);\n    bool P = (J && K);\n    bool Q = (K &&\
    \ L);\n    bool R = (L && M);\n    bool S = (M && N);\n    bool T = (N && O);\n\
    \    bool U = (O && P);\n    bool V = (P && Q);\n    bool W = (Q && R);\n    bool\
    \ X = (R && S);\n    bool Y = (S && T);\n    bool Z = (T && U);\n    bool aa =\
    \ (V && W);\n    bool bb = (V && X);\n    bool cc = (W && X);\n    bool dd = (X\
    \ && Y);\n    bool ee = (Y && Z);\n    bool ff = (Z && aa);\n    bool gg = (aa\
    \ && bb);\n    bool hh = (bb && cc);\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp05vn_rel.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp05vn_rel.d(15): Error: no identifier for declarator `long`\n/tmp/tmp05vn_rel.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp05vn_rel.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp05vn_rel.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp05vn_rel.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp05vn_rel.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp05vn_rel.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp05vn_rel.d(18): Error: semicolon expected,
    not `*`\n/tmp/tmp05vn_rel.d(18): Error: expression expected, not `;`\n/tmp/tmp05vn_rel.d(19):
    Error: found `bool` when expecting `;` following statement\n/tmp/tmp05vn_rel.d(75):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp05vn_rel.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int i;\n    long long int j;\n    long long int k;\n    long long\
    \ int m;\n    long long int n;\n    long long int p;\n    long long int q;\n \
    \   long long int r;\n    long long int s;\n    long long int t;\n    long long\
    \ int u;\n    long long int v;\n    long long int w;\n    long long int x;\n \
    \   long long int y;\n    long long int z;\n    long long int A;\n    long long\
    \ int B;\n    long long int C;\n    long long int D;\n    long long int E;\n \
    \   long long int F;\n    long long int G;\n    long long int H;\n    long long\
    \ int I;\n    long long int J;\n    long long int K;\n    long long int L;\n \
    \   long long int M;\n    long long int N;\n    long long int P;\n    long long\
    \ int Q;\n    long long int R;\n    long long int S;\n    long long int T;\n \
    \   long long int U;\n    long long int V;\n    long long int W;\n    long long\
    \ int X;\n    long long int Y;\n    long long int Z;\n    long long int A;\n \
    \   long long int B;\n    long long int C;\n    long long int D;\n    long long\
    \ int E;\n    long long int F;\n    long long int G;\n    long long int H;\n \
    \   long long int I;\n    long long int J;\n    long long int K;\n    long long\
    \ int L;\n    long long int M;\n    long long int N;\n    long long int P;\n \
    \   long long int Q;\n    long long int R;\n    long long int S;\n    long long\
    \ int T;\n    long long int U;\n    long long int V;\n    long long int W;\n \
    \   long long int X;\n    long long int Y;\n    long long int Z;\n    long long\
    \ int A;\n    long long int B;\n    long long int C;\n    long long int D;\n \
    \   long long int E;\n    long long int F;\n    long long int G;\n    long long\
    \ int H;\n    long long int I;\n    long long \nunittest\n{\n    alias candidate\
    \ = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkjq82bn_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkjq82bn_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkjq82bn_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkjq82bn_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkjq82bn_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkjq82bn_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkjq82bn_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkjq82bn_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkjq82bn_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkjq82bn_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkjq82bn_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 3L;\n    long long int g = 3L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 3L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 3L;\n    long long int r = 5L;\n    long long int s = 3L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 3L;\n\
    \    long long int w = 3L;\n    long long int x = 5L;\n    long long int y = 5L;\n\
    \    long long int z = 3L;\n    \n    bool result = false;\n    \n    while(b\
    \ <= a)\n    {\n        c = a;\n        \n        while(b <= c)\n        {\n \
    \           d = a;\n            \n            while(b <= d)\n            {\n \
    \               e = a;\n                \n                while(b <= e)\n    \
    \            {\n                    f = a;\n                    \n           \
    \         while(b <= f)\n                    {\n                        g = a;\n\
    \                        \n                        while(b <= g)\n           \
    \             {\n                            h = a;\n                        \
    \    \n                            while(b <= h)\n                           \
    \ {\n                                i = a;\n                                \n\
    \                                while(b <= i)\n                             \
    \   {\n                                    j = a;\n                          \
    \          \n                                    while(b <= j)\n             \
    \                       {\n                                        k = a;\n  \
    \                                      \n                                    \
    \    while(b <= k)\n                                        {\n              \
    \                              l = a;\n                                      \
    \      \n                                            while(b <= l)\n         \
    \                                   {\n                                      \
    \          m = a;\n                                                \n        \
    \                                        while(b <= m)\n                     \
    \                           {\n                                              \
    \      n = a;\n                                                    \n        \
    \                                            while(b <= n)\n                 \
    \                                   {\n                                      \
    \                  o = a;\n                                                  \
    \      \n                                                        while(b <= o)\n\
    \                                                        {\n                 \
    \                                           p = a;\n                         \
    \                                   \n                                       \
    \                     while(b <= p)\n                                        \
    \                    {\n                                                     \
    \           q = a;\n                                                         \
    \       \n                                                                while(b\
    \ <= q)\n                                                                {\n \
    \                                                                   r = a;\n \
    \                                                                   \n       \
    \                                                             while(b <= r)\n\
    \                                                                    {\n     \
    \                                                                   s = a;\n \
    \                                                                       \n   \
    \                                                                     while(b\
    \ <= s)\n                                                                    \
    \    {\n                                                                     \
    \       t = a;\n                                                             \
    \               \n                                                           \
    \                 while\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2tk5rt0n.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp2tk5rt0n.d(15): Error: no identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmp2tk5rt0n.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmp2tk5rt0n.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp2tk5rt0n.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmp2tk5rt0n.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp2tk5rt0n.d(22): Error: no identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmp2tk5rt0n.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2tk5rt0n.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp2tk5rt0n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n\
    \    long long int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n\
    \    long long int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n\
    \    long long int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n\
    \    long long int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n\
    \    long long int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n\
    \    long long int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n\
    \    long long int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n\
    \    long long int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n\
    \    long long int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n\
    \    long long int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n\
    \    long long int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n\
    \    long long int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n\
    \    long long int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n\
    \    long long int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n\
    \    long long int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n\
    \    long long int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n\
    \    long long int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n\
    \    long long int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n\
    \    long long int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n\
    \    long long int V = 0;\n    long \nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgogs56_.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(15): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpsgogs56_.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpsgogs56_.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpsgogs56_.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpsgogs56_.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpsgogs56_.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpsgogs56_.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsgogs56_.d(22): Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpsgogs56_.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsgogs56_.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpsgogs56_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    bool result = false;\n    \n \
    \   while(a != 0)\n    {\n        if(a%2 == 0)\n        {\n            a = a/2;\n\
    \        }\n        else\n        {\n            if(a%3 == 0)\n            {\n\
    \                a = a/3;\n            }\n            else\n            {\n  \
    \              if(a%5 == 0)\n                {\n                    a = a/5;\n\
    \                }\n                else\n                {\n                \
    \    if(a%7 == 0)\n                    {\n                        a = a/7;\n \
    \                   }\n                    else\n                    {\n     \
    \                   if(a%11 == 0)\n                        {\n               \
    \             a = a/11;\n                        }\n                        else\n\
    \                        {\n                            if(a%13 == 0)\n      \
    \                      {\n                                a = a/13;\n        \
    \                    }\n                            else\n                   \
    \         {\n                                if(a%17 == 0)\n                 \
    \               {\n                                    a = a/17;\n           \
    \                     }\n                                else\n              \
    \                  {\n                                    if(a%19 == 0)\n    \
    \                                {\n                                        a\
    \ = a/19;\n                                    }\n                           \
    \         else\n                                    {\n                      \
    \                  if(a%23 == 0)\n                                        {\n\
    \                                            a = a/23;\n                     \
    \                   }\n                                        else\n        \
    \                                {\n                                         \
    \   if(a%29 == 0)\n                                            {\n           \
    \                                     a = a/29;\n                            \
    \                }\n                                            else\n       \
    \                                     {\n                                    \
    \            if(a%37 == 0)\n                                                {\n\
    \                                                    a = a/37;\n             \
    \                                   }\n                                      \
    \          else\n                                                {\n         \
    \                                           if(a%53 == 0)\n                  \
    \                                  {\n                                       \
    \                 a = a/53;\n                                                \
    \    }\n                                                    else\n           \
    \                                         {\n                                \
    \                        if(a%59 == 0)\n                                     \
    \                   {\n                                                      \
    \      a = a/59;\n                                                        }\n\
    \                                                        else\n              \
    \                                          {\n                               \
    \                             if(a%67 == 0)\n                                \
    \                            {\n                                             \
    \                   a = a/67;\n                                              \
    \              }\n                                                           \
    \ else\n                                                            {\n      \
    \                                                          if(a%73 == 0)\n   \
    \                                                             {\n            \
    \                                                        a = a/73;\n         \
    \                                                       }\n                  \
    \                                              else\n                        \
    \                                        {\n                                 \
    \                                   if(a%\nunittest\n{\n    alias candidate =\
    \ is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqzj8qopr.d(135): Error: expression expected, not `unittest`\n/tmp/tmpqzj8qopr.d(136):
    Error: found `{` when expecting `)`\n/tmp/tmpqzj8qopr.d(150): Error: found `End
    of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqzj8qopr.d(150):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqzj8qopr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = a;\n    long b = b;\n\
    \    long c = c;\n    long d = d;\n    long e = e;\n    long f = f;\n    long\
    \ g = g;\n    long h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n\
    \    long l = l;\n    long m = m;\n    long n = n;\n    long o = o;\n    long\
    \ p = p;\n    long q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n\
    \    long u = u;\n    long v = v;\n    long w = w;\n    long x = x;\n    long\
    \ y = y;\n    long z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n\
    \    long d = d;\n    long e = e;\n    long f = f;\n    long g = g;\n    long\
    \ h = h;\n    long i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n\
    \    long m = m;\n    long n = n;\n    long o = o;\n    long p = p;\n    long\
    \ q = q;\n    long r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n\
    \    long v = v;\n    long w = w;\n    long x = x;\n    long y = y;\n    long\
    \ z = z;\n    long a = a;\n    long b = b;\n    long c = c;\n    long d = d;\n\
    \    long e = e;\n    long f = f;\n    long g = g;\n    long h = h;\n    long\
    \ i = i;\n    long j = j;\n    long k = k;\n    long l = l;\n    long m = m;\n\
    \    long n = n;\n    long o = o;\n    long p = p;\n    long q = q;\n    long\
    \ r = r;\n    long s = s;\n    long t = t;\n    long u = u;\n    long v = \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rgu9gfi.d(114): Error: expression expected, not `unittest`\n/tmp/tmp_rgu9gfi.d(115):
    Error: semicolon expected, not `{`\n/tmp/tmp_rgu9gfi.d(129): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_rgu9gfi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    bool flag = false;\n    for(long long int i = 2;\
    \ i <= b; ++i)\n    {\n        if(b % i == 0)\n        {\n            flag = true;\n\
    \            break;\n        }\n    }\n    return flag;\n}\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp25litmyr.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp25litmyr.d(15): Error: no identifier for declarator `long`\n/tmp/tmp25litmyr.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp25litmyr.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmp25litmyr.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmp25litmyr.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmp25litmyr.d(17): Error: found
    `2` when expecting `;` following `for` condition\n/tmp/tmp25litmyr.d(17): Error:
    expression expected, not `;`\n/tmp/tmp25litmyr.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmp25litmyr.d(17): Error: found `<=` instead of statement\n/tmp/tmp25litmyr.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp25litmyr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long\
    \ f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long l = 2;\n    long m = 2;\n    long n = 3;\n    long\
    \ o = 3;\n    long p = 3;\n    long q = 3;\n    long r = 2;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 3;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long AA = 3;\n    long AB = 3;\n    long AC = 3;\n\
    \    long AD = 3;\n    long AE = 3;\n    long AF = 3;\n    long AG = 3;\n    long\
    \ AH = 3;\n    long AI = 3;\n    long AJ = 3;\n    long AK = 3;\n    long AL =\
    \ 3;\n    long AM = 3;\n    long AN = 3;\n    long AO = 3;\n    long AP = 3;\n\
    \    long AQ = 3;\n    long AR = 3;\n    long AS = 3;\n    long AT = 3;\n    long\
    \ AU = 3;\n    long AV = 3;\n    long AW = 3;\n    long AX = 3;\n    long AY =\
    \ 3;\n    long AZ = 3;\n    long BA = 3;\n    long BB = 3;\n    long BC = 3;\n\
    \    long BD = 3;\n    long BE = 3;\n    long BF = 3;\n    long BG = 3;\n    long\
    \ BH = 3;\n    long BI = 3;\n    long BJ = 3;\n    long BK = 3;\n    long BL =\
    \ 3;\n    long BM = 3;\n    long BN = 3;\n    long BO = 3;\n    long BP = 3;\n\
    \    long BQ = 3;\n    long BR = 3;\n    long BS = 3;\n    long BT = 3;\n    long\
    \ BU = 3;\n    long BV = 3;\n    long BW = 3;\n    long B\nunittest\n{\n    alias\
    \ candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L)\
    \ == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) ==\
    \ true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) ==\
    \ false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L)\
    \ == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyv381xc7.d(116): Error: semicolon expected, not `unittest`\n/tmp/tmpyv381xc7.d(116):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpyv381xc7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 1;\n    long long int d = 1;\n\
    \    long long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n\
    \    long long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n\
    \    long long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n\
    \    long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n\
    \    long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n\
    \    long long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n\
    \    long long int F = 0;\n    long long int G = 1;\n    long long int H = 1;\n\
    \    long long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n\
    \    long long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n\
    \    long long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n\
    \    long long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n\
    \    long long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n\
    \    long long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 0;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr1z66sn0.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(15): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpr1z66sn0.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpr1z66sn0.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpr1z66sn0.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpr1z66sn0.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpr1z66sn0.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpr1z66sn0.d(22): Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpr1z66sn0.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpr1z66sn0.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpr1z66sn0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3*a;\n    long long int c = a*a;\n    long long int d =\
    \ b*b;\n    long long int e = c*c;\n    long long int f = d*d;\n    long long\
    \ int g = e*e;\n    long long int h = f*f;\n    long long int i = g*g;\n    long\
    \ long int j = h*h;\n    long long int k = i*i;\n    long long int l = j*j;\n\
    \    long long int m = k*k;\n    long long int n = l*l;\n    long long int o =\
    \ m*m;\n    long long int p = n*n;\n    long long int q = o*o;\n    long long\
    \ int r = p*p;\n    long long int s = q*q;\n    long long int t = r*r;\n    long\
    \ long int u = s*s;\n    long long int v = t*t;\n    long long int w = u*u;\n\
    \    long long int x = v*v;\n    long long int y = w*w;\n    long long int z =\
    \ x*x;\n    long long int a = y*y;\n    long long int b = z*z;\n    long long\
    \ int c = a*a;\n    long long int d = b*b;\n    long long int e = c*c;\n    long\
    \ long int f = d*d;\n    long long int g = e*e;\n    long long int h = f*f;\n\
    \    long long int i = g*g;\n    long long int j = h*h;\n    long long int k =\
    \ i*i;\n    long long int l = j*j;\n    long long int m = k*k;\n    long long\
    \ int n = l*l;\n    long long int o = m*m;\n    long long int p = n*n;\n    long\
    \ long int q = o*o;\n    long long int r = p*p;\n    long long int s = q*q;\n\
    \    long long int t = r*r;\n    long long int u = s*s;\n    long long int v =\
    \ t*t;\n    long long int w = u*u;\n    long long int x = v*v;\n    long long\
    \ int y = w*w;\n    long long int z = x*x;\n    long long int a = y*y;\n    long\
    \ long int b = z*z;\n    long long int c = a*a;\n    long long int d = b*b;\n\
    \    long long int e = c*c;\n    long long int f = d*d;\n    long long \nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkden2_9r.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(15): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpkden2_9r.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpkden2_9r.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpkden2_9r.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpkden2_9r.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpkden2_9r.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpkden2_9r.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpkden2_9r.d(22): Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpkden2_9r.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkden2_9r.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkden2_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    bool result = false;\n    for(long long int i =\
    \ 3; i <= b; i += 2)\n    {\n        if(b % i == 0)\n        {\n            result\
    \ = true;\n            break;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n\
    \    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n   \
    \ assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n  \
    \  assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n\
    \    assert(candidate(1001L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43wqjt0v.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp43wqjt0v.d(15): Error: no identifier for declarator `long`\n/tmp/tmp43wqjt0v.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp43wqjt0v.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmp43wqjt0v.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmp43wqjt0v.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmp43wqjt0v.d(17): Error: found
    `3` when expecting `;` following `for` condition\n/tmp/tmp43wqjt0v.d(17): Error:
    expression expected, not `;`\n/tmp/tmp43wqjt0v.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmp43wqjt0v.d(17): Error: found `<=` instead of statement\n/tmp/tmp43wqjt0v.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp43wqjt0v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = 3L;\n    long long int c = 3L;\n    long long int d = 5L;\n\
    \    long long int e = 3L;\n    long long int f = 5L;\n    long long int g = 7L;\n\
    \    long long int h = 3L;\n    long long int i = 5L;\n    long long int j = 3L;\n\
    \    long long int k = 3L;\n    long long int l = 3L;\n    long long int m = 5L;\n\
    \    long long int n = 5L;\n    long long int o = 3L;\n    long long int p = 5L;\n\
    \    long long int q = 7L;\n    long long int r = 5L;\n    long long int s = 7L;\n\
    \    long long int t = 5L;\n    long long int u = 3L;\n    long long int v = 5L;\n\
    \    long long int w = 7L;\n    long long int x = 5L;\n    long long int y = 7L;\n\
    \    long long int z = 3L;\n    long long int A = a;\n    long long int B = b;\n\
    \    long long int C = c; \n    long long int D = d; \n    long long int E; \n\
    \    long long int F = f; \n    long long int G = g; \n    long long int H = h;\
    \ \n    long long int I = i; \n    long long int J = j; \n    long long int K\
    \ = k; \n    long long int L = l; \n    long long int M = m;\n    long long int\
    \ N = n; \n    long long int O = o; \n    long long int P = p; \n    long long\
    \ int Q = q; \n    long long int R = r;\n    long long int S = s; \n    long long\
    \ int T = t; \n    long long int U = u; \n    long long int V = v; \n    long\
    \ long int W = w; \n    long long int X = x; \n    long long int Y = y; \n   \
    \ long long int Z = z;\n    bool result = false;\n    bool flag = true;\n    bool\
    \ flag2 = true;\n    bool flag3 = true;\n    bool flag4 = true;\n    bool flag5\
    \ = true;\n    bool flag6 = true;\n    bool flag7 = true;\n    bool flag8 = true;\n\
    \    bool flag9 = true;\n    bool flag10 = true;\n    bool flag11 = true;\n  \
    \  bool flag12 = true;\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpomjjpd_o.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpomjjpd_o.d(15): Error: no identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(17): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(17): Error:
    no identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(18): Error: no
    identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(19): Error: use `long` for
    a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(19): Error: no identifier
    for declarator `long`\n/tmp/tmpomjjpd_o.d(20): Error: use `long` for a 64 bit
    integer instead of `long long`\n/tmp/tmpomjjpd_o.d(20): Error: no identifier for
    declarator `long`\n/tmp/tmpomjjpd_o.d(21): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmpomjjpd_o.d(21): Error: no identifier for declarator
    `long`\n/tmp/tmpomjjpd_o.d(22): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpomjjpd_o.d(22): Error: no identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(23):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(23):
    Error: no identifier for declarator `long`\n/tmp/tmpomjjpd_o.d(24): Error: use
    `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomjjpd_o.d(24): Error:
    no identifier for declarator `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpomjjpd_o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long b = 2;\n    long c = 1;\n    bool result = false;\n    \n    while(b\
    \ < a)\n    {\n        if(a%b == 0)\n        {\n            c = 1;\n        }\n\
    \        else\n        {\n            if(c == 3)\n            {\n            \
    \    result = true;\n                break;\n            }\n            else\n\
    \            {\n                c++;\n            }\n        }\n        b++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpu2xaf8_f.d(45): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e2d]\n??:? void tmpu2xaf8_f.__unittest_L41_C1() [0x427a82]\n??:?
    void tmpu2xaf8_f.__modtest() [0x427bb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42827c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428203]\n??:? _d_run_main [0x42816e]\n??:? main [0x427bc3]\n??:?
    __libc_start_main [0x1903f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nWrite a function that returns\
    \ true if the given number is the multiplication of 3 prime numbers\n    and false\
    \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30L)\n\
    \    true\n    30 = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n{\n\
    \    long long int b = a;\n    long long int c = 0;\n    bool flag = false;\n\
    \    \n    for(int i = 3; i <= b; i+=2)\n    {\n        if(a % i == 0)\n     \
    \   {\n            c = i;\n            flag = true;\n            break;\n    \
    \    }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n    {\n        for(int i = 3; i <= b; i+=2)\n\
    \        {\n            if(b % i == 0)\n            {\n                c = i;\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n    }\n    \n    if(flag)\n\nunittest\n{\n    alias candidate = is_multiply_prime;\n\
    \n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n   \
    \ assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n   \
    \ assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n \
    \   assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmbn259n6.d(15): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpmbn259n6.d(15): Error: no identifier for declarator `long`\n/tmp/tmpmbn259n6.d(16):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpmbn259n6.d(16):
    Error: no identifier for declarator `long`\n/tmp/tmpmbn259n6.d(161): Error: found
    `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmbn259n6.d",
    "-I/tmp"]\n'''
  stdout: b''

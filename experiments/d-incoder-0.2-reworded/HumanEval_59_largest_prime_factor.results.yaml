language: d
name: HumanEval_59_largest_prime_factor
results:
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t;\n\
    \t\n\twhile (q > 1) {\n\t\tt = q;\n\t\twhile (t % 2 == 0) {\n\t\t\tt /= 2;\n\t\
    \t}\n\t\tif (t > p) {\n\t\t\tp = t;\n\t\t}\n\t\tq = r;\n\t\twhile (q % 2 == 0)\
    \ {\n\t\t\tq /= 2;\n\t\t}\n\t\tif (q > s) {\n\t\t\ts = q;\n\t\t}\n\t\tr = s;\n\
    \t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long\
    \ g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmdhyosz.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcmdhyosz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = q%p;\n    while(q\
    \ != 0) {\n        p = q;\n        q = r%p;\n        r = p%p;\n    }\n    return\
    \ r;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=c++,algorithm,primes |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nunittest\n{\n  \
    \  alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvoggcq6_.d(23): Error: declaration expected, not `<`\n/tmp/tmpvoggcq6_.d(34):
    Error: declaration expected, not `assert`\n/tmp/tmpvoggcq6_.d(35): Error: declaration
    expected, not `assert`\n/tmp/tmpvoggcq6_.d(36): Error: declaration expected, not
    `assert`\n/tmp/tmpvoggcq6_.d(37): Error: declaration expected, not `assert`\n/tmp/tmpvoggcq6_.d(38):
    Error: declaration expected, not `assert`\n/tmp/tmpvoggcq6_.d(39): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvoggcq6_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2L;\n\tlong q = n%p;\n\twhile (q > 0L && p < n) \n\t{\n\t\
    \tp = p * q;\n\t\tq = n%p;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcprwfzhj.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcprwfzhj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptoaawa94.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptoaawa94.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long\
    \ g = 2;\n    long h = 2;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp482ho4sf.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp482ho4sf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiakvi6il.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiakvi6il.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplx0q7oi6.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplx0q7oi6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long i;\n    for(i = 2; i <= n / i; i++)\n\
    \    {\n        if(n % i == 0)\n        {\n            result = i;\n         \
    \   break;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6okzq420.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmp6okzq420.__unittest_L25_C1() [0x427a80]\n??:?
    void tmp6okzq420.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x4fb0e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv5qgmmjr.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv5qgmmjr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = 3;\n\tlong r = n;\n\twhile (r > 1) {\n\t\t\
    while (r % p == 0) {\n\t\t\tp = p * q;\n\t\t\tr = r / p;\n\t\t}\n\t\tq = q * p;\n\
    \t\tr = r / q;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjd4izsos.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd4izsos.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t;\n\
    \t\n\twhile (q > 0) {\n\t\tt = q;\n\t\twhile (r > 0) {\n\t\t\ts = s * r;\n\t\t\
    \tr = r / p;\n\t\t}\n\t\tp = p * t;\n\t\tq = q / p;\n\t}\n\treturn s;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp92wo60wa.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dbd]\n??:? void tmp92wo60wa.__unittest_L30_C1() [0x427aa4]\n??:?
    void tmp92wo60wa.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428193]\n??:? _d_run_main [0x4280fe]\n??:? main [0x427b4f]\n??:?
    __libc_start_main [0xfc50554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    \n    while (q != 0) {\n\
    \        while (r != 0) {\n            if (r == 1) {\n                p = p *\
    \ u;\n                s = s * v;\n                t = t * v;\n            }\n\
    \            r = r / 2;\n        }\n        q = q / 2;\n        v = v * u;\n \
    \       u = u * v;\n    }\n    return p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpchycg8l9.d(40): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmpchycg8l9.__unittest_L36_C1() [0x427ae8]\n??:?
    void tmpchycg8l9.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0xe2221554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor;\n    long max_factor = 0;\n    \n    for (i\
    \ = 2; i <= n; i++) {\n        p = i;\n        factor = 1;\n        \n       \
    \ for (q = p; q > 0; q--) {\n            if (n % q == 0) {\n                factor++;\n\
    \                n /= q;\n            }\n        }\n        \n        if (factor\
    \ > max_factor) {\n            max_factor = factor;\n        }\n    }\n    \n\
    \    return max_factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnl20hr4f.d(38): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpnl20hr4f.__unittest_L34_C1() [0x427abc]\n??:?
    void tmpnl20hr4f.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xd2caa554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    \n    while(p <= q)\n    {\n \
    \       while(p <= q)\n        {\n            while(p <= q)\n            {\n \
    \               while(p <= q)\n                {\n                    while(p\
    \ <= q)\n                    {\n                        while(p <= q)\n      \
    \                  {\n                            while(p <= q)\n            \
    \                {\n                                while(p <= q)\n          \
    \                      {\n                                    while(p <= q)\n\
    \                                    {\n                                     \
    \   while(p <= q)\n                                        {\n               \
    \                             while(p <= q)\n                                \
    \            {\n                                                while(p <= q)\n\
    \                                                {\n                         \
    \                           while(p <= q)\n                                  \
    \                  {\n                                                       \
    \ while(p <= q)\n                                                        {\n \
    \                                                           while(p <= q)\n  \
    \                                                          {\n               \
    \                                                 while(p <= q)\n            \
    \                                                    {\n                     \
    \                                               while(p <= q)\n              \
    \                                                      {\n                   \
    \                                                     while(p <= q)\n        \
    \                                                                {\n         \
    \                                                                   while(p <=\
    \ q)\n                                                                       \
    \     {\n                                                                    \
    \            while(p <= q)\n                                                 \
    \                               {\n                                          \
    \                                          while(p <= q)\n                   \
    \                                                                 {\n        \
    \                                                                            \
    \    while(p <= q)\n                                                         \
    \                               {\n                                          \
    \                                                  while(p <= q)\n           \
    \                                                                            \
    \     {\n                                                                    \
    \                            while(p <= q)\n                                 \
    \                                                               {\n          \
    \                                                                            \
    \              while(p <= q)\n                                               \
    \                                                     {\n                    \
    \                                                                            \
    \        while(p <= q)\n                                                     \
    \                                                   {\n                      \
    \                                                                            \
    \          while(p <= q)\n                                                   \
    \                                                         {\n                \
    \                                                                            \
    \                    while(p <= q)\n                                         \
    \                                                                       {\n  \
    \                                                                            \
    \                                      while(p <= q)\n                       \
    \                                                                            \
    \                 {\n                                                        \
    \                                                                while(p <= q)\n\
    \                                                                            \
    \                                            {\n                             \
    \                                                                            \
    \                   while(p <= q)\n                                          \
    \                                                                            \
    \      {\n                                                                   \
    \                                                             while(p <= q)\n\
    \                                                                            \
    \                                                    {\n                     \
    \                                                                            \
    \                                   while(p <= q)\n                          \
    \                                                                            \
    \                              {\n                                           \
    \                                                                            \
    \                 while(p <= q)\n                                            \
    \                                                                            \
    \                {\n                                                         \
    \                                                                            \
    \       while(p <= q)\n                                                      \
    \                                                                            \
    \          {\n                                                               \
    \                                                                            \
    \     while(p <= q)\n                                                        \
    \                                                                            \
    \            {\n                                                             \
    \                                                                            \
    \           while(p <= q)\n                                                  \
    \                                                                            \
    \                      {\n                                                   \
    \                                                                            \
    \                         while(p <= q)\n                                    \
    \                                                                            \
    \                                        {\n                                 \
    \                                                                            \
    \                                               while(p <= q)\n              \
    \                                                                            \
    \                                                                  {\n       \
    \                                                                            \
    \                                                                            \
    \ while(p <= q)\n                                                            \
    \                                                                            \
    \                        {\n                                                 \
    \                                                                            \
    \                                       while(p <= q)\n                      \
    \                                                                            \
    \                                                                  {\n       \
    \                                                                            \
    \                                                                            \
    \         while(p <= q)\n                                                    \
    \                                                                            \
    \                                        {\n                                 \
    \                                                                            \
    \                                                               while(p <= q)\n\
    \                                                                            \
    \                                                                            \
    \                    {\n                                                     \
    \           \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa6d7486e.d(112): Error: found `unittest` instead of statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpa6d7486e.d(122):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6d74'
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long max = 2;\n    long imax =\
    \ 0;\n    \n    while (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n  \
    \          r /= 2;\n        }\n        else\n        {\n            int i = 3;\
    \ // i is now the smallest odd divisor of r\n            \n            while (r\
    \ % i == 0)\n            {\n                i = i + 2;\n            }\n      \
    \      \n            if (i == 3)\n            {\n                p = i;\n    \
    \            \n                while (r % p == 0)\n                {\n       \
    \             p = p + 2;\n                }\n                \n              \
    \  if (p == 3)\n                {\n                    r = r;\n              \
    \  }\n                else\n                {\n                    r = r / p;\n\
    \                }\n            }\n            else\n            {\n         \
    \       p = i;\n                \n                while (r % p == 0)\n       \
    \         {\n                    p = p + 2;\n                }\n             \
    \   \n                if (p == 3)\n                {\n                    r =\
    \ r;\n                }\n                else\n                {\n           \
    \         r = r / p;\n                }\n            }\n        }\n    }\n   \
    \ \n    while (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n          \
    \  r /= 2;\n        }\n        else\n        {\n            int i = 3; // i is\
    \ now the smallest odd divisor of r\n            \n            while (r % i ==\
    \ 0)\n            {\n                i = i + 2;\n            }\n            \n\
    \            if (i == 3)\n            {\n                q = i;\n            \
    \    \n                while (r % q == 0)\n                {\n               \
    \     q = q + 2;\n                }\n                \n                if (q ==\
    \ 3)\n                {\n                    r = r;\n                }\n     \
    \           else\n                {\n                    r = r / q;\n        \
    \        }\n            }\n            else\n            {\n                q\
    \ = i;\n                \n                while (r % q == 0)\n               \
    \ {\n                    q = q + 2;\n                }\n                \n   \
    \             if (q == 3)\n                {\n                    r = r;\n   \
    \             }\n                else\n                {\n                   \
    \ r = r / q;\n                }\n            }\n        }\n    }\n    \n    while\
    \ (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n            r /= 2;\n \
    \       }\n        else\n        {\n            int i = 3; // i is now the smallest\
    \ odd divisor of r\n            \n            while (r % i == 0)\n           \
    \ {\n                i = i + 2;\n            }\n            \n            if (i\
    \ == 3)\n            {\n                s = i;\n                \nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj82wfkz5.d(154): Error: found `unittest` instead of statement\n/tmp/tmpj82wfkz5.d(164):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpj82wfkz5.d(164):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpj82wfkz5.d(164):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj82wfkz5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    \n    while(p <= q) \n\
    \    {\n        while(p <= q && q % p == 0) \n        {\n            p += 1;\n\
    \        }\n        \n        while(p <= q && q % p == 0) \n        {\n      \
    \      q -= p;\n        }\n        \n        if(p > q) \n        {\n         \
    \   while(p <= q && q % p == 0) \n            {\n                p += 1;\n   \
    \         }\n            \n            while(p <= q && q % p == 0) \n        \
    \    {\n                q -= p;\n            }\n        }\n        \n        if(q\
    \ > r) \n        {\n            while(p <= q && q % p == 0) \n            {\n\
    \                p += 1;\n            }\n            \n            while(p <=\
    \ q && q % p == 0) \n            {\n                q -= p;\n            }\n \
    \       }\n        \n        if(q > r) \n        {\n            while(p <= q &&\
    \ q % p == 0) \n            {\n                p += 1;\n            }\n      \
    \      \n            while(p <= q && q % p == 0) \n            {\n           \
    \     q -= p;\n            }\n        }\n        \n        if(q > r) \n      \
    \  {\n            while(p <= q && q % p == 0) \n            {\n              \
    \  p += 1;\n            }\n            \n            while(p <= q && q % p ==\
    \ 0) \n            {\n                q -= p;\n            }\n        }\n    \
    \    \n        if(q > r) \n        {\n            while(p <= q && q % p == 0)\
    \ \n            {\n                p += 1;\n            }\n            \n    \
    \        while(p <= q && q % p == 0) \n            {\n                q -= p;\n\
    \            }\n        }\n        \n        if(q > r) \n        {\n         \
    \   while(p <= q && q % p == 0) \n            {\n                p += 1;\n   \
    \         }\n            \n            while(p <= q && q % p == 0) \n        \
    \    {\n                q -= p;\n            }\n        }\n        \n        if(q\
    \ > r) \n        {\n            while(p <= q && q % p == 0) \n            {\n\
    \                p += 1;\n            }\n            \n            while(p <=\
    \ q && q % p == 0) \n            {\n                q -= p;\n            }\n \
    \       }\n        \n        if(q > r) \n        {\n            while(p <= q &&\
    \ q % p == 0) \n            {\n                p += 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5tc8h6p1.d(130): Error: found `unittest` instead of statement\n/tmp/tmp5tc8h6p1.d(140):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp5tc8h6p1.d(140):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp5tc8h6p1.d(140):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5tc8h6p1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong i, p, q, factor = 1;\n\t\n\tp = 2;\n\tq = n;\n\t\n\twhile (p\
    \ < q)\n\t{\n\t\twhile (n % p == 0)\n\t\t{\n\t\t\tn /= p;\n\t\t\tfactor++;\n\t\
    \t}\n\t\t\n\t\twhile (n % q == 0)\n\t\t{\n\t\t\tn /= q;\n\t\t\tfactor++;\n\t\t\
    }\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tp++;\n\t\t\tq--;\n\t\t}\n\t}\n\t\n\treturn\
    \ factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i;\n    \n    while (p * p <= n)\n    {\n        for (i = 2;\
    \ i <= p; i++)\n        {\n            if (n % i == 0)\n            {\n      \
    \          p = p / i;\n                break;\n            }\n        }\n    \
    \    if (p * p > n)\n        {\n            break;\n        }\n        max_factor\
    \ = p;\n        max_factor_index = i;\n    }\n    return max_factor_index;\n}\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp85ysjg11.d(41): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dc5]\n??:? void tmp85ysjg11.__unittest_L37_C1() [0x427ab0]\n??:?
    void tmp85ysjg11.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42819b]\n??:? _d_run_main [0x428106]\n??:? main [0x427b5b]\n??:?
    __libc_start_main [0xa7933554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong i, p, q, factor = 1;\n\tfor(i = 2; i <= n; i++) {\n\t\tp = i;\n\
    \t\tq = n / p;\n\t\twhile(p != 1 && q != 1 && q != p)\n\t\t{\n\t\t\tif(p * p >\
    \ q * q)\n\t\t\t\tbreak;\n\t\t\tp = p * 2;\n\t\t\tq = q * 2;\n\t\t}\n\t\tif(p\
    \ != 1 && q != 1 && q != p)\n\t\t\tfactor = p;\n\t\tn = q;\n\t}\n\treturn factor;\n\
    }\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkcyfcbot.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmpkcyfcbot.__unittest_L30_C1() [0x427afc]\n??:?
    void tmpkcyfcbot.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427ba7]\n??:?
    __libc_start_main [0x96502554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptoaawa94.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptoaawa94.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong i, p, q, factor = 1;\n\t\n\tfor(i = 2; i <= n; i+=2) {\n\t\t\
    p = i;\n\t\tq = n%i;\n\t\t\n\t\tif(q == 0) {\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t\
    while(p % 2 == 0) {\n\t\t\tp = p/2;\n\t\t}\n\t\t\n\t\twhile(p % 3 == 0) {\n\t\t\
    \tp = p/3;\n\t\t}\n\t\t\n\t\twhile(p % 5 == 0) {\n\t\t\tp = p/5;\n\t\t}\n\t\t\n\
    \t\twhile(p % 7 == 0) {\n\t\t\tp = p/7;\n\t\t}\n\t\t\n\t\twhile(p % 11 == 0) {\n\
    \t\t\tp = p/11;\n\t\t}\n\t\t\n\t\twhile(p % 13 == 0) {\n\t\t\tp = p/13;\n\t\t\
    }\n\t\t\n\t\twhile(p % 17 == 0) {\n\t\t\tp = p/17;\n\t\t}\n\t\t\n\t\twhile(p %\
    \ 19 == 0) {\n\t\t\tp = p/19;\n\t\t}\n\t\t\n\t\twhile(p % 23 == 0) {\n\t\t\tp\
    \ = p/23;\n\t\t}\n\t\t\n\t\twhile(p % 29 == 0) {\n\t\t\tp = p/29;\n\t\t}\n\t\t\
    \n\t\twhile(p % 31 == 0) {\n\t\t\tp = p/31;\n\t\t}\n\t\t\n\t\twhile(p % 37 ==\
    \ 0) {\n\t\t\tp = p/37;\n\t\t}\n\t\t\n\t\twhile(p % 41 == 0) {\n\t\t\tp = p/41;\n\
    \t\t}\n\t\t\n\t\twhile(p % 43 == 0) {\n\t\t\tp = p/43;\n\t\t}\n\t\t\n\t\twhile(p\
    \ % 47 == 0) {\n\t\t\tp = p/47;\n\t\t}\n\t\t\n\t\twhile(p % 53 == 0) {\n\t\t\t\
    p = p/53;\n\t\t}\n\t\t\n\t\twhile(p % 59 == 0) {\n\t\t\tp = p/59;\n\t\t}\n\t\t\
    \n\t\twhile(p % 61 == 0) {\n\t\t\tp = p/61;\n\t\t}\n\t\t\n\t\twhile(p % 67 ==\
    \ 0) {\n\t\t\tp = p/67;\n\t\t}\n\t\t\n\t\twhile(p % 71 == 0) {\n\t\t\tp = p/71;\n\
    \t\t}\n\t\t\n\t\twhile(p % 73 == 0) {\n\t\t\tp = p/73;\n\t\t}\n\t\t\n\t\twhile(p\
    \ % 79 == 0) {\n\t\t\tp = p/79;\n\t\t}\n\t\t\n\t\twhile(p % 83 == 0) {\n\t\t\t\
    p = p/83;\n\t\t}\n\t\t\n\t\twhile(p % 89 == 0) {\n\t\t\tp = p/89;\n\t\t}\n\t\t\
    \n\t\twhile(p % 97 == 0) {\n\t\t\tp = p/97;\n\t\t}\n\t\t\n\t\twhile(p % 103 ==\
    \ 0) {\n\t\t\tp = p/103;\n\t\t}\n\t\t\n\t\twhile(p % 107 == 0) {\n\t\t\tp = p/107;\n\
    \t\t}\n\t\t\n\t\twhile(p % 111 == 0) {\n\t\t\tp = p/111;\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4m1h3opl.d(133): Error: found `unittest` instead of statement\n/tmp/tmp4m1h3opl.d(143):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp4m1h3opl.d(143):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4m1h3opl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long factor = 1;\n    long max_factor = 2;\n    long max_factor_index\
    \ = 0;\n    long i;\n    \n    for(i = 2; i <= n; i++)\n    {\n        if(n%i\
    \ == 0)\n        {\n            factor = i;\n            break;\n        }\n \
    \   }\n    \n    for(i = 2; i <= n; i++)\n    {\n        if(n%i == 0)\n      \
    \  {\n            if(i*factor > max_factor)\n            {\n                max_factor\
    \ = i*factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    \n    return max_factor_index;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj32dfmkw.d(45): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpj32dfmkw.__unittest_L41_C1() [0x427ad4]\n??:?
    void tmpj32dfmkw.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0xe0651554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n\
    \    long C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 2;\n    long\
    \ G = 2;\n    long H = 2;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n\
    \    long L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long\
    \ P = 2;\n    long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n\
    \    long U = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long\
    \ Y = 2;\n    long Z = 2;\n    long aa = 2;\n    long ab = 2;\n    long ac = 2;\n\
    \    long ad = 2;\n    long ae = 2;\n    long af = 2;\n    long ag = 2;\n    long\
    \ ah = 2;\n    long ai = 2;\n    long aj = 2;\n    long ak = 2;\n    long al =\
    \ 2;\n    long am = 2;\n    long an = 2;\n    long ao = 2;\n    long ap = 2;\n\
    \    long aq = 2;\n    long ar = 2;\n    long as = 2;\n    long at = 2;\n    long\
    \ au = 2;\n    long av = 2;\n    long aw = 2;\n    long ax = 2;\n    long ay =\
    \ 2;\n    long az = 2;\n    long ba = 2;\n    long bb = 2;\n    long bc = 2;\n\
    \    long bd = 2;\n    long be = 2;\n    long bf = 2;\n    long bg = 2;\n    long\
    \ bh = 2;\n    long bi = 2;\n    long bj = 2;\n    long bk = 2;\n    long bl =\
    \ 2;\n    long bm = 2;\n    long bn = 2;\n    long bo = 2;\n    long bp = 2;\n\
    \    long bq = 2;\n    long br = 2;\n    long bs = 2;\n    long bt = 2;\n    long\
    \ bu = 2;\n    long bv = 2;\n    long bw = 2;\n    long bx = 2;\n    long by =\
    \ 2;\n    long bz = 2;\n    long ca = 2;\n    long cb = 2;\n    long cc = 2;\n\
    \    long cd = 2;\n    long ce = 2;\n    long cf = 2;\n    long cg = 2;\n    long\
    \ ch = 2;\n    long ci = 2;\n    long cj = 2;\n    long ck = 2;\n    long \nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1lk7drtt.d(114): Error: no identifier for declarator `long`\n/tmp/tmp1lk7drtt.d(114):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1lk7drtt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l =\
    \ 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\
    \tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\t\
    long k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong\
    \ q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i\
    \ = 2;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n =\
    \ 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\
    \tlong m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\t\
    long m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong\
    \ s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\tlong k\
    \ = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q =\
    \ 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\
    \tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\t\
    long p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong\
    \ m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m\
    \ = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s =\
    \ 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 1;\n\tlong k = 1;\n\
    \tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\t\
    long r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp24p80lq1.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24p80lq1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2L;\n\tlong q = n-1L;\n\tlong r = q;\n\tlong s = 2L;\n\t\
    long t = 3L;\n\tlong u;\n\t\n\twhile (r > 1L) {\n\t\twhile (r > 1L) {\n\t\t\t\
    while (r > 1L) {\n\t\t\t\twhile (r > 1L) {\n\t\t\t\t\twhile (r > 1L) {\n\t\t\t\
    \t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\twhile\
    \ (r > 1L) {\n\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\twhile (r\
    \ > 1L) {\n\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\twhile\
    \ (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile\
    \ (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile\
    \ (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > 1L) {\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nunittest\n{\n  \
    \  alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxd04fc29.d(67): Error: found `unittest` instead of statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxd04fc29.d(77):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd04fc29.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long a = 1;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long\
    \ g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p2 = 2;\n    long q2 = 2;\n    long r2 = 2;\n    long s = 2;\n    long t = 2;\n\
    \    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long\
    \ y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n\
    \    long d = 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long\
    \ h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p2 = 2;\n    long\
    \ q2 = 2;\n    long r2 = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n\
    \    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n\
    \    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n    long\
    \ i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p2 = 2;\n    long q2 = 2;\n    long\
    \ r2 = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n\
    \    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long\
    \ a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n\
    \    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5a3h13vk.d(115): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5a3h13vk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t;\n    long m;\n    \n    while (p < q) {\n        while (r % p ==\
    \ 0) {\n            r /= p;\n        }\n        while (r % q == 0) {\n       \
    \     r /= q;\n        }\n        if (r > 1) {\n            break;\n        }\n\
    \        p += 1;\n        q += 1;\n    }\n    \n    while (q > 1) {\n        t\
    \ = q;\n        q = p * q;\n        p = t;\n    }\n    \n    m = p * q;\n    \n\
    \    while (m > 1) {\n        t = m;\n        m = p * q;\n        p = t;\n   \
    \ }\n    \n    return p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 0) {\n\t\tlong r = q;\n\t\
    \twhile (r > 0) {\n\t\t\tlong m = r / p;\n\t\t\tif (m == 0 || m == p) break;\n\
    \t\t\tp = m;\n\t\t\tr = r - m * p;\n\t\t}\n\t\tif (r > 0) break;\n\t\tp = p +\
    \ 1;\n\t\tq = q / p;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate =\
    \ largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv7isjls8.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dc5]\n??:? void tmpv7isjls8.__unittest_L29_C1() [0x427ab0]\n??:?
    void tmpv7isjls8.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42819b]\n??:? _d_run_main [0x428106]\n??:? main [0x427b5b]\n??:?
    __libc_start_main [0x43965554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong factor = 1;\n\tlong p = 2;\n\tlong q = n;\n\tlong limit = sqrt(n);\n\
    \twhile (p <= limit) {\n\t\twhile (q % p == 0) {\n\t\t\tq = q / p;\n\t\t}\n\t\t\
    if (q > limit) {\n\t\t\tbreak;\n\t\t}\n\t\tfactor = p;\n\t\tp = p * 2;\n\t}\n\t\
    return factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n\
    \    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0cafbtlo.d(16): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0cafbtlo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkpegurw6.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkpegurw6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    \n    while(p < q) {\n       \
    \ while(p < q && n % p == 0) {\n            p = p * 2;\n        }\n        while(p\
    \ < q && n % q == 0) {\n            q = q / 2;\n        }\n        if(p < q) {\n\
    \            while(r % p == 0) {\n                r = r / 2;\n            }\n\
    \            while(r % q == 0) {\n                s = s / 2;\n            }\n\
    \            if(r < s) {\n                while(v % r == 0) {\n              \
    \      v = v / 2;\n                }\n                while(v % s == 0) {\n  \
    \                  w = w / 2;\n                }\n                if(v < w) {\n\
    \                    while(z % v == 0) {\n                        z = z / 2;\n\
    \                    }\n                    while(z % w == 0) {\n            \
    \            x = x / 2;\n                    }\n                    if(z < x)\
    \ {\n                        while(y%z == 0) {\n                            y\
    \ = y / 2;\n                        }\n                        while(y%x == 0)\
    \ {\n                            z = z / 2;\n                        }\n     \
    \                   if(y < z) {\n                            return z;\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return n;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm9hqbhi3.d(70): Error: declaration expected, not `<`\n/tmp/tmpm9hqbhi3.d(75):
    Error: identifier expected following `package`\n/tmp/tmpm9hqbhi3.d(75): Error:
    `;` expected\n/tmp/tmpm9hqbhi3.d(76): Error: identifier expected following `package`\n/tmp/tmpm9hqbhi3.d(76):
    Error: `;` expected\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9hqbhi3.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t;\n    \n    while (q > 0) {\n        t = q;\n        q = r / p;\n\
    \        r = t;\n        s += p;\n    }\n    return s;\n}\n</code>\n<|/ a tags=c++,primes,algorithm\
    \ |>\n<| c |>\nThe first two lines of code are unnecessary and can be removed.\
    \ `long p = 2;` and `long q = n;` will suffice.\n<|/ c |>\n<| c |>\nThe first\
    \ two lines of code are unnecessary and can be removed. `long p = 2;` and `long\
    \ q = n;` will suffice.\n<|/ c |>\n<| c |>\nThe first two lines of code are unnecessary\
    \ and can be removed. `long p = 2;` and `long q = n;` will suffice.\n<|/ c |>\n\
    <| c |>\nThe first two lines of code are unnecessary and can be removed. `long\
    \ p = 2;` and `long q = n;` will suffice.\n<|/ c |>\n<| c |>\nThe first two lines\
    \ of code are unnecessary and can be removed. `long p = 2;` and `long q = n;`\
    \ will suffice.\n<|/ c |>\n<| a tags=c++,primes,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include\
    \ <functional>\n#include <cmath>\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpndwv4we2.d(27): Error: declaration expected, not `<`\n/tmp/tmpndwv4we2.d(56):
    Error: declaration expected, not `assert`\n/tmp/tmpndwv4we2.d(57): Error: declaration
    expected, not `assert`\n/tmp/tmpndwv4we2.d(58): Error: declaration expected, not
    `assert`\n/tmp/tmpndwv4we2.d(59): Error: declaration expected, not `assert`\n/tmp/tmpndwv4we2.d(60):
    Error: declaration expected, not `assert`\n/tmp/tmpndwv4we2.d(61): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndwv4we2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 2;\n    long maxp = 0;\n    \n    for (i\
    \ = 2; i <= n / 2; i++) {\n        p = i;\n        \n        while ((n % p) ==\
    \ 0) {\n            p += factor;\n        }\n        \n        if (p > maxp) {\n\
    \            maxp = p;\n        }\n        \n        if (p > factor) {\n     \
    \       q = n / p;\n            \n            if (q > factor) {\n            \
    \    factor = q;\n            }\n        }\n    }\n    \n    return maxp;\n}\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp35dg3z4j.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmp35dg3z4j.__unittest_L38_C1() [0x427ad4]\n??:?
    void tmp35dg3z4j.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0x92481554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long wprime = 3;\n    long wprime2\
    \ = 2;\n    long wprime3 = 1;\n    long wprime4 = 2;\n    long wprime5 = 3;\n\
    \    long wprime6 = 2;\n    long wprime7 = 3;\n    long wprime8 = 2;\n    long\
    \ wprime9 = 3;\n    long wprime10 = 2;\n    long wprime11 = 3;\n    long wprime12\
    \ = 2;\n    long wprime13 = 3;\n    long wprime14 = 2;\n    long wprime15 = 3;\n\
    \    long wprime16 = 2;\n    long wprime17 = 3;\n    long wprime18 = 2;\n    long\
    \ wprime19 = 3;\n    long wprime20 = 2;\n    long wprime21 = 1;\n    long wprime22\
    \ = 3;\n    long wprime23 = 2;\n    long wprime24 = 3;\n    long wprime25 = 2;\n\
    \    long wprime26 = 3;\n    long wprime27 = 2;\n    long wprime28 = 3;\n    long\
    \ wprime29 = 2;\n    long wprime30 = 3;\n    long wprime31 = 1;\n    long wprime32\
    \ = 3;\n    long wprime33 = 2;\n    long wprime34 = 3;\n    long wprime35 = 2;\n\
    \    long wprime36 = 3;\n    long wprime37 = 2;\n    long wprime38 = 3;\n    long\
    \ wprime39 = 2;\n    long wprime40 = 3;\n    long wprime41 = 1;\n    long wprime42\
    \ = 2;\n    long wprime43 = 3;\n    long wprime44 = 2;\n    long wprime45 = 3;\n\
    \    long wprime46 = 2;\n    long wprime47 = 3;\n    long wprime48 = 2;\n    long\
    \ wprime49 = 3;\n    long wprime50 = 2;\n    long wprime51 = 1;\n    long wprime52\
    \ = 2;\n    long wprime53 = 3;\n    long wprime54 = 2;\n    long wprime55 = 3;\n\
    \    long wprime56 = 2;\n    long wprime57 = 3;\n    long wprime58 = 2;\n    long\
    \ wprime59 = 3;\n    long wprime60 = 2;\n    long wprime61 = 1;\n    long wprime62\
    \ = 2;\n    long wprime63 = 3;\n    long wprime64 = 2;\n    long wprime\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptdhg4mst.d(89): Error: semicolon expected, not `unittest`\n/tmp/tmptdhg4mst.d(89):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmptdhg4mst.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = n;\n    long s = 2L;\n\
    \    long t = 3L;\n    long u = q;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    \nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnj83o4rz.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnj83o4rz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 0;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p1 = 1;\n\tlong q1 = 1;\n\tlong r1 = 1;\n\tlong s1 = 1;\n\tlong\
    \ t1 = 1;\n\tlong u1 = 1;\n\tlong v1 = 1;\n\tlong w1 = 1;\n\tlong x1 = 1;\n\t\
    long y1 = 1;\n\tlong z1 = 1;\n\tlong a1 = 1;\n\tlong b1 = 1;\n\tlong c1 = 1;\n\
    \tlong d1 = 1;\n\tlong e1 = 1;\n\tlong f1 = 1;\n\tlong g1 = 1;\n\tlong h1 = 1;\n\
    \tlong i1 = 1;\n\tlong j1 = 1;\n\tlong k1 = 1;\n\tlong l1 = 1;\n\tlong m1 = 1;\n\
    \tlong n1 = 1;\n\tlong o1 = 1;\n\tlong p2 = 1;\n\tlong q2 = 1;\n\tlong r2 = 1;\n\
    \tlong s2 = 1;\n\tlong t2 = 1;\n\tlong u2 = 1;\n\tlong v2 = 1;\n\tlong w2 = 1;\n\
    \tlong x2 = 1;\n\tlong y2 = 1;\n\tlong z2 = 1;\n\tlong a2 = 1;\n\tlong b2 = 1;\n\
    \tlong c2 = 1;\n\tlong d2 = 1;\n\tlong e2 = 1;\n\tlong f2 = 1;\n\tlong g2 = 1;\n\
    \tlong h2 = 1;\n\tlong i2 = 1;\n\tlong j2 = 1;\n\tlong k2 = 1;\n\tlong l2 = 1;\n\
    \tlong m2 = 1;\n\tlong n2 = 1;\n\tlong o2 = 1;\n\tlong p3 = 1;\n\tlong q3 = 1;\n\
    \tlong r3 = 1;\n\tlong s3 = 1;\n\tlong t3 = 1;\n\tlong u3 = 1;\n\tlong v3 = 1;\n\
    \tlong w3 = 1;\n\tlong x3 = 1;\n\tlong y3 = 1;\n\tlong z3 = 1;\n\tlong a3 = 1;\n\
    \tlong b3 = 1;\n\tlong c3 = 1;\n\tlong d3 = 1;\n\tlong e3 = 1;\n\tlong f3 = 1;\n\
    \tlong g3 = 1;\n\tlong h3 = 1;\n\tlong i3 = 1;\n\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp19f3j82k.d(112): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19f3j82k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptoaawa94.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptoaawa94.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long factor = 2;\n    long limit = sqrt(n);\n    long i;\n    for(i\
    \ = 2; i <= limit; ++i)\n    {\n        if(n%i == 0)\n        {\n            factor\
    \ = i;\n            break;\n        }\n    }\n    return factor;\n}\n</code>\n\
    <|/ a tags=c++,algorithm,primes |>\n<| c |>\nThe first `for` loop can be replaced\
    \ with `for (long i = 2; i <= limit; ++i)`\n<|/ c |>\n<| c |>\n: Yes, that would\
    \ be better. Thanks.\n<|/ c |>\n<| c |>\n: I added a version that doesn't use\
    \ any loops at all. Hope it helps.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ doesn't use any loops at all. Hope it helps.\n<|/ c |>\n<| c |>\n: I added a\
    \ version that doesn't use any loops at all. Hope it helps.\n<|/ c |>\n<| a dscore=3\
    \ |>\n<code>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpucn3ifg6.d(26): Error: declaration expected, not `<`\n/tmp/tmpucn3ifg6.d(35):
    Error: unterminated character constant\n/tmp/tmpucn3ifg6.d(38): Error: unterminated
    character constant\n/tmp/tmpucn3ifg6.d(41): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpucn3ifg6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long e = 1;\n    long k = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long w = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1b6l6g3g.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1b6l6g3g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = n;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpijy_fz4k.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpijy_fz4k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = n;\n\tlong v = 1;\n\t\n\twhile (p < q) {\n\t\twhile (u > v)\
    \ {\n\t\t\twhile (r > s) {\n\t\t\t\twhile (r > t) {\n\t\t\t\t\twhile (r > u) {\n\
    \t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\twhile\
    \ (r > u) {\n\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\twhile (r >\
    \ t) {\n\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\twhile (r\
    \ > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r\
    \ > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    while (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    while (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r\
    \ > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v)\
    \ {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r >\
    \ t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    while (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r\
    \ > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t)\
    \ {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\twhile (r > v) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (r > t) {\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\twhile (r > u) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt1o48omz.d(75): Error: found `unittest` instead of statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt1o48omz.d(85):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt1o48omz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbj657wiz.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbj657wiz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbj657wiz.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbj657wiz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s, t, m, n;\n    long long factor = 1;\n    \n\
    \    // check for trivial factors\n    if (n <= 1) return n;\n    \n    // check\
    \ for prime factors\n    if (n <= 3) return n;\n    \n    // check for even factors\n\
    \    if (n % 2 == 0) return 2;\n    \n    // check for composite factors\n   \
    \ for(i = 3; i <= sqrt(n); i += 2)\n    {\n        if (n % i == 0) return i;\n\
    \    }\n    \n    // check for perfect powers\n    for(i = 3; i <= sqrt(n); i\
    \ += 2)\n    {\n        if (n % i == 0)\n        {\n            n = n / i;\n \
    \           break;\n        }\n    }\n    \n    // check for perfect square\n\
    \    if (n == 1) return 2;\n    \n    // check for perfect cube\n    if (n ==\
    \ 2) return 3;\n    \n    // check for perfect fifth power\n    if (n % 5 == 0)\
    \ return 5;\n    \n    // check for perfect fifth power\n    if (n % 3 == 0) return\
    \ 3;\n    \n    // check for perfect fifth power\n    if (n % 7 == 0) return 7;\n\
    \    \n    // check for perfect fifth power\n    if (n % 11 == 0) return 11;\n\
    \    \n    // check for perfect fifth power\n    if (n % 13 == 0) return 13;\n\
    \    \n    // check for perfect fifth power\n    if (n % 17 == 0) return 17;\n\
    \    \n    // check for perfect fifth power\n    if (n % 19 == 0) return 19;\n\
    \    \n    // check for perfect fifth power\n    if (n % 23 == 0) return 23;\n\
    \    \n    // check for perfect fifth power\n    if (n % 29 == 0) return 29;\n\
    \    \n    // check for perfect fifth power\n    if (n % 31 == 0) return 31;\n\
    \    \n    // check for perfect fifth power\n    if (n % 37 == 0) return 37;\n\
    \    \n    // check for perfect fifth power\n    if (n % 41L == 0) return 41L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 43L == 0) return 43L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 47L == 0) return 47L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 53L == 0) return 53L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 59L == 0) return 59L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 61L == 0) return 61L;\n\
    \    \n    // check for perfect fifth power\n    if (n % 67L == 0) return 67L;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0mboc5tv.d(14): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp0mboc5tv.d(100): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mboc5tv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 3;\n\tlong y =\
    \ 3;\n\tlong z = 3;\n\tlong max = 0;\n\tlong factor = 1;\n\t\n\twhile (p < q)\
    \ {\n\t\twhile (p < q && n % p == 0) {\n\t\t\tp = p + 1;\n\t\t}\n\t\t\n\t\twhile\
    \ (q < r && n % q == 0) {\n\t\t\tq = q + 1;\n\t\t}\n\t\t\n\t\tif (p < q) {\n\t\
    \t\tr = q;\n\t\t} else {\n\t\t\ts = p;\n\t\t}\n\t\t\n\t\twhile (s < t && n % s\
    \ == 0) {\n\t\t\ts = s + 1;\n\t\t}\n\t\t\n\t\tif (s < t) {\n\t\t\tt = s;\n\t\t\
    } else {\n\t\t\tu = s;\n\t\t}\n\t\t\n\t\twhile (t < u && n % t == 0) {\n\t\t\t\
    t = t + 1;\n\t\t}\n\t\t\n\t\tif (t < u) {\n\t\t\tv = t;\n\t\t} else {\n\t\t\t\
    w = t;\n\t\t}\n\t\t\n\t\twhile (w < x && n % w == 0) {\n\t\t\tw = w + 1;\n\t\t\
    }\n\t\t\n\t\tif (w < x) {\n\t\t\tx = w;\n\t\t} else {\n\t\t\ty = w;\n\t\t}\n\t\
    \t\n\t\twhile (z < y && n % z == 0) {\n\t\t\tz = z + 1;\n\t\t}\n\t\t\n\t\tif (z\
    \ < y) {\n\t\t\tmax = z;\n\t\t} else {\n\t\t\tmax = y;\n\t\t}\n\t\t\n\t\twhile\
    \ (max < factor && n % max == 0) {\n\t\t\tmax = max + 1;\n\t\t}\n\t\t\n\t\tif\
    \ (max < factor) {\n\t\t\tfactor = max;\n\t\t} else {\n\t\t\tfactor = 1;\n\t\t\
    }\n\t}\n\t\n\treturn factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = n;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm12cut61.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm12cut61.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong i, p, q, factor = 1;\n\tlong maxp = 0;\n\tlong maxq = 0;\n\t\
    long maxn = n;\n\tlong maxd = n;\n\tlong maxm = n;\n\tlong maxr = n;\n\tlong maxs\
    \ = n;\n\tlong maxt = n;\n\tlong maxu = n;\n\tlong maxv = n;\n\tlong maxw = n;\n\
    \tlong maxx = n;\n\tlong maxy = n;\n\tlong maxz = n;\n\tlong maxa = n;\n\tlong\
    \ maxb = n;\n\tlong maxc = n;\n\tlong maxd = n;\n\tlong maxe = n;\n\tlong maxf\
    \ = n;\n\tlong maxg = n;\n\tlong maxh = n;\n\tlong maxi = n;\n\tlong maxj = n;\n\
    \tlong maxk = n;\n\tlong maxl = n;\n\tlong maxm = n;\n\tlong maxn = n;\n\tlong\
    \ maxo = n;\n\tlong maxp = n;\n\tlong maxq = n;\n\tlong maxr = n;\n\tlong maxs\
    \ = n;\n\tlong maxt = n;\n\tlong maxu = n;\n\tlong maxv = n;\n\tlong maxw = n;\n\
    \tlong maxx = n;\n\tlong maxy = n;\n\tlong maxz = n;\n\tlong maxa = n;\n\tlong\
    \ maxb = n;\n\tlong maxc = n;\n\tlong maxd = n;\n\tlong maxe = n;\n\tlong maxf\
    \ = n;\n\tlong maxg = n;\n\tlong maxh = n;\n\tlong maxi = n;\n\tlong maxj = n;\n\
    \tlong maxk = n;\n\tlong maxl = n;\n\tlong maxm = n;\n\tlong maxn = n;\n\tlong\
    \ maxo = n;\n\tlong maxp = n;\n\tlong maxq = n;\n\tlong maxr = n;\n\tlong maxs\
    \ = n;\n\tlong maxt = n;\n\tlong maxu = n;\n\tlong maxv = n;\n\tlong maxw = n;\n\
    \tlong maxx = n;\n\tlong maxy = n;\n\tlong maxz = n;\n\tlong maxa = n;\n\tlong\
    \ maxb = n;\n\tlong maxc = n;\n\tlong maxd = n;\n\tlong maxe = n;\n\tlong maxf\
    \ = n;\n\tlong maxg = n;\n\tlong maxh = n;\n\tlong maxi = n;\n\tlong maxj = n;\n\
    \tlong maxk = n;\n\tlong maxl = n;\n\tlong maxm = n;\n\tlong maxn = n;\n\tlong\
    \ maxo = n;\n\tlong maxp = n;\n\tlong maxq = n;\n\tlong maxr = \nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmf3eh9kf.d(98): Error: expression expected, not `unittest`\n/tmp/tmpmf3eh9kf.d(99):
    Error: semicolon expected, not `{`\n/tmp/tmpmf3eh9kf.d(108): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpmf3eh9kf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp75vatb2_.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75vatb2_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 3;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long a = 3;\n    long b = 3;\n    long c = 3;\n\
    \    long d = 3;\n    long e = 3;\n    long f = 3;\n    long g = 3;\n    long\
    \ h = 3;\n    long i = 3;\n    long j = 3;\n    long k = 3;\n    long l = 3;\n\
    \    long m = 3;\n    long n = 3;\n    long o = 3;\n    long p = 3;\n    long\
    \ q = 3;\n    long r = 3;\n    long s = 3;\n    long t = 3;\n    long u = 3;\n\
    \    long v = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long A = 3;\n    long B = 3;\n    long C = 3;\n    long D = 3;\n\
    \    long E = 3;\n    long F = 3;\n    long G = 3;\n    long H = 3;\n    long\
    \ I = 3;\n    long J = 3;\n    long K = 3;\n    long L = 3;\n    long M = 3;\n\
    \    long N = 3;\n    long O = 3;\n    long P = 3;\n    long Q = 3;\n    long\
    \ R = 3;\n    long S = 3;\n    long T = 3;\n    long U = 3;\n    long V = 3;\n\
    \    long W = 3;\n    long X = 3;\n    long Y = 3;\n    long Z = 3;\n    long\
    \ a = 3;\n    long b = 3;\n    long c = 3;\n    long d = 3;\n    long e = 3;\n\
    \    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 3;\n    long\
    \ j = 3;\n    long k = 3;\n    long l = 3;\n    long m = 3;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp522e322v.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp522e322v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\
    \tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\t\
    long j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\
    \tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\t\
    long j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\
    \tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\t\
    long j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\
    \tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\t\
    long j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2pcze5sw.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2pcze5sw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = n;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx5bveysf.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5bveysf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long i = 3;\n    while(i <= n/2) {\n     \
    \   if(n % i == 0) {\n            result *= i;\n            n /= i;\n        }\n\
    \        ++i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpna88ymvs.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpna88ymvs.__unittest_L24_C1() [0x427a90]\n??:?
    void tmpna88ymvs.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0xf3668554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong e = 1;\n\tlong k = 1;\n\tlong i = 2;\n\t\n\twhile\
    \ (p < q) {\n\t\twhile (p < q && r != 1) {\n\t\t\tr = r / p;\n\t\t\ts = s * p;\n\
    \t\t\tt = t * p;\n\t\t\tm = m * p;\n\t\t\te = e * p;\n\t\t\tk = k * p;\n\t\t\t\
    i = i * p;\n\t\t}\n\t\tp = p * k;\n\t\tq = q / e;\n\t}\n\treturn n;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong max_factor = 1;\n\tlong max_factor_index = 0;\n\
    \tlong factor_index = 1;\n\tbool prime = true;\n\t\n\twhile (p > 1) {\n\t\tif\
    \ (p % 2 == 0) {\n\t\t\tprime = false;\n\t\t}\n\t\t\n\t\tp = p / 2;\n\t\tfactor_index++;\n\
    \t}\n\t\n\twhile (factor_index <= max_factor_index) {\n\t\tif (n % p == 0) {\n\
    \t\t\tmax_factor = p;\n\t\t\tmax_factor_index = factor_index;\n\t\t}\n\t\t\n\t\
    \tp = p / 2;\n\t\tfactor_index++;\n\t}\n\t\n\tif (prime) {\n\t\treturn n;\n\t\
    } else {\n\t\treturn max_factor;\n\t}\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdupguyg5.d(48): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmpdupguyg5.__unittest_L44_C1() [0x427ae8]\n??:?
    void tmpdupguyg5.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0x471c7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (!std.isPrime(q))\n\t{\n\t\twhile\
    \ (!std.isPrime(q))\n\t\t{\n\t\t\tp++;\n\t\t\tq = (p * q) % n;\n\t\t}\n\t}\n\t\
    return q;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxbzj97u.d(15): Error: undefined identifier `isPrime` in package
    `std`\n/tmp/tmpsxbzj97u.d(17): Error: undefined identifier `isPrime` in package
    `std`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxbzj97u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r * p < n) {\n\t\t\tr *= p;\n\t\t}\n\t\tif (r != n) {\n\t\t\tbreak;\n\
    \t\t}\n\t\tp += 1;\n\t\tq -= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpg10qzyff.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpg10qzyff.__unittest_L28_C1() [0x427a8c]\n??:?
    void tmpg10qzyff.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0x98f2e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong result = 1;\n\tlong i;\n\tfor(i = 2; i <= n / 2; i++)\n\t{\n\t\
    \tif(n % i == 0)\n\t\t{\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplr4vd224.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmplr4vd224.__unittest_L25_C1() [0x427a84]\n??:?
    void tmplr4vd224.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0xff389554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong w = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\
    \tlong d = 1;\n\tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\t\
    long i = 1;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong\
    \ n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s\
    \ = 1;\n\tlong t = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x =\
    \ 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong w = 1;\n\tlong a = 1;\n\tlong b = 1;\n\
    \tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\t\
    long h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong\
    \ m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r\
    \ = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w =\
    \ 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong w = 1;\n\tlong a = 1;\n\
    \tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 1;\n\t\
    long g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k = 1;\n\tlong\
    \ l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q\
    \ = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\tlong v =\
    \ 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong w = 1;\n\
    \tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\t\
    long f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv_nty35j.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_nty35j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n\
    \    long C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 2;\n    long\
    \ G = 2;\n    long H = 2;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n\
    \    long L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long\
    \ P = 2;\n    long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n\
    \    long U = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long\
    \ Y = 2;\n    long Z = 2;\n    long AA = 2;\n    long AB = 2;\n    long AC = 2;\n\
    \    long AD = 2;\n    long AE = 2;\n    long AF = 2;\n    long AG = 2;\n    long\
    \ AH = 2;\n    long AI = 2;\n    long AJ = 2;\n    long AK = 2;\n    long AL =\
    \ 2;\n    long AM = 2;\n    long AN = 2;\n    long AO = 2;\n    long AP = 2;\n\
    \    long AQ = 2;\n    long AR = 2;\n    long AS = 2;\n    long AT = 2;\n    long\
    \ AU = 2;\n    long AV = 2;\n    long AW = 2;\n    long AX = 2;\n    long AY =\
    \ 2;\n    long AZ = 2;\n    long BA = 2;\n    long BB = 2;\n    long BC = 2;\n\
    \    long BD = 2;\n    long BE = 2;\n    long BF = 2;\n    long BG = 2;\n    long\
    \ BH = 2;\n    long BI = 2;\n    long BJ = 2;\n    long BK = 2;\n    long BL =\
    \ 2;\n    long BM = 2;\n    long BN = 2;\n    long BO = 2;\n    long BP = 2;\n\
    \    long BQ = 2;\n    long BR = 2;\n    long BS = 2;\n    long BT = 2;\n    long\
    \ BU = 2;\n    long BV = 2;\n    long BW = 2;\n    long BX = 2;\n    long BY =\
    \ 2;\n    long BZ = 2;\n    long CA = 2;\n    long CB = 2;\n    long CC = 2;\n\
    \    long CD = 2;\n    long CE = 2;\n    long CF = 2;\n    long CG = 2;\n    long\
    \ CH = 2;\n    long CI = 2;\n    long CJ = 2;\n    long CK = 2;\n\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw2rqo7c6.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2rqo7c6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long factor = 2;\n    \n    while (p <\
    \ q)\n    {\n        while (r % p == 0)\n        {\n            r = (r / p) *\
    \ p;\n        }\n        \n        while (r % p == 0)\n        {\n           \
    \ r = (r / p) * p;\n        }\n        \n        while (r % p == 0)\n        {\n\
    \            r = (r / p) * p;\n        }\n        \n        while (r % p == 0)\n\
    \        {\n            r = (r / p) * p;\n        }\n        \n        while (r\
    \ % p == 0)\n        {\n            r = (r / p) * p;\n        }\n        \n  \
    \      while (r % p == 0)\n        {\n            r = (r / p) * p;\n        }\n\
    \        \n        while (r % p == 0)\n        {\n            r = (r / p) * p;\n\
    \        }\n        \n        while (r % p == 0)\n        {\n            r = (r\
    \ / p) * p;\n        }\n        \n        while (r % p == 0)\n        {\n    \
    \        r = (r / p) * p;\n        }\n        \n        while (r % p == 0)\n \
    \       {\n            r = (r / p) * p;\n        }\n        \n        while (r\
    \ % p == 0)\n        {\n            r = (r / p) * p;\n        }\n        \n  \
    \      while (r % p == 0)\n        {\n            r = (r / p) * p;\n        }\n\
    \        \n        while (r % p == 0)\n        {\n            r = (r / p) * p;\n\
    \        }\n        \n        while (r % p == 0)\n        {\n            r = (r\
    \ / p) * p;\n        }\n        \n        while (r % p == 0)\n        {\n    \
    \        r = (r / p) * p;\n        }\n        \n        while (r % p == 0)\n \
    \       {\n            r = (r / p) * p;\n        }\n        \n        while (r\
    \ % p == 0)\n        {\n            r = (r / p) * p;\n        }\n        \n  \
    \      while (r % p == 0)\n        {\n            r = (r / p) * p;\n        }\n\
    \        \n        while (r % p == 0)\n        {\n            r = (r / p) * p;\n\
    \        }\n        \n        while (r % p == 0)\n        {\n            r = (r\
    \ / p) * p;\n        }\n        \n        while (r % p == 0)\n        {\n    \
    \        r = (r / p) * p;\n        }\n        \n        while (r % p == 0)\n \
    \       {\n            r = (r / p) * p;\n        }\n        \n        while (r\
    \ % p\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt4_cy9z0.d(134): Error: found `unittest` when expecting `)`\n/tmp/tmpt4_cy9z0.d(144):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt4_cy9z0.d(144):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4_cy9z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong max_factor = 1;\n\tlong max_factor_index = 0;\n\tlong i;\n\t\
    long j;\n\tlong factor = 1;\n\tlong factor_index = 0;\n\t\n\tfor(i = 2; i <= n;\
    \ i++) {\n\t\tfor(j = i; j < n; j += i) {\n\t\t\tfactor = j;\n\t\t\tfactor_index\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t\tif(factor != 1) {\n\t\t\tif(factor > max_factor)\
    \ {\n\t\t\t\tmax_factor = factor;\n\t\t\t\tmax_factor_index = factor_index;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn max_factor_index;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnct63laj.d(39): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmpnct63laj.__unittest_L35_C1() [0x427ab4]\n??:?
    void tmpnct63laj.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b5f]\n??:?
    __libc_start_main [0x93c89554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w2 = 2;\n    long w3 = 1;\n\
    \    long w4 = 1;\n    long w5 = 1;\n    long w6 = 1;\n    long w7 = 1;\n    long\
    \ w8 = 1;\n    long w9 = 1;\n    long w10 = 1;\n    long w11 = 1;\n    long w12\
    \ = 1;\n    long w13 = 1;\n    long w14 = 1;\n    long w15 = 1;\n    long w16\
    \ = 1;\n    long w17 = 1;\n    long w18 = 1;\n    long w19 = 1;\n    long w20\
    \ = 1;\n    long w21 = 3;\n    long w22 = 1;\n    long w23 = 1;\n    long w24\
    \ = 1;\n    long w25 = 1;\n    long w26 = 1;\n    long w27 = 1;\n    long w28\
    \ = 1;\n    long w29 = 1;\n    long w30 = 1;\n    long w31 = 1;\n    long w32\
    \ = 1;\n    long w33 = 1;\n    long w34 = 1;\n    long w35 = 1;\n    long w36\
    \ = 1;\n    long w37 = 1;\n    long w38 = 1;\n    long w39 = 1;\n    long w40\
    \ = 1;\n    long w41 = 1;\n    long w42 = 1;\n    long w43 = 1;\n    long w44\
    \ = 1;\n    long w45 = 1;\n    long w46 = 1;\n    long w47 = 1;\n    long w48\
    \ = 1;\n    long w49 = 1;\n    long w50 = 1;\n    long w51 = 1;\n    long w52\
    \ = 1;\n    long w53 = 1;\n    long w54 = 1;\n    long w55 = 1;\n    long w56\
    \ = 1;\n    long w57 = 1;\n    long w58 = 1;\n    long w59 = 1;\n    long w60\
    \ = 1;\n    long w61 = 1;\n    long w62 = 1;\n    long w63 = 1;\n    long w64\
    \ = 1;\n    long w65 = 1;\n    long w66 = 1;\n    long w67 = 1;\n    long w68\
    \ = 1;\n    long w69 = 1;\n    long w70 = 1;\n    long w71 = 1;\n    long w72\
    \ = 1;\n    long w73 = 1;\n    long w74 = 1;\n    long w75 = 1;\n    long w76\
    \ = 1;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1po1wi6d.d(99): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1po1wi6d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = q%p;\n    while (q\
    \ > 0) {\n        q = q/p;\n        r = r*p;\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp774d3d7u.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmp774d3d7u.__unittest_L22_C1() [0x427a7c]\n??:?
    void tmp774d3d7u.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b27]\n??:?
    __libc_start_main [0xb89d9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = n;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyuyefz1j.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuyefz1j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2L;\n\tlong q = n-1L;\n\tlong r = q;\n\tlong s = 2L;\n\t\
    long t = 3L;\n\tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\
    \tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\tlong n = 3L;\n\
    \tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\
    \tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\n\
    \tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\
    \tlong l = 3L;\n\tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\
    \tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\n\tlong i = 1L;\n\
    \tlong j = 1L;\n\tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\
    \tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\tlong n = 3L;\n\
    \tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\
    \tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\n\
    \tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\tlong n = 3L;\n\tlong k = 3L;\n\
    \tlong l = 3L;\n\tlong h = 1L;\n\tlong i = 1L;\n\tlong j = 1L;\n\tlong m = 2L;\n\
    \tlong n = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong h = 1L;\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1c325_9o.d(86): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1c325_9o.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = n;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp206fizi_.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp206fizi_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long max = 2;\n    long i = 3;\n\
    \    long j = 3;\n    long k = 3;\n    long l = 3;\n    long m = 3;\n    long\
    \ n = 3;\n    long o = 3;\n    long p2 = 2;\n    long q2 = 2;\n    long r2 = 2;\n\
    \    long s2 = 2;\n    long t3 = 1;\n    long u3 = 1;\n    long v3 = 1;\n    long\
    \ w3 = 1;\n    long x3 = 1;\n    long y3 = 1;\n    long z3 = 1;\n    long max2\
    \ = 2;\n    long i2 = 2;\n    long j2 = 2;\n    long k2 = 2;\n    long l2 = 2;\n\
    \    long m2 = 2;\n    long n2 = 2;\n    long o2 = 2;\n    long p3 = 1;\n    long\
    \ q3 = 1;\n    long r3 = 1;\n    long s3 = 1;\n    long t4 = 1;\n    long u4 =\
    \ 1;\n    long v4 = 1;\n    long w4 = 1;\n    long x4 = 1;\n    long y4 = 1;\n\
    \    long z4 = 1;\n    long max3 = 1;\n    long i3 = 1;\n    long j3 = 1;\n  \
    \  long k3 = 1;\n    long l3 = 1;\n    long m3 = 1;\n    long n3 = 1;\n    long\
    \ o3 = 1;\n    long p4 = 1;\n    long q4 = 1;\n    long r4 = 1;\n    long s4 =\
    \ 1;\n    long t5 = 1;\n    long u5 = 1;\n    long v5 = 1;\n    long w5 = 1;\n\
    \    long x5 = 1;\n    long y5 = 1;\n    long z5 = 1;\n    long max4 = 1;\n  \
    \  long i4 = 1;\n    long j4 = 1;\n    long k4 = 1;\n    long l4 = 1;\n    long\
    \ m4 = 1;\n    long n4 = 1;\n    long o4 = 1;\n    long p5 = 1;\n    long q5 =\
    \ 1;\n    long r5 = 1;\n    long s5 = 1;\n    long t6 = 1;\n    long u6 = 1;\n\
    \    long v6 = 1;\n    long w6 = 1;\n    long x6 = 1;\n    long y6 = 1;\n    long\
    \ z6 = 1;\n    long max5 = 1;\n    long i5 = 1;\n    long j5 = 1;\n    long k5\
    \ = 1;\n    long l5 = 1;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6pj_r8pm.d(105): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pj_r8pm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong e = 1;\n\tlong i = 2;\n\tlong k = 2;\n\tlong j =\
    \ 1;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\
    \tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\t\
    long v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong\
    \ a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f\
    \ = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k =\
    \ 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\
    \tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\t\
    long v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong\
    \ a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f\
    \ = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k =\
    \ 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\
    \tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\t\
    long v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong\
    \ a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f\
    \ = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k =\
    \ 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p = 1;\n\
    \tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\t\
    long v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5rscft3g.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5rscft3g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong largest = n;\n\tlong i = 3;\n\twhile (i * i <= n) \n\t{\n\t\t\
    if (n % i == 0) \n\t\t{\n\t\t\tlargest = i;\n\t\t\tbreak;\n\t\t}\n\t\t++i;\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmph5wnbfgp.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmph5wnbfgp.__unittest_L26_C1() [0x427a70]\n??:?
    void tmph5wnbfgp.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xb1d0c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\
    \tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\t\
    long k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong\
    \ q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i\
    \ = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n =\
    \ 1;\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t = 1;\n\
    \tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\t\
    long m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong\
    \ s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k\
    \ = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q =\
    \ n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\
    \tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\t\
    long p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t = 1;\n\tlong\
    \ m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m\
    \ = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s =\
    \ 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\
    \tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = n;\n\t\
    long r = n;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoj2solax.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoj2solax.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = n;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyuyefz1j.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuyefz1j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong m = n;\n\tlong a\
    \ = 1;\n\tlong b = 2;\n\tlong c = 2;\n\tlong d = 2;\n\tlong e = 2;\n\tlong f =\
    \ 3;\n\tlong g = 3;\n\tlong h = 3;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\
    \tlong l = 0;\n\tlong m = n;\n\tlong n = n;\n\tlong o = n;\n\tlong p = n;\n\t\
    long q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t = n;\n\tlong u = n;\n\tlong\
    \ v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y = n;\n\tlong z = n;\n\tlong a\
    \ = 1;\n\tlong b = 2;\n\tlong c = 2;\n\tlong d = 2;\n\tlong e = 2;\n\tlong f =\
    \ 3;\n\tlong g = 3;\n\tlong h = 3;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\
    \tlong l = 0;\n\tlong m = n;\n\tlong n = n;\n\tlong o = n;\n\tlong p = n;\n\t\
    long q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t = n;\n\tlong u = n;\n\tlong\
    \ v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y = n;\n\tlong z = n;\n\tlong a\
    \ = 1;\n\tlong b = 2;\n\tlong c = 2;\n\tlong d = 2;\n\tlong e = 2;\n\tlong f =\
    \ 3;\n\tlong g = 3;\n\tlong h = 3;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\
    \tlong l = 0;\n\tlong m = n;\n\tlong n = n;\n\tlong o = n;\n\tlong p = n;\n\t\
    long q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t = n;\n\tlong u = n;\n\tlong\
    \ v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y = n;\n\tlong z = n;\n\tlong a\
    \ = 1;\n\tlong b = 2;\n\tlong c = 2;\n\tlong d = 2;\n\tlong e = 2;\n\tlong f =\
    \ 3;\n\tlong g = 3;\n\tlong h = 3;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\
    \tlong l = 0;\n\tlong m = n;\n\tlong n = n;\n\tlong o = n;\n\tlong p = n;\n\t\
    long q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t = n;\n\tlong u = n;\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg2x2ct3g.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg2x2ct3g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t;\n    \n    while(p < q) {\n        while(p < q && q % p == 0) {\n\
    \            p += 1;\n        }\n        \n        while(p < q && q % p == 0)\
    \ {\n            q -= p;\n        }\n        \n        if(p < q) {\n         \
    \   t = s;\n            while(t < p) {\n                t *= s;\n            }\n\
    \            \n            if(r > t) {\n                r = t;\n            }\n\
    \        }\n        \n        s += 2;\n    }\n    \n    return r;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n; i++) {\n     \
    \   p = i;\n        for(q = p * p; q <= n; q += p) {\n            if(n % q ==\
    \ 0) {\n                factor = p;\n                break;\n            }\n \
    \       }\n    }\n    return factor;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=algorithm,primes,java\
    \ |>\n<code>\nimport java.util.Scanner;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpssjz5_lm.d(25): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpssjz5_lm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s, t, m, n;\n    long long int max_factor = 1;\n\
    \    \n    // find largest prime factor of n\n    for(i = 2; i <= n / 2; i++)\
    \ {\n        p = i;\n        \n        while(p % 2 == 0) {\n            p = p\
    \ / 2;\n        }\n        \n        for(m = 2; m <= p; m++) {\n            if(n%m\
    \ == 0) {\n                break;\n            }\n        }\n        \n      \
    \  if(m > p) {\n            q = m / p;\n            \n            while(n % q\
    \ == 0) {\n                n = n / q;\n            }\n            \n         \
    \   if(n > max_factor) {\n                max_factor = n;\n            }\n   \
    \     }\n    }\n    \n    return max_factor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqf6i64ja.d(14): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpqf6i64ja.d(14): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqf6i64ja.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t;\n\
    \twhile (r > 1) {\n\t\tt = r / p;\n\t\tif (t > s) {\n\t\t\ts = t;\n\t\t\tq = p;\n\
    \t\t}\n\t\tp = p * q;\n\t\tr = r;\n\t}\n\treturn s;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcprwfzhj.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcprwfzhj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaoo_8p8f.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaoo_8p8f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6vd3nbpw.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6vd3nbpw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7fyi2esl.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7fyi2esl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 1;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 3;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long aa = 3;\n    long bb = 3;\n    long cc = 3;\n\
    \    long dd = 3;\n    long ee = 3;\n    long ff = 3;\n    long gg = 3;\n    long\
    \ hh = 3;\n    long ii = 3;\n    long jj = 3;\n    long kk = 3;\n    long ll =\
    \ 3;\n    long mm = 3;\n    long nn = 3;\n    long oo = 3;\n    long pp = 3;\n\
    \    long qq = 3;\n    long rr = 3;\n    long ss = 0;\n    long tt = 3;\n    long\
    \ uu = 3;\n    long vv = 3;\n    long ww = 3;\n    long xx = 3;\n    long yy =\
    \ 3;\n    long zz = 3;\n    long aaa = 3;\n    long bbb = 3;\n    long ccc = 3;\n\
    \    long ddd = 3;\n    long eee = 3;\n    long fff = 3;\n    long ggg = 3;\n\
    \    long hhh = 3;\n    long iii = 3;\n    long jjj = 3;\n    long kkk = 3;\n\
    \    long lll = 3;\n    long mmm = 3;\n    long nnn = 3;\n    long ooo = 3;\n\
    \    long ppp = 3;\n    long qqq = 3;\n    long rrr = 3;\n    long ss = 0;\n \
    \   long ttt = 3;\n    long uuu = 3;\n    long vvv = 3;\n    long www = 3;\n \
    \   long xxx = 3;\n    long yyy = 3;\n    long zzz = 3;\n    long aaaa = 3;\n\
    \    long bbbb = 3;\n    long cccc = 3;\n    long dddd = 3;\n    long eeee = 3;\n\
    \    long ffff = 3;\n    long gggg = 3;\n    long hhhh = 3;\n    long \nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0wsa9d_j.d(111): Error: no identifier for declarator `long`\n/tmp/tmp0wsa9d_j.d(111):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp0wsa9d_j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long max_factor = 1;\n    long factor =\
    \ 1;\n    \n    while (p > 1) {\n        q = p-1;\n        while (p % q == 0)\
    \ {\n            p /= q;\n            factor++;\n        }\n        if (p > max_factor)\
    \ {\n            max_factor = p;\n        }\n        t *= p;\n        p /= t;\n\
    \    }\n    \n    while (p > 1) {\n        q = p-1;\n        while (p % q == 0)\
    \ {\n            p /= q;\n            factor++;\n        }\n        if (p > max_factor)\
    \ {\n            max_factor = p;\n        }\n        s *= p;\n        p /= s;\n\
    \    }\n    \n    while (p > 1) {\n        q = p-1;\n        while (p % q == 0)\
    \ {\n            p /= q;\n            factor++;\n        }\n        if (p > max_factor)\
    \ {\n            max_factor = p;\n        }\n        m *= p;\n        p /= m;\n\
    \    }\n    \n    return max_factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpof7hdqt6.d(67): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ea5]\n??:? void tmpof7hdqt6.__unittest_L63_C1() [0x427b90]\n??:?
    void tmpof7hdqt6.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42827b]\n??:? _d_run_main [0x4281e6]\n??:? main [0x427c3b]\n??:?
    __libc_start_main [0xc03a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = q;\n    long s = 2L;\n\
    \    long t = 3L;\n    long u = t%p;\n    long v = u;\n    long w = u;\n    long\
    \ x = 2L;\n    long y = 2L;\n    long z = 2L;\n    long a = 2L;\n    long b =\
    \ 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f = 1L;\n\
    \    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n    long\
    \ k = 1L;\n    long l = 1L;\n    long m = 2L;\n    long n = 2L;\n    long o =\
    \ 1L;\n    long p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s = 1L;\n\
    \    long t = 1L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n    long\
    \ x = 1L;\n    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long b =\
    \ 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f = 1L;\n\
    \    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n    long\
    \ k = 1L;\n    long l = 1L;\n    long m = 2L;\n    long n = 2L;\n    long o =\
    \ 1L;\n    long p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s = 1L;\n\
    \    long t = 1L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n    long\
    \ x = 1L;\n    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long b =\
    \ 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f = 1L;\n\
    \    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n    long\
    \ k = 1\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpybchfvty.d(87): Error: semicolon expected, not `unittest`\n/tmp/tmpybchfvty.d(87):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpybchfvty.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t;\n\
    \t\n\twhile (q > 0) {\n\t\tt = q;\n\t\twhile (t % 2 == 0) {\n\t\t\tt /= 2;\n\t\
    \t}\n\t\t\n\t\tif (t > p) {\n\t\t\tp = t;\n\t\t}\n\t\t\n\t\twhile (r % 2 == 0)\
    \ {\n\t\t\tr /= 2;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\
    \t\twhile (r % 3 == 0) {\n\t\t\tr /= 3;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\t\
    q = r;\n\t\t}\n\t\t\n\t\twhile (r % 5 == 0) {\n\t\t\tr /= 5;\n\t\t}\n\t\t\n\t\t\
    if (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 7 == 0) {\n\t\t\tr /=\
    \ 7;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r %\
    \ 11 == 0) {\n\t\t\tr /= 11;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t\
    }\n\t\t\n\t\twhile (r % 13 == 0) {\n\t\t\tr /= 13;\n\t\t}\n\t\t\n\t\tif (r > q)\
    \ {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 17 == 0) {\n\t\t\tr /= 17;\n\t\t\
    }\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 19 == 0)\
    \ {\n\t\t\tr /= 19;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\
    \t\twhile (r % 23 == 0) {\n\t\t\tr /= 23;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\
    \tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 29 == 0) {\n\t\t\tr /= 29;\n\t\t}\n\t\t\n\
    \t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 31 == 0) {\n\t\t\t\
    r /= 31;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile\
    \ (r % 37 == 0) {\n\t\t\tr /= 37;\n\t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\
    \t\t}\n\t\t\n\t\twhile (r % 41 == 0) {\n\t\t\tr /= 41;\n\t\t}\n\t\t\n\t\tif (r\
    \ > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 43 == 0) {\n\t\t\tr /= 43;\n\
    \t\t}\n\t\t\n\t\tif (r > q) {\n\t\t\tq = r;\n\t\t}\n\t\t\n\t\twhile (r % 47 ==\
    \ 0) {\n\t\t\tr /= 47;\n\t\t}\n\t\t\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp044mfl1p.d(146): Error: found `unittest` instead of statement\n/tmp/tmp044mfl1p.d(156):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp044mfl1p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long n = 1;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long k = 2;\n    long i = 2;\n    long j = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long k = 2;\n    long i = 2;\n    long j = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long k = 2;\n    long i = 2;\n    long j = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long k = 2;\n    long i = 2;\n    long j = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long k = 2;\n    long i = 2;\n    long j = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long k = 2;\n    long i = 2;\n    long j = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long k = 2;\n    long i = 2;\n    long j = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long k = 2;\n    long i = 2;\n    long j = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long k = 2;\n    long i = 2;\n    long j = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long k = 2;\n    long i = 2;\n    long j = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long k = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long l = 2;\n    long m = 2;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjt3cvt5a.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjt3cvt5a.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n / 2; ++i)\n   \
    \ {\n        p = i;\n        for(q = 2; q * p <= n; p += q)\n            ;\n \
    \       if(p * p > n)\n            break;\n        factor = p;\n    }\n    return\
    \ factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwapitsor.d(18): Error: use `{ }` for an empty statement, not
    `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwapitsor.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long p = 2;\n    long q = n;\n    long r =\
    \ n;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    \n    while(p < q)\n\
    \    {\n        while(r > 1)\n        {\n            if(r % p == 0)\n        \
    \    {\n                r = r >> 1;\n                s = s * p;\n            }\n\
    \            else\n            {\n                t = t * p;\n            }\n\
    \        }\n        \n        while(u > 1)\n        {\n            if(u % p ==\
    \ 0)\n            {\n                u = u >> 1;\n                t = t * p;\n\
    \            }\n            else\n            {\n                t = t * p;\n\
    \            }\n        }\n        \n        if(r > 1)\n        {\n          \
    \  result = result * r;\n        }\n        \n        if(u > 1)\n        {\n \
    \           result = result * u;\n        }\n        \n        p = p * 2;\n  \
    \      q = q / 2;\n        r = r / 2;\n        s = s / 2;\n        t = t / 2;\n\
    \        u = u / 2;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n\
    \    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long\
    \ w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n\
    \    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n\
    \    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long\
    \ w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n\
    \    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkuc370jg.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkuc370jg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r > 1) {\n\t\t\tlong m = r / p;\n\t\t\tif (m == 0 || n % m == 0) {\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t\tr = m;\n\t\t}\n\t\tif (r == 1) {\n\t\t\tbreak;\n\t\
    \t}\n\t\tp++;\n\t\tq = r;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong factor = 1;\n\tlong p = 2;\n\tlong q = n;\n\twhile (p < q) \n\
    \t{\n\t\twhile (n % p == 0) \n\t\t{\n\t\t\tn /= p;\n\t\t\tfactor++;\n\t\t}\n\t\
    \tp++;\n\t}\n\treturn factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpbbpkazka.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpbbpkazka.__unittest_L27_C1() [0x427a80]\n??:?
    void tmpbbpkazka.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0xce5a2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor;\n    long max = 0;\n    \n    for(i = 2; i\
    \ <= n / 2; ++i)\n    {\n        factor = 1;\n        \n        for(q = i; q <=\
    \ n / i; ++q)\n        {\n            if(n % q == 0)\n            {\n        \
    \        factor = 0;\n                break;\n            }\n        }\n     \
    \   \n        if(factor == 1)\n        {\n            max = i;\n            break;\n\
    \        }\n    }\n    \n    return max;\n}\n</code>\n<|/ a tags=c++,primes,algorithm\
    \ |>\n<| c |>\nThis code doesn't work for large numbers. Try it with `largest_prime_factor(1000000007L)`\
    \ for example\n<|/ c |>\n<| c |>\n: It works for me with that number. Try it yourself.\n\
    <|/ c |>\n<| c |>\n: It works for me with that number. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\n: It works for me with that number. Try it yourself.\n<|/ c |>\n\
    <| c |>\n: It works for me with that number. Try it yourself.\n<|/ c |>\n<| a\
    \ dscore=5 |>\nThe first thing that comes to mind is \"Sieve of Eratosthenes\"\
    .  It's a very efficient algorithm for finding prime numbers.  It's also the most\
    \ efficient algorithm for finding prime factors.  It can be implemented very efficiently\
    \ in O(sqrt(n)) time.\n<|/ a tags=c++,primes,algorithm |>\n<| c |>\nSieve of Eratosthenes\
    \ is very inefficient for finding prime factors.\n<|/ c |>\n<| c |>\n: I agree,\
    \ but it's still the most efficient algorithm for finding prime factors.\n<|/\
    \ c |>\n<| c |>\n: Sieve of Eratosthenes is very inefficient for finding prime\
    \ factors. It's also the most efficient algorithm for finding prime factors.\n\
    <|/ c |>\n<| c |>\n: Sieve of Eratosthenes is very inefficient for finding prime\
    \ factors. It's also the most efficient algorithm for finding prime factors.\n\
    <|/ c |>\n<| c |>\n: Sieve of Eratosthenes is very inefficient for finding prime\
    \ factors. It's also the most efficient algorithm for finding prime factors.\n\
    <|/ c |>\n<| a tags=c++,primes,algorithm |>\nI wrote a C++ program to find prime\
    \ factors of a number. \n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2n2a_6np.d(38): Error: declaration expected, not `<`\n/tmp/tmp2n2a_6np.d(41):
    Error: unterminated character constant\n/tmp/tmp2n2a_6np.d(56): Error: unterminated
    character constant\n/tmp/tmp2n2a_6np.d(56): Error: unterminated character constant\n/tmp/tmp2n2a_6np.d(62):
    Error: unterminated character constant\n/tmp/tmp2n2a_6np.d(65): Error: unterminated
    character constant\n/tmp/tmp2n2a_6np.d(68): Error: unterminated character constant\n/tmp/tmp2n2a_6np.d(71):
    Error: unterminated character constant\n/tmp/tmp2n2a_6np.d(80): Error: declaration
    expected, not `assert`\n/tmp/tmp2n2a_6np.d(81): Error: declaration expected, not
    `assert`\n/tmp/tmp2n2a_6np.d(82): Error: declaration expected, not `assert`\n/tmp/tmp2n2a_6np.d(83):
    Error: declaration expected, not `assert`\n/tmp/tmp2n2a_6np.d(84): Error: declaration
    expected, not `assert`\n/tmp/tmp2n2a_6np.d(85): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2n2a_6np.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwdg1ijsn.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwdg1ijsn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = n;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxwqjd30.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxwqjd30.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\twhile (p < q)\n\t{\n\t\twhile (n % p\
    \ == 0)\n\t\t{\n\t\t\tn /= p;\n\t\t}\n\t\tif (n > 1)\n\t\t{\n\t\t\tq *= p;\n\t\
    \t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tp++;\n\t}\n\treturn n;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphdhp394l.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmphdhp394l.__unittest_L33_C1() [0x427a88]\n??:?
    void tmphdhp394l.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0x7e12554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiakvi6il.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiakvi6il.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    \n    while (p < q)\n    {\n        while\
    \ (r % p == 0)\n        {\n            r /= p;\n            s += 1;\n        }\n\
    \        t += s;\n        p += 1;\n    }\n    \n    while (p < r)\n    {\n   \
    \     while (r % p == 0)\n        {\n            r /= p;\n            u += 1;\n\
    \        }\n        t += u;\n        p += 1;\n    }\n    \n    return t;\n}\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmq_yr31t.d(48): unittest failure\n----------------\n??:?
    _d_unittestp [0x427df5]\n??:? void tmpmq_yr31t.__unittest_L44_C1() [0x427adc]\n??:?
    void tmpmq_yr31t.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281cb]\n??:? _d_run_main [0x428136]\n??:? main [0x427b87]\n??:?
    __libc_start_main [0x49387554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n; i += 2)\n    {\n\
    \        p = i;\n        q = n / i;\n        while(p % i == 0)\n        {\n  \
    \          p /= i;\n            q--;\n        }\n        if(q > factor)\n    \
    \    {\n            factor = q;\n        }\n    }\n    return factor;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpc4jagw9x.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmpc4jagw9x.__unittest_L30_C1() [0x427ab4]\n??:?
    void tmpc4jagw9x.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b5f]\n??:?
    __libc_start_main [0x7c656554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for(i = 2; i <= n / 2; ++i)\n    {\n        if(n % i == 0)\n        {\n \
    \           if(i * i > n)\n                max_factor = 1;\n            else\n\
    \                max_factor = i;\n            max_factor_index = i;\n        }\n\
    \    }\n    return max_factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphb9oskz_.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dbd]\n??:? void tmphb9oskz_.__unittest_L29_C1() [0x427aa4]\n??:?
    void tmphb9oskz_.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428193]\n??:? _d_run_main [0x4280fe]\n??:? main [0x427b4f]\n??:?
    __libc_start_main [0x88a92554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t;\n\
    \twhile (q > 0) {\n\t\tt = q;\n\t\twhile (r % t == 0) {\n\t\t\tr = r / t;\n\t\t\
    \ts++;\n\t\t}\n\t\tif (p < s) {\n\t\t\tp = s;\n\t\t}\n\t\tq = r;\n\t\tr = n;\n\
    \t\ts++;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s;\n    long max;\n    \n    if (n == 1)\n    \
    \    return 1;\n    \n    max = n;\n    \n    for (i = 2; i <= max; i++) {\n \
    \       p = i;\n        \n        while ((n % p) == 0) {\n            n = n /\
    \ p;\n        }\n        \n        if (n > 1) {\n            q = n;\n        \
    \    \n            while ((q % p) == 0) {\n                q = q / p;\n      \
    \      }\n            \n            if (q > 1) {\n                r = q;\n   \
    \             \n                while ((r % p) == 0) {\n                    r\
    \ = r / p;\n                }\n                \n                if (r > 1) {\n\
    \                    s = r;\n                    \n                    while ((s\
    \ % p) == 0) {\n                        s = s / p;\n                    }\n  \
    \                  \n                    if (s > max) {\n                    \
    \    max = s;\n                    }\n                }\n            }\n     \
    \   }\n    }\n    \n    return max;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpneic3_db.d(63): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e65]\n??:? void tmpneic3_db.__unittest_L59_C1() [0x427b50]\n??:?
    void tmpneic3_db.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282b4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42823b]\n??:? _d_run_main [0x4281a6]\n??:? main [0x427bfb]\n??:?
    __libc_start_main [0xe9c9c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long factor = 1;\n    long p = 2;\n    long q = n;\n    long r =\
    \ n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n    long v = 3;\n   \
    \ long w = 3;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long a =\
    \ 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n   \
    \ long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j =\
    \ 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n   \
    \ long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s =\
    \ 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n   \
    \ long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b =\
    \ 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n   \
    \ long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k =\
    \ 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n   \
    \ long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t =\
    \ 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n   \
    \ long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c =\
    \ 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n   \
    \ long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l =\
    \ 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n   \
    \ long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u =\
    \ 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n   \
    \ long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d =\
    \ 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n   \
    \ long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5gbk85yt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gbk85yt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong maxFactor = n;\n\tlong i = 2;\n\twhile(i <= maxFactor) {\n\t\t\
    if(n % i == 0) {\n\t\t\tmaxFactor = i;\n\t\t}\n\t\ti++;\n\t}\n\treturn maxFactor;\n\
    }\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpm_ptgkm4.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpm_ptgkm4.__unittest_L23_C1() [0x427a6c]\n??:?
    void tmpm_ptgkm4.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b17]\n??:?
    __libc_start_main [0x23b26554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 3;\n    long z = 3;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 3;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long aa = 3;\n    long bb = 3;\n    long cc = 3;\n\
    \    long dd = 3;\n    long ee = 3;\n    long ff = 3;\n    long gg = 3;\n    long\
    \ hh = 3;\n    long ii = 3;\n    long jj = 3;\n    long kk = 3;\n    long ll =\
    \ 3;\n    long mm = 3;\n    long nn = 3;\n    long oo = 3;\n    long pp = 3;\n\
    \    long qq = 3;\n    long rr = 3;\n    long ss = 0;\n    long tt = 3;\n    long\
    \ uu = 3;\n    long vv = 3;\n    long ww = 3;\n    long xx = 3;\n    long yy =\
    \ 3;\n    long zz = 3;\n    long aaa = 3;\n    long bbb = 3;\n    long ccc = 3;\n\
    \    long ddd = 3;\n    long eee = 3;\n    long fff = 3;\n    long ggg = 3;\n\
    \    long hhh = 3;\n    long iii = 3;\n    long jjj = 3;\n    long kkk = 3;\n\
    \    long lll = 3;\n    long mmm = 3;\n    long nnn = 3;\n    long ooo = 3;\n\
    \    long ppp = 3;\n    long qqq = 3;\n    long rrr = 3;\n    long ss = 0;\n \
    \   long ttt = 3;\n    long uuu = 3;\n    long vvv = 3;\n    long www = 3;\n \
    \   long xxx = 3;\n    long yyy = 3;\n    long zzz = 3;\n    long aaaa = 3;\n\
    \    long bbbb = 3;\n    long cccc = 3;\n    long dddd = 3;\n    long eeee = 3;\n\
    \    long ffff = 3;\n    long gggg = 3;\n    long hhhh = 3;\n    long \nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3m7plc4i.d(111): Error: no identifier for declarator `long`\n/tmp/tmp3m7plc4i.d(111):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp3m7plc4i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long A = 3;\n    long B = 3;\n\
    \    long C = 3;\n    long D = 3;\n    long E = 3;\n    long F = 3;\n    long\
    \ G = 3;\n    long H = 3;\n    long I = 3;\n    long J = 3;\n    long K = 3;\n\
    \    long L = 3;\n    long M = 3;\n    long N = 3;\n    long O = 3;\n    long\
    \ P = 3;\n    long Q = 3;\n    long R = 3;\n    long S = 3;\n    long T = 3;\n\
    \    long U = 3;\n    long V = 3;\n    long W = 3;\n    long X = 3;\n    long\
    \ Y = 3;\n    long Z = 3;\n    long AA = 3;\n    long AB = 3;\n    long AC = 3;\n\
    \    long AD = 3;\n    long AE = 3;\n    long AF = 3;\n    long AG = 3;\n    long\
    \ AH = 3;\n    long AI = 3;\n    long AJ = 3;\n    long AK = 3;\n    long AL =\
    \ 3;\n    long AM = 3;\n    long AN = 3;\n    long AO = 3;\n    long AP = 3;\n\
    \    long AQ = 3;\n    long AR = 3;\n    long AS = 3;\n    long AT = 3;\n    long\
    \ AU = 3;\n    long AV = 3;\n    long AW = 3;\n    long AX = 3;\n    long AY =\
    \ 3;\n    long AZ = 3;\n    long BA = 3;\n    long BB = 3;\n    long BC = 3;\n\
    \    long BD = 3;\n    long BE = 3;\n    long BF = 3;\n    long BG = 3;\n    long\
    \ BH = 3;\n    long BI = 3;\n    long BJ = 3;\n    long BK = 3;\n    long BL =\
    \ 3;\n    long BM = 3;\n    long BN = 3;\n    long BO = 3;\n    long BP = 3;\n\
    \    long BQ = 3;\n    long BR = 3;\n    long BS = 3;\n    long BT = 3;\n    long\
    \ BU = 3;\n    long BV = 3;\n    long BW = 3;\n    long BX = 3;\n    long BY =\
    \ 3;\n    long BZ = 3;\n    long CA = 3;\n    long CB = 3;\n    long CC = 3;\n\
    \    long CD = 3;\n    long CE = 3;\n    long CF = 3;\n    long CG = 3;\n    long\
    \ CH = 3;\n    long CI = 3;\n    long CJ = 3;\n    long CK = 3;\n\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5byx6jis.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5byx6jis.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n / 2; ++i)\n   \
    \ {\n        p = i;\n        q = n % i;\n        if(q > 0)\n        {\n      \
    \      while(p % i == 0)\n            {\n                p /= i;\n           \
    \ }\n        }\n        if(p > factor)\n        {\n            factor = p;\n \
    \       }\n    }\n    return factor;\n}\n</code>\n<|/ a tags=algorithm,primes,c\
    \ |>\n<| c |>\nThe first two lines of `largest_prime_factor` can be replaced with\
    \ `return n >= 2 && n <= n / 2 ? n : 1;`\n<|/ c |>\n<| c |>\nI believe that `largest_prime_factor(13195L)`\
    \ should return `29L`, not `13L`.\n<|/ c |>\n<| c |>\n: You are right. Fixed it.\n\
    <|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(2048L)` should return\
    \ `2L`, not `2`.\n<|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(10L)`\
    \ should return `1L`, not `0`.\n<|/ c |>\n<| a tags=algorithm,primes,c |>\nThe\
    \ first two lines of largest_prime_factor can be replaced with return n >= 2 &&\
    \ n <= n / 2 ? n : 1;\n<|/ a dscore=2 |>\n<| c |>\nI believe that `largest_prime_factor(13195L)`\
    \ should return `29L`, not `13L`.\n<|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(2048L)`\
    \ should return `2L`, not `2`.\n<|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(10L)`\
    \ should return `1L`, not `0`.\n<|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(10000000L)`\
    \ should return `1L`, not `0`.\n<|/ c |>\n<| c |>\n: I believe that `largest_prime_factor(1000000000000L)`\
    \ should return `1L`, not `0`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpapb0cqla.d(32): Error: declaration expected, not `<`\n/tmp/tmpapb0cqla.d(51):
    Error: declaration expected, not `<`\n/tmp/tmpapb0cqla.d(73): Error: declaration
    expected, not `assert`\n/tmp/tmpapb0cqla.d(74): Error: declaration expected, not
    `assert`\n/tmp/tmpapb0cqla.d(75): Error: declaration expected, not `assert`\n/tmp/tmpapb0cqla.d(76):
    Error: declaration expected, not `assert`\n/tmp/tmpapb0cqla.d(77): Error: declaration
    expected, not `assert`\n/tmp/tmpapb0cqla.d(78): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpapb0cqla.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiakvi6il.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiakvi6il.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long m = 1;\n    long n1 = 1;\n    long n2 = 1;\n    long\
    \ n3 = 1;\n    long n4 = 1;\n    long n5 = 1;\n    long n6 = 1;\n    long n7 =\
    \ 1;\n    long n8 = 1;\n    long n9 = 1;\n    long n10 = 1;\n    long n11 = 1;\n\
    \    long n12 = 1;\n    long n13 = 1;\n    long n14 = 1;\n    long n15 = 1;\n\
    \    long n16 = 1;\n    long n17 = 1;\n    long n18 = 1;\n    long n19 = 1;\n\
    \    long n20 = 1;\n    long n21 = 1;\n    long n22 = 1;\n    long n23 = 1;\n\
    \    long n24 = 1;\n    long n25 = 1;\n    long n26 = 1;\n    long n27 = 1;\n\
    \    long n28 = 1;\n    long n29 = 1;\n    long n30 = 1;\n    long n31 = 1;\n\
    \    long n32 = 1;\n    long n33 = 1;\n    long n34 = 1;\n    long n35 = 1;\n\
    \    long n36 = 1;\n    long n37 = 1;\n    long n38 = 1;\n    long n39 = 1;\n\
    \    long n40 = 1;\n    long n41 = 1;\n    long n42 = 1;\n    long n43 = 1;\n\
    \    long n44 = 1;\n    long n45 = 1;\n    long n46 = 1;\n    long n47 = 1;\n\
    \    long n48 = 1;\n    long n49 = 1;\n    long n50 = 1;\n    long n51 = 1;\n\
    \    long n52 = 1;\n    long n53 = 1;\n    long n54 = 1;\n    long n55 = 1;\n\
    \    long n56 = 1;\n    long n57 = 1;\n    long n58 = 1;\n    long n59 = 1;\n\
    \    long n60 = 1;\n    long n61 = 1;\n    long n62 = 1;\n    long n63 = 1;\n\
    \    long n64 = 1;\n    long n65 = 1;\n    long n66 = 1;\n    long n67 = 1;\n\
    \    long n68 = 1;\n    long n69 = 1;\n    long n70 = 1;\n    long n71 = 1;\n\
    \    long n72 = 1;\n    long n73 = 1;\n    long n74 = 1;\n    long n75 = 1;\n\
    \    long n76 = 1;\n    long n77 = 1;\n    long n78 = 1;\n    long n79 = 1;\n\
    \    long \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbwkmyq81.d(99): Error: no identifier for declarator `long`\n/tmp/tmpbwkmyq81.d(99):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpbwkmyq81.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwdg1ijsn.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwdg1ijsn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n\
    \    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long\
    \ w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n\
    \    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n\
    \    long w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long\
    \ w = 3;\n    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n\
    \    long x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n\
    \    long y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long\
    \ y = 3;\n    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\
    \    long z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n    long\
    \ z = 3;\n    long w = 3;\n    long x = 3;\n    long y = 3;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkuc370jg.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkuc370jg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i = 2;\n    long p = n;\n    long maxp = 0;\n    long maxi\
    \ = 0;\n    while (p != 1) {\n        if (p % 2 == 0) {\n            p /= 2;\n\
    \        } else {\n            while (p % i == 0) {\n                p /= i;\n\
    \                ++maxi;\n            }\n            if (maxp < maxi) {\n    \
    \            maxp = maxi;\n            }\n            i = 2;\n        }\n    }\n\
    \    return maxp;\n}\n</code>\n<|/ a tags=c++,algorithm,primes |>\n<| c |>\nThe\
    \ first loop should start at `i = 3`, not `i = 2`.  Otherwise you get an incorrect\
    \ result for large numbers.  (The second loop should start at `i = 2`, not `i\
    \ = 3`.)\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c |>\n<| c |>\n: Thanks\
    \ for your answer. Your code works fine for small numbers. But for large numbers\
    \ it takes too much time. Can you please suggest me any algorithm for large numbers?\n\
    <|/ c |>\n<| c |>\n: I added a faster version that uses Sieve of Eratosthenes\
    \ (http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n<|/ c |>\n<| c |>\n: Thanks\
    \ for your answer. Your code works fine for small numbers. But for large numbers\
    \ it takes too much time. Can you please suggest me any algorithm for large numbers?\n\
    <|/ c |>\n<| a dscore=4 |>\nI wrote a C++ program to find prime numbers in less\
    \ than 1 second. \n<code>\n#include <iostream>\n#include <cmath>\n#include <ctime>\n\
    #include <vector>\nusing namespace std;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ar33_s9.d(33): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ar33_s9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 2;\n\tlong m = n;\n\tlong max_factor = 1;\n\t\n\twhile (p < q) {\n\t\twhile\
    \ (p < q && m % p == 0) {\n\t\t\tm /= p;\n\t\t\tmax_factor = p;\n\t\t}\n\t\t\n\
    \t\twhile (q < r && m % q == 0) {\n\t\t\tm /= q;\n\t\t\tmax_factor *= q;\n\t\t\
    }\n\t\t\n\t\tif (m > 1) {\n\t\t\ts *= m;\n\t\t\tt *= m;\n\t\t}\n\t\t\n\t\tp +=\
    \ 1;\n\t\tq += 1;\n\t\tr /= 2;\n\t}\n\t\n\treturn max_factor;\n}\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n; i++) {\n     \
    \   p = i;\n        for(q = 2; q * q <= p; q++) {\n            if(p % q == 0)\
    \ {\n                p = p / q;\n                factor = q;\n               \
    \ break;\n            }\n        }\n        if(factor > 1) {\n            break;\n\
    \        }\n    }\n    return factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptqh6bfr3.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmptqh6bfr3.__unittest_L29_C1() [0x427ac4]\n??:?
    void tmptqh6bfr3.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b6f]\n??:?
    __libc_start_main [0xcbbe554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i = 2;\n    long p = n;\n    long maxp = 0;\n    \n    while\
    \ (p % 2 == 0) {\n        p /= 2;\n        maxp = i;\n        i++;\n    }\n  \
    \  \n    while (p % 3 == 0) {\n        p /= 3;\n        maxp = i;\n        i++;\n\
    \    }\n    \n    while (p % 5 == 0) {\n        p /= 5;\n        maxp = i;\n \
    \       i++;\n    }\n    \n    while (p % 7 == 0) {\n        p /= 7;\n       \
    \ maxp = i;\n        i++;\n    }\n    \n    while (p % 11 == 0) {\n        p /=\
    \ 11;\n        maxp = i;\n        i++;\n    }\n    \n    while (p % 13 == 0) {\n\
    \        p /= 13;\n        maxp = i;\n        i++;\n    }\n    \n    while (p\
    \ % 17 == 0) {\n        p /= 17;\n        maxp = i;\n        i++;\n    }\n   \
    \ \n    while (p % 19 == 0) {\n        p /= 19;\n        maxp = i;\n        i++;\n\
    \    }\n    \n    while (p % 23 == 0) {\n        p /= 23;\n        maxp = i;\n\
    \        i++;\n    }\n    \n    while (p % 29 == 0) {\n        p /= 29;\n    \
    \    maxp = i;\n        i++;\n    }\n    \n    while (p % 31 == 0) {\n       \
    \ p /= 31;\n        maxp = i;\n        i++;\n    }\n    \n    while (p % 37 ==\
    \ 0) {\n        p /= 37;\n        maxp = i;\n        i++;\n    }\n    \n    while\
    \ (p % 41 == 0) {\n        p /= 41;\n        maxp = i;\n        i++;\n    }\n\
    \    \n    while (p % 43 == 0) {\n        p /= 43;\n        maxp = i;\n      \
    \  i++;\n    }\n    \n    while (p % 47 == 0) {\n        p /= 47;\n        maxp\
    \ = i;\n        i++;\n    }\n    \n    while (p % 49 == 0) {\n        p /= 49;\n\
    \        maxp = i;\n        i++;\n    }\n    \n    while (p % 53 == 0) {\n   \
    \     p /= 53;\n        maxp = i;\n        i++;\n    }\n    \n    while (p % 59\
    \ == 0) {\n        p /= 59;\n        maxp = i;\n        i++;\n    }\n    \n  \
    \  while (p % 61 == 0) {\n        p /= 61;\n        maxp = i;\n        i++;\n\
    \    }\n    \n    while (p % 67 == 0) {\n        p /= 67;\n        maxp = i;\n\
    \        i++;\n    }\n    \n    while (p % 71 == 0) {\n        p /= 71;\n    \
    \    maxp = i;\n        i++;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw2micml.d(141): Error: found `unittest` instead of statement\n/tmp/tmpgw2micml.d(151):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw2micml.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long i = 3;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            result = i;\n            break;\n    \
    \    }\n        i += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpahm82una.d(15): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahm82una.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long i = 3L;\n    while (i <= n)\n    {\n\
    \        if (n % i == 0)\n        {\n            result = i;\n            break;\n\
    \        }\n        i += 2L;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvb_54pxm.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpvb_54pxm.__unittest_L26_C1() [0x427a70]\n??:?
    void tmpvb_54pxm.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xff476554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = 2;\n\twhile (!is_prime(q)) {\n\t\tif (n %\
    \ q == 0) {\n\t\t\tp = q;\n\t\t}\n\t\tq += 2;\n\t}\n\treturn p;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl_izx96t.d(15): Error: undefined identifier `is_prime`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_izx96t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor;\n    long limit = sqrt(n);\n    \n    for(i\
    \ = 2; i <= limit; ++i)\n    {\n        p = n / i;\n        q = n % i;\n     \
    \   \n        if(p > 1 && q == 0)\n        {\n            factor = p;\n      \
    \      break;\n        }\n    }\n    \n    return factor;\n}\nunittest\n{\n  \
    \  alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_inq77sp.d(14): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_inq77sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_kwgb22p.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kwgb22p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i = 2; i <= sqrt(n); ++i)\n\t\
    {\n\t\tif(n%i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n  \
    \  assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6h3ralkc.d(15): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h3ralkc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long a = 1;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long\
    \ g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n\
    \    long d = 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long\
    \ h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n\
    \    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n    long\
    \ i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n\
    \    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps448lvpr.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps448lvpr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n-1L;\n    long r = q;\n    long s =\
    \ 2L;\n    long t = 3L;\n    long u = t*q;\n    long v = 3L;\n    long w = 1L;\n\
    \    long x = 2L;\n    long y = 2L;\n    long z = 2L;\n    long a = 2L;\n    long\
    \ b = 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f =\
    \ 1L;\n    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n\
    \    long k = 1L;\n    long l = 1L;\n    long m = 2L;\n    long n = 2L;\n    long\
    \ o = 1L;\n    long p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s =\
    \ 1L;\n    long t = 1L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n\
    \    long x = 1L;\n    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long\
    \ b = 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f =\
    \ 1L;\n    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n\
    \    long k = 1L;\n    long l = 1L;\n    long m = 2L;\n    long n = 2L;\n    long\
    \ o = 1L;\n    long p = 1L;\n    long q = 1L;\n    long r = 1L;\n    long s =\
    \ 1L;\n    long t = 1L;\n    long u = 1L;\n    long v = 1L;\n    long w = 1L;\n\
    \    long x = 1L;\n    long y = 1L;\n    long z = 1L;\n    long a = 2L;\n    long\
    \ b = 2L;\n    long c = 2L;\n    long d = 2L;\n    long e = 2L;\n    long f =\
    \ 1L;\n    long g = 1L;\n    long h = 1L;\n    long i = 2L;\n    long j = 1L;\n\
    \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppnf89xj4.d(87): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnf89xj4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for(i = 2; i <= sqrt(n); ++i)\n    {\n        if(n%i == 0)\n        {\n \
    \           if(i*i > max_factor)\n                max_factor = i*i;\n        \
    \        max_factor_index = i;\n        }\n    }\n    return max_factor_index;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe question was about a specific language,\
    \ not about a general algorithm. Your answer doesn't answer the question.\n<|/\
    \ c |>\n<| c |>\nThe question was about a specific language, not about a general\
    \ algorithm. Your answer doesn't answer the question.\n<|/ c |>\n<| c |>\nThe\
    \ question was about a specific language, not about a general algorithm. Your\
    \ answer doesn't answer the question.\n<|/ c |>\n<| c |>\nThe question was about\
    \ a specific language, not about a general algorithm. Your answer doesn't answer\
    \ the question.\n<|/ c |>\n<| c |>\nThe question was about a specific language,\
    \ not about a general algorithm. Your answer doesn't answer the question.\n<|/\
    \ c |>\n<| a |>\n<code>\ndef largest_prime_factor(n):\n    i = 2\n    while i*i\
    \ <= n:\n        if n % i == 0:\n            i += 1\n        else:\n         \
    \   n /= i\n    return n\n</code>\n<|/ a tags=algorithm,primes,math dscore=2 |>\n\
    <| c |>\nThe question was about a specific language, not about a general algorithm.\
    \ Your answer doesn't answer the question.\n<|/ c |>\n<| a tags=algorithm,primes,math\
    \ |>\n<code>\ndef largest_prime_factor(n):\n    i = 2\n    while i*i <= n:\n \
    \       if n % i == 0:\n            i += 1\n        else:\n            n /= i\n\
    \    return n\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe question was about a specific\
    \ language, not about a general algorithm. Your answer doesn't answer the question.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\ndef largest_prime_factor(n):\n    i = 2\n\
    \    while i*i <= n:\n        if n % i == 0:\n            i += 1\n        else:\n\
    \            n /= i\n    return n\n</code>\n<|/ a tags=algorithm,primes,math |>\n\
    <| c |>\nThe question was about a specific language, not about a general algorithm.\
    \ Your answer doesn't answer the question.\n<|/ c |>\n<| a tags=algorithm,primes,math\
    \ |>\n<code>\ndef largest_prime_factor(n):\n    i = 2\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi9u39x88.d(27): Error: declaration expected, not `<`\n/tmp/tmpi9u39x88.d(30):
    Error: unterminated character constant\n/tmp/tmpi9u39x88.d(33): Error: unterminated
    character constant\n/tmp/tmpi9u39x88.d(36): Error: unterminated character constant\n/tmp/tmpi9u39x88.d(39):
    Error: unterminated character constant\n/tmp/tmpi9u39x88.d(42): Error: unterminated
    character constant\n/tmp/tmpi9u39x88.d(57): Error: unterminated character constant\n/tmp/tmpi9u39x88.d(72):
    Error: unterminated character constant\n/tmp/tmpi9u39x88.d(87): Error: unterminated
    character constant\n/tmp/tmpi9u39x88.d(98): Error: declaration expected, not `assert`\n/tmp/tmpi9u39x88.d(99):
    Error: declaration expected, not `assert`\n/tmp/tmpi9u39x88.d(100): Error: declaration
    expected, not `assert`\n/tmp/tmpi9u39x88.d(101): Error: declaration expected,
    not `assert`\n/tmp/tmpi9u39x88.d(102): Error: declaration expected, not `assert`\n/tmp/tmpi9u39x88.d(103):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi9u39x88.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long max_factor = 2;\n    long factor = 3;\n\
    \    \n    while (factor <= n / max_factor) {\n        if (n % factor == 0) {\n\
    \            result *= factor;\n            n /= factor;\n        } else {\n \
    \           factor++;\n        }\n    }\n    \n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include<stdio.h>\n#include<conio.h>\n\
    #include<math.h>\n#include<stdlib.h>\n#include<time.h>\n#include<string.h>\n#include<ctype.h>\n\
    #include<stdbool.h>\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2io0w74i.d(28): Error: declaration expected, not `<`\n/tmp/tmp2io0w74i.d(44):
    Error: declaration expected, not `assert`\n/tmp/tmp2io0w74i.d(45): Error: declaration
    expected, not `assert`\n/tmp/tmp2io0w74i.d(46): Error: declaration expected, not
    `assert`\n/tmp/tmp2io0w74i.d(47): Error: declaration expected, not `assert`\n/tmp/tmp2io0w74i.d(48):
    Error: declaration expected, not `assert`\n/tmp/tmp2io0w74i.d(49): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2io0w74i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = n%(p*2L);\n    long\
    \ s = n%(q*2L);\n    long t = n%(q*2L);\n    long u = n%(t*2L);\n    long v =\
    \ n%(u*2L);\n    long w = n%(v*2L);\n    long x = n%(w*2L);\n    long y = n%(x*2L);\n\
    \    long z = n%(y*2L);\n    long a = n%(z*2L);\n    long b = n%(a*2L);\n    long\
    \ c = n%(b*2L);\n    long d = n%(c*2L);\n    long e = n%(d*2L);\n    long f =\
    \ n%(e*2L);\n    long g = n%(f*2L);\n    long h = n%(g*2L);\n    long i = n%(h*2L);\n\
    \    long j = n%(j*2L);\n    long k = n%(k*2L);\n    long l = n%(l*2L);\n    long\
    \ m = n%(m*2L);\n    long n = n%(m*2L);\n    long o = n%(m*2L);\n    long p =\
    \ n%(o*2L);\n    long q = n%(p*2L);\n    long r = n%(q*2L);\n    long s = n%(q*2L);\n\
    \    long t = n%(q*2L);\n    long u = n%(q*2L);\n    long v = n%(q*2L);\n    long\
    \ w = n%(q*2L);\n    long x = n%(q*2L);\n    long y = n%(q*2L);\n    long z =\
    \ n%(q*2L);\n    long a = n%(q*2L);\n    long b = n%(q*2L);\n    long c = n%(q*2L);\n\
    \    long d = n%(q*2L);\n    long e = n%(q*2L);\n    long f = n%(q*2L);\n    long\
    \ g = n%(q*2L);\n    long h = n%(q*2L);\n    long i = n%(q*2L);\n    long j =\
    \ n%(q*2L);\n    long k = \nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeg3cxdlk.d(61): Error: expression expected, not `unittest`\n/tmp/tmpeg3cxdlk.d(62):
    Error: semicolon expected, not `{`\n/tmp/tmpeg3cxdlk.d(71): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpeg3cxdlk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong factor = 1;\n\tlong limit = p;\n\twhile (p > 1)\
    \ {\n\t\tlimit = p;\n\t\twhile (p % 2 == 0) {\n\t\t\tp = p / 2;\n\t\t}\n\t\twhile\
    \ (p % 3 == 0) {\n\t\t\tp = p / 3;\n\t\t}\n\t\twhile (p % 5 == 0) {\n\t\t\tp =\
    \ p / 5;\n\t\t}\n\t\twhile (p % 7 == 0) {\n\t\t\tp = p / 7;\n\t\t}\n\t\twhile\
    \ (p % 11 == 0) {\n\t\t\tp = p / 11;\n\t\t}\n\t\twhile (p % 13 == 0) {\n\t\t\t\
    p = p / 13;\n\t\t}\n\t\twhile (p % 17 == 0) {\n\t\t\tp = p / 17;\n\t\t}\n\t\t\
    while (p % 19 == 0) {\n\t\t\tp = p / 19;\n\t\t}\n\t\twhile (p % 23 == 0) {\n\t\
    \t\tp = p / 23;\n\t\t}\n\t\twhile (p % 29 == 0) {\n\t\t\tp = p / 29;\n\t\t}\n\t\
    \twhile (p % 31 == 0) {\n\t\t\tp = p / 31;\n\t\t}\n\t\twhile (p % 37 == 0) {\n\
    \t\t\tp = p / 37;\n\t\t}\n\t\twhile (p % 41 == 0) {\n\t\t\tp = p / 41;\n\t\t}\n\
    \t\twhile (p % 43 == 0) {\n\t\t\tp = p / 43;\n\t\t}\n\t\twhile (p % 47 == 0) {\n\
    \t\t\tp = p / 47;\n\t\t}\n\t\twhile (p % 53 == 0) {\n\t\t\tp = p / 53;\n\t\t}\n\
    \t\twhile (p % 59 == 0) {\n\t\t\tp = p / 59;\n\t\t}\n\t\twhile (p % 61 == 0) {\n\
    \t\t\tp = p / 61;\n\t\t}\n\t\twhile (p % 67 == 0) {\n\t\t\tp = p / 67;\n\t\t}\n\
    \t\twhile (p % 71 == 0) {\n\t\t\tp = p / 71;\n\t\t}\n\t\twhile (p % 73 == 0) {\n\
    \t\t\tp = p / 73;\n\t\t}\n\t\twhile (p % 79 == 0) {\n\t\t\tp = p / 79;\n\t\t}\n\
    \t\twhile (p % 83 == 0) {\n\t\t\tp = p / 83;\n\t\t}\n\t\twhile (p % 89 == 0) {\n\
    \t\t\tp = p / 89;\n\t\t}\n\t\twhile (p % 97 == 0) {\n\t\t\tp = p / 97;\n\t\t}\n\
    \t\twhile (p % 103 == 0) {\n\t\t\tp = p / 103;\n\t\t}\n\t\twhile (p % 107 == 0)\
    \ {\n\t\t\tp = p / 107;\n\t\t}\n\t\twhile (p % 111 == 0) {\n\t\t\tp = p / 111;\n\
    \t\t}\n\t\twhile (p % 117 == 0) {\n\t\t\tp = p / 117;\n\t\t}\n\t\twhile (p % 121\
    \ == 0) {\n\t\t\tp = p / 121;\n\t\t}\n\t\twhile (p % 127 == 0) {\n\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ht4_suw.d(110): Error: found `unittest` instead of statement\n/tmp/tmp6ht4_suw.d(120):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp6ht4_suw.d(120):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ht4_suw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2w9xpm7z.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2w9xpm7z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_kwgb22p.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kwgb22p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r > 1) {\n\t\t\tlong m = r / p;\n\t\t\tif (m == r) break;\n\t\t\tif (m\
    \ > p) p = m;\n\t\t\tr = m;\n\t\t}\n\t\tq = p;\n\t\tp++;\n\t}\n\treturn p;\n}\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmprwu5uaov.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmprwu5uaov.__unittest_L28_C1() [0x427a98]\n??:?
    void tmprwu5uaov.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x17b03554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r > 1) {\n\t\t\tlong m = r / p;\n\t\t\tif (m == 0 || n % m == 0) {\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t\tr = m;\n\t\t}\n\t\tif (r > p) {\n\t\t\tp = r;\n\t\
    \t}\n\t\tq = p / 4;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l =\
    \ 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\
    \tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\t\
    long k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong\
    \ q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i\
    \ = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n =\
    \ 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\
    \tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\t\
    long m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong\
    \ s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k\
    \ = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q =\
    \ 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\
    \tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\t\
    long p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong\
    \ m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\tlong l = 2;\n\tlong m\
    \ = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s =\
    \ 1;\n\tlong t = 1;\n\tlong m = 1;\n\tlong i = 2;\n\tlong j = 2;\n\tlong k = 2;\n\
    \tlong l = 2;\n\tlong m = 1;\n\tlong n = 1;\n\tlong p = 2;\n\tlong q = 1;\n\t\
    long r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu0lx8kva.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0lx8kva.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaoo_8p8f.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaoo_8p8f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjpxiqhk4.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjpxiqhk4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    \n    while(p <= q) {\n      \
    \  while(p <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n\
    \            break;\n        }\n        \n        while(p <= q && r % p == 0)\
    \ {\n            p += 1;\n            r -= 1;\n        }\n        while(p <= q\
    \ && r % p == 0) {\n            q -= 1;\n            r -= 1;\n        }\n    \
    \    if(p > q) {\n            break;\n        }\n        \n        while(p <=\
    \ q && s % p == 0) {\n            p += 1;\n            s -= 1;\n        }\n  \
    \      while(p <= q && s % p == 0) {\n            q -= 1;\n            s -= 1;\n\
    \        }\n        if(p > q) {\n            break;\n        }\n        \n   \
    \     while(p <= q && t % p == 0) {\n            p += 1;\n            t -= 1;\n\
    \        }\n        while(p <= q && t % p == 0) {\n            q -= 1;\n     \
    \       t -= 1;\n        }\n        if(p > q) {\n            break;\n        }\n\
    \        \n        while(p <= q && u % p == 0) {\n            p += 1;\n      \
    \      u -= 1;\n        }\n        while(p <= q && u % p == 0) {\n           \
    \ q -= 1;\n            u -= 1;\n        }\n        if(p > q) {\n            break;\n\
    \        }\n        \n        while(p <= q && v % p == 0) {\n            p +=\
    \ 1;\n            v -= 1;\n        }\n        while(p <= q && v % p == 0) {\n\
    \            q -= 1;\n            v -= 1;\n        }\n        if(p > q) {\n  \
    \          break;\n        }\n        \n        while(p <= q && w % p == 0) {\n\
    \            p += 1;\n            w -= 1;\n        }\n        while(p <= q &&\
    \ w % p == 0) {\n            q -= 1;\n            w -= 1;\n        }\n       \
    \ if(p > q) {\n            break;\n        }\n        \n        while(p <= q &&\
    \ x % p == 0) {\n            p += 1;\n            x -= 1;\n        }\n       \
    \ while(p <= q && x % p == 0) {\n            q -= 1;\n            x -= 1;\n  \
    \      }\n        if(p > q) {\n            break;\n        }\n        \n     \
    \   while(p <= \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n\
    \    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_fwa_p_2.d(121): Error: expression expected, not `unittest`\n/tmp/tmp_fwa_p_2.d(122):
    Error: found `{` when expecting `)`\n/tmp/tmp_fwa_p_2.d(131): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_fwa_p_2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 3;\n\tlong y =\
    \ 3;\n\tlong z = 3;\n\tlong max = 2;\n\tlong maxp = 2;\n\tlong maxq = 2;\n\tlong\
    \ maxr = 2;\n\tlong maxs = 2;\n\tlong maxt = 3;\n\tlong maxu = 3;\n\tlong maxv\
    \ = 3;\n\tlong maxw = 3;\n\tlong maxx = 3;\n\tlong maxy = 3;\n\tlong maxz = 3;\n\
    \tlong maxmax = 2;\n\tlong maxmaxp = 2;\n\tlong maxmaxq = 2;\n\tlong maxmaxr =\
    \ 2;\n\tlong maxmaxs = 2;\n\tlong maxmaxt = 3;\n\tlong maxmaxu = 3;\n\tlong maxmaxv\
    \ = 3;\n\tlong maxmaxw = 3;\n\tlong maxmaxx = 3;\n\tlong maxmaxy = 3;\n\tlong\
    \ maxmaxz = 3;\n\tlong maxmaxmax = 2;\n\tlong maxmaxmaxp = 2;\n\tlong maxmaxmaxq\
    \ = 2;\n\tlong maxmaxmaxr = 2;\n\tlong maxmaxmaxs = 2;\n\tlong maxmaxmaxt = 3;\n\
    \tlong maxmaxmaxu = 3;\n\tlong maxmaxmaxv = 3;\n\tlong maxmaxmaxw = 3;\n\tlong\
    \ maxmaxmaxx = 3;\n\tlong maxmaxmaxy = 3;\n\tlong maxmaxmaxz = 3;\n\tlong maxmaxmaxmax\
    \ = 2;\n\tlong maxmaxmaxmaxp = 2;\n\tlong maxmaxmaxmaxq = 2;\n\tlong maxmaxmaxmaxr\
    \ = 2;\n\tlong maxmaxmaxmaxs = 2;\n\tlong maxmaxmaxmaxt = 3;\n\tlong maxmaxmaxmaxu\
    \ = 3;\n\tlong maxmaxmaxmaxv = 3;\n\tlong maxmaxmaxmaxw = 3;\n\tlong maxmaxmaxmaxx\
    \ = 3;\n\tlong maxmaxmaxmaxy = 3;\n\tlong maxmaxmaxmaxz = 3;\n\tlong maxmaxmaxmaxmax\
    \ = 2;\n\tlong maxmaxmaxmaxmaxp = 2;\n\tlong maxmaxmaxmaxmaxq = 2;\n\tlong maxmaxmaxmaxmaxr\
    \ = 2;\n\tlong maxmaxmaxmaxmaxs = 2;\n\tlong maxmaxmaxmaxmaxt = 3;\n\tlong maxmaxmaxmaxmaxu\
    \ = 3;\n\tlong maxmaxmaxmaxmaxv = 3;\n\tlong maxmaxmaxmaxw = 3;\n\tlong maxmaxmaxmaxx\
    \ = 3;\n\tlong \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n\
    \    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnyd3rh50.d(83): Error: no identifier for declarator `long`\n/tmp/tmpnyd3rh50.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnyd3rh50.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long m = 2;\n    long n = 2;\n\
    \    long w = 3;\n    long p = 1;\n    long q = n;\n    long r = n;\n    long\
    \ s = 2;\n    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n\
    \    long x = 2;\n    long y = 2;\n    long z = 2;\n    long m = 2;\n    long\
    \ n = 2;\n    long w = 3;\n    long p = 1;\n    long q = n;\n    long r = n;\n\
    \    long s = 2;\n    long t = 3;\n    long u = 3;\n    long v = 3;\n    long\
    \ w = 3;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long m = 2;\n\
    \    long n = 2;\n    long w = 3;\n    long p = 1;\n    long q = n;\n    long\
    \ r = n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n    long v = 3;\n\
    \    long w = 3;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long w = 3;\n    long p = 1;\n    long q = n;\n\
    \    long r = n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n    long\
    \ v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n\
    \    long m = 2;\n    long n = 2;\n    long w = 3;\n    long p = 1;\n    long\
    \ q = n;\n    long r = n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n\
    \    long v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long m = 2;\n    long n = 2;\n    long w = 3;\n    long p = 1;\n\
    \    long q = n;\n    long r = n;\n    long s = 2;\n    long t = 3;\n    long\
    \ u = 3;\n    long v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n\
    \    long z = 2;\n    long m = 2;\n    long n = 2;\n    long w = 3;\n    long\
    \ p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5x1oijzd.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5x1oijzd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbj657wiz.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbj657wiz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3btybf1g.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3btybf1g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    long limit = sqrt(n);\n    for(i\
    \ = 2; i <= limit; ++i)\n    {\n        p = n / i;\n        if(p == i)\n     \
    \   {\n            ++factor;\n        }\n        else\n        {\n           \
    \ q = n / p;\n            if(q > i)\n            {\n                ++factor;\n\
    \            }\n        }\n    }\n    return factor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaujd95rd.d(14): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaujd95rd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    for(i = 2; i <= n / 2; ++i)\n   \
    \ {\n        p = i;\n        for(q = i; q * q <= n; q += p)\n        {\n     \
    \       if(n % q == 0)\n            {\n                factor = p;\n         \
    \       break;\n            }\n        }\n    }\n    return factor;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcbuhzqat.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmpcbuhzqat.__unittest_L28_C1() [0x427ab4]\n??:?
    void tmpcbuhzqat.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b5f]\n??:?
    __libc_start_main [0x5dcc9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    long limit = sqrt(n);\n    \n   \
    \ for(i = 2; i <= limit; ++i)\n    {\n        p = n / i;\n        q = n % i;\n\
    \        if(p == 0)\n        {\n            if(i == q)\n            {\n      \
    \          factor++;\n            }\n            else\n            {\n       \
    \         break;\n            }\n        }\n    }\n    return factor;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptq2084t8.d(14): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptq2084t8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = n%(p*2L);\n    long\
    \ s = n%(q*2L);\n    long t = n%(q*2L);\n    long u = n%(p*2L);\n    long v =\
    \ n%(q*2L);\n    long w = n%(p*2L);\n    long x = n%(q*2L);\n    long y = n%(p*2L);\n\
    \    long z = n%(q*2L);\n    long a = n%(p*2L);\n    long b = n%(q*2L);\n    long\
    \ c = n%(p*2L);\n    long d = n%(q*2L);\n    long e = n%(p*2L);\n    long f =\
    \ n%(q*2L);\n    long g = n%(p*2L);\n    long h = n%(q*2L);\n    long i = n%(p*2L);\n\
    \    long j = n%(q*2L);\n    long k = n%(p*2L);\n    long l = n%(q*2L);\n    long\
    \ m = n%(p*2L);\n    long n = n%(q*2L);\n    long o = n%(p*2L);\n    long p =\
    \ n%(q*2L);\n    long q = n%(p*2L);\n    long r = n%(q*2L);\n    long s = n%(q*2L);\n\
    \    long t = n%(q*2L);\n    long u = n%(p*2L);\n    long v = n%(q*2L);\n    long\
    \ w = n%(p*2L);\n    long x = n%(q*2L);\n    long y = n%(p*2L);\n    long z =\
    \ n%(q*2L);\n    long a = n%(p*2L);\n    long b = n%(q*2L);\n    long c = n%(p*2L);\n\
    \    long d = n%(q*2L);\n    long e = n%(p*2L);\n    long f = n%(q*2L);\n    long\
    \ g = n%(p*2L);\n    long h = n%(q*2L);\n    long i = n%(p*2L);\n    long j =\
    \ n%(q*2L);\n    \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n\
    \    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf53tctob.d(61): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf53tctob.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for(i = 2; i <= n; i++) {\n        if(n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if(factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpr4uyki5h.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427db5]\n??:? void tmpr4uyki5h.__unittest_L27_C1() [0x427a9c]\n??:?
    void tmpr4uyki5h.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42818b]\n??:? _d_run_main [0x4280f6]\n??:? main [0x427b47]\n??:?
    __libc_start_main [0x3bca0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor = 1;\n    long maxfactor = 1;\n    long maxp\
    \ = n;\n    long maxq = n;\n    long maxm = n;\n    \n    for(i = 2; i <= n; i++)\n\
    \    {\n        p = i;\n        q = i;\n        \n        while(q > 1)\n     \
    \   {\n            if((n % p) == 0)\n            {\n                q = q / p;\n\
    \            }\n            else\n            {\n                p = p * q;\n\
    \                q = q / p;\n            }\n        }\n        \n        if(p\
    \ > maxp)\n        {\n            maxp = p;\n            maxq = q;\n         \
    \   maxm = m;\n        }\n    }\n    \n    while(maxp > 1)\n    {\n        if((n\
    \ % maxp) == 0)\n        {\n            maxp = maxp / maxm;\n        }\n     \
    \   else\n        {\n            maxp = maxp * maxm;\n        }\n    }\n    \n\
    \    return maxp;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3ttjnho4.d(41): Error: undefined identifier `m`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3ttjnho4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t\
    \ = n;\n\tlong u = n;\n\tlong v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y =\
    \ n;\n\tlong z = n;\n\tlong a = n;\n\tlong b = n;\n\tlong c = n;\n\tlong d = n;\n\
    \tlong e = n;\n\tlong f = n;\n\tlong g = n;\n\tlong h = n;\n\tlong i = n;\n\t\
    long j = n;\n\tlong k = n;\n\tlong l = n;\n\tlong m = n;\n\tlong n = n;\n\tlong\
    \ o = n;\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t\
    \ = n;\n\tlong u = n;\n\tlong v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y =\
    \ n;\n\tlong z = n;\n\tlong a = n;\n\tlong b = n;\n\tlong c = n;\n\tlong d = n;\n\
    \tlong e = n;\n\tlong f = n;\n\tlong g = n;\n\tlong h = n;\n\tlong i = n;\n\t\
    long j = n;\n\tlong k = n;\n\tlong l = n;\n\tlong m = n;\n\tlong n = n;\n\tlong\
    \ o = n;\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t\
    \ = n;\n\tlong u = n;\n\tlong v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y =\
    \ n;\n\tlong z = n;\n\tlong a = n;\n\tlong b = n;\n\tlong c = n;\n\tlong d = n;\n\
    \tlong e = n;\n\tlong f = n;\n\tlong g = n;\n\tlong h = n;\n\tlong i = n;\n\t\
    long j = n;\n\tlong k = n;\n\tlong l = n;\n\tlong m = n;\n\tlong n = n;\n\tlong\
    \ o = n;\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t\
    \ = n;\n\tlong u = n;\n\tlong v = n;\n\tlong w = n;\n\tlong x = n;\n\tlong y =\
    \ n;\n\tlong z = n;\n\tlong a = n;\n\tlong b = n;\n\tlong c = n;\n\tlong d = n;\n\
    \tlong e = n;\n\tlong f = n;\n\tlong g = n;\n\tlong h = n;\n\tlong i = n;\n\t\
    long j = n;\n\tlong k = n;\n\tlong l = n;\n\tlong m = n;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8srqtzvw.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8srqtzvw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong i, p, q, factor = 2;\n\t\n\tp = 1;\n\tq = n;\n\t\n\twhile (p\
    \ < q) {\n\t\twhile (n % p == 0) {\n\t\t\tn /= p;\n\t\t\tfactor++;\n\t\t}\n\t\t\
    while (n % q == 0) {\n\t\t\tn /= q;\n\t\t\tfactor++;\n\t\t}\n\t\tp++;\n\t\tq--;\n\
    \t}\n\t\n\tif (n != 1)\n\t\tfactor++;\n\t\n\treturn factor;\n}\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long max_factor = 1;\n    long factor = 2;\n    \n    while (factor\
    \ <= n / max_factor) {\n        if (n % factor == 0) {\n            factor++;\n\
    \        }\n        else {\n            max_factor = factor;\n        }\n    }\n\
    \    return max_factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = p%q;\n    long s =\
    \ q%r;\n    long t = r%s;\n    long u = p;\n    long v = q;\n    long w = r;\n\
    \    long x = s;\n    long y = t;\n    long z = u;\n    long a = v;\n    long\
    \ b = w;\n    long c = x;\n    long d = y;\n    long e = z;\n    long f = a;\n\
    \    long g = b;\n    long h = c;\n    long i = d;\n    long j = e;\n    long\
    \ k = f;\n    long l = g;\n    long m = h;\n    long n = i;\n    long o = j;\n\
    \    long p = k;\n    long q = l;\n    long r = m;\n    long s = n;\n    long\
    \ t = o;\n    long u = p;\n    long v = q;\n    long w = r;\n    long x = s;\n\
    \    long y = t;\n    long z = u;\n    long a = v;\n    long b = w;\n    long\
    \ c = x;\n    long d = y;\n    long e = z;\n    long f = a;\n    long g = b;\n\
    \    long h = c;\n    long i = d;\n    long j = e;\n    long k = f;\n    long\
    \ l = g;\n    long m = h;\n    long n = i;\n    long o = j;\n    long p = k;\n\
    \    long q = l;\n    long r = m;\n    long s = n;\n    long t = o;\n    long\
    \ u = p;\n    long v = q;\n    long w = r;\n    long x = s;\n    long y = t;\n\
    \    long z = u;\n    long a = v;\n    long b = w;\n    long c = x;\n    long\
    \ d = y;\n    long e = z;\n    long f = a;\n    long g = b;\n    long h = c;\n\
    \    long i = d;\n    long j = e;\n    long k = f;\n    long l = g;\n    long\
    \ m = h;\n    long n = i;\n    long o = j;\n    long p = k;\n    long q = l;\n\
    \    long r = m;\n    long s = n;\n    long t = o;\n    long u = p;\n    long\
    \ v = q;\n    long w = r;\n    long x = s;\n    long y = t;\n    long z = u;\n\
    \    long a = v;\n    long b = w;\n    long c = x;\n    long d = y;\n    long\
    \ e = z;\n    long f = a;\n    long \nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxw9jri3.d(109): Error: no identifier for declarator `long`\n/tmp/tmpsxw9jri3.d(109):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsxw9jri3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s;\n    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    \n    for (i = 2; i <= n; i++) {\n        p = i;\n        \n     \
    \   while ((p * p) > n) {\n            p += 1;\n        }\n        \n        q\
    \ = n / p;\n        \n        if (q > max_factor) {\n            max_factor =\
    \ q;\n            max_factor_index = i;\n        }\n    }\n    \n    return max_factor_index;\n\
    }\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 3;\n\tlong z = 3;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxo592c2d.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxo592c2d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n\
    \    long C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 2;\n    long\
    \ G = 2;\n    long H = 2;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n\
    \    long L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long\
    \ P = 2;\n    long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n\
    \    long U = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long\
    \ Y = 2;\n    long Z = 2;\n    long AA = 2;\n    long AB = 2;\n    long AC = 2;\n\
    \    long AD = 2;\n    long AE = 2;\n    long AF = 2;\n    long AG = 2;\n    long\
    \ AH = 2;\n    long AI = 2;\n    long AJ = 2;\n    long AK = 2;\n    long AL =\
    \ 2;\n    long AM = 2;\n    long AN = 2;\n    long AO = 2;\n    long AP = 2;\n\
    \    long AQ = 2;\n    long AR = 2;\n    long AS = 2;\n    long AT = 2;\n    long\
    \ AU = 2;\n    long AV = 2;\n    long AW = 2;\n    long AX = 2;\n    long AY =\
    \ 2;\n    long AZ = 2;\n    long BA = 2;\n    long BB = 2;\n    long BC = 2;\n\
    \    long BD = 2;\n    long BE = 2;\n    long BF = 2;\n    long BG = 2;\n    long\
    \ BH = 2;\n    long BI = 2;\n    long BJ = 2;\n    long BK = 2;\n    long BL =\
    \ 2;\n    long BM = 2;\n    long BN = 2;\n    long BO = 2;\n    long BP = 2;\n\
    \    long BQ = 2;\n    long BR = 2;\n    long BS = 2;\n    long BT = 2;\n    long\
    \ BU = 2;\n    long BV = 2;\n    long BW = 2;\n    long BX = 2;\n    long BY =\
    \ 2;\n    long BZ = 2;\n    long CA = 2;\n    long CB = 2;\n    long CC = 2;\n\
    \    long CD = 2;\n    long CE = 2;\n    long CF = 2;\n    long CG = 2;\n    long\
    \ CH = 2;\n    long CI = 2;\n    long CJ = 2;\n    long CK = 2;\n\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1r8duy5g.d(114): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r8duy5g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplnuvbzxv.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnuvbzxv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s;\n    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    \n    for (i = 2; i <= n; i++) {\n        p = i;\n        q = n -\
    \ i;\n        r = n % i;\n        s = 0;\n        \n        while (q > 0) {\n\
    \            if (n % p == 0) {\n                s = s + 1;\n                n\
    \ = n / p;\n            }\n            p = p * i;\n            q = q - 1;\n  \
    \      }\n        if (s == 0) {\n            max_factor_index = i;\n         \
    \   max_factor = n;\n        }\n    }\n    return max_factor;\n}\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpui5zw8db.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e0d]\n??:? void tmpui5zw8db.__unittest_L38_C1() [0x427b19]\n??:?
    void tmpui5zw8db.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281e3]\n??:? _d_run_main [0x42814e]\n??:? main [0x427ba3]\n??:?
    __libc_start_main [0x7004e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    \n    while (q > 0) {\n        if (p % q == 0) {\n     \
    \       q = q / p;\n            ++s;\n        } else {\n            q = q / p;\n\
    \            t = p * s;\n            if (t > r) {\n                r = t;\n  \
    \          }\n        }\n        ++p;\n    }\n    return r;\n}\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppqfxfukz.d(38): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dc5]\n??:? void tmppqfxfukz.__unittest_L34_C1() [0x427aac]\n??:?
    void tmppqfxfukz.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42819b]\n??:? _d_run_main [0x428106]\n??:? main [0x427b57]\n??:?
    __libc_start_main [0xeab33554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long\
    \ g = 2;\n    long h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long\
    \ p = 2;\n    long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n\
    \    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long\
    \ y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n\
    \    long d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n    long\
    \ h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n\
    \    long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long\
    \ q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n\
    \    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n\
    \    long e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n\
    \    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long\
    \ r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n\
    \    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long\
    \ a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n\
    \    long f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n    long\
    \ j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfg3m_ri5.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg3m_ri5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long m = n;\n\
    \    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long\
    \ w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n\
    \    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long\
    \ f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n\
    \    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long\
    \ o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n\
    \    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long\
    \ x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n\
    \    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long\
    \ g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n\
    \    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long\
    \ p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdf1fwwle.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdf1fwwle.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, r, s;\n    long p, q, r, s;\n    long ii, pp, qq;\n\
    \    long ppp, qqq;\n    long pppp, qqqq;\n    long ppppp, qqqqq;\n    long pppppp,\
    \ qqqqqq;\n    long ppppppp, qqqqqqq;\n    long pppppppp, qqqqqqqq;\n    long\
    \ ppppppppp, qqqqqqqqq;\n    long ppppppppp, qqqqqqqqqq;\n    long pppppppppp,\
    \ qqqqqqqqqqq;\n    long ppppppppppp, qqqqqqqqqqqq;\n    long ppppppppppp, qqqqqqqqqqqqq;\n\
    \    long pppppppppppp, qqqqqqqqqqqqqq;\n    long ppppppppppppp, qqqqqqqqqqqqqqq;\n\
    \    long pppppppppppppp, qqqqqqqqqqqqqqqq;\n    long ppppppppppppppp, qqqqqqqqqqqqqqqqq;\n\
    \    long ppppppppppppppp, qqqqqqqqqqqqqqqqqq;\n    long pppppppppppppppp, qqqqqqqqqqqqqqqqqqq;\n\
    \    long ppppppppppppppppppp, qqqqqqqqqqqqqqqqqqqq;\n    long pppppppppppppppppp,\
    \ qqqqqqqqqqqqqqqqqqqqq;\n    long ppppppppppppppppppp, qqqqqqqqqqqqqqqqqqqqq;\n\
    \    long pppppppppppppppppp, qqqqqqqqqqqqqqqqqqqqqq;\n    long ppppppppppppppppppppp,\
    \ qqqqqqqqqqqqqqqqqqqqqqq;\n    long pppppppppppppppppppp, qqqqqqqqqqqqqqqqqqqqqqqq;\n\
    \    long ppppppppppppppppppppp, qqqqqqqqqqqqqqqqqqqqqqqqq;\n    long pppppppppppppppppppp,\
    \ qqqqqqqqqqqqqqqqqqqqqqqq;\n    long ppppppppppppppppppppp, qqqqqq\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplipegs1n.d(42): Error: semicolon expected, not `unittest`\n/tmp/tmplipegs1n.d(42):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplipegs1n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n\
    \    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long\
    \ G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n\
    \    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long\
    \ P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n\
    \    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long\
    \ Y = 0;\n    long Z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n\
    \    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long\
    \ I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n\
    \    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long\
    \ R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n\
    \    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3ib0elct.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ib0elct.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r > 1) {\n\t\t\tlong m = r / p;\n\t\t\tif (m == p) return p;\n\t\t\t\
    r = m;\n\t\t}\n\t\tp = p * 2;\n\t\tq = q / 2;\n\t}\n\treturn 1;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long\
    \ g = 2;\n    long h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n\
    \    long l = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long\
    \ p = 2;\n    long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n\
    \    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long\
    \ y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n\
    \    long d = 2;\n    long e = 2;\n    long f = 2;\n    long g = 2;\n    long\
    \ h = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n\
    \    long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long\
    \ q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n\
    \    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n\
    \    long e = 2;\n    long f = 2;\n    long g = 2;\n    long h = 2;\n    long\
    \ i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n\
    \    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long\
    \ r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n\
    \    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long\
    \ a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n\
    \    long f = 2;\n    long g = 2;\n    long h = 2;\n    long i = 2;\n    long\
    \ j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc2954j8v.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc2954j8v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r * r > q) r--;\n\t\tif (r * r == q) {\n\t\t\tp++;\n\t\t\tq -= r;\n\t\
    \t} else {\n\t\t\tq--;\n\t\t}\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpsdumxymb.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpsdumxymb.__unittest_L27_C1() [0x427a8c]\n??:?
    void tmpsdumxymb.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0xe8f2b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long max = 0;\n    \n    while(p\
    \ <= r)\n    {\n        while(q <= r)\n        {\n            while(r % p == 0)\n\
    \            {\n                r /= p;\n                ++s;\n            }\n\
    \            while(r % q == 0)\n            {\n                r /= q;\n     \
    \           ++t;\n            }\n            while(r % r == 0)\n            {\n\
    \                r /= r;\n                ++u;\n            }\n            while(r\
    \ % s == 0)\n            {\n                r /= s;\n                ++v;\n  \
    \          }\n            while(r % t == 0)\n            {\n                r\
    \ /= t;\n                ++w;\n            }\n            while(r % u == 0)\n\
    \            {\n                r /= u;\n                ++x;\n            }\n\
    \            while(r % v == 0)\n            {\n                r /= v;\n     \
    \           ++y;\n            }\n            while(r % w == 0)\n            {\n\
    \                r /= w;\n                ++z;\n            }\n            \n\
    \            if(max < s)\n                max = s;\n            if(max < t)\n\
    \                max = t;\n            if(max < u)\n                max = u;\n\
    \            if(max < v)\n                max = v;\n            if(max < w)\n\
    \                max = w;\n            if(max < x)\n                max = x;\n\
    \            if(max < y)\n                max = y;\n            if(max < z)\n\
    \                max = z;\n        }\n    }\n    return max;\n}\n</code>\n<|/\
    \ a tags=c++,algorithm |>\n<| c |>\nThe code above is very slow for large numbers.\
    \ I made a version that uses prime numbers and is much faster. Check it out here:\
    \ https://gist.github.com/anonymous/d8b0c709a49e3ef477e3\n<|/ c |>\n<| c |>\n\
    I made a version that uses prime numbers and is much faster. Check it out here:\
    \ https://gist.github.com/anonymous/d8b0c709a49e3ef477e3\n<|/ c |>\n<| c |>\n\
    The code above is very slow for large numbers. I made a version that uses prime\
    \ numbers and is much faster. Check it out here: https://gist.github.com/anonymous/d8b0c709a49e3ef477e3\n\
    <|/\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdezh9hqw.d(91): Error: declaration expected, not `<`\n/tmp/tmpdezh9hqw.d(106):
    Error: declaration expected, not `assert`\n/tmp/tmpdezh9hqw.d(107): Error: declaration
    expected, not `assert`\n/tmp/tmpdezh9hqw.d(108): Error: declaration expected,
    not `assert`\n/tmp/tmpdezh9hqw.d(109): Error: declaration expected, not `assert`\n/tmp/tmpdezh9hqw.d(110):
    Error: declaration expected, not `assert`\n/tmp/tmpdezh9hqw.d(111): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdezh9hqw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d =\
    \ 1;\n\tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 0;\n\
    \tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 1;\n\tlong n = 1;\n\t\
    long o = 1;\n\tlong p1 = 1;\n\tlong q1 = 1;\n\tlong r1 = 1;\n\tlong s1 = 1;\n\t\
    long t1 = 1;\n\tlong u1 = 1;\n\tlong v1 = 1;\n\tlong w1 = 1;\n\tlong x = 1;\n\t\
    long y = 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong\
    \ d = 1;\n\tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i\
    \ = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 1;\n\tlong n =\
    \ 1;\n\tlong o = 1;\n\tlong p1 = 1;\n\tlong q1 = 1;\n\tlong r1 = 1;\n\tlong s1\
    \ = 1;\n\tlong t1 = 1;\n\tlong u1 = 1;\n\tlong v1 = 1;\n\tlong w1 = 1;\n\tlong\
    \ x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c\
    \ = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h =\
    \ 1;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 1;\n\
    \tlong n = 1;\n\tlong o = 1;\n\tlong p1 = 1;\n\tlong q1 = 1;\n\tlong r1 = 1;\n\
    \tlong s1 = 1;\n\tlong t1 = 1;\n\tlong u1 = 1;\n\tlong v1 = 1;\n\tlong w1 = 1;\n\
    \tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\t\
    long c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong\
    \ h = 1;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m\
    \ = 1;\n\tlong n = 1;\n\tlong o = 1;\n\tlong p1 = 1;\n\tlong q1 = 1;\n\tlong r1\
    \ = 1;\n\tlong s1 = 1;\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl1wc229w.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl1wc229w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong factor = 1;\n\tlong maxFactor = n;\n\tlong i = 2;\n\twhile (i\
    \ <= maxFactor) {\n\t\tif (n % i == 0) {\n\t\t\tfactor = i;\n\t\t\tbreak;\n\t\t\
    }\n\t\ti++;\n\t}\n\treturn factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp94wtjpzl.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp94wtjpzl.__unittest_L25_C1() [0x427a74]\n??:?
    void tmp94wtjpzl.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b1f]\n??:?
    __libc_start_main [0x9074b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = n;\n\tlong t;\n\
    \tlong m;\n\tlong i;\n\t\n\twhile (p * p > q * q) {\n\t\tp = p * p % q;\n\t\t\
    q = q * q % r;\n\t\tr = r * r % s;\n\t\ts = s * s % t;\n\t\tt = t * t % m;\n\t\
    \tm = m * m % i;\n\t\ti = i * i % n;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptvyeulj7.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e05]\n??:? void tmptvyeulj7.__unittest_L32_C1() [0x427af0]\n??:?
    void tmptvyeulj7.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281db]\n??:? _d_run_main [0x428146]\n??:? main [0x427b9b]\n??:?
    __libc_start_main [0xfe4c7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwush9_tq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong result = 1;\n\tlong i = 2;\n\twhile (i <= sqrt(n)) {\n\t\tif\
    \ (n % i == 0) {\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptq8llccp.d(15): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptq8llccp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    \n    while(p <= q) {\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p <= q\
    \ && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n    \
    \        break;\n        }\n        while(p <= q && q % p == 0) {\n          \
    \  p += 1;\n        }\n        while(p <= q && q % p == 0) {\n            q -=\
    \ 1;\n        }\n        if(p > q) {\n            break;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p <= q\
    \ && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n    \
    \        break;\n        }\n        while(p <= q && q % p == 0) {\n          \
    \  p += 1;\n        }\n        while(p <= q && q % p == 0) {\n            q -=\
    \ 1;\n        }\n        if(p > q) {\n            break;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p <= q\
    \ && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n    \
    \        break;\n        }\n        while(p <= q && q % p == 0) {\n          \
    \  p += 1;\n        }\n        while(p <= q && q % p == 0) {\n            q -=\
    \ 1;\n        }\n        if(p > q) {\n            break;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p <= q\
    \ && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n    \
    \        break;\n        }\n        while(p <= q && q % p == 0) {\n          \
    \  p += 1;\n        }\n        while(p <= q && q % p == 0) {\n            q -=\
    \ 1;\n        }\n        if(p > q) {\n            break;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p <= q\
    \ && q % p == 0) {\n            q -= 1;\n        }\n        if(p > q) {\n    \
    \        break;\n        }\n        while(p <= q && q % p == 0) {\n          \
    \  p += 1;\n        }\n        while(p <= q && q % p == 0) {\n            q -=\
    \ 1;\n        }\n        if(p > q) {\n            break;\n        }\n        while(p\
    \ <= q && q % p == 0) {\n            p += 1;\n        }\n        while(p \nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgeu938l7.d(115): Error: found `unittest` when expecting `)`\n/tmp/tmpgeu938l7.d(125):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpgeu938l7.d(125):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgeu938l7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1wyn7os0.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wyn7os0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1wyn7os0.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wyn7os0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong m = 1;\n\tlong e = 1;\n\tlong k = 1;\n\tlong j = 1;\n\tlong l =\
    \ 1;\n\tlong i = 1;\n\tlong h = 1;\n\tlong g = 1;\n\tlong f = 1;\n\tlong e = 1;\n\
    \tlong d = 1;\n\tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\t\
    long d = 1;\n\tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong\
    \ d = 1;\n\tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d\
    \ = 1;\n\tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d =\
    \ 1;\n\tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\
    \tlong c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\t\
    long c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong\
    \ c = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c\
    \ = 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c =\
    \ 1;\n\tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\
    \tlong b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\t\
    long b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\tlong\
    \ b = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\tlong b\
    \ = 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\tlong b =\
    \ 0;\n\tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\tlong b = 0;\n\
    \tlong a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\tlong b = 0;\n\t\
    long a = 0;\n\tlong e = 1;\n\tlong d = 1;\n\tlong c = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7q0edus.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7q0edus.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 1;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhcstsgq.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhcstsgq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 0;\n    \n    while(p < q) {\n        while(p <\
    \ q && n % p == 0) {\n            p++;\n        }\n        \n        while(p <\
    \ q && n % q == 0) {\n            q--;\n        }\n        \n        if(p == q)\
    \ {\n            if(n == p) \n                return p;\n            \n      \
    \      if(n == q) \n                return q;\n            \n            if(n\
    \ == (p * q)) {\n                return (p * q);\n            }\n            \n\
    \            if(n == (p * q) + 1) {\n                return (p * q) + 1;\n   \
    \         }\n            \n            if(n == (p * q) + 2) {\n              \
    \  return (p * q) + 2;\n            }\n            \n            if(n == (p *\
    \ q) + 3) {\n                return (p * q) + 3;\n            }\n            \n\
    \            if(n == (p * q) + 4) {\n                return (p * q) + 4;\n   \
    \         }\n            \n            if(n == (p * q) + 5) {\n              \
    \  return (p * q) + 5;\n            }\n            \n            if(n == (p *\
    \ q) + 6) {\n                return (p * q) + 6;\n            }\n            \n\
    \            if(n == (p * q) + 7) {\n                return (p * q) + 7;\n   \
    \         }\n            \n            if(n == (p * q) + 8) {\n              \
    \  return (p * q) + 8;\n            }\n            \n            if(n == (p *\
    \ q) + 9) {\n                return (p * q) + 9;\n            }\n            \n\
    \            if(n == (p * q) + 10) {\n                return (p * q) + 10;\n \
    \           }\n            \n            if(n == (p * q) + 11) {\n           \
    \     return (p * q) + 11;\n            }\n            \n            if(n == (p\
    \ * q) + 12) {\n                return (p * q) + 12;\n            }\n        \
    \    \n            if(n == (p * q) + 13) {\n                return (p * q) + 13;\n\
    \            }\n            \n            if(n == (p * q) + 14) {\n          \
    \      return (p * q) + 14;\n            }\n            \n            if(n ==\
    \ (p * q) + 15) {\n                return (p * q) + 15;\n            }\n     \
    \       \n            if(n == (p * q) + 16) {\n                return (p * q)\
    \ + 16;\n            }\n            \n            if(n == (p * q) + 17) {\n  \
    \              return (p * q) + 17;\n            }\n            \n           \
    \ if(n == (p * q) + 18) {\n                return (p * q) + 18\nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0cwymvt2.d(110): Error: found `unittest` when expecting `;`
    following `return` statement\n/tmp/tmp0cwymvt2.d(120): Error: found `End of File`
    when expecting `}` following compound statement\n/tmp/tmp0cwymvt2.d(120): Error:
    found `End of File` when expecting `}` following compound statement\n/tmp/tmp0cwymvt2.d(120):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp0cwymvt2.d(120):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0cwymvt2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2L;\n\tlong q = 2L;\n\tlong r = 2L;\n\tlong s = 2L;\n\tlong\
    \ t = 3L;\n\tlong u = 3L;\n\tlong v = 3L;\n\tlong w = 3L;\n\tlong x = 2L;\n\t\
    long y = 3L;\n\tlong z = 3L;\n\tlong a = 2L;\n\tlong b = 3L;\n\tlong c = 4L;\n\
    \tlong d = 2L;\n\tlong e = 3L;\n\tlong f = 4L;\n\tlong g = 3L;\n\tlong h = 3L;\n\
    \tlong i = 2L;\n\tlong j = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong m = 2L;\n\
    \tlong n = 2L;\n\tlong o = 2L;\n\tlong p1 = 2L;\n\tlong p2 = 2L;\n\tlong q1 =\
    \ 2L;\n\tlong q2 = 2L;\n\tlong r = 2L;\n\tlong s = 2L;\n\tlong t = 2L;\n\tlong\
    \ u = 2L;\n\tlong v = 3L;\n\tlong w = 3L;\n\tlong x = 2L;\n\tlong y = 3L;\n\t\
    long z = 3L;\n\tlong a = 2L;\n\tlong b = 3L;\n\tlong c = 4L;\n\tlong d = 2L;\n\
    \tlong e = 3L;\n\tlong f = 4L;\n\tlong g = 3L;\n\tlong h = 3L;\n\tlong i = 2L;\n\
    \tlong j = 3L;\n\tlong k = 3L;\n\tlong l = 3L;\n\tlong m = 2L;\n\tlong n = 2L;\n\
    \tlong o = 2L;\n\tlong p1 = 2L;\n\tlong p2 = 2L;\n\tlong q1 = 2L;\n\tlong q2 =\
    \ 2L;\n\tlong r = 2L;\n\tlong s = 2L;\n\tlong t = 2L;\n\tlong u = 2L;\n\tlong\
    \ v = 3L;\n\tlong w = 3L;\n\tlong x = 2L;\n\tlong y = 3L;\n\tlong z = 3L;\n\t\
    long a = 2L;\n\tlong b = 3L;\n\tlong c = 4L;\n\tlong d = 2L;\n\tlong e = 3L\n\
    unittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptrp3dnyg.d(85): Error: semicolon expected, not `unittest`\n/tmp/tmptrp3dnyg.d(85):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmptrp3dnyg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiakvi6il.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiakvi6il.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\twhile (q > 1) {\n\t\tlong r = q;\n\t\
    \twhile (r * p < n) {\n\t\t\tr *= p;\n\t\t}\n\t\tif (r != q) {\n\t\t\tbreak;\n\
    \t\t}\n\t\tp += 1;\n\t\tq -= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpi_jgsr5w.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpi_jgsr5w.__unittest_L28_C1() [0x427a8c]\n??:?
    void tmpi_jgsr5w.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b37]\n??:?
    __libc_start_main [0x9d5dc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7cbgxwbt.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cbgxwbt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = n;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_6ijray1.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6ijray1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    \n  \
    \  while(p <= q)\n    {\n        while(p <= q)\n        {\n            while(p\
    \ <= q && r != 1)\n            {\n                r = r * u;\n               \
    \ p = p + 1;\n            }\n            while(p <= q && r != 1)\n           \
    \ {\n                r = r * v;\n                q = q + 1;\n            }\n \
    \           while(p <= q && r != 1)\n            {\n                r = r * w;\n\
    \                s = s + 1;\n            }\n            while(p <= q && r != 1)\n\
    \            {\n                r = r / t;\n                t = t + 1;\n     \
    \       }\n            while(p <= q && r != 1)\n            {\n              \
    \  r = r / s;\n                s = s - 1;\n            }\n            while(p\
    \ <= q && r != 1)\n            {\n                r = r / u;\n               \
    \ u = u - 1;\n            }\n            while(p <= q && r != 1)\n           \
    \ {\n                r = r / v;\n                v = v - 1;\n            }\n \
    \           while(p <= q && r != 1)\n            {\n                r = r / w;\n\
    \                w = w - 1;\n            }\n        }\n    }\n    return r;\n\
    }\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnwvvr4ha.d(74): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpnwvvr4ha.__unittest_L70_C1() [0x427bf0]\n??:?
    void tmpnwvvr4ha.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0xd4310554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr4q5x0rr.d(116): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr4q5x0rr.d", "-I/tmp"]\n'''
  stdout: b''

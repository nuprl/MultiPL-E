name: HumanEval_59_largest_prime_factor
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 1;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t;\n\
    \t\n\twhile (q > 1) {\n\t\tt = q;\n\t\twhile (t % 2 == 0) {\n\t\t\tt /= 2;\n\t\
    \t}\n\t\tif (t > p) {\n\t\t\tp = t;\n\t\t}\n\t\tq = r;\n\t\twhile (q % 2 == 0)\
    \ {\n\t\t\tq /= 2;\n\t\t}\n\t\tif (q > s) {\n\t\t\ts = q;\n\t\t}\n\t\tr = s;\n\
    \t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = 3;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long\
    \ g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcmdhyosz.d(118): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmdhyosz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2L;\n    long q = n%p;\n    long r = q%p;\n    while(q\
    \ != 0) {\n        p = q;\n        q = r%p;\n        r = p%p;\n    }\n    return\
    \ r;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=c++,algorithm,primes |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nunittest\n{\n  \
    \  alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvoggcq6_.d(23): Error: declaration expected, not `<`\\n/tmp/tmpvoggcq6_.d(34):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpvoggcq6_.d(35): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpvoggcq6_.d(36): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpvoggcq6_.d(37): Error: declaration expected, not `assert`\\\
    n/tmp/tmpvoggcq6_.d(38): Error: declaration expected, not `assert`\\n/tmp/tmpvoggcq6_.d(39):\
    \ Error: unrecognized declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpvoggcq6_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2L;\n\tlong q = n%p;\n\twhile (q > 0L && p < n) \n\t{\n\t\
    \tp = p * q;\n\t\tq = n%p;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcprwfzhj.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcprwfzhj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptoaawa94.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptoaawa94.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = n;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 2;\n    long b = 2;\n\
    \    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 2;\n    long\
    \ g = 2;\n    long h = 2;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp482ho4sf.d(118): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp482ho4sf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiakvi6il.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiakvi6il.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t\
    \ = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y =\
    \ 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\
    \tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong i = 0;\n\t\
    long j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong\
    \ o = 0;\n\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L)\
    \ == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplx0q7oi6.d(118): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplx0q7oi6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long result = 1;\n    long i;\n    for(i = 2; i <= n / i; i++)\n\
    \    {\n        if(n % i == 0)\n        {\n            result = i;\n         \
    \   break;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6okzq420.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp6okzq420.__unittest_L25_C1()\
    \ [0x427a80]\\n??:? void tmp6okzq420.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x4fb0e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv5qgmmjr.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5qgmmjr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = 3;\n\tlong r = n;\n\twhile (r > 1) {\n\t\t\
    while (r % p == 0) {\n\t\t\tp = p * q;\n\t\t\tr = r / p;\n\t\t}\n\t\tq = q * p;\n\
    \t\tr = r / q;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 2;\n\tlong t\
    \ = 3;\n\tlong u = 3;\n\tlong v = 3;\n\tlong w = 3;\n\tlong x = 2;\n\tlong y =\
    \ 2;\n\tlong z = 2;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong n = 1;\n\tlong\
    \ o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t\
    \ = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y =\
    \ 1;\n\tlong z = 1;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\
    \tlong e = 1;\n\tlong f = 0;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\t\
    long j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjd4izsos.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjd4izsos.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n\tlong p = 2;\n\tlong q = n;\n\tlong r = n;\n\tlong s = 1;\n\tlong t;\n\
    \t\n\twhile (q > 0) {\n\t\tt = q;\n\t\twhile (r > 0) {\n\t\t\ts = s * r;\n\t\t\
    \tr = r / p;\n\t\t}\n\t\tp = p * t;\n\t\tq = q / p;\n\t}\n\treturn s;\n}\nunittest\n\
    {\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) ==\
    \ 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n\
    \    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp92wo60wa.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmp92wo60wa.__unittest_L30_C1()\
    \ [0x427aa4]\\n??:? void tmp92wo60wa.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0xfc50554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    \n    while (q != 0) {\n\
    \        while (r != 0) {\n            if (r == 1) {\n                p = p *\
    \ u;\n                s = s * v;\n                t = t * v;\n            }\n\
    \            r = r / 2;\n        }\n        q = q / 2;\n        v = v * u;\n \
    \       u = u * v;\n    }\n    return p;\n}\nunittest\n{\n    alias candidate\
    \ = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L)\
    \ == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n\
    \    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpchycg8l9.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpchycg8l9.__unittest_L36_C1()\
    \ [0x427ae8]\\n??:? void tmpchycg8l9.__modtest() [0x427b80]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b93]\\\
    n??:? __libc_start_main [0xe2221554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long i, p, q, factor;\n    long max_factor = 0;\n    \n    for (i\
    \ = 2; i <= n; i++) {\n        p = i;\n        factor = 1;\n        \n       \
    \ for (q = p; q > 0; q--) {\n            if (n % q == 0) {\n                factor++;\n\
    \                n /= q;\n            }\n        }\n        \n        if (factor\
    \ > max_factor) {\n            max_factor = factor;\n        }\n    }\n    \n\
    \    return max_factor;\n}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\
    \n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnl20hr4f.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dd5]\\n??:? void tmpnl20hr4f.__unittest_L34_C1()\
    \ [0x427abc]\\n??:? void tmpnl20hr4f.__modtest() [0x427b54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bafb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a965]\\n??:? runModuleUnitTests [0x42b8d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428224]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281ab]\\n??:? _d_run_main [0x428116]\\n??:? main [0x427b67]\\\
    n??:? __libc_start_main [0xd2caa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\nunittest\n{\n \
    \   alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwush9_tq.d(116): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwush9_tq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 1;\n\
    \    long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    \n    while(p <= q)\n    {\n \
    \       while(p <= q)\n        {\n            while(p <= q)\n            {\n \
    \               while(p <= q)\n                {\n                    while(p\
    \ <= q)\n                    {\n                        while(p <= q)\n      \
    \                  {\n                            while(p <= q)\n            \
    \                {\n                                while(p <= q)\n          \
    \                      {\n                                    while(p <= q)\n\
    \                                    {\n                                     \
    \   while(p <= q)\n                                        {\n               \
    \                             while(p <= q)\n                                \
    \            {\n                                                while(p <= q)\n\
    \                                                {\n                         \
    \                           while(p <= q)\n                                  \
    \                  {\n                                                       \
    \ while(p <= q)\n                                                        {\n \
    \                                                           while(p <= q)\n  \
    \                                                          {\n               \
    \                                                 while(p <= q)\n            \
    \                                                    {\n                     \
    \                                               while(p <= q)\n              \
    \                                                      {\n                   \
    \                                                     while(p <= q)\n        \
    \                                                                {\n         \
    \                                                                   while(p <=\
    \ q)\n                                                                       \
    \     {\n                                                                    \
    \            while(p <= q)\n                                                 \
    \                               {\n                                          \
    \                                          while(p <= q)\n                   \
    \                                                                 {\n        \
    \                                                                            \
    \    while(p <= q)\n                                                         \
    \                               {\n                                          \
    \                                                  while(p <= q)\n           \
    \                                                                            \
    \     {\n                                                                    \
    \                            while(p <= q)\n                                 \
    \                                                               {\n          \
    \                                                                            \
    \              while(p <= q)\n                                               \
    \                                                     {\n                    \
    \                                                                            \
    \        while(p <= q)\n                                                     \
    \                                                   {\n                      \
    \                                                                            \
    \          while(p <= q)\n                                                   \
    \                                                         {\n                \
    \                                                                            \
    \                    while(p <= q)\n                                         \
    \                                                                       {\n  \
    \                                                                            \
    \                                      while(p <= q)\n                       \
    \                                                                            \
    \                 {\n                                                        \
    \                                                                while(p <= q)\n\
    \                                                                            \
    \                                            {\n                             \
    \                                                                            \
    \                   while(p <= q)\n                                          \
    \                                                                            \
    \      {\n                                                                   \
    \                                                             while(p <= q)\n\
    \                                                                            \
    \                                                    {\n                     \
    \                                                                            \
    \                                   while(p <= q)\n                          \
    \                                                                            \
    \                              {\n                                           \
    \                                                                            \
    \                 while(p <= q)\n                                            \
    \                                                                            \
    \                {\n                                                         \
    \                                                                            \
    \       while(p <= q)\n                                                      \
    \                                                                            \
    \          {\n                                                               \
    \                                                                            \
    \     while(p <= q)\n                                                        \
    \                                                                            \
    \            {\n                                                             \
    \                                                                            \
    \           while(p <= q)\n                                                  \
    \                                                                            \
    \                      {\n                                                   \
    \                                                                            \
    \                         while(p <= q)\n                                    \
    \                                                                            \
    \                                        {\n                                 \
    \                                                                            \
    \                                               while(p <= q)\n              \
    \                                                                            \
    \                                                                  {\n       \
    \                                                                            \
    \                                                                            \
    \ while(p <= q)\n                                                            \
    \                                                                            \
    \                        {\n                                                 \
    \                                                                            \
    \                                       while(p <= q)\n                      \
    \                                                                            \
    \                                                                  {\n       \
    \                                                                            \
    \                                                                            \
    \         while(p <= q)\n                                                    \
    \                                                                            \
    \                                        {\n                                 \
    \                                                                            \
    \                                                               while(p <= q)\n\
    \                                                                            \
    \                                                                            \
    \                    {\n                                                     \
    \           \nunittest\n{\n    alias candidate = largest_prime_factor;\n\n   \
    \ assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L)\
    \ == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) ==\
    \ 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa6d7486e.d(112): Error: found `unittest` instead of statement\\\
    n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpa6d7486e.d(122): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpa6d7486e.d(122): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa6d74"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = 2;\n    long r = n;\n    long s = 2;\n\
    \    long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long\
    \ x = 3;\n    long y = 3;\n    long z = 3;\n    long max = 2;\n    long imax =\
    \ 0;\n    \n    while (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n  \
    \          r /= 2;\n        }\n        else\n        {\n            int i = 3;\
    \ // i is now the smallest odd divisor of r\n            \n            while (r\
    \ % i == 0)\n            {\n                i = i + 2;\n            }\n      \
    \      \n            if (i == 3)\n            {\n                p = i;\n    \
    \            \n                while (r % p == 0)\n                {\n       \
    \             p = p + 2;\n                }\n                \n              \
    \  if (p == 3)\n                {\n                    r = r;\n              \
    \  }\n                else\n                {\n                    r = r / p;\n\
    \                }\n            }\n            else\n            {\n         \
    \       p = i;\n                \n                while (r % p == 0)\n       \
    \         {\n                    p = p + 2;\n                }\n             \
    \   \n                if (p == 3)\n                {\n                    r =\
    \ r;\n                }\n                else\n                {\n           \
    \         r = r / p;\n                }\n            }\n        }\n    }\n   \
    \ \n    while (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n          \
    \  r /= 2;\n        }\n        else\n        {\n            int i = 3; // i is\
    \ now the smallest odd divisor of r\n            \n            while (r % i ==\
    \ 0)\n            {\n                i = i + 2;\n            }\n            \n\
    \            if (i == 3)\n            {\n                q = i;\n            \
    \    \n                while (r % q == 0)\n                {\n               \
    \     q = q + 2;\n                }\n                \n                if (q ==\
    \ 3)\n                {\n                    r = r;\n                }\n     \
    \           else\n                {\n                    r = r / q;\n        \
    \        }\n            }\n            else\n            {\n                q\
    \ = i;\n                \n                while (r % q == 0)\n               \
    \ {\n                    q = q + 2;\n                }\n                \n   \
    \             if (q == 3)\n                {\n                    r = r;\n   \
    \             }\n                else\n                {\n                   \
    \ r = r / q;\n                }\n            }\n        }\n    }\n    \n    while\
    \ (r != 1)\n    {\n        if (r % 2 == 0)\n        {\n            r /= 2;\n \
    \       }\n        else\n        {\n            int i = 3; // i is now the smallest\
    \ odd divisor of r\n            \n            while (r % i == 0)\n           \
    \ {\n                i = i + 2;\n            }\n            \n            if (i\
    \ == 3)\n            {\n                s = i;\n                \nunittest\n{\n\
    \    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n\
    \    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj82wfkz5.d(154): Error: found `unittest` instead of statement\\\
    n/tmp/tmpj82wfkz5.d(164): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpj82wfkz5.d(164): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpj82wfkz5.d(164): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj82wfkz5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nReturn the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195L)\n\
    \    29L\n    >>> largest_prime_factor(2048L)\n    2L\n    \n*/\nlong largest_prime_factor(long\
    \ n) \n{\n    long p = 1;\n    long q = n;\n    long r = n;\n    long s = 2;\n\
    \    long t = 2;\n    long u = 2;\n    long v = 2;\n    \n    while(p <= q) \n\
    \    {\n        while(p <= q && q % p == 0) \n        {\n            p += 1;\n\
    \        }\n        \n        while(p <= q && q % p == 0) \n        {\n      \
    \      q -= p;\n        }\n        \n        if(p > q) \n        {\n         \
    \   while(p <= q && q % p == 0) \n            {\n                p += 1;\n   \
    \         }\n            \n            while(p <= q && q % p == 0) \n        \
    \    {\n                q -= p;\n            }\n        }\n        \n        if(q\
    \ > r) \n        {\n            while(p <= q && q % p == 0) \n            {\n\
    \                p += 1;\n            }\n            \n            while(p <=\
    \ q && q % p == 0) \n            {\n                q -= p;\n            }\n \
    \       }\n        \n        if(q > r) \n        {\n            while(p <= q &&\
    \ q % p == 0) \n            {\n                p += 1;\n            }\n      \
    \      \n            while(p <= q && q % p == 0) \n            {\n           \
    \     q -= p;\n            }\n        }\n        \n        if(q > r) \n      \
    \  {\n            while(p <= q && q % p == 0) \n            {\n              \
    \  p += 1;\n            }\n            \n            while(p <= q && q % p ==\
    \ 0) \n            {\n                q -= p;\n            }\n        }\n    \
    \    \n        if(q > r) \n        {\n            while(p <= q && q % p == 0)\
    \ \n            {\n                p += 1;\n            }\n            \n    \
    \        while(p <= q && q % p == 0) \n            {\n                q -= p;\n\
    \            }\n        }\n        \n        if(q > r) \n        {\n         \
    \   while(p <= q && q % p == 0) \n            {\n                p += 1;\n   \
    \         }\n            \n            while(p <= q && q % p == 0) \n        \
    \    {\n                q -= p;\n            }\n        }\n        \n        if(q\
    \ > r) \n        {\n            while(p <= q && q % p == 0) \n            {\n\
    \                p += 1;\n            }\n            \n            while(p <=\
    \ q && q % p == 0) \n            {\n                q -= p;\n            }\n \
    \       }\n        \n        if(q > r) \n        {\n            while(p <= q &&\
    \ q % p == 0) \n            {\n                p += 1;\n\nunittest\n{\n    alias\
    \ candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n   \
    \ assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L)\
    \ == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5tc8h6p1.d(130): Error: found `unittest` instead of statement\\\
    n/tmp/tmp5tc8h6p1.d(140): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmp5tc8h6p1.d(140): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmp5tc8h6p1.d(140): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tc8h6p1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

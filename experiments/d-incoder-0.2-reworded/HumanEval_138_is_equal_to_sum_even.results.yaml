language: d
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\tif (sum == n) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpu7449ddt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427df5]\n??:? void tmpu7449ddt.__unittest_L27_C1() [0x427aa5]\n??:?
    void tmpu7449ddt.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281cb]\n??:? _d_run_main [0x428136]\n??:? main [0x427b87]\n??:?
    __libc_start_main [0xc123c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long limit2 = limit;\n \
    \   long limit3 = limit2;\n    long limit4 = limit3;\n    long limit5 = limit4;\n\
    \    long limit6 = limit5;\n    long limit7 = limit6;\n    long limit8 = limit7;\n\
    \    long limit9 = limit8;\n    long limit10 = limit9;\n    long limit11 = limit10;\n\
    \    long limit12 = limit11;\n    long limit13 = limit12;\n    long limit14 =\
    \ limit13;\n    long limit15 = limit14;\n    long limit16 = limit15;\n    long\
    \ limit17 = limit16;\n    long limit18 = limit17;\n    long limit19 = limit18;\n\
    \    long limit20 = limit19;\n    long limit21 = limit20;\n    long limit22 =\
    \ limit21;\n    long limit23 = limit22;\n    long limit24 = limit23;\n    long\
    \ limit25 = limit24;\n    long limit26 = limit25;\n    long limit27 = limit26;\n\
    \    long limit28 = limit27;\n    long limit29 = limit28;\n    long limit30 =\
    \ limit29;\n    long limit31 = limit30;\n    long limit32 = limit31;\n    long\
    \ limit33 = limit32;\n    long limit34 = limit33;\n    long limit35 = limit34;\n\
    \    long limit36 = limit35;\n    long limit37 = limit36;\n    long limit38 =\
    \ limit37;\n    long limit39 = limit38;\n    long limit40 = limit39;\n    long\
    \ limit41 = limit40;\n    long limit42 = limit41;\n    long limit43 = limit42;\n\
    \    long limit44 = limit43;\n    long limit45 = limit44;\n    long limit46 =\
    \ limit45;\n    long limit47 = limit46;\n    long limit48 = limit47;\n    long\
    \ limit49 = limit48;\n    long limit50 = limit49;\n    long limit51 = limit50;\n\
    \    long limit52 = limit51;\n    long limit53 = limit52;\n    long limit54 =\
    \ limit53;\n    long limit55 = limit54;\n    long limit56 = limit55;\n    long\
    \ limit57 = limit56;\n    long limit58 = limit57;\n    long limit59 = limit58;\n\
    \    long limit60 = limit59;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy47_jbr7.d(77): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy47_jbr7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += i;\n        if(sum == n)\n            return true;\n    }\n    return false;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis is not the right answer. `is_equal_to_sum_even`\
    \ returns `true` for `n = 4`, but `is_equal_to_sum_even(8)` returns `false`. `is_equal_to_sum_even`\
    \ should return `true` for `n = 8`.\n<|/ c |>\n<| c |>\nI see what you mean. I'll\
    \ edit my answer to fix it.\n<|/ c |>\n<| c |>\nI edited my answer to fix the\
    \ bug that I mentioned in my comment above. Thanks for pointing it out.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer to fix the bug that I mentioned in my comment\
    \ above. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ fix the bug that I mentioned in my comment above. Thanks for pointing it out.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcty5mah6.d(25): Error: declaration expected, not `<`\n/tmp/tmpcty5mah6.d(31):
    Error: unterminated character constant\n/tmp/tmpcty5mah6.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmpcty5mah6.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmpcty5mah6.d(50): Error: declaration expected, not `assert`\n/tmp/tmpcty5mah6.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpcty5mah6.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpcty5mah6.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpcty5mah6.d(54): Error: declaration expected, not `assert`\n/tmp/tmpcty5mah6.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmpcty5mah6.d(56): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcty5mah6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb34ignlp.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpb34ignlp.__unittest_L27_C1() [0x427a72]\n??:?
    void tmpb34ignlp.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x93005554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i++)\n    {\n        sum\
    \ += i;\n        if(sum % 2 == 0)\n            return false;\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThis is not correct.\
    \ `is_equal_to_sum_even` returns `true` for `4L` but `4L + 2L + 3L + 4L == 18L`,\
    \ which is not equal to `4L + 2L + 3L + 4L`.\n<|/ c |>\n<| c |>\n: I see what\
    \ you mean. Thanks for pointing that out. I've updated the answer to fix it.\n\
    <|/ c |>\n<| c |>\nI still think your answer is wrong. `is_equal_to_sum_even`\
    \ returns `true` for `4L` but `4L + 2L + 3L + 4L == 18L`, which is not equal to\
    \ `4L + 2L + 3L + 4L`.\n<|/ c |>\n<| c |>\n: I see what you mean. Thanks for pointing\
    \ that out. I've updated the answer to fix it.\n<|/ c |>\n<| c |>\nI still think\
    \ your answer is wrong. `is_equal_to_sum_even` returns `true` for `4L` but `4L\
    \ + 2L + 3L + 4L == 18L`, which is not equal to `4L + 2L + 3L + 4L`.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6navvwua.d(25): Error: declaration expected, not `<`\n/tmp/tmp6navvwua.d(31):
    Error: unterminated character constant\n/tmp/tmp6navvwua.d(37): Error: unterminated
    character constant\n/tmp/tmp6navvwua.d(48): Error: declaration expected, not `assert`\n/tmp/tmp6navvwua.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmp6navvwua.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmp6navvwua.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmp6navvwua.d(52): Error: declaration expected, not `assert`\n/tmp/tmp6navvwua.d(53):
    Error: declaration expected, not `assert`\n/tmp/tmp6navvwua.d(54): Error: declaration
    expected, not `assert`\n/tmp/tmp6navvwua.d(55): Error: declaration expected, not
    `assert`\n/tmp/tmp6navvwua.d(56): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6navvwua.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpabrohu2x.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpabrohu2x.__unittest_L22_C1() [0x427aa6]\n??:?
    void tmpabrohu2x.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7a683554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    while(i <=\
    \ n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkk6sxjcl.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpkk6sxjcl.__unittest_L27_C1() [0x427a7a]\n??:?
    void tmpkk6sxjcl.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x90968554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpteas0r22.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpteas0r22.__unittest_L28_C1() [0x427a99]\n??:?
    void tmpteas0r22.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x6b8a6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++)\n    {\n\
    \        sum += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nThis fails for n=0 as it will return true.\n<|/ c |>\n<| c |>\n\
    : Yes, I realized that after I posted it. I edited my answer to fix it.\n<|/ c\
    \ |>\n<| c |>\nThe first solution fails for n=0 as it will return true.\n<|/ c\
    \ |>\n<| c |>\n: Yes, I realized that after I posted it. I edited my answer to\
    \ fix it.\n<|/ c |>\n<| c |>\nThe first solution fails for n=0 as it will return\
    \ true.\n<|/ c |>\n<| a tags=c++,algorithm,math |>\n<code>\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg81d6jpq.d(28): Error: declaration expected, not `<`\n/tmp/tmpg81d6jpq.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpg81d6jpq.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpg81d6jpq.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpg81d6jpq.d(54): Error: declaration expected, not `assert`\n/tmp/tmpg81d6jpq.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmpg81d6jpq.d(56): Error: declaration
    expected, not `assert`\n/tmp/tmpg81d6jpq.d(57): Error: declaration expected, not
    `assert`\n/tmp/tmpg81d6jpq.d(58): Error: declaration expected, not `assert`\n/tmp/tmpg81d6jpq.d(59):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg81d6jpq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t}\n\treturn (sum == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdjndop6r.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpdjndop6r.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpdjndop6r.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5e11a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ ++i)\n    {\n        sum += i;\n        if(sum > limit)\n        {\n       \
    \     return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvbgum30k.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpvbgum30k.__unittest_L28_C1() [0x427aaa]\n??:?
    void tmpvbgum30k.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xf560554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    while(i < n)\n    {\n      \
    \  sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp1i9s08_k.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp1i9s08_k.__unittest_L25_C1() [0x427a85]\n??:?
    void tmp1i9s08_k.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x8eda0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long int sum = 0;\n    long long int i;\n    \n    for(i =\
    \ 0; i < n; i++) {\n        sum += i;\n    }\n    \n    return sum == ((long long)n\
    \ * (long long)n * (long long)n * (long long)n);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjw3h39ey.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpjw3h39ey.d(16): Error: no identifier for declarator `long`\n/tmp/tmpjw3h39ey.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjw3h39ey.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpjw3h39ey.d(23): Error: found
    `long` when expecting `.` following long\n/tmp/tmpjw3h39ey.d(23): Error: found
    `)` when expecting identifier following `long`.\n/tmp/tmpjw3h39ey.d(23): Error:
    found `n` when expecting `)`\n/tmp/tmpjw3h39ey.d(23): Error: found `long` when
    expecting `.` following long\n/tmp/tmpjw3h39ey.d(23): Error: found `)` when expecting
    identifier following `long`.\n/tmp/tmpjw3h39ey.d(23): Error: found `n` when expecting
    `)`\n/tmp/tmpjw3h39ey.d(23): Error: found `long` when expecting `.` following
    long\n/tmp/tmpjw3h39ey.d(23): Error: found `)` when expecting identifier following
    `long`.\n/tmp/tmpjw3h39ey.d(23): Error: found `n` when expecting `)`\n/tmp/tmpjw3h39ey.d(23):
    Error: found `long` when expecting `.` following long\n/tmp/tmpjw3h39ey.d(23):
    Error: found `)` when expecting identifier following `long`.\n/tmp/tmpjw3h39ey.d(23):
    Error: found `n` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpjw3h39ey.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nThe question was about C++, not C. Also, the `for` loop should\
    \ be `for(int i = 1; i < n; i+=2)`.\n<|/ c |>\n<| c |>\nI didn't know that C++\
    \ had a built-in `is_equal_to_sum_even` function. I thought it was a user-defined\
    \ function.\n<|/ c |>\n<| c |>\nThe question was about C++, not C. Also, the `for`\
    \ loop should be `for(int i = 1; i < n; i+=2)`.\n<|/ c |>\n<| c |>\nThe question\
    \ was about C++, not C. Also, the `for` loop should be `for(int i = 1; i < n;\
    \ i+=2)`.\n<|/ c |>\n<| c |>\nThe question was about C++, not C. Also, the `for`\
    \ loop should be `for(int i = 1; i < n; i+=2)`.\n<|/ c |>\n<| a tags=c++,algorithm\
    \ |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi9ty3__f.d(23): Error: declaration expected, not `<`\n/tmp/tmpi9ty3__f.d(29):
    Error: unterminated character constant\n/tmp/tmpi9ty3__f.d(46): Error: declaration
    expected, not `assert`\n/tmp/tmpi9ty3__f.d(47): Error: declaration expected, not
    `assert`\n/tmp/tmpi9ty3__f.d(48): Error: declaration expected, not `assert`\n/tmp/tmpi9ty3__f.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmpi9ty3__f.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmpi9ty3__f.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmpi9ty3__f.d(52): Error: declaration expected, not `assert`\n/tmp/tmpi9ty3__f.d(53):
    Error: declaration expected, not `assert`\n/tmp/tmpi9ty3__f.d(54): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi9ty3__f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 2; i <= limit;\
    \ i += 2)\n    {\n        sum += i;\n        if(sum == limit)\n        {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0wo7ss3w.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp0wo7ss3w.__unittest_L28_C1() [0x427a89]\n??:?
    void tmp0wo7ss3w.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x45344554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i+=2)\n    {\n\
    \        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it with `is_equal_to_sum_even(8L)`.\n<|/ c |>\n<| c |>\n\
    It works. I tested it before posting. Try it yourself.\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work. Try it with `is_equal_to_sum_even(8L)`.\n<|/ c |>\n<| c |>\nIt\
    \ works. I tested it before posting. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `is_equal_to_sum_even(8L)`.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp45y4cqqe.d(28): Error: declaration expected, not `<`\n/tmp/tmp45y4cqqe.d(31):
    Error: unterminated character constant\n/tmp/tmp45y4cqqe.d(37): Error: unterminated
    character constant\n/tmp/tmp45y4cqqe.d(43): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45y4cqqe.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; ++i)\n    {\n        sum\
    \ += i;\n        if(sum == n)\n            return true;\n    }\n    return false;\n\
    }\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nI like the idea of using bitwise\
    \ operations to solve this problem. Thanks!\n<|/ c |>\n<| c |>\nI like your solution\
    \ too, but I believe that `is_equal_to_sum_even` should return `true` for `n ==\
    \ 0`.\n<|/ c |>\n<| c |>\nI agree, thanks for pointing that out. I've updated\
    \ the answer to include a check for n == 0.\n<|/ c |>\n<| c |>\nI like the idea\
    \ of using bitwise operations to solve this problem. Thanks!\n<|/ c |>\n<| c |>\n\
    I like your solution too, but I believe that `is_equal_to_sum_even` should return\
    \ `true` for `n == 0`.\n<|/ c |>\n<| a tags=c++,algorithm |>\nThe simplest solution\
    \ is to use bitwise operations:\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpis83pjfc.d(25): Error: declaration expected, not `<`\n/tmp/tmpis83pjfc.d(34):
    Error: unterminated character constant\n/tmp/tmpis83pjfc.d(49): Error: declaration
    expected, not `assert`\n/tmp/tmpis83pjfc.d(50): Error: declaration expected, not
    `assert`\n/tmp/tmpis83pjfc.d(51): Error: declaration expected, not `assert`\n/tmp/tmpis83pjfc.d(52):
    Error: declaration expected, not `assert`\n/tmp/tmpis83pjfc.d(53): Error: declaration
    expected, not `assert`\n/tmp/tmpis83pjfc.d(54): Error: declaration expected, not
    `assert`\n/tmp/tmpis83pjfc.d(55): Error: declaration expected, not `assert`\n/tmp/tmpis83pjfc.d(56):
    Error: declaration expected, not `assert`\n/tmp/tmpis83pjfc.d(57): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpis83pjfc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmposgefp_d.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmposgefp_d.__unittest_L28_C1() [0x427a99]\n??:?
    void tmposgefp_d.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0xf0408554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n     \
    \   sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppacqvwef.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmppacqvwef.__unittest_L25_C1() [0x427a66]\n??:?
    void tmppacqvwef.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xdd72c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ i+=2)\n    {\n        sum += i;\n    }\n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp1abk3sou.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp1abk3sou.__unittest_L24_C1() [0x427a6a]\n??:?
    void tmp1abk3sou.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xe44c5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++)\n    {\n\
    \        sum += i;\n    }\n    return sum == n;\n}\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptzy1klpb.d(41): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmptzy1klpb.__unittest_L35_C1() [0x427aaa]\n??:?
    void tmptzy1klpb.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xedf07554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb34ignlp.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpb34ignlp.__unittest_L27_C1() [0x427a72]\n??:?
    void tmpb34ignlp.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x93005554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n        if(sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpbk_c3s2i.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpbk_c3s2i.__unittest_L25_C1() [0x427a89]\n??:?
    void tmpbk_c3s2i.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x60ad8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i+=2)\n    {\n      \
    \  sum += i;\n        if(sum == n)\n        {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0s9j1le1.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp0s9j1le1.__unittest_L27_C1() [0x427a89]\n??:?
    void tmp0s9j1le1.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xa6971554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i <= n; i+=2)\n    {\n      \
    \  sum += i;\n    }\n    return sum == n;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv5c16cj4.d(40): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv5c16cj4.__unittest_L34_C1() [0x427aa6]\n??:?
    void tmpv5c16cj4.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xcd983554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long even = 1;\n    \n    while (n > 0)\n   \
    \ {\n        sum += even;\n        even += 2;\n        n -= even;\n    }\n   \
    \ \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpe4syk0u7.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpe4syk0u7.__unittest_L28_C1() [0x427aaa]\n??:?
    void tmpe4syk0u7.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x6f56b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; ++i)\n    {\n        sum\
    \ += n % 2;\n        n /= 2;\n    }\n    return n == sum;\n}\nunittest\n{\n  \
    \  alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccwqn39p.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpccwqn39p.__unittest_L24_C1() [0x427abe]\n??:?
    void tmpccwqn39p.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0x361e9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++)\n    {\n\
    \        sum += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5211jp1_.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp5211jp1_.__unittest_L28_C1() [0x427a76]\n??:?
    void tmp5211jp1_.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xefc63554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpa9w_6wa4.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpa9w_6wa4.__unittest_L23_C1() [0x427aa6]\n??:?
    void tmpa9w_6wa4.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xb0900554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum % 2 == 0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (sum == n);\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn5rgb5d1.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpn5rgb5d1.__unittest_L27_C1() [0x427abe]\n??:?
    void tmpn5rgb5d1.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0xe96b6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nI believe this fails for `is_equal_to_sum_even(10L)`, which returns\
    \ `true` but should return `false`.\n<|/ c |>\n<| c |>\nYes, you're right. I missed\
    \ that case. I'll fix it.\n<|/ c |>\n<| c |>\nThis fails for `is_equal_to_sum_even(11L)`,\
    \ which returns `true` but should return `false`.\n<|/ c |>\n<| c |>\nYes, you're\
    \ right. I missed that case. I'll fix it.\n<|/ c |>\n<| c |>\nThis fails for `is_equal_to_sum_even(12L)`,\
    \ which returns `true` but should return `false`.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcjc7jl8a.d(23): Error: declaration expected, not `<`\n/tmp/tmpcjc7jl8a.d(29):
    Error: unterminated character constant\n/tmp/tmpcjc7jl8a.d(29): Error: unterminated
    character constant\n/tmp/tmpcjc7jl8a.d(35): Error: unterminated character constant\n/tmp/tmpcjc7jl8a.d(35):
    Error: unterminated character constant\n/tmp/tmpcjc7jl8a.d(46): Error: declaration
    expected, not `assert`\n/tmp/tmpcjc7jl8a.d(47): Error: declaration expected, not
    `assert`\n/tmp/tmpcjc7jl8a.d(48): Error: declaration expected, not `assert`\n/tmp/tmpcjc7jl8a.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmpcjc7jl8a.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmpcjc7jl8a.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmpcjc7jl8a.d(52): Error: declaration expected, not `assert`\n/tmp/tmpcjc7jl8a.d(53):
    Error: declaration expected, not `assert`\n/tmp/tmpcjc7jl8a.d(54): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjc7jl8a.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= limit % 2;\n    }\n    return sum ==\
    \ n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcuusvmg9.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpcuusvmg9.__unittest_L23_C1() [0x427aaa]\n??:?
    void tmpcuusvmg9.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x59265554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n        if(sum == n)\n        {\n            return true;\n  \
    \      }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpunqzf4nz.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpunqzf4nz.__unittest_L27_C1() [0x427a89]\n??:?
    void tmpunqzf4nz.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x3c717554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    \n    while (i <= n)\n    {\n\
    \        sum += i;\n        i += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjwfalhxv.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpjwfalhxv.__unittest_L27_C1() [0x427a66]\n??:?
    void tmpjwfalhxv.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xbef47554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmposgefp_d.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmposgefp_d.__unittest_L28_C1() [0x427a99]\n??:?
    void tmposgefp_d.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0xf0408554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqzlnto_q.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpqzlnto_q.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpqzlnto_q.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x67fd6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tlong i = 1;\n\t\n\twhile (i <= n)\n\t{\n\t\tsum +=\
    \ i;\n\t\ti += 2;\n\t}\n\t\n\treturn (sum == n);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmprzf952i4.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmprzf952i4.__unittest_L27_C1() [0x427a66]\n??:?
    void tmprzf952i4.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x259cb554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i=1; i<=n; i++)\n    {\n        if((i%2)\
    \ == 0)\n            sum += i;\n    }\n    return (sum == 4);\n}\n</code>\n<|/\
    \ a tags=c++,algorithm |>\n<| c |>\nThis is not correct. `is_equal_to_sum_even`\
    \ will return true for `is_equal_to_sum_even(10L)` but false for `is_equal_to_sum_even(12L)`.\n\
    <|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c |>\n<| c |>\n: Thanks, I fixed\
    \ it.\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c |>\n<| c |>\n: Thanks,\
    \ I fixed it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <cmath>\nusing namespace std;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmf89ufi2.d(24): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf89ufi2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit & -limit);\n    }\n    \n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp9qgr9hd9.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp9qgr9hd9.__unittest_L26_C1() [0x427a66]\n??:?
    void tmp9qgr9hd9.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xe958a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        sum +=\
    \ i;\n        if(sum % 2 == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThis doesn't\
    \ work. Try it with `is_equal_to_sum_even(5L)`.\n<|/ c |>\n<| c |>\nYeah, I noticed\
    \ that and fixed it right after I posted it. I was just trying to get it to work\
    \ before I posted it.\n<|/ c |>\n<| c |>\nI added a version that works with negative\
    \ numbers too.\n<|/ c |>\n<| c |>\nI added a version that works with negative\
    \ numbers too.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptwm4wvg3.d(25): Error: declaration expected, not `<`\n/tmp/tmptwm4wvg3.d(28):
    Error: unterminated character constant\n/tmp/tmptwm4wvg3.d(45): Error: declaration
    expected, not `assert`\n/tmp/tmptwm4wvg3.d(46): Error: declaration expected, not
    `assert`\n/tmp/tmptwm4wvg3.d(47): Error: declaration expected, not `assert`\n/tmp/tmptwm4wvg3.d(48):
    Error: declaration expected, not `assert`\n/tmp/tmptwm4wvg3.d(49): Error: declaration
    expected, not `assert`\n/tmp/tmptwm4wvg3.d(50): Error: declaration expected, not
    `assert`\n/tmp/tmptwm4wvg3.d(51): Error: declaration expected, not `assert`\n/tmp/tmptwm4wvg3.d(52):
    Error: declaration expected, not `assert`\n/tmp/tmptwm4wvg3.d(53): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwm4wvg3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i *= 2)\n        sum\
    \ += i;\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\n\
    This doesn't work. Try it with `is_equal_to_sum_even(10L)`.\n<|/ c |>\n<| c |>\n\
    : It works. Try it with `is_equal_to_sum_even(10L)`.\n<|/ c |>\n<| c |>\n: It\
    \ works. Try it with `is_equal_to_sum_even(10L)`.\n<|/ c |>\n<| c |>\n: It works.\
    \ Try it with `is_equal_to_sum_even(10L)`.\n<|/ c |>\n<| c |>\n: It works. Try\
    \ it with `is_equal_to_sum_even(10L)`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_2l_wglk.d(21): Error: declaration expected, not `<`\n/tmp/tmp_2l_wglk.d(24):
    Error: unterminated character constant\n/tmp/tmp_2l_wglk.d(44): Error: declaration
    expected, not `assert`\n/tmp/tmp_2l_wglk.d(45): Error: declaration expected, not
    `assert`\n/tmp/tmp_2l_wglk.d(46): Error: declaration expected, not `assert`\n/tmp/tmp_2l_wglk.d(47):
    Error: declaration expected, not `assert`\n/tmp/tmp_2l_wglk.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmp_2l_wglk.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmp_2l_wglk.d(50): Error: declaration expected, not `assert`\n/tmp/tmp_2l_wglk.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmp_2l_wglk.d(52): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_2l_wglk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i=1; i<=n; i+=2)\n        sum += i;\n\
    \    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpi436bqx3.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpi436bqx3.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpi436bqx3.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xdaf13554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; ++i)\n    {\n        sum\
    \ += 2L*i;\n        if(sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv8eh9qcb.d(25): Error: declaration expected, not `<`\n/tmp/tmpv8eh9qcb.d(33):
    Error: declaration expected, not `assert`\n/tmp/tmpv8eh9qcb.d(34): Error: declaration
    expected, not `assert`\n/tmp/tmpv8eh9qcb.d(35): Error: declaration expected, not
    `assert`\n/tmp/tmpv8eh9qcb.d(36): Error: declaration expected, not `assert`\n/tmp/tmpv8eh9qcb.d(37):
    Error: declaration expected, not `assert`\n/tmp/tmpv8eh9qcb.d(38): Error: declaration
    expected, not `assert`\n/tmp/tmpv8eh9qcb.d(39): Error: declaration expected, not
    `assert`\n/tmp/tmpv8eh9qcb.d(40): Error: declaration expected, not `assert`\n/tmp/tmpv8eh9qcb.d(41):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv8eh9qcb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum +=\
    \ i;\n        if(sum % 2 == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for the answer.\
    \ I am not allowed to use any libraries other than std.\n<|/ c |>\n<| c |>\nI\
    \ added a solution that uses only std.\n<|/ c |>\n<| a dscore=1 |>\nI believe\
    \ this can be solved using recursion. \n<code>\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqwi9omou.d(25): Error: declaration expected, not `<`\n/tmp/tmpqwi9omou.d(40):
    Error: declaration expected, not `assert`\n/tmp/tmpqwi9omou.d(41): Error: declaration
    expected, not `assert`\n/tmp/tmpqwi9omou.d(42): Error: declaration expected, not
    `assert`\n/tmp/tmpqwi9omou.d(43): Error: declaration expected, not `assert`\n/tmp/tmpqwi9omou.d(44):
    Error: declaration expected, not `assert`\n/tmp/tmpqwi9omou.d(45): Error: declaration
    expected, not `assert`\n/tmp/tmpqwi9omou.d(46): Error: declaration expected, not
    `assert`\n/tmp/tmpqwi9omou.d(47): Error: declaration expected, not `assert`\n/tmp/tmpqwi9omou.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwi9omou.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tsum += n;\n\
    \t\tif (sum % 2 == 0)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5z27gxjq.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmp5z27gxjq.__unittest_L27_C1() [0x427a72]\n??:?
    void tmp5z27gxjq.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x406f0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdgwta87l.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpdgwta87l.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmpdgwta87l.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xb8531554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long int sum = 0;\n    for(int i = 1; i < n; i+=2)\n    {\n\
    \        sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5nggavg4.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5nggavg4.d(16): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nggavg4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    \n    while(i\
    \ <= n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n \
    \   \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp06lny5wx.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp06lny5wx.__unittest_L29_C1() [0x427a7a]\n??:?
    void tmp06lny5wx.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x9f6e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = (long) sqrt(n);\n    for(long i\
    \ = 1; i < limit; ++i)\n    {\n        sum += i;\n        if(sum == n)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqym0ddwg.d(17): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqym0ddwg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = (long) sqrt(n);\n    for(long i\
    \ = 1; i < limit; i++)\n    {\n        sum += i;\n        if(sum == n)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_e3v7cop.d(17): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_e3v7cop.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit & -limit);\n    }\n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqtfve2ip.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqtfve2ip.__unittest_L25_C1() [0x427a66]\n??:?
    void tmpqtfve2ip.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa3045554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t\tsum += i;\n\t\
    return (sum == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpebkxke0d.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpebkxke0d.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpebkxke0d.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x91c13554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit & -limit);\n    }\n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqtfve2ip.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqtfve2ip.__unittest_L25_C1() [0x427a66]\n??:?
    void tmpqtfve2ip.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa3045554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) \n    {\n      \
    \  sum += i;\n        if(sum > n) \n        {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n/*\nEvaluate whether the given number n can\
    \ be written as the sum of exactly 4 positive odd numbers\n    Example\n    >>>\
    \ is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n\
    \    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpssexzqvd.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpssexzqvd.__unittest_L38_C1() [0x427a6a]\n??:?
    void tmpssexzqvd.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x597e4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= limit & -limit;\n    }\n    return sum\
    \ == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphccu3e2t.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmphccu3e2t.__unittest_L25_C1() [0x427a66]\n??:?
    void tmphccu3e2t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5e91a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i=1; i<=n; i+=2)\n\t{\n\t\tsum += i;\n\t\
    \tif (sum == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n  \
    \  alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigm8z7p1.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpigm8z7p1.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmpigm8z7p1.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x201db554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    \n    while (i < n) {\n    \
    \    sum += i;\n        i += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj37oh5o2.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpj37oh5o2.__unittest_L26_C1() [0x427a85]\n??:?
    void tmpj37oh5o2.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5fa82554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    \n    while(i < n) \n    {\n        sum += i;\n        i += 2;\n    }\n \
    \   \n    while(j < n) \n    {\n        sum += j;\n        j += 2;\n    }\n  \
    \  \n    while(k <= n) \n    {\n        sum += k;\n        k += 2;\n    }\n  \
    \  \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp3pon0n97.d(47): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp3pon0n97.__unittest_L41_C1() [0x427aea]\n??:?
    void tmp3pon0n97.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0xd4314554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i+=2)\n    {\n      \
    \  sum += i;\n        if(sum == n)\n        {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0s9j1le1.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp0s9j1le1.__unittest_L27_C1() [0x427a89]\n??:?
    void tmp0s9j1le1.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xa6971554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (sum == n);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdjcct3t3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpdjcct3t3.__unittest_L25_C1() [0x427abe]\n??:?
    void tmpdjcct3t3.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0x4ee4f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum == (n * 4L);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpik2at10r.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpik2at10r.__unittest_L22_C1() [0x427aaa]\n??:?
    void tmpik2at10r.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x7e5f1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long sum = 0;\n    for(long long i = 1; i < n; i *= 2)\n  \
    \      sum += i;\n    return sum == n;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    Thanks for your answer. Your solution works but it is too slow. My solution takes\
    \ about 0.1 seconds for n = 100000 and yours takes about 0.3 seconds. I guess\
    \ it is because of the for loop. Do you know a faster way?\n<|/ c |>\n<| c |>\n\
    I added a faster solution\n<|/ c |>\n<| c |>\nThanks for your answer. I tried\
    \ your solution and it works but it is too slow. My solution takes about 0.1 seconds\
    \ for n = 100000 and yours takes about 0.3 seconds. I guess it is because of the\
    \ for loop. Do you know a faster way?\n<|/ c |>\n<| c |>\nI added a faster solution\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I tried your solution and it works\
    \ but it is too slow. My solution takes about 0.1 seconds for n = 100000 and yours\
    \ takes about 0.3 seconds. I guess it is because of the for loop. Do you know\
    \ a faster way?\n<|/ c |>\n<| a dscore=1 |>\nThe fastest solution I found is this\
    \ one:\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_3jomrda.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp_3jomrda.d(17): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp_3jomrda.d(21): Error: declaration expected, not
    `<`\n/tmp/tmp_3jomrda.d(45): Error: declaration expected, not `assert`\n/tmp/tmp_3jomrda.d(46):
    Error: declaration expected, not `assert`\n/tmp/tmp_3jomrda.d(47): Error: declaration
    expected, not `assert`\n/tmp/tmp_3jomrda.d(48): Error: declaration expected, not
    `assert`\n/tmp/tmp_3jomrda.d(49): Error: declaration expected, not `assert`\n/tmp/tmp_3jomrda.d(50):
    Error: declaration expected, not `assert`\n/tmp/tmp_3jomrda.d(51): Error: declaration
    expected, not `assert`\n/tmp/tmp_3jomrda.d(52): Error: declaration expected, not
    `assert`\n/tmp/tmp_3jomrda.d(53): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_3jomrda.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i=1; i<=n; i+=2)\n        sum += i;\n\
    \    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj7inmf7_.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmpj7inmf7_.__unittest_L21_C1() [0x427a62]\n??:?
    void tmpj7inmf7_.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b63]\n??:?
    __libc_start_main [0x119a6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = 4L;\n    for(long i = 2L; i <= limit;\
    \ i+=2)\n    {\n        sum += i;\n        if(sum == n)\n        {\n         \
    \   return true;\n        }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nThis fails for `is_equal_to_sum_even(8L)` because `sum` starts\
    \ at `0`.\n<|/ c |>\n<| c |>\nYes, I missed that one. Thanks for pointing it out.\
    \ Fixed now.\n<|/ c |>\n<| c |>\nI believe this fails for `is_equal_to_sum_even(8L)`\
    \ because `sum` starts at `0`.\n<|/ c |>\n<| c |>\nYes, I missed that one. Thanks\
    \ for pointing it out. Fixed now.\n<|/ c |>\n<| c |>\nI believe this fails for\
    \ `is_equal_to_sum_even(8L)` because `sum` starts at `0`.\n<|/ c |>\n<| a dscore=2\
    \ |>\nI believe this fails for is_equal_to_sum_even(8L) because sum starts at\
    \ 0.\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_boqb2sp.d(28): Error: declaration expected, not `<`\n/tmp/tmp_boqb2sp.d(52):
    Error: declaration expected, not `assert`\n/tmp/tmp_boqb2sp.d(53): Error: declaration
    expected, not `assert`\n/tmp/tmp_boqb2sp.d(54): Error: declaration expected, not
    `assert`\n/tmp/tmp_boqb2sp.d(55): Error: declaration expected, not `assert`\n/tmp/tmp_boqb2sp.d(56):
    Error: declaration expected, not `assert`\n/tmp/tmp_boqb2sp.d(57): Error: declaration
    expected, not `assert`\n/tmp/tmp_boqb2sp.d(58): Error: declaration expected, not
    `assert`\n/tmp/tmp_boqb2sp.d(59): Error: declaration expected, not `assert`\n/tmp/tmp_boqb2sp.d(60):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_boqb2sp.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long counter = 0;\n    \n\
    \    while (counter < limit)\n    {\n        sum += counter;\n        counter\
    \ += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqln0_5p7.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqln0_5p7.__unittest_L28_C1() [0x427a89]\n??:?
    void tmpqln0_5p7.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x63b46554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t}\n\treturn (sum == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdjndop6r.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpdjndop6r.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpdjndop6r.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5e11a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum % 4 == 0;\n}\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpyzce3wv1.d(41): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpyzce3wv1.__unittest_L34_C1() [0x427ad5]\n??:?
    void tmpyzce3wv1.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x65569554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n        if(sum == n)\n        {\n            return true;\n  \
    \      }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm,c |>\n\
    <| c |>\nThis is not the correct solution. `is_equal_to_sum_even` returns `true`\
    \ for `n = 4`, `n = 5`, `n = 6`, `n = 7`, `n = 8`, `n = 9`, `n = 10`, `n = 11`,\
    \ `n = 12`, `n = 13`, `n = 14`, `n = 15`, `n = 16`, `n = 17`, `n = 18`, `n = 19`,\
    \ `n = 20`, `n = 21`, `n = 22`, `n = 23`, `n = 24`, `n = 25`, `n = 26`, `n = 27`,\
    \ `n = 28`, `n = 29`, `n = 30`, `n = 31`, `n = 32`, `n = 33`, `n = 34`, `n = 35`,\
    \ `n = 36`, `n = 37`, `n = 38`, `n = 39`, `n = 40`, `n = 41`, `n = 42`, `n = 43`,\
    \ `n = 44`, `n = 45`, `n = 46`, `n = 47`, `n = 48`, `n = 49`, `n = 50`, `n = 51`,\
    \ `n = 52`, `n = 53`, `n = 54`, `n = 55`, `n = 56`, `n = 57`, `n = 58`, `n = 59`,\
    \ `n = 60`, `n = 61`, `n = 62`, `n = 63`, `n = 64`, `n = 65`, `n = 66`, `n = 67`,\
    \ `n = 68`, `n = 69`, `n = 70`, `n = 71`, `n = 72`, `n = 73`, `n = 74`, `n = 75`,\
    \ `n = 76`, `n = 77`, `n = 78`, `n = 79`, `n = 80`, `n = 81`, `n = 82`, `n = 83`,\
    \ `n = 84`, `n = 85`, `n = 86`, `n = 87`, `n = 88`, `n = 89`, `n = 90`, `n = 91`,\
    \ `n = 92`, `n = 93`, `n = 94`, `n = 95`, `n = 96`, `n = 97`, `n = 98`, `n = 99`,\
    \ `n = 100`, `n = 101`, `n = 102`, `n = 103`, `n = 104`, `n = 105`, `n = 106`,\
    \ `n = 107`, `n = 108`, `n = 109`, `n = 110`, `n = 111`, `n = 112`, `n = 113`,\
    \ `n = 114`, `n = 115`, `n = 116`, `n = 117`, `n = 118`, `n = 119`, `n = 120`,\
    \ `n = 121`, `n = 122`, `n = 123`, `n = 124`, `n = 125`, `n = 126`, `n = 127`,\
    \ `n = 128`, `n = 129`, `n = 130`, `n = 131`, `n = 132`, `n = 133`, `n = 134`,\
    \ `n = 135`, `n = 136`, `n = 137`, `n = 138`, `n = 139`, `n = 140`, `n = 141`,\
    \ `n = 142`, `n = \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp56ocncx0.d(27): Error: declaration expected, not `<`\n/tmp/tmp56ocncx0.d(30):
    Error: unterminated string constant starting at /tmp/tmp56ocncx0.d(30)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp56ocncx0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long limit2 = limit;\n \
    \   long limit3 = limit2;\n    long limit4 = limit3;\n    long limit5 = limit4;\n\
    \    long limit6 = limit5;\n    long limit7 = limit6;\n    long limit8 = limit7;\n\
    \    long limit9 = limit8;\n    long limit10 = limit9;\n    long limit11 = limit10;\n\
    \    long limit12 = limit11;\n    long limit13 = limit12;\n    long limit14 =\
    \ limit13;\n    long limit15 = limit14;\n    long limit16 = limit15;\n    long\
    \ limit17 = limit16;\n    long limit18 = limit17;\n    long limit19 = limit18;\n\
    \    long limit20 = limit19;\n    long limit21 = limit20;\n    long limit22 =\
    \ limit21;\n    long limit23 = limit22;\n    long limit24 = limit23;\n    long\
    \ limit25 = limit24;\n    long limit26 = limit25;\n    long limit27 = limit26;\n\
    \    long limit28 = limit27;\n    long limit29 = limit28;\n    long limit30 =\
    \ limit29;\n    long limit31 = limit30;\n    long limit32 = limit31;\n    long\
    \ limit33 = limit32;\n    long limit34 = limit33;\n    long limit35 = limit34;\n\
    \    long limit36 = limit35;\n    long limit37 = limit36;\n    long limit38 =\
    \ limit37;\n    long limit39 = limit38;\n    long limit40 = limit39;\n    long\
    \ limit41 = limit40;\n    long limit42 = limit41;\n    long limit43 = limit42;\n\
    \    long limit44 = limit43;\n    long limit45 = limit44;\n    long limit46 =\
    \ limit45;\n    long limit47 = limit46;\n    long limit48 = limit47;\n    long\
    \ limit49 = limit48;\n    long limit50 = limit49;\n    long limit51 = limit50;\n\
    \    long limit52 = limit51;\n    long limit53 = limit52;\n    long limit54 =\
    \ limit53;\n    long limit55 = limit54;\n    long limit56 = limit55;\n    long\
    \ limit57 = limit56;\n    long limit58 = limit57;\n    long limit59 = limit58;\n\
    \    long limit60 = limit59;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy47_jbr7.d(77): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy47_jbr7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) \n    {\n      \
    \  if((n % i) == 0)\n        {\n            sum += i;\n        }\n    }\n    return\
    \ sum == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpd0yhzn7q.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpd0yhzn7q.__unittest_L26_C1() [0x427a91]\n??:?
    void tmpd0yhzn7q.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x7f2c6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < 4; i++) {\n\t\tsum += n;\n\t\t\
    if (sum % 2 == 0)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpao_zxk7j.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpao_zxk7j.__unittest_L24_C1() [0x427a72]\n??:?
    void tmpao_zxk7j.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x1ea92554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ ++i)\n    {\n        sum += i;\n        if(sum == limit)\n        {\n      \
    \      return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphsbdf3nd.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmphsbdf3nd.__unittest_L28_C1() [0x427a89]\n??:?
    void tmphsbdf3nd.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x8355554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpabrohu2x.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpabrohu2x.__unittest_L22_C1() [0x427aa6]\n??:?
    void tmpabrohu2x.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7a683554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n        if(sum == n)\n        {\n            return true;\n  \
    \      }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nThis doesn't work. Try it with `is_equal_to_sum_even(8)`.\n<|/ c |>\n\
    <| c |>\nIt works fine for me. Try it with `is_equal_to_sum_even(8)`.\n<|/ c |>\n\
    <| c |>\nIt doesn't work for `is_equal_to_sum_even(8)`. Try it with `is_equal_to_sum_even(8)`.\n\
    <|/ c |>\n<| c |>\nIt works for me. Try it with `is_equal_to_sum_even(8)`.\n<|/\
    \ c |>\n<| c |>\nIt works for me too. Try it with `is_equal_to_sum_even(8)`.\n\
    <|/ c |>\n<| a tags=c++,algorithm |>\n<code>\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpal5uat5t.d(27): Error: declaration expected, not `<`\n/tmp/tmpal5uat5t.d(30):
    Error: unterminated character constant\n/tmp/tmpal5uat5t.d(36): Error: unterminated
    character constant\n/tmp/tmpal5uat5t.d(50): Error: declaration expected, not `assert`\n/tmp/tmpal5uat5t.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpal5uat5t.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpal5uat5t.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpal5uat5t.d(54): Error: declaration expected, not `assert`\n/tmp/tmpal5uat5t.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmpal5uat5t.d(56): Error: declaration
    expected, not `assert`\n/tmp/tmpal5uat5t.d(57): Error: declaration expected, not
    `assert`\n/tmp/tmpal5uat5t.d(58): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpal5uat5t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i < n; ++i)\n    {\n        sum\
    \ += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjwhxqe0h.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpjwhxqe0h.__unittest_L27_C1() [0x427a72]\n??:?
    void tmpjwhxqe0h.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x2d44b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpovvwveg_.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpovvwveg_.__unittest_L25_C1() [0x427a72]\n??:?
    void tmpovvwveg_.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x1f008554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    \n    while(i\
    \ <= n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n \
    \   \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp06lny5wx.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp06lny5wx.__unittest_L29_C1() [0x427a7a]\n??:?
    void tmp06lny5wx.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x9f6e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n        if(sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpbk_c3s2i.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpbk_c3s2i.__unittest_L25_C1() [0x427a89]\n??:?
    void tmpbk_c3s2i.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x60ad8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; ++i)\n    {\n        sum\
    \ += i;\n        if(sum == n)\n            return true;\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptre2itkr.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmptre2itkr.__unittest_L25_C1() [0x427a81]\n??:?
    void tmptre2itkr.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b63]\n??:?
    __libc_start_main [0x5f411554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum > n)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps_r397ty.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmps_r397ty.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmps_r397ty.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xa2091554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n        if(sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThis algorithm is\
    \ O(n^2). Not very efficient.\n<|/ c |>\n<| c |>\nYes, I know. But the OP asked\
    \ for O(n) solution. So, I posted this solution. :)\n<|/ c |>\n<| c |>\nThe OP\
    \ asked for O(n) solution. So, I posted this solution. :)\n<|/ c |>\n<| c |>\n\
    This algorithm is O(n^2) because you iterate over all even numbers from 1 to n.\
    \ Not very efficient.\n<|/ c |>\n<| c |>\nYes, I know. But the OP asked for O(n)\
    \ solution. So, I posted this solution. :)\n<|/ c |>\n<| a |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwklz2ww8.d(25): Error: declaration expected, not `<`\n/tmp/tmpwklz2ww8.d(48):
    Error: declaration expected, not `assert`\n/tmp/tmpwklz2ww8.d(49): Error: declaration
    expected, not `assert`\n/tmp/tmpwklz2ww8.d(50): Error: declaration expected, not
    `assert`\n/tmp/tmpwklz2ww8.d(51): Error: declaration expected, not `assert`\n/tmp/tmpwklz2ww8.d(52):
    Error: declaration expected, not `assert`\n/tmp/tmpwklz2ww8.d(53): Error: declaration
    expected, not `assert`\n/tmp/tmpwklz2ww8.d(54): Error: declaration expected, not
    `assert`\n/tmp/tmpwklz2ww8.d(55): Error: declaration expected, not `assert`\n/tmp/tmpwklz2ww8.d(56):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwklz2ww8.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    \n    while(limit > 0)\n\
    \    {\n        sum += limit;\n        limit -= (limit & -limit);\n    }\n   \
    \ \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp17grmnve.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp17grmnve.__unittest_L27_C1() [0x427a66]\n??:?
    void tmp17grmnve.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x1d927554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum == n)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp106gfm8w.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp106gfm8w.__unittest_L27_C1() [0x427a6a]\n??:?
    void tmp106gfm8w.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x3f1e2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = (long)std.math.remainder(n, 2L);\n\
    \    for(long i = 2L; i <= limit; i += 2L)\n    {\n        sum += i;\n       \
    \ if(sum == n)\n        {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz0ri4bvq.d(17): Error: C style cast illegal, use `cast(long)std.math.remainder(n,
    2L)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0ri4bvq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 2; i <= n; i+=2)\n    {\n      \
    \  sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpfw7r92kr.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpfw7r92kr.__unittest_L23_C1() [0x427aa6]\n??:?
    void tmpfw7r92kr.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x8c75d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long sum2 = 0;\n    long sum3 = 0;\n    \n    while(i <= n)\n    {\n    \
    \    sum += i;\n        i += 2;\n    }\n    \n    while(j <= n)\n    {\n     \
    \   sum2 += j;\n        j += 2;\n    }\n    \n    while(k <= n)\n    {\n     \
    \   sum3 += k;\n        k += 2;\n    }\n    \n    if(sum == sum2 && sum == sum3)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n/*\nEvaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwo8j3260.d(65): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e2d]\n??:? void tmpwo8j3260.__unittest_L61_C1() [0x427abe]\n??:?
    void tmpwo8j3260.__modtest() [0x427bac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42827c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428203]\n??:? _d_run_main [0x42816e]\n??:? main [0x427bbf]\n??:?
    __libc_start_main [0x88175554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long sum = 0;\n    long long limit = (long long)(sqrt(double(n)));\n\
    \    long long limit2 = limit * limit;\n    \n    for(long long i = 1; i < limit2;\
    \ i++)\n    {\n        sum += i;\n        if(sum == n)\n        {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5jevybu_.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmp5jevybu_.d(17): Error: use `long` for a 64 bit integer
    instead of `long long`\n/tmp/tmp5jevybu_.d(17): Error: found `long` when expecting
    `.` following long\n/tmp/tmp5jevybu_.d(17): Error: found `)` when expecting identifier
    following `long`.\n/tmp/tmp5jevybu_.d(17): Error: found `;` when expecting `)`\n/tmp/tmp5jevybu_.d(18):
    Error: semicolon expected, not `long`\n/tmp/tmp5jevybu_.d(18): Error: use `long`
    for a 64 bit integer instead of `long long`\n/tmp/tmp5jevybu_.d(20): Error: use
    `long` for a 64 bit integer instead of `long long`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp5jevybu_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2) \n\t{\n\t\tsum += i;\n\
    \t\tif (sum > n) \n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqcrr3_n4.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqcrr3_n4.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmpqcrr3_n4.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xf98ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nThe question was about a mathematical solution, not a programming\
    \ solution. Your answer does not answer the question.\n<|/ c |>\n<| c |>\nThe\
    \ question was about a mathematical solution, not a programming solution. Your\
    \ answer does not answer the question.\n<|/ c |>\n<| c |>\nThe question was about\
    \ a mathematical solution, not a programming solution. Your answer does not answer\
    \ the question.\n<|/ c |>\n<| c |>\nThe question was about a mathematical solution,\
    \ not a programming solution. Your answer does not answer the question.\n<|/ c\
    \ |>\n<| c |>\nThe question was about a mathematical solution, not a programming\
    \ solution. Your answer does not answer the question.\n<|/ c |>\n<| a tags=c++,algorithm,math\
    \ |>\nI believe that this is what you are looking for:\n<code>\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpocjponio.d(23): Error: declaration expected, not `<`\n/tmp/tmpocjponio.d(47):
    Error: declaration expected, not `assert`\n/tmp/tmpocjponio.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmpocjponio.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmpocjponio.d(50): Error: declaration expected, not `assert`\n/tmp/tmpocjponio.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpocjponio.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpocjponio.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpocjponio.d(54): Error: declaration expected, not `assert`\n/tmp/tmpocjponio.d(55):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocjponio.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdgwta87l.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpdgwta87l.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmpdgwta87l.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xb8531554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum +=\
    \ i;\n        if(sum % 2 == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnwngl2wr.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpnwngl2wr.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpnwngl2wr.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xf9994554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; ++i)\n    {\n        sum\
    \ += i;\n        if(sum == n)\n            return true;\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptre2itkr.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmptre2itkr.__unittest_L25_C1() [0x427a81]\n??:?
    void tmptre2itkr.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b63]\n??:?
    __libc_start_main [0x5f411554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 1; i <= n; i++)\n    {\n\
    \        sum += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2x29brgl.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp2x29brgl.__unittest_L28_C1() [0x427a7a]\n??:?
    void tmp2x29brgl.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0xa3868554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 1; i < n; i++){\n        sum += i;\n\
    \        if(sum % 2 == 0){\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp7_bxdf9v.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp7_bxdf9v.__unittest_L25_C1() [0x427a76]\n??:?
    void tmp7_bxdf9v.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xc398f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++){\n        sum += i;\n\
    \        if(sum == n){\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThanks for your answer.\
    \ I think your solution is very good. But the problem is that I cannot use any\
    \ library functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write my own functions. I should write my own functions. I should write\
    \ my own functions. I should write my own functions. I should write my own functions.\
    \ I should write \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi5uql9q6.d(25): Error: declaration expected, not `<`\n/tmp/tmpi5uql9q6.d(33):
    Error: declaration expected, not `assert`\n/tmp/tmpi5uql9q6.d(34): Error: declaration
    expected, not `assert`\n/tmp/tmpi5uql9q6.d(35): Error: declaration expected, not
    `assert`\n/tmp/tmpi5uql9q6.d(36): Error: declaration expected, not `assert`\n/tmp/tmpi5uql9q6.d(37):
    Error: declaration expected, not `assert`\n/tmp/tmpi5uql9q6.d(38): Error: declaration
    expected, not `assert`\n/tmp/tmpi5uql9q6.d(39): Error: declaration expected, not
    `assert`\n/tmp/tmpi5uql9q6.d(40): Error: declaration expected, not `assert`\n/tmp/tmpi5uql9q6.d(41):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi5uql9q6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n/*\nEvaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_3wso8jw.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp_3wso8jw.__unittest_L39_C1() [0x427a99]\n??:?
    void tmp_3wso8jw.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x44fde554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit & -limit);\n    }\n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqtfve2ip.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqtfve2ip.__unittest_L25_C1() [0x427a66]\n??:?
    void tmpqtfve2ip.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa3045554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 0; i <= limit;\
    \ i += 2)\n    {\n        sum += i;\n        if(sum == n)\n        {\n       \
    \     return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn3xla8qi.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpn3xla8qi.__unittest_L28_C1() [0x427a95]\n??:?
    void tmpn3xla8qi.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xba6c1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    \n    while (i < n) {\n    \
    \    sum += i;\n        i += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj37oh5o2.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpj37oh5o2.__unittest_L26_C1() [0x427a85]\n??:?
    void tmpj37oh5o2.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5fa82554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tif (i % 2 ==\
    \ 0) {\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn (sum == 4);\n}\nunittest\n{\n  \
    \  alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2kfvv29d.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmp2kfvv29d.__unittest_L24_C1() [0x427ab2]\n??:?
    void tmp2kfvv29d.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x3e784554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long int sum = 0;\n    for(long long int i = 0; i <= n; i+=2)\n\
    \        sum += i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfyfofum7.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpfyfofum7.d(16): Error: no identifier for declarator `long`\n/tmp/tmpfyfofum7.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpfyfofum7.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpfyfofum7.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmpfyfofum7.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpfyfofum7.d(17): Error: found
    `0` when expecting `;` following `for` condition\n/tmp/tmpfyfofum7.d(17): Error:
    expression expected, not `;`\n/tmp/tmpfyfofum7.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmpfyfofum7.d(17): Error: found `<=` instead of statement\n/tmp/tmpfyfofum7.d(17):
    Error: found `)` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpfyfofum7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    while(i <=\
    \ n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n    return\
    \ sum == n;\n}\n/*\nEvaluate whether the given number n can be written as the\
    \ sum of exactly 4 positive odd numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n\
    \    false\n    >>> is_equal_to_sum_odd(6L)\n    false\n    >>> is_equal_to_sum_odd(8L)\n\
    \    true\n    \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqeqpa0r3.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpqeqpa0r3.__unittest_L38_C1() [0x427a7a]\n??:?
    void tmpqeqpa0r3.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x78b69554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    \n    while(i\
    \ <= n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n \
    \   \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp06lny5wx.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp06lny5wx.__unittest_L29_C1() [0x427a7a]\n??:?
    void tmp06lny5wx.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x9f6e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tif (n % i ==\
    \ 0) {\n\t\t\tsum += i;\n\t\t\tif (sum == 4)\n\t\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpx1f29mg4.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpx1f29mg4.__unittest_L26_C1() [0x427ab6]\n??:?
    void tmpx1f29mg4.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xd9bb4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum > n)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps_r397ty.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmps_r397ty.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmps_r397ty.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xa2091554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += std.math.pow(2, i);\n    }\n    return n == sum;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphvtoti9a.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e9d]\n??:? void tmphvtoti9a.__unittest_L23_C1() [0x427aea]\n??:?
    void tmphvtoti9a.__modtest() [0x427c20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbc3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa56]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa2d]\n??:? runModuleUnitTests [0x42b999]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428273]\n??:? _d_run_main [0x4281de]\n??:? main [0x427c33]\n??:?
    __libc_start_main [0x60fbe554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n     \
    \   sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppacqvwef.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmppacqvwef.__unittest_L25_C1() [0x427a66]\n??:?
    void tmppacqvwef.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xdd72c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i += 2)\n    {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nThis is not the correct solution. Try it with `n = 4L`.\n<|/ c\
    \ |>\n<| c |>\n: I missed that requirement. Thanks for pointing it out. I've updated\
    \ the answer.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't require any\
    \ loops.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't require any loops.\n\
    <|/ c |>\n<| c |>\n: I added a solution that doesn't require any loops.\n<|/ c\
    \ |>\n<| a tags=c++,algorithm,math |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0hhfvr_.d(23): Error: declaration expected, not `<`\n/tmp/tmpr0hhfvr_.d(29):
    Error: unterminated character constant\n/tmp/tmpr0hhfvr_.d(32): Error: unterminated
    character constant\n/tmp/tmpr0hhfvr_.d(35): Error: unterminated character constant\n/tmp/tmpr0hhfvr_.d(38):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpr0hhfvr_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcuusvmg9.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpcuusvmg9.__unittest_L23_C1() [0x427aaa]\n??:?
    void tmpcuusvmg9.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x59265554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 1; i < n; i++)\n    {\n        sum\
    \ += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8uwtkaax.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp8uwtkaax.__unittest_L27_C1() [0x427a76]\n??:?
    void tmp8uwtkaax.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x88f82554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\tif (sum > 4) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmph9yoa4g_.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmph9yoa4g_.__unittest_L27_C1() [0x427ab6]\n??:?
    void tmph9yoa4g_.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x62636554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) \n    {\n      \
    \  sum += i;\n        if(sum == n) return true;\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwsy_lpg4.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpwsy_lpg4.__unittest_L24_C1() [0x427a6a]\n??:?
    void tmpwsy_lpg4.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x31075554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i <= n; i++) {\n        sum +=\
    \ i;\n        if(sum % 2 == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8xgs4voq.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmp8xgs4voq.__unittest_L25_C1() [0x427a72]\n??:?
    void tmp8xgs4voq.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0xe5aab554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    \n    while (i <= n)\n    {\n\
    \        sum += i;\n        i += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjwfalhxv.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpjwfalhxv.__unittest_L27_C1() [0x427a66]\n??:?
    void tmpjwfalhxv.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xbef47554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ doesn't work for negative numbers. `is_equal_to_sum_even(-4L)` returns `true`\
    \ but `is_equal_to_sum_even(-8L)` returns `false`.\n<|/ c |>\n<| c |>\nYes, I\
    \ know. I was just trying to give a general solution. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI added a version that works for negative numbers. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `is_equal_to_sum_even(-4L)` returns `true` but `is_equal_to_sum_even(-8L)` returns\
    \ `false`.\n<|/ c |>\n<| c |>\nI added a version that works for negative numbers.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzzjd4j_s.d(23): Error: declaration expected, not `<`\n/tmp/tmpzzjd4j_s.d(26):
    Error: unterminated character constant\n/tmp/tmpzzjd4j_s.d(35): Error: unterminated
    character constant\n/tmp/tmpzzjd4j_s.d(46): Error: declaration expected, not `assert`\n/tmp/tmpzzjd4j_s.d(47):
    Error: declaration expected, not `assert`\n/tmp/tmpzzjd4j_s.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmpzzjd4j_s.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmpzzjd4j_s.d(50): Error: declaration expected, not `assert`\n/tmp/tmpzzjd4j_s.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpzzjd4j_s.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpzzjd4j_s.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpzzjd4j_s.d(54): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpzzjd4j_s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t}\n\treturn (sum == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdjndop6r.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpdjndop6r.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpdjndop6r.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5e11a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    \n    while(i\
    \ < n)\n    {\n        sum += i;\n        i += 2;\n        j += 2;\n    }\n  \
    \  \n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkr_9gfn6.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpkr_9gfn6.__unittest_L29_C1() [0x427a7a]\n??:?
    void tmpkr_9gfn6.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x5211e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) {\n        sum +=\
    \ i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4_1tqdrb.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp4_1tqdrb.__unittest_L22_C1() [0x427a66]\n??:?
    void tmp4_1tqdrb.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5ae20554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit & -limit);\n    }\n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqtfve2ip.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpqtfve2ip.__unittest_L25_C1() [0x427a66]\n??:?
    void tmpqtfve2ip.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa3045554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += 2L * i;\n        if(sum > n)\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb497h1hk.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpb497h1hk.__unittest_L25_C1() [0x427aa6]\n??:?
    void tmpb497h1hk.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x3395b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = (long)std.math.remainder(n, 2L);\n\
    \    for(long i = 1L; i <= limit; ++i)\n    {\n        sum += i;\n        if(sum\
    \ == n)\n        {\n            return true;\n        }\n    }\n    return false;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,algorithm |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk43mgntb.d(17): Error: C style cast illegal, use `cast(long)std.math.remainder(n,
    2L)`\n/tmp/tmpk43mgntb.d(28): Error: declaration expected, not `<`\n/tmp/tmpk43mgntb.d(36):
    Error: declaration expected, not `assert`\n/tmp/tmpk43mgntb.d(37): Error: declaration
    expected, not `assert`\n/tmp/tmpk43mgntb.d(38): Error: declaration expected, not
    `assert`\n/tmp/tmpk43mgntb.d(39): Error: declaration expected, not `assert`\n/tmp/tmpk43mgntb.d(40):
    Error: declaration expected, not `assert`\n/tmp/tmpk43mgntb.d(41): Error: declaration
    expected, not `assert`\n/tmp/tmpk43mgntb.d(42): Error: declaration expected, not
    `assert`\n/tmp/tmpk43mgntb.d(43): Error: declaration expected, not `assert`\n/tmp/tmpk43mgntb.d(44):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk43mgntb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i=1; i<=n; i+=2)\n    {\n        sum\
    \ += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwy177bmp.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpwy177bmp.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpwy177bmp.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x9f6fb554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=c++,algorithm |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpply3785c.d(23): Error: declaration expected, not `<`\n/tmp/tmpply3785c.d(31):
    Error: declaration expected, not `assert`\n/tmp/tmpply3785c.d(32): Error: declaration
    expected, not `assert`\n/tmp/tmpply3785c.d(33): Error: declaration expected, not
    `assert`\n/tmp/tmpply3785c.d(34): Error: declaration expected, not `assert`\n/tmp/tmpply3785c.d(35):
    Error: declaration expected, not `assert`\n/tmp/tmpply3785c.d(36): Error: declaration
    expected, not `assert`\n/tmp/tmpply3785c.d(37): Error: declaration expected, not
    `assert`\n/tmp/tmpply3785c.d(38): Error: declaration expected, not `assert`\n/tmp/tmpply3785c.d(39):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpply3785c.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ ++i)\n    {\n        sum += i;\n        if(sum == limit)\n        {\n      \
    \      return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmphsbdf3nd.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmphsbdf3nd.__unittest_L28_C1() [0x427a89]\n??:?
    void tmphsbdf3nd.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x8355554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i += 2)\n\t{\n\t\tsum +=\
    \ i;\n\t\tif (sum == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppak232bu.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmppak232bu.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmppak232bu.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x694ac554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= (limit % 2 == 0) ? 1 : 0;\n    }\n  \
    \  return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    while(i <= n)\n    {\n     \
    \   sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmppacqvwef.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmppacqvwef.__unittest_L25_C1() [0x427a66]\n??:?
    void tmppacqvwef.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xdd72c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tif (n % i ==\
    \ 0) {\n\t\t\tsum += i;\n\t\t\tif (sum == 4)\n\t\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpx1f29mg4.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpx1f29mg4.__unittest_L26_C1() [0x427ab6]\n??:?
    void tmpx1f29mg4.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xd9bb4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ i += 2)\n    {\n        sum += i;\n        if(sum > limit)\n        {\n    \
    \        return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp12t7i2o1.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp12t7i2o1.__unittest_L28_C1() [0x427a6a]\n??:?
    void tmp12t7i2o1.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x1e235554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i += 2)\n\t{\n\t\tsum +=\
    \ i;\n\t}\n\treturn (sum == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpu3ycarc2.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpu3ycarc2.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpu3ycarc2.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xc64c0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    while(i < n)\n    {\n      \
    \  sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp1i9s08_k.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp1i9s08_k.__unittest_L25_C1() [0x427a85]\n??:?
    void tmp1i9s08_k.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x8eda0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tif (n % i ==\
    \ 0) {\n\t\t\tsum += i;\n\t\t\tif (sum == 4) {\n\t\t\t\treturn true;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvdw01ovo.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpvdw01ovo.__unittest_L27_C1() [0x427ab6]\n??:?
    void tmpvdw01ovo.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x84125554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 2; i <= n; i += 2)\n   \
    \ {\n        sum += i;\n        if(sum == n)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nI didn't know that `std::next_permutation` existed. I think this could\
    \ be a good solution. I'll try it out and let you know how it goes. Thanks!\n\
    <|/ c |>\n<| c |>\nThis algorithm is O(n^2) which is very inefficient.\n<|/ c\
    \ |>\n<| c |>\n: I agree, but I thought that OP was looking for an algorithm that\
    \ would work for any positive integer. Also, I think this algorithm is more readable\
    \ than the one I proposed (which I didn't even think of before).\n<|/ c |>\n<|\
    \ c |>\n: I agree, but I thought that OP was looking for an algorithm that would\
    \ work for any positive integer. Also, I think this algorithm is more readable\
    \ than the one I proposed (which I didn't even think of before).\n<|/ c |>\n<|\
    \ c |>\n: I agree, but I thought that OP was looking for an algorithm that would\
    \ work for any positive integer. Also, I think this algorithm is more readable\
    \ than the one I proposed (which I didn't even think of before).\n<|/ c |>\n<|\
    \ a tags=c++,algorithm |>\nI believe that you can solve this problem in O(n) time\
    \ by using a modified version of Knuth's Algorithm X. \nThe modified version of\
    \ Knuth's Algorithm X can be found here: http://www.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html\n\
    The algorithm is as follows:\n<code>\nAlgorithm X (for permutations)\nInput: A[1..n]\
    \ of integers\nOutput: A[1..n] of integers\n1. Let P[1..n] be the permutation\
    \ that results from swapping A[1] with A[n]\n2. Let i be the smallest integer\
    \ such that A[i] > A[i+1]\n3. Let j be the smallest integer such that A[j] > A[i]\n\
    4. Let k be the smallest integer such that A[k] > A[j]\n5. Let l be the smallest\
    \ integer such that A[l] > A[k]\n6. Let m be the smallest integer such that A[m]\
    \ > A[l]\n7. Let n be the smallest integer such that A[n] > A[m]\n\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnqiefcdv.d(28): Error: declaration expected, not `<`\n/tmp/tmpnqiefcdv.d(31):
    Error: unterminated character constant\n/tmp/tmpnqiefcdv.d(31): Error: unterminated
    character constant\n/tmp/tmpnqiefcdv.d(37): Error: unterminated character constant\n/tmp/tmpnqiefcdv.d(40):
    Error: unterminated character constant\n/tmp/tmpnqiefcdv.d(43): Error: unterminated
    character constant\n/tmp/tmpnqiefcdv.d(46): Error: unterminated character constant\n/tmp/tmpnqiefcdv.d(47):
    Error: unterminated character constant\n/tmp/tmpnqiefcdv.d(65): Error: declaration
    expected, not `assert`\n/tmp/tmpnqiefcdv.d(66): Error: declaration expected, not
    `assert`\n/tmp/tmpnqiefcdv.d(67): Error: declaration expected, not `assert`\n/tmp/tmpnqiefcdv.d(68):
    Error: declaration expected, not `assert`\n/tmp/tmpnqiefcdv.d(69): Error: declaration
    expected, not `assert`\n/tmp/tmpnqiefcdv.d(70): Error: declaration expected, not
    `assert`\n/tmp/tmpnqiefcdv.d(71): Error: declaration expected, not `assert`\n/tmp/tmpnqiefcdv.d(72):
    Error: declaration expected, not `assert`\n/tmp/tmpnqiefcdv.d(73): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnqiefcdv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nI believe this fails for `is_equal_to_sum_even(8L)` as `sum` will\
    \ equal `8` but `i` will equal `7`.\n<|/ c |>\n<| c |>\nYes, you are right. I\
    \ missed that case. Thanks for pointing it out. I'll fix it.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I'm sorry I didn't mention this in my question but I'm\
    \ looking for a solution that doesn't involve looping through every even number\
    \ from 1 to n. I'm looking for a mathematical solution which doesn't involve looping\
    \ through every even number from 1 to n.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't involve looping through every even number from 1 to n. Hope it\
    \ helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm sorry I didn't mention\
    \ this in my question but I'm looking for a solution that doesn't involve looping\
    \ through every even number from 1 to n. I'm looking for a mathematical solution\
    \ which doesn't involve looping through every even number from 1 to n.\n<|/ c\
    \ |>\n<| a dscore=0 |>\nThe sum of 4 positive even numbers is equal to the number\
    \ itself. So you can just check if n is equal to n+n+n+n. \n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps__nj8zy.d(23): Error: declaration expected, not `<`\n/tmp/tmps__nj8zy.d(29):
    Error: unterminated character constant\n/tmp/tmps__nj8zy.d(32): Error: unterminated
    character constant\n/tmp/tmps__nj8zy.d(32): Error: unterminated character constant\n/tmp/tmps__nj8zy.d(32):
    Error: unterminated character constant\n/tmp/tmps__nj8zy.d(32): Error: unterminated
    character constant\n/tmp/tmps__nj8zy.d(32): Error: unterminated character constant\n/tmp/tmps__nj8zy.d(32):
    Error: unterminated character constant\n/tmp/tmps__nj8zy.d(35): Error: unterminated
    character constant\n/tmp/tmps__nj8zy.d(38): Error: unterminated character constant\n/tmp/tmps__nj8zy.d(38):
    Error: unterminated character constant\n/tmp/tmps__nj8zy.d(38): Error: unterminated
    character constant\n/tmp/tmps__nj8zy.d(38): Error: unterminated character constant\n/tmp/tmps__nj8zy.d(38):
    Error: unterminated character constant\n/tmp/tmps__nj8zy.d(38): Error: unterminated
    character constant\n/tmp/tmps__nj8zy.d(47): Error: declaration expected, not `assert`\n/tmp/tmps__nj8zy.d(48):
    Error: declaration expected, not `assert`\n/tmp/tmps__nj8zy.d(49): Error: declaration
    expected, not `assert`\n/tmp/tmps__nj8zy.d(50): Error: declaration expected, not
    `assert`\n/tmp/tmps__nj8zy.d(51): Error: declaration expected, not `assert`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps__nj8zy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long even = 1;\n    long odd = 0;\n    \n   \
    \ for(long i = 1; i < n; i++){\n        sum += even;\n        even *= 2;\n   \
    \ }\n    \n    for(long i = 2; i < n; i++){\n        sum += odd;\n        odd\
    \ *= 2;\n    }\n    \n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work for `is_equal_to_sum_even(10L)`\n<|/ c |>\n<|\
    \ c |>\nIt works for me. `is_equal_to_sum_even(10L)` returns `true`\n<|/ c |>\n\
    <| c |>\nIt works for me too. `is_equal_to_sum_even(10L)` returns `true`\n<|/\
    \ c |>\n<| c |>\nIt works for me too. `is_equal_to_sum_even(10L)` returns `true`\n\
    <|/ c |>\n<| c |>\nIt works for me too. `is_equal_to_sum_even(10L)` returns `true`\n\
    <|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp919jq52p.d(32): Error: declaration expected, not `<`\n/tmp/tmp919jq52p.d(35):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp919jq52p.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++){\n        sum += std.math.pow(2,\
    \ i);\n    }\n    return n == sum;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5ua0wot6.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e9d]\n??:? void tmp5ua0wot6.__unittest_L22_C1() [0x427aea]\n??:?
    void tmp5ua0wot6.__modtest() [0x427c20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbc3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa56]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa2d]\n??:? runModuleUnitTests [0x42b999]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428273]\n??:? _d_run_main [0x4281de]\n??:? main [0x427c33]\n??:?
    __libc_start_main [0x807a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpovvwveg_.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpovvwveg_.__unittest_L25_C1() [0x427a72]\n??:?
    void tmpovvwveg_.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x1f008554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n        if(sum == n)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8xixl02j.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp8xixl02j.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmp8xixl02j.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xf6f5a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjjfx87j4.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpjjfx87j4.__unittest_L23_C1() [0x427aa6]\n??:?
    void tmpjjfx87j4.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x1bbb9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqzlnto_q.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpqzlnto_q.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpqzlnto_q.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x67fd6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    \n    while (i < n) {\n    \
    \    sum += i;\n        i += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpj37oh5o2.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpj37oh5o2.__unittest_L26_C1() [0x427a85]\n??:?
    void tmpj37oh5o2.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5fa82554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i=1; i<=n; i+=2)\n\t{\n\t\tsum += i;\n\t\
    \tif (sum > n)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvzaxvawe.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpvzaxvawe.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmpvzaxvawe.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xfa5d4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = 4L;\n    for(long i = 1L; i <= limit;\
    \ ++i)\n    {\n        sum += i;\n        if(sum == n)\n        {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n/*\nEvaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpy78xxtlz.d(44): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpy78xxtlz.__unittest_L39_C1() [0x427a91]\n??:?
    void tmpy78xxtlz.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x5956c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 0;\n    while(i < n)\n    {\n      \
    \  sum += i;\n        i += 2;\n    }\n    return sum == n;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. `is_equal_to_sum_even` returns `true`\
    \ for any number `n` where `n <= 4`.\n<|/ c |>\n<| c |>\n: Yes, I missed that\
    \ requirement. I've added a version that works with that requirement.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7wejrtk4.d(25): Error: declaration expected, not `<`\n/tmp/tmp7wejrtk4.d(28):
    Error: unterminated character constant\n/tmp/tmp7wejrtk4.d(31): Error: unterminated
    character constant\n/tmp/tmp7wejrtk4.d(39): Error: declaration expected, not `assert`\n/tmp/tmp7wejrtk4.d(40):
    Error: declaration expected, not `assert`\n/tmp/tmp7wejrtk4.d(41): Error: declaration
    expected, not `assert`\n/tmp/tmp7wejrtk4.d(42): Error: declaration expected, not
    `assert`\n/tmp/tmp7wejrtk4.d(43): Error: declaration expected, not `assert`\n/tmp/tmp7wejrtk4.d(44):
    Error: declaration expected, not `assert`\n/tmp/tmp7wejrtk4.d(45): Error: declaration
    expected, not `assert`\n/tmp/tmp7wejrtk4.d(46): Error: declaration expected, not
    `assert`\n/tmp/tmp7wejrtk4.d(47): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7wejrtk4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long int sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n\
    \        sum += std.math.abs(std.math.mod(n, 2L));\n        n /= 2L;\n    }\n\
    \    return sum == 0;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzgeqst5g.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpzgeqst5g.d(16): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgeqst5g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\tif (sum > 4) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmph9yoa4g_.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmph9yoa4g_.__unittest_L27_C1() [0x427ab6]\n??:?
    void tmph9yoa4g_.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x62636554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum > n)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps_r397ty.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmps_r397ty.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmps_r397ty.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xa2091554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long i = 1;\n    \n    while\
    \ (i <= limit) {\n        sum += i;\n        if (sum == limit) {\n           \
    \ return true;\n        }\n        i++;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_j5pdtik.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp_j5pdtik.__unittest_L29_C1() [0x427a89]\n??:?
    void tmp_j5pdtik.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x4da05554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n        sum +=\
    \ i;\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv_3c_zms.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpv_3c_zms.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpv_3c_zms.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x7c546554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqzlnto_q.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpqzlnto_q.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpqzlnto_q.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x67fd6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= limit % 2;\n    }\n    return sum ==\
    \ n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i=1; i<=n; i+=2)\n        sum += i;\n\
    \    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpi436bqx3.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpi436bqx3.__unittest_L21_C1() [0x427a66]\n??:?
    void tmpi436bqx3.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xdaf13554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long i = 1;\n    while(i\
    \ <= limit) {\n        sum += i;\n        if(sum == limit) {\n            return\
    \ true;\n        }\n        i += 2;\n    }\n    return false;\n}\n/*\nEvaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    >>> is_equal_to_sum_odd(4L)\n    false\n    >>> is_equal_to_sum_odd(6L)\n\
    \    false\n    >>> is_equal_to_sum_odd(8L)\n    true\n    \n*/\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpuj3qy9kb.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpuj3qy9kb.__unittest_L39_C1() [0x427a6a]\n??:?
    void tmpuj3qy9kb.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0xecec8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpi82lragd.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dcd]\n??:? void tmpi82lragd.__unittest_L22_C1() [0x427aa2]\n??:?
    void tmpi82lragd.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a3]\n??:? _d_run_main [0x42810e]\n??:? main [0x427b63]\n??:?
    __libc_start_main [0x3893c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n            return true;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpovvwveg_.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpovvwveg_.__unittest_L25_C1() [0x427a72]\n??:?
    void tmpovvwveg_.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x1f008554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i++) {\n        sum +=\
    \ i;\n        if(sum % 2 == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpiboc2471.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpiboc2471.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpiboc2471.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x8cbe1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long limit2 = limit;\n \
    \   while(limit2 > 0)\n    {\n        sum += limit2;\n        limit2 /= 2;\n \
    \   }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjzncsg_d.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpjzncsg_d.__unittest_L26_C1() [0x427aaa]\n??:?
    void tmpjzncsg_d.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x5308d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long int sum = 0;\n    for(long long int i = 0; i <= n; i +=\
    \ 2)\n    {\n        sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <bits/stdc++.h>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf44aaxsa.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpf44aaxsa.d(16): Error: no identifier for declarator `long`\n/tmp/tmpf44aaxsa.d(17):
    Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpf44aaxsa.d(17):
    Error: no identifier for declarator `long`\n/tmp/tmpf44aaxsa.d(17): Error: found
    `i` when expecting `.` following int\n/tmp/tmpf44aaxsa.d(17): Error: found `=`
    when expecting identifier following `int`.\n/tmp/tmpf44aaxsa.d(17): Error: found
    `0` when expecting `;` following `for` condition\n/tmp/tmpf44aaxsa.d(17): Error:
    expression expected, not `;`\n/tmp/tmpf44aaxsa.d(17): Error: found `i` when expecting
    `)`\n/tmp/tmpf44aaxsa.d(17): Error: found `<=` instead of statement\n/tmp/tmpf44aaxsa.d(17):
    Error: found `)` when expecting `;` following statement\n/tmp/tmpf44aaxsa.d(23):
    Error: declaration expected, not `<`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpf44aaxsa.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm,math\
    \ |>\n<| c |>\nI like your solution. However I do not understand why you use long\
    \ instead of int. Could you please explain that?\n<|/ c |>\n<| c |>\n: Because\
    \ the problem states that `n` can be written as the sum of exactly 4 positive\
    \ even numbers. So `long` should be the most appropriate type for that purpose.\n\
    <|/ c |>\n<| c |>\nI see. Thank you very much!\n<|/ c |>\n<| a tags=c++,algorithm,math\
    \ |>\nHere's a solution in Python:\n<code>\ndef is_equal_to_sum_even(n):\n   \
    \ s = 0\n    while n > 0:\n        s += n\n        n -= 2\n    return s == n\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution. However I do not understand\
    \ why you use long instead of int. Could you please explain that?\n<|/ c |>\n\
    <| c |>\n: Because the problem states that `n` can be written as the sum of exactly\
    \ 4 positive even numbers. So `long` should be the most appropriate type for that\
    \ purpose.\n<|/ c |>\n<| c |>\nI see. Thank you very much!\n<|/ c |>\n<| a tags=c++,algorithm,math\
    \ |>\n<code>\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ohomurg.d(23): Error: declaration expected, not `<`\n/tmp/tmp2ohomurg.d(35):
    Error: unterminated character constant\n/tmp/tmp2ohomurg.d(60): Error: declaration
    expected, not `assert`\n/tmp/tmp2ohomurg.d(61): Error: declaration expected, not
    `assert`\n/tmp/tmp2ohomurg.d(62): Error: declaration expected, not `assert`\n/tmp/tmp2ohomurg.d(63):
    Error: declaration expected, not `assert`\n/tmp/tmp2ohomurg.d(64): Error: declaration
    expected, not `assert`\n/tmp/tmp2ohomurg.d(65): Error: declaration expected, not
    `assert`\n/tmp/tmp2ohomurg.d(66): Error: declaration expected, not `assert`\n/tmp/tmp2ohomurg.d(67):
    Error: declaration expected, not `assert`\n/tmp/tmp2ohomurg.d(68): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ohomurg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 0; i <= n; i += 2)\n    {\n    \
    \    sum += i;\n    }\n    return sum == n;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nI like your solution, but I believe it can be improved by using\
    \ an `unordered_map` instead of a `map`. That would allow you to remove the `if`\
    \ statement and just do `return map.find(n) != map.end();` at the end.\n<|/ c\
    \ |>\n<| c |>\nI agree, that would be a better solution. I'll add that to the\
    \ answer.\n<|/ c |>\n<| c |>\nI believe that `unordered_map` would not help here,\
    \ since it would be a hash table (which would not allow to find duplicates). `unordered_map`\
    \ would only help to remove `if` statement and to return `map.find(n) != map.end()`\
    \ at the end. `unordered_map` would not help to find duplicates.\n<|/ c |>\n<|\
    \ c |>\nI believe that `unordered_map` would not help here, since it would be\
    \ a hash table (which would not allow to find duplicates). `unordered_map` would\
    \ only help to remove `if` statement and to return `map.find(n) != map.end()`\
    \ at the end. `unordered_map` would not help to find duplicates.\n<|/ c |>\n<|\
    \ c |>\nI believe that `unordered_map` would not help here, since it would be\
    \ a hash table (which would not allow to find duplicates). `unordered_map` would\
    \ only help to remove `if` statement and to return `map.find(n) != map.end()`\
    \ at the end. `unordered_map` would not help to find duplicates.\n<|/ c |>\n<|\
    \ a dscore=0 |>\nThe simplest solution would be to just count the even numbers\
    \ and compare the count with the number to be tested.\n<code>\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsn0vxv7t.d(23): Error: declaration expected, not `<`\n/tmp/tmpsn0vxv7t.d(29):
    Error: unterminated character constant\n/tmp/tmpsn0vxv7t.d(47): Error: declaration
    expected, not `assert`\n/tmp/tmpsn0vxv7t.d(48): Error: declaration expected, not
    `assert`\n/tmp/tmpsn0vxv7t.d(49): Error: declaration expected, not `assert`\n/tmp/tmpsn0vxv7t.d(50):
    Error: declaration expected, not `assert`\n/tmp/tmpsn0vxv7t.d(51): Error: declaration
    expected, not `assert`\n/tmp/tmpsn0vxv7t.d(52): Error: declaration expected, not
    `assert`\n/tmp/tmpsn0vxv7t.d(53): Error: declaration expected, not `assert`\n/tmp/tmpsn0vxv7t.d(54):
    Error: declaration expected, not `assert`\n/tmp/tmpsn0vxv7t.d(55): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsn0vxv7t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit /= 2;\n    }\n    return sum == n;\n}\n\
    </code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nI like this solution, although\
    \ I wonder if there is a way to avoid the division operation. Maybe some kind\
    \ of binary search?\n<|/ c |>\n<| c |>\nYes, binary search is one possibility,\
    \ but I wouldn't call it \"avoiding\" division operation. Division is very cheap\
    \ in modern CPUs.\n<|/ c |>\n<| c |>\nDivision is very cheap in modern CPUs, but\
    \ division operations are very expensive in modern CPUs. So the division operation\
    \ is more expensive than a binary search. Binary search is more expensive than\
    \ division operation. Division operation is more expensive than division operation.\
    \ Division operation is more expensive than division operation. Division operation\
    \ is more expensive than division operation. Division operation is more expensive\
    \ than division operation. Division operation is more expensive than division\
    \ operation. Division operation is more expensive than division operation. Division\
    \ operation is more expensive than division operation. Division operation is more\
    \ expensive than division operation. Division operation is more expensive than\
    \ division operation. Division operation is more expensive than division operation.\
    \ Division operation is more expensive than division operation. Division operation\
    \ is more expensive than division operation. Division operation is more expensive\
    \ than division operation. Division operation is more expensive than division\
    \ operation. Division operation is more expensive than division operation. Division\
    \ operation is more expensive than division operation. Division operation is more\
    \ expensive than division operation. Division operation is more expensive than\
    \ division operation. Division operation is more expensive than division operation.\
    \ Division operation is more expensive than division operation. Division operation\
    \ is more expensive than division operation. Division operation is more expensive\
    \ than division operation. Division operation is more expensive than division\
    \ operation. Division operation is more expensive than division operation. Division\
    \ operation is more expensive than division operation. Division operation is more\
    \ expensive than division operation. Division operation is more expensive than\
    \ division operation. Division operation is more expensive than \nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp194r6jq2.d(25): Error: declaration expected, not `<`\n/tmp/tmp194r6jq2.d(31):
    Error: unterminated character constant\n/tmp/tmp194r6jq2.d(39): Error: declaration
    expected, not `assert`\n/tmp/tmp194r6jq2.d(40): Error: declaration expected, not
    `assert`\n/tmp/tmp194r6jq2.d(41): Error: declaration expected, not `assert`\n/tmp/tmp194r6jq2.d(42):
    Error: declaration expected, not `assert`\n/tmp/tmp194r6jq2.d(43): Error: declaration
    expected, not `assert`\n/tmp/tmp194r6jq2.d(44): Error: declaration expected, not
    `assert`\n/tmp/tmp194r6jq2.d(45): Error: declaration expected, not `assert`\n/tmp/tmp194r6jq2.d(46):
    Error: declaration expected, not `assert`\n/tmp/tmp194r6jq2.d(47): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp194r6jq2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n     \
    \   sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcuusvmg9.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpcuusvmg9.__unittest_L23_C1() [0x427aaa]\n??:?
    void tmpcuusvmg9.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x59265554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    long limit = limit / 2;\n\
    \    while(limit > 0)\n    {\n        sum += limit;\n        limit = limit / 2;\n\
    \    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5fszlqya.d(18): Error: declaration `tmp5fszlqya.is_equal_to_sum_even.limit`
    is already defined\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5fszlqya.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long long sum = 0;\n    for(long long i = 1; i < n; i+=2)\n    {\n\
    \        sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpklolkzfy.d(16): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpklolkzfy.d(17): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpklolkzfy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i = i + 2)\n\t{\n\t\tsum\
    \ += i;\n\t\tif (sum == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpq4w5vpb5.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpq4w5vpb5.__unittest_L25_C1() [0x427a7e]\n??:?
    void tmpq4w5vpb5.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b7f]\n??:?
    __libc_start_main [0xd5ec4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i < 4; i++)\n    {\n        sum\
    \ += n;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c\
    \ |>\nThis is not the correct solution. Try it with `is_equal_to_sum_even(10L)`.\n\
    <|/ c |>\n<| c |>\nThe OP said \"exactly 4 positive even numbers\". 10 is not\
    \ an even number.\n<|/ c |>\n<| c |>\nThe OP said \"exactly 4 positive even numbers\"\
    . 10 is not an even number.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated\
    \ my answer to reflect this.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated\
    \ my answer to reflect this.\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnffbx6w6.d(27): Error: declaration expected, not `<`\n/tmp/tmpnffbx6w6.d(39):
    Error: unterminated character constant\n/tmp/tmpnffbx6w6.d(42): Error: unterminated
    character constant\n/tmp/tmpnffbx6w6.d(50): Error: declaration expected, not `assert`\n/tmp/tmpnffbx6w6.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmpnffbx6w6.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmpnffbx6w6.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmpnffbx6w6.d(54): Error: declaration expected, not `assert`\n/tmp/tmpnffbx6w6.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmpnffbx6w6.d(56): Error: declaration
    expected, not `assert`\n/tmp/tmpnffbx6w6.d(57): Error: declaration expected, not
    `assert`\n/tmp/tmpnffbx6w6.d(58): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnffbx6w6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long even = 0;\n    long odd = 0;\n    \n   \
    \ for(int i = 0; i < n; i++) {\n        sum += i;\n        if(sum % 2 == 0) {\n\
    \            even += i;\n        }\n        else {\n            odd += i;\n  \
    \      }\n    }\n    \n    return even == 4;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4a8udic.d(38): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmpb4a8udic.__unittest_L32_C1() [0x427ad2]\n??:?
    void tmpb4a8udic.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0x383ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) {\n        sum +=\
    \ i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4_1tqdrb.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp4_1tqdrb.__unittest_L22_C1() [0x427a66]\n??:?
    void tmp4_1tqdrb.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x5ae20554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long m = 1;\n    long n = 1;\n    \n    while(i <= n)\n    {\n        sum\
    \ += i;\n        i += 2;\n    }\n    \n    while(j <= n)\n    {\n        sum +=\
    \ j;\n        j += 2;\n    }\n    \n    while(k <= n)\n    {\n        sum += k;\n\
    \        k += 2;\n    }\n    \n    while(m <= n)\n    {\n        sum += m;\n \
    \       m += 2;\n    }\n    \n    return sum == n;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplsesidqq.d(21): Error: variable `n` is shadowing variable `tmplsesidqq.is_equal_to_sum_even.n`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsesidqq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i = i + 2)\n\t{\n\t\tif (i\
    \ % 2 == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn (sum == n);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwzi6vs3i.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427df5]\n??:? void tmpwzi6vs3i.__unittest_L26_C1() [0x427aca]\n??:?
    void tmpwzi6vs3i.__modtest() [0x427b78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281cb]\n??:? _d_run_main [0x428136]\n??:? main [0x427b8b]\n??:?
    __libc_start_main [0xfdbc0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long even = 1;\n    long odd = 0;\n    long limit\
    \ = (long)std.math.rem(std.math.abs(n), 2L);\n    \n    while (even < limit)\n\
    \    {\n        sum += even;\n        even += 2L;\n    }\n    \n    while (odd\
    \ < limit)\n    {\n        sum += odd;\n        odd += 2L;\n    }\n    \n    return\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7wxxg8e6.d(19): Error: C style cast illegal, use `cast(long)std.math.rem(std.math.abs(n),
    2L)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7wxxg8e6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    for(long i = 1; i < limit;\
    \ i+=2)\n    {\n        sum += i;\n        if(sum == limit)\n        {\n     \
    \       return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n  \
    \  alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmponiuj1n2.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmponiuj1n2.__unittest_L28_C1() [0x427a6a]\n??:?
    void tmponiuj1n2.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x8a04e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit -= limit % 2;\n    }\n    return sum ==\
    \ n;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly for small numbers but for large numbers it takes too much time\
    \ to execute.\n<|/ c |>\n<| c |>\nI tested it on large numbers and it works perfectly.\
    \ Can you give an example of a large number that doesn't work?\n<|/ c |>\n<| c\
    \ |>\nI tested it on numbers like `4L`, `8L`, `12L`, `20L`, `24L`, `28L`, `32L`,\
    \ `36L`, `40L`, `44L`, `48L`, `52L`, `56L`, `60L`, `64L`, `68L`, `72L`, `76L`,\
    \ `80L`, `84L`, `88L`, `92L`, `96L`, `100L`, `104L`, `108L`, `112L`, `116L`, `120L`,\
    \ `124L`, `128L`, `132L`, `136L`, `140L`, `144L`, `148L`, `152L`, `156L`, `160L`,\
    \ `164L`, `168L`, `172L`, `176L`, `180L`, `184L`, `188L`, `192L`, `196L`, `200L`,\
    \ `204L`, `208L`, `212L`, `216L`, `220L`, `224L`, `228L`, `232L`, `236L`, `240L`,\
    \ `244L`, `248L`, `252L`, `256L`, `260L`, `264L`, `268L`, `272L`, `276L`, `280L`,\
    \ `284L`, `288L`, `292L`, `296L`, `300L`, `304L`, `308L`, `312L`, `316L`, `320L`,\
    \ `324L`, `328L`, `332L`, `336L`, `340L`, `344L`, `348L`, `352L`, `356L`, `360L`,\
    \ `364L`, `368L`, `372L`, `376L`, `380L`, `384L`, `388L`, `392L`, `396L`, `400L`,\
    \ `404L`, `408L`, `412L`, `416L`, `420L`, `424L`, `428L`, `432L`, `436L`, `440L`,\
    \ `444L`, `448L`, `452L`, `456L`, `460L`, `464L`, `468L`, `472L`, `476L`, `480L`,\
    \ `484\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7toe3qas.d(25): Error: declaration expected, not `<`\n/tmp/tmp7toe3qas.d(31):
    Error: unterminated character constant\n/tmp/tmp7toe3qas.d(34): Error: unterminated
    string constant starting at /tmp/tmp7toe3qas.d(34)\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7toe3qas.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2)\n    {\n       \
    \ sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpngwu7z4t.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpngwu7z4t.__unittest_L23_C1() [0x427a66]\n??:?
    void tmpngwu7z4t.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0x492cd554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp745iq185.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp745iq185.__unittest_L24_C1() [0x427a76]\n??:?
    void tmp745iq185.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xa5a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(int i = 0; i <= n; i++)\n    {\n        sum\
    \ += i;\n        if(sum % 2 == 0)\n        {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_66_rgz3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp_66_rgz3.__unittest_L27_C1() [0x427a76]\n??:?
    void tmp_66_rgz3.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x6001e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i++) {\n\t\tsum += i;\n\t\
    \tif (sum % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqzlnto_q.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpqzlnto_q.__unittest_L25_C1() [0x427a76]\n??:?
    void tmpqzlnto_q.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x67fd6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i+=2)\n\t{\n\t\tsum += i;\n\
    \t\tif (sum == n)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp106gfm8w.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp106gfm8w.__unittest_L27_C1() [0x427a6a]\n??:?
    void tmp106gfm8w.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x3f1e2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < n; i++) {\n\t\tsum +=\
    \ i;\n\t\tif (sum % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4ly_6vc9.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp4ly_6vc9.__unittest_L26_C1() [0x427a76]\n??:?
    void tmp4ly_6vc9.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x11a6a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i < n; i += 2)\n\t{\n\t\tsum +=\
    \ i;\n\t\tif (sum == n)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpldrd6u0q.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmpldrd6u0q.__unittest_L27_C1() [0x427a6a]\n??:?
    void tmpldrd6u0q.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x46850554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    long limit = n;\n    while(limit > 0)\n    {\n\
    \        sum += limit;\n        limit /= 2;\n    }\n    return sum == n;\n}\n\
    </code>\n<|/ a tags=c++,algorithm,math |>\n<| c |>\nThis doesn't work. Try it\
    \ with `n = 2`.\n<|/ c |>\n<| c |>\n: Yes, it does. I tested it before posting.\
    \ Did you try it? It returns `true` for n=2 and `false` for n=3.\n<|/ c |>\n<|\
    \ c |>\n: It returns `true` for n=2 and `false` for n=3.\n<|/ c |>\n<| c |>\n\
    : It returns `true` for n=2 and `false` for n=3.\n<|/ c |>\n<| c |>\n: It returns\
    \ `true` for n=2 and `false` for n=3.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1odlamkj.d(25): Error: declaration expected, not `<`\n/tmp/tmp1odlamkj.d(28):
    Error: unterminated character constant\n/tmp/tmp1odlamkj.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmp1odlamkj.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmp1odlamkj.d(50): Error: declaration expected, not `assert`\n/tmp/tmp1odlamkj.d(51):
    Error: declaration expected, not `assert`\n/tmp/tmp1odlamkj.d(52): Error: declaration
    expected, not `assert`\n/tmp/tmp1odlamkj.d(53): Error: declaration expected, not
    `assert`\n/tmp/tmp1odlamkj.d(54): Error: declaration expected, not `assert`\n/tmp/tmp1odlamkj.d(55):
    Error: declaration expected, not `assert`\n/tmp/tmp1odlamkj.d(56): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1odlamkj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \    >>> is_equal_to_sum_even(4L)\n    false\n    >>> is_equal_to_sum_even(6L)\n\
    \    false\n    >>> is_equal_to_sum_even(8L)\n    true\n    \n*/\nbool is_equal_to_sum_even(long\
    \ n) \n{\n    long sum = 0;\n    for(long i = 1; i < n; i+=2) \n    {\n      \
    \  sum += i;\n        if(sum > n) \n        {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp9l7k3jsm.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmp9l7k3jsm.__unittest_L27_C1() [0x427a6a]\n??:?
    void tmp9l7k3jsm.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b6b]\n??:?
    __libc_start_main [0x23a6e554]\n1/1 unittests FAILED\n'''
  stdout: b''

name: HumanEval_89_encrypt
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nCreate a function encrypt that\
  \ takes a string as an argument and\n    returns a string encrypted with the alphabet\
  \ being rotated. \n    The alphabet should be rotated in a manner such that the\
  \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
  \    >>> encrypt(\"hi\")\n    \"lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\
  \n    >>> encrypt(\"gf\")\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n   \
  \ \n*/\nstring encrypt(string s) \n"
tests: "unittest\n{\n    alias candidate = encrypt;\n\n    assert(candidate(\"hi\"\
  ) == \"lm\");\n    assert(candidate(\"asdfghjkl\") == \"ewhjklnop\");\n    assert(candidate(\"\
  gf\") == \"kj\");\n    assert(candidate(\"et\") == \"ix\");\n    assert(candidate(\"\
  faewfawefaewg\") == \"jeiajeaijeiak\");\n    assert(candidate(\"hellomyfriend\"\
  ) == \"lippsqcjvmirh\");\n    assert(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n    assert(candidate(\"\
  a\") == \"e\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i % 26) + 1] + s[(i / 26) + 1];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThis doesn't\
    \ work. Try encrypting \"abc\".\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try encrypting \"abc\".\n<|/ c |>\n<| c |>\n\
    It does work. Try it yourself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself.\n\
    <|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis code doesn't work.\
    \ `encrypt(\"gf\")` returns `kj` instead of `kf`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out. :)\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\n#include <cctype>",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rot13(\"\
    hi\")\n    \"nq\"\n    >>> rot13(\"asdfghjkl\")\n    \"gkj\"\n    >>> rot13(\"\
    gf\")\n    \"fz\"\n    >>> rot13(\"et\")\n    \"kz\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rot13(\"nq\")\n    \"hi\"\n    >>>\
    \ rot13(\"gkj\")\n    \"asdfghjkl\"\n    >>> rot13(\"fz\")\n    \"gf\"\n    >>>\
    \ rot13(\"kz\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  ", "{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n\
    \    }\n    return result;\n}", "{\n    int len = s.length();\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i) - 'a'];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i) - 'a'];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\"\n   \
    \ >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"et\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\n", "{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - alphabet[(int)'a']];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - alphabet[(int)'a']];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - alphabet[(int)'a']];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - alphabet[(int)'a']];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"\
    kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) - 'a'\
    \ + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2) + \"a\";\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2) + \"b\";\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"etxbvga\"\n    >>> rotate(\"et\")\n    \"hixaedc\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2) + \"a\";\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"etxbvga\"\n    >>> rotate(\"\
    et\")\n    \"hixaedc\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i\
    \ + 2) + \"b\";\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"gf\")\n    \"etxbvga\"\n    >>> rotate(\"et\")\n    \"hixaedc\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2) + \"a\";\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string ", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)]\
    \ + alphabet[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)] - alphabet[(int)s.charAt(i)-1];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)+13];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places counterclockwise.\n\
    \    For example:\n    >>> rot13(\"nqo\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-13];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"gfkj\")\n    \"hi\"\n    >>> decrypt(\"et\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"hi\")\n    \"gf\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gfkj\")\n    \"et\"\n   \
    \ >>> rotate(\"et\")\n    \"gf", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\
    \ \n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n  \
    \      result += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above. \n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\
    \n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - alphabet.length()];\n        result\
    \ += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above. \n    For example:\n    >>>\
    \ rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>>\
    \ rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet.length()];", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotater that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotater(\"\
    hi\")\n    \"hi\"\n    >>> rotater(\"asdfghjkl\")\n    \"asdfghjkl\"\n    >>>\
    \ rotater(\"gf\")\n    \"gf\"\n    >>> rotater(\"et\")\n    \"et\"\n    \n*/\n\
    string rotater(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 97];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotater_2 that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotater_2(\"hi\")\n    \"hi\"\n    >>> rotater_2(\"\
    asdfghjkl\")\n    \"asdfghjkl\"\n    >>> rotater_2(\"gf\")\n    \"gf\"\n    >>>\
    \ rotater_2(\"et\")\n    \"et\"\n    \n*/\nstring rotater_2(string s) \n{\n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ + s.at(i + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotater that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotater(\"hi\")\n\
    \    \"gfkj\"\n    >>> rotater(\"gf\")\n    \"et\"\n    >>> rotater(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rotater(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ - s.at(i + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotater2 that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotater2(\"hi\")\n\
    \    \"gfkj\"\n    >>> rotater2(\"gf\")\n    \"et\"\n    >>> rotater2(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rotater2(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ + s.", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c\
    \ |>\nThank you so much for your help! I really appreciate it!\n<|/ c |>\n<| c\
    \ |>\nNo problem! Glad I could help!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"ozqxd\"\n    >>> rot13(\"gf\")\n    \"kf\"\n    >>> rot13(\"et\")\n \
    \   \"xm\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places\
    \ counterclockwise.\n    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n   \
    \ >>> rot13(\"ozqxd\")\n    \"asdfghjkl\"\n    >>> rot13(\"kf\")\n    \"gf\"\n\
    \    >>> rot13(\"xm\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(s.at(i) - 'a' - 13) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"ozqxd\"\n    >>> rot13(\"gf\"\
    )\n    \"kf\"\n    >>> rot13(\"et\")\n    \"x", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdf", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThanks for\
    \ the help! I appreciate it.\n<|/ c |>\n<| c |>\nNo problem. I'm glad I could\
    \ help.\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string.rep(s.charAt(i), std.math.pow(2, i));\n    }\n \
    \   return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string.rep(s.charAt(i), std.math.pow(2, i));\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees clockwise.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\")\n    \"fasdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfgh\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i), std.math.pow(2,\
    \ s.length() - i - 1));\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated 90 degrees\
    \ counterclockwise.\n    For example:\n    >>> rotate(\"hi\")\n    \"ihj\"\n \
    \   >>> rotate(\"asdfghjkl\")\n    \"fasdfghjkl\"\n    >>> rotate(\"gf\")\n  \
    \  \"gfhg\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate90(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rep(s.charAt(i), std.math.pow(2, s.length()\
    \ - i - 1));\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated 180 degrees\
    \ clockwise.\n    For example:\n    >>> rotate(\"hi\")\n    \"jhi\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"fasdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfgh\"", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThanks so much for the\
    \ help. I really appreciate it.\n<|/ c |>\n<| a tags=c++,encryption,string |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"etxqgjhk\"\n    >>>\
    \ rotate(\"gf\")\n    \"kjhv\"\n    >>> rotate(\"et\")\n    \"ixt\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"etxqgjhk\"\n    >>>\
    \ rotate(\"gf\")\n    \"kjhv\"\n    >>> rotate(\"et\")\n    \"ixt\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two place", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i]\
    \ + i) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)((s[i] + i) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"etkjhgfdsa\"\n    >>> rotate(\"gf\")\n \
    \   \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)((s[i] + i) % 26)];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"gfedcba\"\
    )\n    \"gfedcba\"\n    >>> rotate(\"etkjhgfdsa\")\n    \"etkjhgfdsa\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i] +\
    \ i) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places down. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhnop\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 places up. \n    For example:\n\
    \    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"kjhnop\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 places left. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhnop\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"kj\"\
    \n    >>> rotate(\"et\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.Length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i\
    \ + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhigfedcba\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"\
    et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i\
    \ + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"gfedcba\")\n    \"hi\"\n    >>> decrypt(\"\
    kjhigfedcba\")\n    \"asdfghjkl\"\n    >>> decrypt(\"gfedcba\")\n    \"gfedcba\"\
    \n    >>> decrypt(\"gfedcba\")\n    \"gfedcba\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.Length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. ", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"gfkj\")\n    \"hi\"\n  \
    \  >>> decrypt(\"et\")\n    \"asdfghjkl\"\n    >>> decrypt(\"hi\")\n    \"gf\"\
    \ \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gfkj\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[i\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s[26 - i % 26];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function rotate that takes a string as an argument and\n    returns a string\
    \ rotated 90 degrees clockwise. \n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"jhi\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhkjldf\"\n    >>> rotate(\"\
    gf\")\n    \"gfgh\"\n    >>> rotate(\"et\")\n    \"ettx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[i % s.length()];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated 90 degrees counterclockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"ihj\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhkjldf\"\n    >>> rotate(\"\
    gf\")\n    \"gfgh\"\n    >>> rotate(\"et\")\n    \"ettx\"\n    \n*/\nstring rotate90(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[s.length() - 1 - i % s.length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated 180 degrees clockwise. \n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhkjldf\"\
    \n    >>> rotate(\"gf\")\n    \"gfgh\"\n    >>> rotate(\"et\")\n    \"ettx\"\n\
    \    \n*/\nstring rotate180(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        ", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    int len = s.length();\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n\
    \        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"etkjhgfdsa\"\n    >>> rotate(\"gf\")\n \
    \   \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    int len = s.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"etkjhgfdsa\"\n  \
    \  >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated. ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"jxk\"\n    >>> rot13(\"et\")\n\
    \    \"ixt\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"nqo\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n \
    \   \"asdfghjkl\"\n    >>> rot13(\"jxk\")\n    \"gf\"\n    >>> rot13(\"ixt\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"jxk\"\n    >>> rot13(\"et\")\n\
    \    \"ixt\"\n    \n*/\nstring rot13(string s) \n", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}", "{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThanks for the help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem.\
    \ Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <vector>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 2) % 26];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string with the alphabet being\
    \ rotated. \n    The alphabet should be rotated in a manner such that the letters\
    \ \n    shift down by two multiplied to two places.\n    For example:\n    >>>\
    \ rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 2) % 26];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string with the alphabet being rotated. \n\
    \    The alphabet should be rotated in a manner such that the letters \n    shift\
    \ down by two multiplied to two places.\n    For example:\n    >>> rotate(\"gf\"\
    )\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s[(i % 26) + 1] + s[(i / 26) + 1];\n    }\n \
    \   return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i % 26) - 1] + s[(i / 26) - 1];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i\
    \ % 26) + 1] + s[(i / 26) + 1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i % 26)\
    \ - 1] + s[(i / 26) - 1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i % 26)\
    \ + 1] + s[(i / 26) + 1];\n    }\n    return result;\n}\n/*\nCreate a ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 65) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 65) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThanks for your answer! I appreciate it! I did what you said and I got\
    \ this error when I tried to run it: \n`Traceback (most recent call last):\n \
    \ File \"C:\\Users\\User\\Desktop\\Python\\Project\\Project Euler\\Project Euler\
    \ Problem 1.py\", line 5, in <module>\n    import std.math;\nImportError: No module\
    \ named 'std'`\n<|/ c |>\n<| c |>\nI fixed the problem with the std module and\
    \ now it says this: `Traceback (most recent call last):\n  File \"C:\\Users\\\
    User\\Desktop\\Python\\Project\\Project Euler\\Project Euler Problem 1.py\", line\
    \ 5, in <module>\n    import std.math;\nImportError: No module named 'std'`\n\
    <|/ c |>\n<| c |>\nI fixed the problem with the std module and now it says this:\
    \ `Traceback (most recent call last):\n  File \"C:\\Users\\User\\Desktop\\Python\\\
    Project\\Project Euler\\Project Euler Problem 1.py\", line 5, in <module>\n  \
    \  import std.math;\nImportError: No module named 'std'`\n<|/ c |>\n<| c |>\n\
    I fixed the problem with the std module and now it says this: `Traceback (most\
    \ recent call last):\n  File \"C:\\Users\\User\\Desktop\\Python\\Project\\Project\
    \ Euler\\Project Euler Problem 1.py\", line 5, in <module>\n    import std.math;\n\
    ImportError: No module named 'std'`\n<|/ c |>\n<| c |>\nI fixed the problem with\
    \ the std module and now it says this: `Traceback (most recent call last):\n \
    \ File \"C:\\Users\\User\\Desktop\\Python\\Project\\Project Euler\\Project Euler\
    \ Problem ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) + 2) % 26];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=c++,encryption |>\n<| c |>\nI appreciate your\
    \ help but I'm still getting an error when I try to compile. I'm getting an error\
    \ saying \"invalid conversion from 'char' to 'const char*' [-fpermissive]\" on\
    \ the line where I declare the alphabet array. I'm not sure what I'm doing wrong.\n\
    <|/ c |>\n<| c |>\nI edited my answer to include the code I tested with. Does\
    \ that help?\n<|/ c |>\n<| c |>\nI appreciate your help but I'm still getting\
    \ an error when I try to compile. I'm getting an error saying \"invalid conversion\
    \ from 'char' to 'const char*' [-fpermissive]\" on the line where I declare the\
    \ alphabet array. I'm not sure what I'm doing wrong.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include the code I tested with. Does that help?\n<|/ c |>\n<| c\
    \ |>\nI appreciate your help but I'm still getting an error when I try to compile.\
    \ I'm getting an error saying \"invalid conversion from 'char' to 'const char*'\
    \ [-fpermissive]\" on the line where I declare the alphabet array. I'm not sure\
    \ what I'm doing wrong.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i] - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i] - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n   \
    \ >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\
    \n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places counterclockwise.\n    For example:\n    >>> rot13(\"\
    nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"nk\"\
    )\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";", "{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but `encrypt(\"gf\")` should\
    \ return `\"kj\"`\n<|/ c |>\n<| c |>\nI fixed the bug in the code. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work. `encrypt(\"gf\")` returns\
    \ `\"kj\"`, but `encrypt(\"gf\")` should return `\"kj\"`\n<|/ c |>\n<| c |>\n\
    I fixed the bug in the code. Thanks for pointing it out.\n<|/ c |>\n<| c |>\n\
    This doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but `encrypt(\"gf\")` should\
    \ return `\"kj\"`\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string s)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThis doesn't work. `encrypt(\"\
    gf\")` returns `\"kj\"`, but `encrypt(\"gf\")` should return `\"kj\"`\n<|/ c |>\n\
    <| c |>\nThis doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but `encrypt(\"\
    gf\")` should return `\"kj\"`\n<|/ c |>\n<| a tags=c++,encryption,string |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet[(int)s.charAt(i) - alphabet.length()] + alphabet[(int)s.charAt(i)\
    \ - alphabet.length()+1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()] + alphabet[(int)s.charAt(i)\
    \ - alphabet.length()+1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhigfedcba\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"\
    et\")\n    \"kjhigfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet.length()] + alphabet[(int)s.charAt(i)\
    \ - alphabet.length()+1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhigfedcba\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"\
    et\")\n    \"kjhigfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)", "{\n    string result = \"\";\n    int i = 0;\n    while(i\
    \ < s.length())\n    {\n        result += chars[(s[i] - 'a') + 2];\n        i++;\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    int i = 0;\n    while(i < s.length())\n    {\n        result\
    \ += chars[(s[i] - 'a') - 2];\n        i++;\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    int i = 0;\n    while(i < s.length())\n\
    \    {\n        result += chars[(s[i] - 'a') + 2];\n        i++;\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n  \
    \  \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"\
    gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int\
    \ i = 0;\n    while(i < s.length())\n    {\n        result += chars[(s[i] - 'a')\
    \ - 2];\n        i++;\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2) + \"a\";\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2) + \"b\";\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\
    \ \n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i + 2) + \"c\";\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above. \n    For example:\n    >>>\
    \ rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += s.at(i + 2) + \"d\";\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i\
    \ + 2) + \"e\";\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above. \n    For example:", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)]\
    \ + alphabet[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-(int)alphabet.length()]\
    \ + alphabet[(int)s.charAt(i)-(int)alphabet.length()+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees clockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhkasdfl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etgfecba\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)+(int)alphabet.length()]\
    \ + alphabet[(int)s.charAt(i)+(int)alphabet.length()+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees counterclockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhkasdfl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etgfecba\"\n\
    \    \n*/\nstring rotate90(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-(int)alphabet.length()]\
    \ + alphabet[(int)s.charAt(i)-(int)alphabet.length()+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 180 degrees clockwise. \n    For example:\n    >>> ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1\
    \ - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"kjhigfedcba\"\n    >>> rotate(\"gf\")\n\
    \    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhigfedcba\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"gfedcba\"\
    )\n    \"gfedcba\"\n    >>> rotate(\"kjhigfedcba\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhigfedcba\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such ", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ + s.at(i + 1) + s.at(i + 2));\n    }\n    return result;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try encrypting \"abc\". The result\
    \ should be \"cba\" but your code gives \"cbc\".\n<|/ c |>\n<| c |>\nYes, I noticed\
    \ that and fixed it. I was trying to keep it simple. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI added a version that doesn't use any loops.\n<|/ c |>\n<|\
    \ c |>\nI added a version that doesn't use any loops.\n<|/ c |>\n<| a tags=encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include\
    \ <ctime>\n#include <cmath>\n#include <cstring>\nusing namespace std;", "{\n \
    \   int len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len;\
    \ i++)\n    {\n        result += s[len - 1 - i] + s[len - 1 - i + 1];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += s[len - 1 - i] + s[len - 1 - i + 1];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string encrypted with the rot13 alphabet. \n    The alphabet should\
    \ be rotated 13 places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n\
    \    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"\
    kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += chars[(s[i] - 'a') + 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string decrypted with the rot13 alphabet. \n    The alphabet should\
    \ be rotated 13 places.\n    For example:\n    >>> rot13(\"nqo\")\n    \"hi\"\n\
    \    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"kj\")\n    \"\
    gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += chars[(s[i] - 'a') - 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string encrypted with the rot13 alphabet. \n    The alphabet should\
    \ be rotated 13 places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n\
    \    >>> rot", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i] - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string(s.at(i) + s.at(i+1)).swapcase();\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ - s.at(i-1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places down. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n \
    \   >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) + s.at(i+13)).swapcase();\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places up. \n    For example:\n    >>> rot13(\"nj\")\n \
    \   \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"gf\"\
    )\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i-13)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places right. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a');\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThis doesn't work. `encrypt(\"gf\")` returns `\"kj\"` instead of\
    \ `\"kj\"`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. `encrypt(\"gf\")` returns `\"kj\"` instead\
    \ of `\"kj\"`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n\
    <|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\n#include <cctype>", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), st", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n \
    \   return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gf\"\
    \ \n    >>> rotate(\"gf\")\n    \"kj\" \n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\n",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet.at(s.at(i) - 'a');\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a');\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a');\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a');\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s[i % 26];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[26 - i % 26];\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 degrees clockwise. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += (char)(s[(i + 13) % s.length()]\
    \ + s[i % s.length()]);\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 degrees\
    \ counterclockwise. \n    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n  \
    \  >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"\
    \n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += (char)(s[(i + 13) % s.length()] - s[i % s.length()]);\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 degrees clockwise. \n    For example:\n\
    \    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"kjhieux\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhieux\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gfedcba\")\n    \"gfedcba\"\n    >>> rotate(\"kjhieux\")\n    \"gfedcba\"\n  \
    \  >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhieux\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += s[(int)(((int)s.at(i) - 65) * 2)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[(int)(((int)s.at(i)\
    \ - 65) * 2 + 1)];\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places\
    \ clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"ozqx\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(int)(((int)s.at(i)\
    \ - 65) + 13)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places counterclockwise.\n\
    \    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"ozqx\")\n\
    \    \"asdfghjkl\"\n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(int)(((int)s.at(i)\
    \ - 65) - 13)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"ozqx\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string(s.at(i) + s.at(i+1)).swapcase();\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a |>\n<| a |>\n<code>\nstring encrypt(string s)\n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.at(i) + s.at(i+1);\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 tags=string,c++ |>\n<| c |>\nThis does not provide an answer to\
    \ the question. To critique or request clarification from an author, leave a comment\
    \ below their post.\n<|/ c |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/10407392)\n<|/ c\
    \ |>\n<| c |>\nThis does provide an answer to the question. He asked how to rotate\
    \ a string by two characters. He also asked how to do that in C++. He also asked\
    \ how to do that in C++. He also asked how to do that in C++. He also asked how\
    \ to do that in C++. He also asked how to do that in C++. He also asked how to\
    \ do that in C++. He also asked how to do that in C++. He also asked how to do\
    \ that in C++. He also asked how to do that in C++. He also asked how to do that\
    \ in C++. He also asked how to do that in C++. He also asked how to do that in\
    \ C++. He also asked how to do that in C++. He also asked how to do that in C++.\
    \ He also asked how to do that in C++. He also asked how to do that in C++. He\
    \ also asked how to do that in C++. He also asked how to do that in C++. He also\
    \ asked how to do that in C++. He also asked how to do that in C++. He also asked\
    \ how to do that in C++. He also asked how to do that in C++. He also asked how\
    \ to do that in C++. He also asked how to do that in C++. He also asked how to\
    \ do that in C++. He also asked how to do that in C++. H", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s[i] + 13) % 26)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rot13 that takes a string as an argument\
    \ and\n    returns a string rotated 13 places counterclockwise.\n    For example:\n\
    \    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[s.length()\
    \ - 1 - i] + 13) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n   \
    \ >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"kj\"\
    \n    >>> rot13(\"et\")\n    \"ix\"\n    \n", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the opposite direction of the alphabet.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the opposite direction of\
    \ the alphabet.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the opposite direction of\
    \ the alphabet.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the opposite direction of\
    \ the alphabet.\n    For example:\n    >>> rotate(\"hi\")\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i) - 2];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i) + 2];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"", "{\n    string\
    \ result = \"\";\n    int length = s.length();\n    for (int i = 0; i < length;\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try encrypting\
    \ \"abc\".\n<|/ c |>\n<| c |>\nIt works. I tested it on Python. Try it yourself.\
    \ It works.\n<|/ c |>\n<| c |>\nIt doesn't work. Try encrypting \"abc\".\n<|/\
    \ c |>\n<| c |>\nIt works. I tested it on Python. Try it yourself. It works.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try encrypting \"abc\".\n<|/ c |>\n<| a tags=encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"\
    et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i) + 2];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any libraries. I should use only basic libraries.\n<|/ c |>\n<| c |>\n\
    I added a solution that uses only basic libraries.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I am not allowed to use any libraries. I should use only basic\
    \ libraries.\n<|/ c |>\n<| c |>\nI added a solution that uses only basic libraries.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I am not allowed to use any libraries.\
    \ I should use only basic libraries.\n<|/ c |>\n<| a tags=encryption,c++ |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(s.length() - i - 1);\n    }\n    return result;\n}\n/*\nCreate a\
    \ function rotater that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above.\n    For example:\n    >>> rotater(\"\
    hi\")\n    \"hi\"\n    >>> rotater(\"asdfghjkl\")\n    \"asdfghjkl\"\n    >>>\
    \ rotater(\"gf\")\n    \"gfgh\"\n    >>> rotater(\"et\")\n    \"et\"\n    \n*/\n\
    string rotater(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(s.length()\
    \ - i - 1);\n    }\n    return result;\n}\n/*\nCreate a function rotater_2 that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotater_2(\"hi\")\n    \"hi\"\n\
    \    >>> rotater_2(\"asdfghjkl\")\n    \"asdfghjkl\"\n    >>> rotater_2(\"gf\"\
    )\n    \"gfgh\"\n    >>> rotater_2(\"et\")\n    \"et\"\n    \n*/\nstring rotat",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\
    \n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described ", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees clockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"j\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees counterclockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"j\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate90(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') - 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 180 degrees clockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"j\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate180(string\
    \ s) \n{\n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 65) * 2)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s.at(i) - 65) * 2)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 65) * 2)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\"\
    )\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 65) * 2)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n \
    \   >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\n", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\"\
    )\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i] - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"et\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate2(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i] - 97];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"et\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\n", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ + 2) % 26];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"gf\" \n    >>> rotate(\"ix\")\n    \"kj\" \n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ + 13) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places counterclockwise.\n\
    \    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 13) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\n\
    \    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfk", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i) - 97 + 2) %\
    \ 26)];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer! I appreciate it. I tried your code, but I got\
    \ this error: \"error: no matching function for call to 'encrypt'\".\n<|/ c |>\n\
    <| c |>\nI forgot to add `#include <string>`\n<|/ c |>\n<| c |>\nI added the #include\
    \ <string> and I still get the same error. Do you know why that is?\n<|/ c |>\n\
    <| c |>\nI added the #include <string> and I still get the same error. Do you\
    \ know why that is?\n<|/ c |>\n<| c |>\nI added the #include <string> and I still\
    \ get the same error. Do you know why that is?\n<|/ c |>\n<| a dscore=0 |>\nI\
    \ figured it out! I needed to add #include <string> and #include <iostream> to\
    \ the top of my code. Thanks everyone for your help!\n<|/ a tags=c++,encryption\
    \ |>\n<| c |>\nYou don't need to add `#include <string>` in C++. `std::string`\
    \ is part of the standard library.\n<|/ c |>\n<| c |>\nI added the #include <string>\
    \ and I still get the same error. Do you know why that is?\n<|/ c |>\n<| c |>\n\
    I added the #include <string> and I still get the same error. Do you know why\
    \ that is?\n<|/ c |>\n<| c |>\nI added the #include <string> and I still get the\
    \ same error. Do you know why that is?\n<|/ c |>\n<| c |>\nI added the #include\
    \ <string> and I still get the same error. Do you know why that is?\n<|/ c |>\n\
    <| a tags=c++,encryption |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] + 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - 2];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length()", "{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"k", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ degrees clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n  \
    \  >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\
    \n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 degrees counterclockwise.\n    For example:\n    >>> rot13(\"nk\"\
    )\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 degrees clockwise and 13 degrees counterclockwise.\n   \
    \ For example:\n    >>> rot13(\"nk\")\n    \"nk\"\n    >>> rot13(\"zxcvbnm\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gfz\")\n    \"gfz\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"qgkjhbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"\
    et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += (char)(s.charAt(i)\
    \ + 13);\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"qgkjhbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += (char)(s.charAt(i)\
    \ + 13);\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"qgkjhbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)", "{\n    int len = s.length();\n   \
    \ string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places down. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n    \"ozqjgkln\"\
    \n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n\
    */\nstring rot13(string s) \n{\n    int len = s.length();\n    string result =\
    \ \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places up. \n    For example:\n\
    \    >>> rot13(\"nqo\")\n    \"hi\"\n    >>> rot13(\"ozqjgkln\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    int len = s.length();\n    string result =\
    \ \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places left. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nq", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"gf\" \n    >>> rotate(\"\
    ix\")\n    \"kj\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"yz\"\n    >>> rot13(\"\
    et\")\n    \"wq\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)]\
    \ + alphabet[(int)s.at(i) + 13];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"yz\"\n    >>> rot13(\"\
    et\")\n    \"wq\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)]\
    \ + alphabet[(int)s.at(i) + 13];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"yz\"\n    >>> rot13(\"\
    et\")\n    \"wq\"\n    \n*/\n", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i) + 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i) - 2];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i) - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s.at(i)\
    \ + 2)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)((int)s.at(i) - 2)];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThe `string` type is\
    \ not part of the standard library, so you should probably use `std::string` instead.\n\
    <|/ c |>\n<| c |>\nThanks for your comment. I will keep that in mind.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. I'm still a beginner at c++ and I really appreciate\
    \ your help. I tried to implement your solution and I got this error when I tried\
    \ to run it: \n\"Unhandled exception at 0x774C6F7E (ntdll.dll) in Project1.exe:\
    \ 0xC0000005: Access violation reading location 0x00000004.\"\n<|/ c |>\n<| c\
    \ |>\nI edited my post to include the code I used and the error I got. Thanks\
    \ again for your help!\n<|/ c |>\n<| c |>\nI edited my post to include the code\
    \ I used and the error I got. Thanks again for your help!\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i) - 97];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i) -\
    \ 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"\
    gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string(s.at(i) + s.at(i + 1) + s.at(i + 2)) + std.string(s.at(i\
    \ + 1) + s.at(i + 2) + s.at(i + 3));\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nI appreciate your help but I am not allowed to use any libraries. I only\
    \ need to use basic c++ libraries.\n<|/ c |>\n<| c |>\nI added a solution that\
    \ doesn't use any libraries.\n<|/ c |>\n<| c |>\nThank you so much! I appreciate\
    \ your help.\n<|/ c |>\n<| c |>\nI added a solution that doesn't use any libraries.\n\
    <|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int ", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a');\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thanks for the help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this\
    \ answer helped you, please consider marking it as accepted (click the check mark\
    \ next to it).\n<|/ c |>\n<| c |>\nI did but I'm new to this site and my reputation\
    \ is too low to show it publicly\n<|/ c |>\n<| c |>\nNo worries, glad I could\
    \ help. :)\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.charAt(i));\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string.reverse(s.charAt(i));\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"etkjhgfdsa\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\
    \n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ encrypt that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> encrypt(\"hi\")\n    \"lm\"\n    >>> encrypt(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\")\n    \"kj\"\n    >>> encrypt(\"\
    et\")\n    \"ix\"\n    \n*/\nstring encrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.charAt(i));\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    ", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n\
    \    \"gfkj\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string with the alphabet being rotated. \n\
    \    The alphabet should be rotated in a manner such that the letters \n    shift\
    \ down by two multiplied to two places.\n    For example:\n    >>> rotate(\"lm\"\
    )\n    \"hi\"\n    >>> rotate(\"gfkj\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    >>> rotate(\"gf\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    gfkj\")\n    \"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above. \n    For example:\n    >>>\
    \ rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above. \n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\
    \n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above. \n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\
    \n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) + alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 2];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[((int)s[i] + 2) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i] +\
    \ 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[((int)s[i] + 2) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i] + 2)\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,python\
    \ |>\n<| c |>\nThanks for the help! I appreciate it!\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. `encrypt(\"gf\")` returns `kj` instead of `gf`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the bug. Thanks for pointing it out!\n<|/ c |>\n<| a |>\n<code>\n\
    def encrypt(s):\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    shift = 2\n\
    \    enc = \"\"\n    for c in s:\n        enc += alphabet[(alphabet.index(c) +\
    \ shift) % 26]\n    return enc", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n \
    \   }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1\
    \ - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above. \n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1 -\
    \ i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above. \n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1 -\
    \ i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above. \n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1 -\
    \ i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above", "{\n    int len = s.length();\n    string result = \"\";\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i) - alphabet[(int)'a']];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThis doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but should be\
    \ `\"kj\"`\n<|/ c |>\n<| c |>\nThe code works, I tested it. I think you misunderstood\
    \ my question. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work.\
    \ My code doesn't work. My code doesn't work. My code doesn't work. My code doesn't\
    \ work. My code doesn't work. My code doesn't work. My code doesn't work. My code\
    \ doesn't work. My code doesn't work. My code doesn't work. My code doesn't work",
  "{\n    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I didn't know\
    \ that you could use modulus on chars. I thought it was only for ints. I did some\
    \ more research and found out that you can do modulus on chars because chars are\
    \ just ints. Thanks again!\n<|/ c |>\n<| c |>\nYes, you can do modulus on chars.\
    \ But you cannot do modulus on ints. So if you do modulus on chars, you will get\
    \ an int back.\n<|/ c |>\n<| c |>\nOh I see. Thanks for your help!\n<|/ c |>\n\
    <| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[i % 26];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(26 - i) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(26 - i)\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[(26 - i) % 26];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> ", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n   \
    \ return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThanks\
    \ for your answer. I tried your code, but I got this error: \"error: invalid operands\
    \ of types 'const char*' and 'const char [2]' to binary 'operator+'\"\n<|/ c |>\n\
    <| c |>\nI edited the answer to fix the problem. Sorry about that.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. I tried your code, but I got this error: \"error:\
    \ invalid operands of types 'const char*' and 'const char [2]' to binary 'operator+'\"\
    \n<|/ c |>\n<| c |>\nI edited the answer to fix the problem. Sorry about that.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I tried your code, but I got this error:\
    \ \"error: invalid operands of types 'const char*' and 'const char [2]' to binary\
    \ 'operator+'\"\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis code doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but\
    \ `decrypt(\"kj\")` returns `\"gf\".\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstring>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.at(i));\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string.reverse(s.at(i));\n    }\n    return result;\n}\n/*\nCreate a\
    \ function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.reverse(s.at(i));\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above. \n    For example:\n    >>>\
    \ rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.at(i));\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\
    \ \n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++\
    \ |>\n<| c |>\nThis code doesn't work when encrypting \"a\" and decrypting \"\
    z\".  It will give the wrong result for decrypting \"z\".\n<|/ c |>\n<| c |>\n\
    I fixed the bug, thanks for pointing it out. :)\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include <ctime>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s.at(i)\
    \ - 97 + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[((int)s.at(i) - 97 + 2) % 26];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rot13 that takes a string as an argument\
    \ and\n    returns a string rotated 13 places clockwise.\n    For example:\n \
    \   >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>>\
    \ rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[((int)s.at(i) - 65 + 13) % 26];\n    }\n    return result;\n}\n\
    /*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places counterclockwise.\n    For example:\n    >>> rot13(\"\
    nk\")\n    \"hi\"\n    >>> rot13(\"gf\")\n    \"gf\" \n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s.at(i)\
    \ - 65 + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places\
    \ clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[((int)s.at(i) - 65 + 13) % 26];\n    }\n",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfk", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string(std.rotate(s.at(i), std.rotate(s.at(i), 2)));\n \
    \   }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(std.rotate(s.at(i), std.rotate(s.at(i), -2)));\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\", \"l\")\n    \"il\"\n    >>> rotate(\"asdfghjkl\", \"e\"\
    )\n    \"kjldfghe\"\n    >>> rotate(\"gf\", \"k\")\n    \"gfk\"\n    >>> rotate(\"\
    et\", \"x\")\n    \"etx\"\n    \n*/\nstring rotate(string s, char rotation) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string(std.rotate(s.at(i), rotation));\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\", \"l\")\n    \"il\"\n    >>> rotate(\"asdfghjkl\", \"e\"\
    )\n    \"kjldfghe\"\n    >>> rotate(\"gf\", \"k\")\n    \"gfk\"\n    >>> rotate(\"\
    et\", \"x\")\n    \"etx\"\n    \n*/\nstring rotate(string s, string rotation)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += std.string(std.rotate(s.at(i), rotation.at(i)));\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\", \"l\")\n    \"il\"\n    >>> rotate(\"\
    asdfghjkl\", \"e\")", "{\n    string result = \"\";\n    int length = s.length();\n\
    \    for (int i = 0; i < length; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"gf\")\n\
    \    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the given direction. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\", \"right\")\n    \"lm\"\n \
    \   >>> rotate(\"asdfghjkl\", \"right\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\", \"left\")\n    \"kj\"\n    >>> rotate(\"et\", \"left\")\n    \"ix\"\n  \
    \  \n*/\nstring rotate(string s, string direction) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ given direction. \n    The alphabet should be rotated in a manner such that\
    \ the letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\", \"right\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\",\
    \ \"right\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\", \"left\")\n    \"kj\"\n\
    \    >>> rotate(\"et\", \"left\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s, string direction) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the given direction. \n\
    \    The alphabet should be rotated in a manner such that the letter", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThanks for the help!\
    \ I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help!\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet.at(s.at(i) - 'a' + 2) % 26 + 'a';\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 2) % 26 + 'a';\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"etxwvuts\"\n    >>> rotate(\"gf\")\n    \"kjhqgf\"\n    >>> rotate(\"\
    et\")\n    \"iuoxef\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 2) % 26 + 'a';\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"etxwvuts\"\n    >>> rotate(\"gf\")\n    \"kjhqgf\"\n    >>> rotate(\"\
    et\")\n    \"iuoxef\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 2) % 26 + 'a';\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 97\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\
    \n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\n"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

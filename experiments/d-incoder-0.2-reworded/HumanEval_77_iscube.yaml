name: HumanEval_77_iscube
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Write a function that takes\
  \ an integer a and returns true \n    if this ingeger is a cube of some integer\
  \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
  \    >>> iscube(1L)\n    true\n    >>> iscube(2L)\n    false\n    >>> iscube(-1L)\n\
  \    true\n    >>> iscube(64L)\n    true\n    >>> iscube(0L)\n    true\n    >>>\
  \ iscube(180L)\n    false\n    \n*/\nbool iscube(long a) \n"
tests: "unittest\n{\n    alias candidate = iscube;\n\n    assert(candidate(1L) ==\
  \ true);\n    assert(candidate(2L) == false);\n    assert(candidate(-1L) == true);\n\
  \    assert(candidate(64L) == true);\n    assert(candidate(180L) == false);\n  \
  \  assert(candidate(1000L) == true);\n    assert(candidate(0L) == true);\n    assert(candidate(1729L)\
  \ == false);\n}\nvoid main(){}"
completions: ["{\n    return iscube(a);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    Thanks for your answer. Can you please explain why you used `int` instead of `long`?\n\
    <|/ c |>\n<| c |>\n`int` can hold numbers up to `2^31-1`, while `long` can hold\
    \ numbers up to `2^63-1`. So if you need numbers up to `2^63-1` then use `long`.\n\
    <|/ c |>\n<| c |>\nI see. But why did you use `int` instead of `long`? I thought\
    \ `int` can hold numbers up to `2^31-1`.\n<|/ c |>\n<| c |>\n`int` can hold numbers\
    \ up to `2^31-1`, while `long` can hold numbers up to `2^63-1`. So if you need\
    \ numbers up to `2^63-1` then use `long`.\n<|/ c |>\n<| c |>\nI see. But why did\
    \ you use `int` instead of `long`? I thought `int` can hold numbers up to `2^31-1`.\n\
    <|/ c |>\n<| a tags=c++,c++11 |>\n<code>", "{\n    return (a%4==0) && (a%8==0)\
    \ && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0)\
    \ && (a%1024==0) && (a%2048==0) && (a%4096==0);\n}\n</code>\n<|/ a |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long cube =\
    \ a * a * a;\n    return cube == a && a > 0;\n}\n</code>\n<|/ a tags=c++,c++11\
    \ |>\n<| c |>\nI like this solution, but I wonder how it compares to `iscube(a\
    \ % 3 == 0)`\n<|/ c |>\n<| c |>\n: I guess it depends on the definition of \"\
    cube\".  I suppose that `iscube(a % 3 == 0)` would return `true` if the number\
    \ is a cube of some integer number, but `iscube(a % 3 == 0)` would return `false`\
    \ if the number is not a cube of some integer number.\n<|/ c |>\n<| c |>\n: I\
    \ added a note about that to the answer.\n<|/ c |>\n<| c |>\n: I added a note\
    \ about that to the answer.\n<|/ c |>\n<| c |>\n: I added a note about that to\
    \ the answer.\n<|/ c |>\n<| a tags=c++,c++11 |>\n<code>", "{\n    if (a == 0)\
    \ return true;\n    if (a % 3 == 0) return true;\n    if (a % 5 == 0) return true;\n\
    \    if (a % 7 == 0) return true;\n    return false;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nI guess you meant `a % 3 == 0` instead of `a % 5 == 0`\n<|/ c |>\n\
    <| c |>\nYes, thank you. I fixed it.\n<|/ c |>\n<| a tags=c++,algorithm |>\nThe\
    \ first thing that comes to mind is to check whether a is a multiple of 3 or 5\
    \ or 7. If it is, return true. Otherwise, return false. \n<code>", "{\n    if\
    \ (a == 0)\n        return true;\n    \n    if (a > 0)\n    {\n        if (a %\
    \ 2 == 0)\n            return iscube(a / 2);\n        else\n            return\
    \ iscube(a / 3) * iscube(a / 3);\n    }\n    else\n    {\n        if (a % 3 ==\
    \ 0)\n            return iscube(a / 3);\n        else\n            return iscube(a\
    \ / 3) * iscube(a / 3) * iscube(a / 3);\n    }\n}", "{\n    if (a == 0)\n    \
    \    return true;\n    \n    if (a > 0)\n    {\n        if (a % 2 == 0)\n    \
    \        return iscube(a / 2);\n        else\n            return iscube(a / 3)\
    \ * iscube(a / 3);\n    }\n    else\n    {\n        if (a % 2 == 1)\n        \
    \    return iscube(a / 2);\n        else\n            return iscube(a / 3) * iscube(a\
    \ / 3);\n    }\n}", "{\n    long cube = a * a * a;\n    return cube == a && cube\
    \ == a * a && cube == a * a * a;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't answer the question at all. He wants to know if he can write an algorithm\
    \ to determine if a number is cube.\n<|/ c |>\n<| c |>\nI answered the question\
    \ in the title. He also asked for \"a function that takes an integer a and returns\
    \ true if this ingeger is a cube of some integer number\". I answered that in\
    \ the body of the question. He also asked for \"a function that takes an integer\
    \ a and returns true if this ingeger is a cube of some integer number\". I answered\
    \ that in the body of the question. He also asked for \"a function that takes\
    \ an integer a and returns true if this ingeger is a cube of some integer number\"\
    . I answered that in the body of the question. He also asked for \"a function\
    \ that takes an integer a and returns true if this ingeger is a cube of some integer\
    \ number\". I answered that in the body of the question. He also asked for \"\
    a function that takes an integer a and returns true if this ingeger is a cube\
    \ of some integer number\". I answered that in the body of the question. He also\
    \ asked for \"a function that takes an integer a and returns true if this ingeger\
    \ is a cube of some integer number\". I answered that in the body of the question.\
    \ He also asked for \"a function that takes an integer a and returns true if this\
    \ ingeger is a cube of some integer number\". I answered that in the body of the\
    \ question. He also asked for \"a function that takes an integer a and returns\
    \ true if this ingeger is a cube of some integer number\". I answered that in\
    \ the body of the question. He also asked for \"a function that takes an integer\
    \ a and returns true if this ingeger is a cube of some integer number\". I answered\
    \ that in the body of the question. He also asked for \"a function that takes\
    \ an integer a and returns true if this ingeger is a cube of some integer number\"\
    . I answered that in the body of the question. He also asked for \"a function\
    \ that takes an integer a and returns true if this ingeger is a cube of some integer\
    \ number\". I answered that in the body of the question. He also asked for \"\
    a function that takes an integer ", "{\n    long cube = a * a * a;\n    return\
    \ cube == a && cube > 0;\n}\n</code>\n<|/ a tags=c++,algorithm,math |>\n<| c |>\n\
    This doesn't work. Try `iscube(-1L)` for example. `-1L` isn't a cube of any integer\
    \ number.\n<|/ c |>\n<| c |>\n: I agree with you. I've updated my answer accordingly.\n\
    <|/ c |>\n<| c |>\n: I've updated my answer accordingly.\n<|/ c |>\n<| c |>\n\
    : I've updated my answer accordingly.\n<|/ c |>\n<| c |>\n: I've updated my answer\
    \ accordingly.\n<|/ c |>\n<| a tags=c++,algorithm,math |>\n<code>", "{\n    long\
    \ b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n\
    \    long g = a;\n    long h = a;\n    long i = a;\n    long j = a;\n    long\
    \ k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n\
    \    long p = a;\n    long q = a;\n    long r = a;\n    long s = a;\n    long\
    \ t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n\
    \    long y = a;\n    long z = a;\n    long a = a;\n    long b = a;\n    long\
    \ c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n\
    \    long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long\
    \ l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n\
    \    long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long\
    \ u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n\
    \    long z = a;\n    long a = a;\n    long b = a;\n    long c = a;\n    long\
    \ d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n\
    \    long i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n    long\
    \ m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n\
    \    long r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n    long\
    \ v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n    long z = a;\n\
    \    long a = a;\n    long b = a;\n    long c = a;\n    long d = a;\n    long\
    \ e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n    long i = a;\n\
    \    long j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n    long\
    \ n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n    long r = a;\n\
    \    long s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n    long\
    \ w = a;\n    long x = a;\n    ", "{\n    if (a == 0) return true;\n    if (a\
    \ == 1) return true;\n    if (a == -1) return true;\n    if (a == 2) return true;\n\
    \    if (a == -2) return true;\n    if (a == 3) return true;\n    if (a == -3)\
    \ return true;\n    if (a == 4) return true;\n    if (a == -4) return true;\n\
    \    if (a == 5) return true;\n    if (a == -5) return true;\n    if (a == 6)\
    \ return true;\n    if (a == -6) return true;\n    if (a == 7) return true;\n\
    \    if (a == -7) return true;\n    if (a == 8) return true;\n    if (a == -8)\
    \ return true;\n    if (a == 9) return true;\n    if (a == -9) return true;\n\
    \    if (a == 10) return true;\n    if (a == -10) return true;\n    if (a == 11)\
    \ return true;\n    if (a == -11) return true;\n    if (a == 12) return true;\n\
    \    if (a == -12) return true;\n    if (a == 13) return true;\n    if (a == -13)\
    \ return true;\n    if (a == 14) return true;\n    if (a == -14) return true;\n\
    \    if (a == 15) return true;\n    if (a == -15) return true;\n    if (a == 16)\
    \ return true;\n    if (a == -16) return true;\n    if (a == 17) return true;\n\
    \    if (a == -17) return true;\n    if (a == 18) return true;\n    if (a == -18)\
    \ return true;\n    if (a == 19) return true;\n    if (a == -19) return true;\n\
    \    if (a == 20) return true;\n    if (a == -20) return true;\n    if (a == 21)\
    \ return true;\n    if (a == -21) return true;\n    if (a == 22) return true;\n\
    \    if (a == -22) return true;\n    if (a == 23) return true;\n    if (a == -23)\
    \ return true;\n    if (a == 24) return true;\n    if (a == -24) return true;\n\
    \    if (a == 25) return true;\n    if (a == -25) return true;\n    if (a == 26)\
    \ return true;\n    if (a == -26) return true;\n    if (a == 27) return true;\n\
    \    if (a == -27) return true;\n    if (a == 28) return true;\n    if (a == -28)\
    \ return true;\n    if (a == 29) return true;\n    if (a == -29) return true;\n\
    \    if (a == 30) return true;\n    if (a == -30) return true;\n    if (a == 31)\
    \ return true;\n    if (a == -31) return true;\n    if (a == 32) return true;\n\
    \    if (a == -32) return true;\n    if (a == 33) return true;\n    if (a == -33)\
    \ return true;\n    if (a == 34) return true;\n    if (a == -34) return true;\n\
    \    if (a == 35) return true;\n    if (a == -35) return true;\n    if (a == 36)\
    \ return true;\n    if (a == -36) return true;\n    if (a == 37) return true;\n\
    \    if (a == -37) return true;\n    if (a == 38) return true;\n    if (a == -38)\
    \ return true;\n    if (a == 39) return true;\n    if (a == -39) return true;\n\
    \    if (a == 40) return true;\n    if (a == -40) return true;\n    if (a == 41) ",
  "{\n    long cube = a*a*a*a;\n    return cube == a;\n}", "{\n    if (a == 0)\n \
    \       return true;\n    if (a < 0)\n        return false;\n    if (a % 3 ==\
    \ 0)\n        return true;\n    if (a % 3 == 1)\n        return false;\n    if\
    \ (a % 3 == 2)\n        return true;\n    if (a % 3 == 3)\n        return false;\n\
    \    if (a % 3 == 4)\n        return true;\n    if (a % 3 == 5)\n        return\
    \ false;\n    if (a % 3 == 6)\n        return true;\n    if (a % 3 == 7)\n   \
    \     return false;\n    if (a % 3 == 8)\n        return true;\n    if (a % 3\
    \ == 9)\n        return false;\n    if (a % 3 == 10)\n        return true;\n \
    \   if (a % 3 == 11)\n        return false;\n    if (a % 3 == 12)\n        return\
    \ true;\n    if (a % 3 == 13)\n        return false;\n    if (a % 3 == 14)\n \
    \       return true;\n    if (a % 3 == 15)\n        return false;\n    if (a %\
    \ 3 == 16)\n        return true;\n    if (a % 3 == 17)\n        return false;\n\
    \    if (a % 3 == 18)\n        return true;\n    if (a % 3 == 19)\n        return\
    \ false;\n    if (a % 3 == 20)\n        return true;\n    if (a % 3 == 21)\n \
    \       return false;\n    if (a % 3 == 22)\n        return true;\n    if (a %\
    \ 3 == 23)\n        return false;\n    if (a % 3 == 24)\n        return true;\n\
    \    if (a % 3 == 25)\n        return false;\n    if (a % 3 == 26)\n        return\
    \ true;\n    if (a % 3 == 27)\n        return false;\n    if (a % 3 == 28)\n \
    \       return true;\n    if (a % 3 == 29)\n        return false;\n    if (a %\
    \ 3 == 30)\n        return true;\n    if (a % 3 == 31)\n        return false;\n\
    \    if (a % 3 == 32)\n        return true;\n    if (a % 33 == 0)\n        return\
    \ true;\n    if (a % 33 == 1)\n        return false;\n    if (a % 33 == 2)\n \
    \       return true;\n    if (a % 33 == 3)\n        return false;\n    if (a %\
    \ 33 == 4)\n        return true;\n    if (a % 33 == 5)\n        return false;\n\
    \    if (a % 33 == 6)\n        return true;\n    if (a % 33 == 7)\n        return\
    \ false;\n    if (a % 33 == 8)\n        return true;\n    if (a % 33 == 9)\n \
    \       return false;\n    if (a % 33 == 10)\n        return true;\n    if (a\
    \ % 33 == 11)\n        return false;\n    if (a % 33 == 12)\n        return true;\n\
    \    if (a % 33 == 13)\n        return false;\n    if (a % 33 == 14)\n       \
    \ return true;\n    if (a % 33 == 15)\n        return false;\n    if (a % 33 ==\
    \ 16)\n        return true;\n    if (a % 33 == 17)\n        return false;\n  \
    \  if (a % 33 == 18)\n        return true;\n    if (a % 33 == 19)\n        return\
    \ false;\n    if (a % 33 == 20)\n        return true;\n    if (a % 33 == 21)\n\
    \        return false;\n    if (a % 33 == 22)\n        return true;\n    if (a\
    \ % 33 == 23)\n        return false;\n    if (a % 33 == 24)", "{\n    if (a ==\
    \ 0) return true;\n    if (a == 1) return true;\n    if (a == -1) return true;\n\
    \    if (a == 64) return true;\n    if (a == -64) return true;\n    if (a == 180)\
    \ return true;\n    if (a == -180) return true;\n    if (a == 270) return true;\n\
    \    if (a == -270) return true;\n    if (a == 360) return true;\n    if (a ==\
    \ -360) return true;\n    if (a == 450) return true;\n    if (a == -450) return\
    \ true;\n    if (a == 600) return true;\n    if (a == -600) return true;\n   \
    \ if (a == 720) return true;\n    if (a == -720) return true;\n    if (a == 900)\
    \ return true;\n    if (a == -900) return true;\n    if (a == 1800) return true;\n\
    \    if (a == -1800) return true;\n    if (a == 3600) return true;\n    if (a\
    \ == -3600) return true;\n    if (a == 7200) return true;\n    if (a == -7200)\
    \ return true;\n    if (a == 18000) return true;\n    if (a == -18000) return\
    \ true;\n    if (a == 36000) return true;\n    if (a == -36000) return true;\n\
    \    if (a == 72000) return true;\n    if (a == -72000) return true;\n    if (a\
    \ == 180000) return true;\n    if (a == -180000) return true;\n    if (a == 360000)\
    \ return true;\n    if (a == -360000) return true;\n    if (a == 720000) return\
    \ true;\n    if (a == -720000) return true;\n    if (a == 900000) return true;\n\
    \    if (a == -900000) return true;\n    if (a == 1800000) return true;\n    if\
    \ (a == -1800000) return true;\n    if (a == 3600000) return true;\n    if (a\
    \ == -3600000) return true;\n    if (a == 7200000) return true;\n    if (a ==\
    \ -7200000) return true;\n    if (a == 900000) return true;\n    if (a == -900000)\
    \ return true;\n    if (a == 1800000) return true;\n    if (a == -1800000) return\
    \ true;\n    if (a == 3600000) return true;\n    if (a == -3600000) return true;\n\
    \    if (a == 7200000) return true;\n    if (a == -7200000) return true;\n   \
    \ if (a == 900000) return true;\n    if (a == -900000) return true;\n    if (a\
    \ == 1800000) return true;\n    if (a == -1800000) return true;\n    if (a ==\
    \ 3600000) return true;\n    if (a == -3600000) return true;\n    if (a == 7200000)\
    \ return true;\n    if (a == -7200000) return true;\n    if (a == 900000) return\
    \ true;\n    if (a == -900000) return true;\n    if (a == 1800000) return true;\n\
    \    if (a == -1800000) return true;\n    if (a == 3600000) return true;\n   \
    \ if (a == -3600000) return true;\n    if (a == 7200000) return true;\n    if\
    \ (a == -7200000) return true;\n    if (a == ", "{\n    if (a == 0) return true;\n\
    \    if (a > 0 && a < 180) return true;\n    if (a > 180 && a < 360) return true;\n\
    \    if (a > 360 && a < 720) return true;\n    if (a > 720 && a < 1440) return\
    \ true;\n    if (a > 1440 && a < 2880) return true;\n    if (a > 2880 && a < 5760)\
    \ return true;\n    if (a > 5760 && a < 11520) return true;\n    if (a > 11520\
    \ && a < 23040) return true;\n    if (a > 23040 && a < 46080) return true;\n \
    \   if (a > 46080 && a < 9120) return true;\n    if (a > 9120 && a < 18000) return\
    \ true;\n    if (a > 18000 && a < 36000) return true;\n    if (a > 36000 && a\
    \ < 72000) return true;\n    if (a > 72000 && a < 144000) return true;\n    if\
    \ (a > 144000 && a < 280000) return true;\n    if (a > 280000 && a < 5760000)\
    \ return true;\n    if (a > 5760000 && a < 1152000) return true;\n    if (a >\
    \ 1152000 && a < 2304000) return true;\n    if (a > 2304000 && a < 4608000) return\
    \ true;\n    if (a > 4608000 && a < 912000)\n        return true;\n    if (a >\
    \ 912000 && a < 1800000) return true;\n    if (a > 1800000 && a < 3600000) return\
    \ true;\n    if (a > 3600000 && a < 7200000) return true;\n    if (a > 7200000\
    \ && a < 14400000) return true;\n    if (a > 14400000 && a < 28000000) return\
    \ true;\n    if (a > 28000000 && a < 57600000) return true;\n    if (a > 57600000\
    \ && a < 115200100) return true;\n    if (a > 115200100 && a < 2304000100) return\
    \ true;\n    if (a > 2304000100 && a < 4608000100) return true;\n    if (a > 4608000100\
    \ && a < 912000100) return true;\n    if (a > 912000100 && a < 1800000110) return\
    \ true;\n    if (a > 1800000110 && a < 3600000110) return true;\n    if (a > 3600000110\
    \ && a < 7200000100) return true;\n    if (a > 7200000100 && a < 14400000100)\
    \ return true;\n    if (a > 14400000100 && a < 28000000100) return true;\n   \
    \ if (a > 28000000100 && a < 57600000110) return true;\n    if (a > 57600000110\
    \ && a ", "{\n    long long int cube = a * a * a;\n    return cube == a && a %\
    \ a == 0;\n}", "{\n    return (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) &&\
    \ (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0)\
    \ && (a%4096==0);\n}", "{\n    long b = a;\n    long c = a;\n    long d = a;\n\
    \    long e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n    long\
    \ i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n\
    \    long n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n    long\
    \ r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n\
    \    long w = a;\n    long x = a;\n    long y = a;\n    long z = a;\n    long\
    \ a = a;\n    long b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n\
    \    long f = a;\n    long g = a;\n    long h = a;\n    long i = a;\n    long\
    \ j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n\
    \    long o = a;\n    long p = a;\n    long q = a;\n    long r = a;\n    long\
    \ s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n\
    \    long x = a;\n    long y = a;\n    long z = a;\n    long a = a;\n    long\
    \ b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n\
    \    long g = a;\n    long h = a;\n    long i = a;\n    long j = a;\n    long\
    \ k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n\
    \    long p = a;\n    long q = a;\n    long r = a;\n    long s = a;\n    long\
    \ t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n\
    \    long y = a;\n    long z = a;\n    long a = a;\n    long b = a;\n    long\
    \ c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n\
    \    long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long\
    \ l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n\
    \    long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long\
    \ u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    ", "{\n    if\
    \ (a == 0) return true;\n    if (a % 3 == 0) return true;\n    if (a % 5 == 0)\
    \ return true;\n    if (a % 7 == 0) return true;\n    return false;\n}\n</code>\n\
    <|/ a tags=c++,algorithm |>\n<| c |>\nThe OP said that he can't use any libraries.\n\
    <|/ c |>\n<| c |>\n: I know, but I thought it would be helpful to show how to\
    \ do it without libraries.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't\
    \ use any libraries.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't use\
    \ any libraries.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't use any\
    \ libraries.\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>", "{\n    if (a ==\
    \ 0) return true;\n    if (a % 3 == 0) return true;\n    if (a % 5 == 0) return\
    \ true;\n    if (a % 7 == 0) return true;\n    return false;\n}\n</code>\n<|/\
    \ a tags=c++,algorithm |>\n<| c |>\nThe `iscube` function doesn't work for `iscube(-1L)`\
    \ as `-1L` isn't a cube number.\n<|/ c |>\n<| c |>\nI fixed the code so it works\
    \ for all positive integers. Thanks for pointing that out.\n<|/ c |>\n<| c |>\n\
    I fixed the code so it works for all positive integers. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| c |>\nI fixed the code so it works for all positive integers.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| c |>\nI fixed the code so it works\
    \ for all positive integers. Thanks for pointing that out.\n<|/ c |>\n<| a |>\n\
    <code>", "{\n    long b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n\
    \    long f = a;\n    long g = a;\n    long h = a;\n    long i = a;\n    long\
    \ j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n\
    \    long o = a;\n    long p = a;\n    long q = a;\n    long r = a;\n    long\
    \ s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n\
    \    long x = a;\n    long y = a;\n    long z = a;\n    \n    bool result = true;\n\
    \    \n    for(int i = 0; i <= 9; i++)\n    {\n        if(b == 0)\n        {\n\
    \            result = false;\n            break;\n        }\n        \n      \
    \  for(int j = 0; j <= 9; j++)\n        {\n            if(c == 0)\n          \
    \  {\n                result = false;\n                break;\n            }\n\
    \            \n            for(int k = 0; k <= 9; k++)\n            {\n      \
    \          if(d == 0)\n                {\n                    result = false;\n\
    \                    break;\n                }\n                \n           \
    \     for(int l = 0; l <= 9; l++)\n                {\n                    if(e\
    \ == 0)\n                    {\n                        result = false;\n    \
    \                    break;\n                    }\n                    \n   \
    \                 for(int m = 0; m <= 9; m++)\n                    {\n       \
    \                 if(f == 0)\n                        {\n                    \
    \        result = false;\n                            break;\n               \
    \         }\n                        \n                        for(int n = 0;\
    \ n <= 9; n++)\n                        {\n                            if(g ==\
    \ 0)\n                            {\n                                result =\
    \ false;\n                                break;\n                           \
    \ }\n                            \n                            for(int o = 0;\
    \ o <= 9; o++)\n                            {\n                              \
    \  if(h == 0)\n                                {\n                           \
    \         result = false;\n                                    break;\n      \
    \                          }\n                                \n             \
    \                   for(int p = 0; p <= 9; p++)\n                            \
    \    {\n                                    if(i == 0)\n                     \
    \               {\n                                        result = false;\n \
    \                                       break;\n                             \
    \       }\n                                    \n                            \
    \        for(int q = 0; q <= 9; q++)\n                                    {\n\
    \                                        if(j == 0)\n                        \
    \                {\n                                            result = false;\n\
    \                                            break;\n                        \
    \                }\n                                        \n               \
    \                         for(int r = 0; r <= 9; r++)\n                      \
    \                  {\n                                            if(k == 0)\n\
    \                                            {\n                             \
    \                   result = false;\n                                        \
    \        break;\n                                            }\n             \
    \                               \n                                           \
    \ for(int s = 0; s <= 9; s++)\n                                            {\n\
    \                                                if(l == 0)\n                \
    \                                {\n                                         \
    \           result = false;\n                                                \
    \    break;\n                                                }\n             \
    \                                   \n                                       \
    \         for(int t = 0; t <= 9; t++)\n                                      \
    \          {\n                                                    if(m == ", "{\n\
    \    return std.math.iscube(a);\n}\n</cell>\n<cell>\n%quickref\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1L)\n    true\n    >>>\
    \ iscube(2L)\n    false\n    >>> iscube(-1L)\n    true\n    >>> iscube(64L)\n\
    \    true\n    >>> iscube(0L)\n    true\n    >>> iscube(180L)\n    false\n   \
    \ \n*/", "{\n    return (a==1L || a==3L || a==5L || a==7L || a==9L || a==11L ||\
    \ a==13L || a==15L || a==17L || a==19L || a==21L || a==23L || a==25L || a==27L\
    \ || a==29L || a==31L || a==33L || a==35L || a==37L || a==39L || a==41L || a==43L\
    \ || a==45L || a==47L || a==49L || a==51L || a==53L || a==55L || a==57L || a==59L\
    \ || a==61L || a==63L || a==65L || a==67L || a==69L || a==71L || a==73L || a==75L\
    \ || a==77L || a==79L || a==81L || a==83L || a==85L || a==87L || a==89L || a==91L\
    \ || a==93L || a==95L || a==97L || a==99L || a==101L || a==103L || a==105L ||\
    \ a==107L || a==109L || a==111L || a==113L || a==115L || a==117L || a==119L ||\
    \ a==121L || a==123L || a==125L || a==127L || a==129L || a==131L || a==133L ||\
    \ a==135L || a==137L || a==139L || a==141L || a==143L || a==145L || a==147L ||\
    \ a==149L || a==151L || a==153L || a==155L || a==157L || a==159L || a==161L ||\
    \ a==163L || a==165L || a==167L || a==169L || a==171L || a==173L || a==175L ||\
    \ a==177L || a==179L || a==181L || a==183L || a==185L || a==187L || a==189L ||\
    \ a==191L || a==193L || a==195L || a==197L || a", "{\n    return (a%4==0) && (a%8==0)\
    \ && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0)\
    \ && (a%1024==0);\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThe question\
    \ was about a function that returns `true` if the input is a cube of some integer\
    \ number, not about a function that returns `true` if the input is an integer\
    \ number that is divisible by 4.\n<|/ c |>\n<| c |>\nI agree, my answer was a\
    \ little too quick. I'll delete it in a minute.\n<|/ c |>\n<| c |>\nI agree with\
    \ you, my answer was too quick. I'll delete it in a minute.\n<|/ c |>\n<| c |>\n\
    I agree with you, my answer was too quick. I'll delete it in a minute.\n<|/ c\
    \ |>\n<| c |>\nI agree with you, my answer was too quick. I'll delete it in a\
    \ minute.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "{\n    return (a%4==0) && (a%8==0)\
    \ && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0)\
    \ && (a%1024==0);\n}\n</code>\n<|/ a tags=c++,algorithm,math |>\n<| c |>\nI like\
    \ your solution, but I believe that `(a%4==0) && (a%8==0) && (a%16==0) && (a%32==0)\
    \ && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)` is more\
    \ efficient than `(a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0)\
    \ && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)`\n<|/ c |>\n<| c |>\n\
    I believe that `(a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) &&\
    \ (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)` is more efficient than\
    \ `(a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) &&\
    \ (a%256==0) && (a%512==0) && (a%1024==0)`\n<|/ c |>\n<| c |>\nI believe that\
    \ `(a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) &&\
    \ (a%256==0) && (a%512==0) && (a%1024==0)` is more efficient than `(a%4==0) &&\
    \ (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0)`\n<|/ c |>\n<| c |>\nI believe that `(a%4==0) &&\
    \ (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0)` is more efficient than `(a%4==0) && (a%8==0) &&\
    \ (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0)\
    \ && (a%1024==0)`\n<|/ c ", "{\n    long cube = pow(a, 3);\n    return cube ==\
    \ a;\n}", "{\n    long long int b = a;\n    \n    long long int c = b;\n    \n\
    \    long long int d = c;\n    \n    long long int e = d;\n    \n    long long\
    \ int f = e;\n    \n    long long int g = f;\n    \n    long long int h = g;\n\
    \    \n    long long int i = h;\n    \n    long long int j = i;\n    \n    long\
    \ long int k = j;\n    \n    long long int l = k;\n    \n    long long int m =\
    \ l;\n    \n    long long int n = m;\n    \n    long long int o = n;\n    \n \
    \   long long int p = o;\n    \n    long long int q = p;\n    \n    long long\
    \ int r = q;\n    \n    long long int s = r;\n    \n    long long int t = s;\n\
    \    \n    long long int u = t;\n    \n    long long int v = u;\n    \n    long\
    \ long int w = v;\n    \n    long long int x = w;\n    \n    long long int y =\
    \ x;\n    \n    long long int z = y;\n    \n    long long int a = z;\n    \n \
    \   long long int b = a;\n    \n    long long int c = b;\n    \n    long long\
    \ int d = c;\n    \n    long long int e = d;\n    \n    long long int f = e;\n\
    \    \n    long long int g = f;\n    \n    long long int h = g;\n    \n    long\
    \ long int i = h;\n    \n    long long int j = i;\n    \n    long long int k =\
    \ j;\n    \n    long long int l = k;\n    \n    long long int m = l;\n    \n \
    \   long long int n = m;\n    \n    long long int o = n;\n    \n    long long\
    \ int p = o;\n    \n    long long int q = p;\n    \n    long long int r = q;\n\
    \    \n    long long int s = r;\n    \n    long long int t = s;\n    \n    long\
    \ long int u = t;\n    \n    long long int v = u;\n    \n    long long int w =\
    \ v;\n    \n    long long int x = w;\n    \n    long long int y = x;\n    \n \
    \   long long int z = y;\n    \n    long long int a = z;\n    \n    long long\
    \ int b = a;\n    \n    long long int c = b;\n    \n    long long int d = c;\n\
    \    \n    long long ", "{\n    if (a == 0) return true;\n    if (a % 3 == 0)\
    \ return true;\n    if (a % 5 == 0) return true;\n    if (a % 7 == 0) return true;\n\
    \    return false;\n}\n</code>\n<|/ a tags=c++,c++11 |>\n<| c |>\nThis doesn't\
    \ work. `iscube(-1L)` returns `true` but `iscube(64L)` returns `false`.\n<|/ c\
    \ |>\n<| c |>\nYes, I know. That's why I wrote \"you may assume the input is always\
    \ valid\".\n<|/ c |>\n<| c |>\nI didn't say it wasn't a solution. I said it wasn't\
    \ a solution to the problem stated in the question. Your solution doesn't work\
    \ for the problem stated in the question.\n<|/ c |>\n<| c |>\nI didn't say it\
    \ wasn't a solution. I said it wasn't a solution to the problem stated in the\
    \ question. Your solution doesn't work for the problem stated in the question.\
    \ Your solution doesn't work for the problem stated in the question.\n<|/ c |>\n\
    <| c |>\nI didn't say it wasn't a solution. I said it wasn't a solution to the\
    \ problem stated in the question. Your solution doesn't work for the problem stated\
    \ in the question. Your solution doesn't work for the problem stated in the question.\n\
    <|/ c |>\n<| a tags=c++,c++11 |>\n<code>", "{\n    long long int b = a;\n    long\
    \ long int c = a;\n    long long int d = a;\n    long long int e = a;\n    long\
    \ long int f = a;\n    long long int g = a;\n    long long int h = a;\n    long\
    \ long int i = a;\n    long long int j = a;\n    long long int k = a;\n    long\
    \ long int l = a;\n    long long int m = a;\n    long long int n = a;\n    long\
    \ long int o = a;\n    long long int p = a;\n    long long int q = a;\n    long\
    \ long int r = a;\n    long long int s = a;\n    long long int t = a;\n    long\
    \ long int u = a;\n    long long int v = a;\n    long long int w = a;\n    long\
    \ long int x = a;\n    long long int y = a;\n    long long int z = a;\n    \n\
    \    bool result = false;\n    \n    for(int i = 0; i <= 9; i++)\n    {\n    \
    \    if(b == 1)\n        {\n            result = true;\n            break;\n \
    \       }\n        \n        b = b / 3;\n    }\n    \n    for(int i = 0; i <=\
    \ 9; i++)\n    {\n        if(c == 1)\n        {\n            result = true;\n\
    \            break;\n        }\n        \n        c = c / 3;\n    }\n    \n  \
    \  for(int i = 0; i <= 9; i++)\n    {\n        if(d == 1)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        d = d /\
    \ 3;\n    }\n    \n    for(int i = 0; i <= 9; i++)\n    {\n        if(e == 1)\n\
    \        {\n            result = true;\n            break;\n        }\n      \
    \  \n        e = e / 3;\n    }\n    \n    for(int i = 0; i <= 9; i++)\n    {\n\
    \        if(f == 1)\n        {\n            result = true;\n            break;\n\
    \        }\n        \n        f = f / 3;\n    }\n    \n    for(int i = 0; i <=\
    \ 9; i++)\n    {\n        if(g == 1)\n        {\n            result = true;\n\
    \            break;\n        }\n        \n        g = g / 3;\n    }\n    \n  \
    \  for(int i = 0; i <= 9; i++)\n    {\n        if(h == 1)\n        {\n       \
    \     result = true;\n            break;\n        }\n        \n        h = h /\
    \ 3;\n    }\n    \n    for(int i = 0; i <= 9; i++)\n    {\n        if(i == 1)\n\
    \        {\n            result = true;\n            break;\n        }\n      \
    \  \n        i = i / 3;\n    }\n    \n    for(int i = 0; i <= 9; i++)\n    {\n\
    \        if(j == 1)\n        {\n            result = true;\n            break;\n\
    \        }\n        \n        j = j / 3;\n    }\n    \n    for(int i = 0; i <=\
    \ 9; i++)\n    {", "{\n    long cube = std.math.pow(a, 3);\n    return cube ==\
    \ std.math.pow(cube, 3);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27818006)\n\
    <|/ c |>\n<| c |>\nThe question was how to write a function that returns true\
    \ if the input is a cube of some integer number. My answer does exactly that.\
    \ My answer also explains why my answer works. I did not post a comment because\
    \ I did not have enough reputation to do so. My answer was posted as an answer\
    \ to the question \"How to write a function that returns true if the input is\
    \ a cube of some integer number?\" The question was how to write a function that\
    \ returns true if the input is a cube of some integer number. My answer does exactly\
    \ that. My answer also explains why my answer works. I did not post a comment\
    \ because I did not have enough reputation to do so. My answer was posted as an\
    \ answer to the question \"How to write a function that returns true if the input\
    \ is a cube of some integer number?\" The question was how to write a function\
    \ that returns true if the input is a cube of some integer number. My answer does\
    \ exactly that. My answer also explains why my answer works.\n<|/ c |>\n<| c |>\n\
    I did not post a comment because I did not have enough reputation to do so. My\
    \ answer was posted as an answer to the question \"How to write a function that\
    \ returns true if the input is a cube of some integer number?\" The question was\
    \ how to write a function that returns true if the input is a cube of some integer\
    \ number. My answer does exactly that. My answer also explains why my answer works.\
    \ I did not post a comment because I did not have enough reputation to do so.\
    \ My answer was posted as an answer to the question \"How to write a function\
    \ that returns true if the input is a cube of some integer number?\" The question\
    \ was how to write a function that returns true if the input is a cube of some\
    \ integer number. My answer does exactly that. My answer also explains why my\
    \ answer works.\n<|/ c |>\n<| c |>\nI did not post a comment because I did not\
    \ have enough reputation to do so. My answer was posted as an answer to the question\
    \ \"How to write a function that returns true if the input is a cube of some integer\
    \ number?\" The question was how to write a function that returns true if the\
    \ input is a ", "{\n    return std.math.pow(a, 3) == std.math.pow(a, 2) && a *\
    \ a == a;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,math,algorithm |>\n<code>",
  "{\n    long b = a;\n    long c = a;\n    long d = a;\n    long e = a;\n    long\
    \ f = a;\n    long g = a;\n    long h = a;\n    long i = a;\n    long j = a;\n\
    \    long k = a;\n    long l = a;\n    long m = a;\n    long n = a;\n    long\
    \ o = a;\n    long p = a;\n    long q = a;\n    long r = a;\n    long s = a;\n\
    \    long t = a;\n    long u = a;\n    long v = a;\n    long w = a;\n    long\
    \ x = a;\n    long y = a;\n    long z = a;\n    long A = a;\n    long B = a;\n\
    \    long C = a;\n    long D = a;\n    long E = a;\n    long F = a;\n    long\
    \ G = a;\n    long H = a;\n    long I = a;\n    long J = a;\n    long K = a;\n\
    \    long L = a;\n    long M = a;\n    long N = a;\n    long O = a;\n    long\
    \ P = a;\n    long Q = a;\n    long R = a;\n    long S = a;\n    long T = a;\n\
    \    long U = a;\n    long V = a;\n    long W = a;\n    long X = a;\n    long\
    \ Y = a;\n    long Z = a;\n    long a = a;\n    long b = a;\n    long c = a;\n\
    \    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n    long\
    \ h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long l = a;\n\
    \    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n    long\
    \ q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long u = a;\n\
    \    long v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n    long\
    \ z = a;\n    long A = a;\n    long B = a;\n    long C = a;\n    long D = a;\n\
    \    long E = a;\n    long F = a;\n    long G = a;\n    long H = a;\n    long\
    \ I = a;\n    long J = a;\n    long K = a;\n    long L = a;\n    long M = a;\n\
    \    long N = a;\n    long O = a;\n    long P = a;\n    long Q", "{\n    return\
    \ iscube_(a);\n}", "{\n    return (a*a*a*a == a);\n}\n</code>\n<|/ a tags=c++,c\
    \ |>\n<| c |>\nThe question was about C/C++, not C#.\n<|/ c |>\n<| c |>\n: I didn't\
    \ see that when I wrote the answer. My bad.\n<|/ c |>\n<| c |>\n: I added a C++\
    \ version as well. Hope it helps.\n<|/ c |>\n<| c |>\n: I added a C version as\
    \ well. Hope it helps.\n<|/ c |>\n<| c |>\n: I added a C++ version as well. Hope\
    \ it helps.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n#include <iostream>\n#include\
    \ <cmath>\nusing namespace std;", "{\n    long long int b = a;\n    long long\
    \ int c = a;\n    long long int d = a;\n    long long int e = a;\n    long long\
    \ int f = a;\n    long long int g = a;\n    long long int h = a;\n    long long\
    \ int i = a;\n    long long int j = a;\n    long long int k = a;\n    long long\
    \ int l = a;\n    long long int m = a;\n    long long int n = a;\n    long long\
    \ int o = a;\n    long long int p = a;\n    long long int q = a;\n    long long\
    \ int r = a;\n    long long int s = a;\n    long long int t = a;\n    long long\
    \ int u = a;\n    long long int v = a;\n    long long int w = a;\n    long long\
    \ int x = a;\n    long long int y = a;\n    long long int z = a;\n    long long\
    \ int aa = a;\n    long long int ab = a;\n    long long int ac = a;\n    long\
    \ long int ad = a;\n    long long int ae = a;\n    long long int af = a;\n   \
    \ long long int ag = a;\n    long long int ah = a;\n    long long int ai = a;\n\
    \    long long int aj = a;\n    long long int ak = a;\n    long long int al =\
    \ a;\n    long long int am = a;\n    long long int an = a;\n    long long int\
    \ ao = a;\n    long long int ap = a;\n    long long int aq = a;\n    long long\
    \ int ar = a;\n    long long int as = a;\n    long long int at = a;\n    long\
    \ long int au = a;\n    long long int av = a;\n    long long int aw = a;\n   \
    \ long long int ax = a;\n    long long int ay = a;\n    long long int az = a;\n\
    \    long long int ba = a;\n    long long int bb = a;\n    long long int bc =\
    \ a;\n    long long int bd = a;\n    long long int be = a;\n    long long int\
    \ bf = a;\n    long long int bg = a;\n    long long int bh = a;\n    long long\
    \ int bi = a;\n    long long int bj = a;\n    long long int bk = a;\n    long\
    \ long int bl = a;\n    long long int bm = a;\n    long long int bn = a;\n   \
    \ long long int bo = a;\n    long long int bp = a;", "{\n    return iscube(a);\n\
    }\n</code>\n<|/ a tags=c++,recursion,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try `iscube(-1L)`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated\
    \ the answer accordingly.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long cube\
    \ = a*a*a*a;\n    return cube == a;\n}", "{\n    if (a == 0) return true;\n  \
    \  long b = a / 3;\n    if (a % 3 == 0) return iscube(b);\n    else return iscube(b)\
    \ || iscube(b + 1) || iscube(b + 2);\n}\n</code>\n<|/ a tags=recursion,c++,algorithm\
    \ |>\n<| c |>\nThis is not the right solution. Try iscube(64L).\n<|/ c |>\n<|\
    \ c |>\n: I agree. I've added a note to the answer.\n<|/ c |>\n<| c |>\n: I've\
    \ added a solution that works with negative numbers as well.\n<|/ c |>\n<| c |>\n\
    : I've added a solution that works with negative numbers as well.\n<|/ c |>\n\
    <| c |>\n: I've added a solution that works with negative numbers as well.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "{\n    if (a == 0) return true;\n    if (a\
    \ == 1) return true;\n    if (a == -1) return true;\n    if (a == 64) return true;\n\
    \    if (a == -64) return true;\n    if (a == 180) return true;\n    if (a ==\
    \ -180) return true;\n    if (a == 270) return true;\n    if (a == -270) return\
    \ true;\n    if (a == 360) return true;\n    if (a == -360) return true;\n   \
    \ if (a == 450) return true;\n    if (a == -450) return true;\n    if (a == 540)\
    \ return true;\n    if (a == -540) return true;\n    if (a == 630) return true;\n\
    \    if (a == -630) return true;\n    if (a == 720) return true;\n    if (a ==\
    \ -720) return true;\n    if (a == 900) return true;\n    if (a == -900) return\
    \ true;\n    if (a == 1800) return true;\n    if (a == -1800) return true;\n \
    \   if (a == 2700) return true;\n    if (a == -2700) return true;\n    if (a ==\
    \ 3600) return true;\n    if (a == -3600) return true;\n    if (a == 450) return\
    \ true;\n    if (a == -450) return true;\n    if (a == 540) return true;\n   \
    \ if (a == -540) return true;\n    if (a == 630) return true;\n    if (a == -630)\
    \ return true;\n    if (a == 720) return true;\n    if (a == -720) return true;\n\
    \    if (a == 900) return true;\n    if (a == -900) return true;\n    if (a ==\
    \ 1800) return true;\n    if (a == -1800) return true;\n    if (a == 2700) return\
    \ true;\n    if (a == -2700) return true;\n    if (a == 3600) return true;\n \
    \   if (a == -3600) return true;\n    if (a == 450) return true;\n    if (a ==\
    \ -450) return true;\n    if (a == 540) return true;\n    if (a == -540) return\
    \ true;\n    if (a == 630) return true;\n    if (a == -630) return true;\n   \
    \ if (a == 720) return true;\n    if (a == -720) return true;\n    if (a == 900)\
    \ return true;\n    if (a == -900) return true;\n    if (a == 1800) return true;\n\
    \    if (a == -1800) return true;\n    if (a == 2700) return true;\n    if (a\
    \ == -2700) return true;\n    if (a == 3600) return true;\n    if (a == -3600)\
    \ return true;\n    if (a == 450) return true;\n    if (a == -450) return true;\n\
    \    if (a == 540) return true;\n    if (a == -540) return true;\n    if (a ==\
    \ 630) return true;\n    if (a == -630) return true;\n    if (a == 720) return\
    \ true;\n    if (a == -720) return true;\n    if (a == 900) return true;\n   \
    \ if (a == -900) return true;\n    if (a == 1800) return true;\n    if (a == -1800)\
    \ return true;\n    if (a == 2700) return true;\n    if (a == -2700) return true;\n\
    \    if (a == 3600) return true;\n    if (a == -3600) return true;\n    if (a\
    \ == 450) return true;\n    if (a == -4", "{\n    return ((a % 3) == 0 && (a %\
    \ 5) == 0 && (a % 7) == 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `iscube(180)`.\n<|/ c |>\n<| c |>\nI didn't downvote, but\
    \ I suspect it's because you didn't actually test your code. `iscube(180)` returns\
    \ `true` on my machine.\n<|/ c |>\n<| c |>\nI didn't downvote either, but your\
    \ answer doesn't work. Try it with `iscube(180)`.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I even tested it on ideone.com. http://ideone.com/w4sX8\n<|/\
    \ c |>\n<| c |>\nI tested it on ideone.com. http://ideone.com/w4sX8\n<|/ c |>\n\
    <| a |>\n<code>", "{\n    return ((a*a*a)==(a*a*a*a));\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question at all. OP wants to know if a\
    \ **cube** of some integer is valid. Your code checks if a **square** of some\
    \ integer is valid. Your code doesn't even compile.\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question. He wants to know if a **cube** of some integer\
    \ is valid. He also stated that he is aware of how to check if a number is square.\
    \ He also stated that he is aware of how to check if a number is cube. He also\
    \ stated that he is aware of how to check if a number is divisible by 3. He also\
    \ stated that he is aware of how to check if a number is divisible by 6. He also\
    \ stated that he is aware of how to check if a number is divisible by 9. He also\
    \ stated that he is aware of how to check if a number is divisible by 18. He also\
    \ stated that he is aware of how to check if a number is divisible by 27. He also\
    \ stated that he is aware of how to check if a number is divisible by 36. He also\
    \ stated that he is aware of how to check if a number is divisible by 45. He also\
    \ stated that he is aware of how to check if a number is divisible by 54. He also\
    \ stated that he is aware of how to check if a number is divisible by 63. He also\
    \ stated that he is aware of how to check if a number is divisible by 72. He also\
    \ stated that he is aware of how to check if a number is divisible by 81.\n<|/\
    \ c |>\n<| c |>\nHe also stated that he is aware of how to check if a number is\
    \ divisible by 91. He also stated that he is aware of how to check if a number\
    \ is divisible by 273. He also stated that he is aware of how to check if a number\
    \ is divisible by 729. He also stated that he is aware of how to check if a number\
    \ is divisible by 818. He also stated that he is aware of how to check if a number\
    \ is divisible by 918. He also stated that he is aware of how to check if a number\
    \ is divisible by 2718. He also stated that he is aware of how to check if a number\
    \ is divisible by 3618. He also stated that he is aware of how to check if a ",
  "{\n    long cube = a * a * a;\n    return cube == a * a * a + a * a + a;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work. Try `iscube(-1L)` for example.\
    \ `-1L` will evaluate to `1L` which is not divisible by `3`.\n<|/ c |>\n<| c |>\n\
    : I didn't realize that `-1L` would evaluate to `1L`. Thanks for pointing that\
    \ out. I've updated my answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "{\n    long\
    \ long int b = (a / 3) * 3;\n    return a == b*b;\n}", "{\n    return (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0);\n}\n</code>\n<|/\
    \ a tags=c++,c,algorithm,math,performance |>\n<| c |>\nThis doesn't work. Try\
    \ iscube(180). Your function returns true.\n<|/ c |>\n<| c |>\n: I see your point.\
    \ Thanks for pointing it out. I've updated my answer.\n<|/ c |>\n<| c |>\n: I've\
    \ updated my answer with another solution that doesn't require a loop.\n<|/ c\
    \ |>\n<| c |>\n: I've updated my answer with another solution that doesn't require\
    \ a loop.\n<|/ c |>\n<| c |>\n: I've updated my answer with another solution that\
    \ doesn't require a loop.\n<|/ c |>\n<| a dscore=3 |>\n<code>", "{\n    long cube\
    \ = a * a * a;\n    return cube == a && cube > 0;\n}\n</code>\n<|/ a tags=c++,math,algorithm\
    \ |>\n<| c |>\nI believe this would fail for `iscube(0)`, which should return\
    \ `true`.\n<|/ c |>\n<| c |>\n: I agree. Fixed now.\n<|/ c |>\n<| c |>\nThis fails\
    \ for `iscube(0)` because `cube` will never be `0`.\n<|/ c |>\n<| c |>\n: I agree.\
    \ Fixed now.\n<|/ c |>\n<| c |>\n: I agree. Fixed now.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "{\n    return iscube(a);\n}", "{\n    return (a*a*a*a == a);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. Try `iscube(-1L)`.\
    \ Also, `iscube(64L)` returns `true` but `iscube(64L)` returns `false`.\n<|/ c\
    \ |>\n<| c |>\nI didn't see that one. Thanks. I fixed it.\n<|/ c |>\n<| c |>\n\
    I fixed the iscube function. I had a bug in the previous one.\n<|/ c |>\n<| c\
    \ |>\nI fixed the iscube function. I had a bug in the previous one.\n<|/ c |>\n\
    <| c |>\nI fixed the iscube function. I had a bug in the previous one.\n<|/ c\
    \ |>\n<| a |>\n<code>", "{\n    if (a == 0) return true;\n    if (a > 0 && a <\
    \ 180) return true;\n    if (a > 180 && a < 360) return true;\n    if (a > 360\
    \ && a < 720) return true;\n    if (a > 720 && a < 1440) return true;\n    if\
    \ (a > 1440 && a < 2880) return true;\n    if (a > 2880 && a < 5760) return true;\n\
    \    if (a > 5760 && a < 11520) return true;\n    if (a > 11520 && a < 17280)\
    \ return true;\n    if (a > 17280 && a < 25120) return true;\n    if (a > 25120\
    \ && a < 31520) return true;\n    if (a > 31520 && a < 40960) return true;\n \
    \   if (a > 40960) return true;\n    return false;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long cube = a * a * a;\n    if (cube == a) return true;\n    else return\
    \ false;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your answer, but I think\
    \ it would be better to use a `bool` return type instead of `void`.  Also, you\
    \ could use `return cube == a;` instead of `return cube == a ? true : false;`\n\
    <|/ c |>\n<| c |>\nI agree with you, `bool` return type is better. Thanks for\
    \ the suggestion.\n<|/ c |>\n<| a tags=c++,boolean,function |>\n<code>", "{\n\
    \    if (a == 1L) return true;\n    if (a == 2L) return true;\n    if (a == 3L)\
    \ return true;\n    if (a == 4L) return true;\n    if (a == 5L) return true;\n\
    \    if (a == 6L) return true;\n    if (a == 7L) return true;\n    if (a == 8L)\
    \ return true;\n    if (a == 9L) return true;\n    if (a == 10L) return true;\n\
    \    if (a == 11L) return true;\n    if (a == 12L) return true;\n    if (a ==\
    \ 13L) return true;\n    if (a == 14L) return true;\n    if (a == 15L) return\
    \ true;\n    if (a == 16L) return true;\n    if (a == 17L) return true;\n    if\
    \ (a == 18L) return true;\n    if (a == 19L) return true;\n    if (a == 20L) return\
    \ true;\n    if (a == 21L) return true;\n    if (a == 22L) return true;\n    if\
    \ (a == 23L) return true;\n    if (a == 24L) return true;\n    if (a == 25L) return\
    \ true;\n    if (a == 26L) return true;\n    if (a == 27L) return true;\n    if\
    \ (a == 28L) return true;\n    if (a == 29L) return true;\n    if (a == 30L) return\
    \ true;\n    if (a == 31L) return true;\n    if (a == 32L) return true;\n    if\
    \ (a == 33L) return true;\n    if (a == 34L) return true;\n    if (a == 35L) return\
    \ true;\n    if (a == 36L) return true;\n    if (a == 37L) return true;\n    if\
    \ (a == 38L) return true;\n    if (a == 39L) return true;\n    if (a == 40L) return\
    \ true;\n    if (a == 41L) return true;\n    if (a == 42L) return true;\n    if\
    \ (a == 43L) return true;\n    if (a == 44L) return true;\n    if (a == 45L) return\
    \ true;\n    if (a == 46L) return true;\n    if (a == 47L) return true;\n    if\
    \ (a == 48L) return true;\n    if (a == 49L) return true;\n    if (a == 50L) return\
    \ true;\n    if (a == 51L) return true;\n    if (a == 52L) return true;\n    if\
    \ (a == 53L) return true;\n    if (a == 54L) return true;\n    if (a == 55L) return\
    \ true;\n    if (a == 56L) return true;\n    if (a == 57L) return true;\n    if\
    \ (a == 58L) return true;\n    if (a == 59L) return true;\n    if (a == 60L) return\
    \ true;\n    if (a == 61L) return true;\n    if (a == 62L) return true;\n    if\
    \ (a == 63L) return true;\n    if (a == 64L) return true;\n    if (a == 65L) return\
    \ true;\n    if (a == 66L) return true;\n    if (a == 67L) return true;\n    if\
    \ (a == 68L) return true;\n    if (a == 69L) return true;\n    if (a == 70L) return\
    \ true;\n    if (a == 71L) return true;\n    if (a == 72L) return true;\n    if\
    \ (a == 73L) return true;", "{\n    long cube = a * a * a;\n    return cube ==\
    \ a && a != 0;\n}\n</code>\n<|/ a tags=c++,function,c++11 |>\n<| c |>\n`iscube`\
    \ should return `true` for non-zero inputs. `iscube(0)` should return `true`.\n\
    <|/ c |>\n<| c |>\nI agree, I have updated my answer to reflect this.\n<|/ c |>\n\
    <| a |>\n<code>", "{\n    if (a == 0)\n        return true;\n    if (a < 0)\n\
    \        return false;\n    if (a % 3 == 0)\n        return true;\n    if (a %\
    \ 3 == 1)\n        return false;\n    if (a % 3 == 2)\n        return true;\n\
    \    \n    long b = a / 3;\n    if (b == 1)\n        return true;\n    if (b ==\
    \ 2)\n        return false;\n    \n    long c = a / 3;\n    if (c == 1)\n    \
    \    return false;\n    if (c == 2)\n        return true;\n    \n    long d =\
    \ a / 3;\n    if (d == 1)\n        return true;\n    if (d == 2)\n        return\
    \ false;\n    \n    long e = a / 3;\n    if (e == 1)\n        return false;\n\
    \    if (e == 2)\n        return true;\n    \n    long f = a / 3;\n    if (f ==\
    \ 1)\n        return true;\n    if (f == 2)\n        return false;\n    \n   \
    \ long g = a / 3;\n    if (g == 1)\n        return true;\n    if (g == 2)\n  \
    \      return false;\n    \n    long h = a / 3;\n    if (h == 1)\n        return\
    \ true;\n    if (h == 2)\n        return false;\n    \n    long i = a / 3;\n \
    \   if (i == 1)\n        return true;\n    if (i == 2)\n        return false;\n\
    \    \n    long j = a / 3;\n    if (j == 1)\n        return true;\n    if (j ==\
    \ 2)\n        return false;\n    \n    long k = a / 3;\n    if (k == 1)\n    \
    \    return true;\n    if (k == 2)\n        return false;\n    \n    long l =\
    \ a / 3;\n    if (l == 1)\n        return true;\n    if (l == 2)\n        return\
    \ false;\n    \n    long m = a / 3;\n    if (m == 1)\n        return true;\n \
    \   if (m == 2)\n        return false;\n    \n    long n = a / 3;\n    if (n ==\
    \ 1)\n        return true;\n    if (n == 2)\n        return false;\n    \n   \
    \ long o = a / 3;\n    if (o == 1)\n        return true;\n    if (o == 2)\n  \
    \      return false;\n    \n    long p = a / 3;\n    if (p == 1)\n        return\
    \ true;\n    if (p == 2)\n        return false;\n    \n    long q = a / 3;\n \
    \   if (q == 1)\n        return true;\n    if (q == 2)\n        return false;\n\
    \    \n    long r = a / 3;\n    if (r == 1)\n        return true;\n    if (r ==\
    \ 2)\n        return false;\n    \n    long s = a / 3;\n    if (s == 1)\n    \
    \    return true;\n    if (s == 2)\n        return false;\n    \n    long t =\
    \ a / 3;\n    if (t == 1)\n        return true;\n    if (t == 2)\n        return\
    \ false;\n    \n    long u = a / 3;\n    if (u == 1)\n        return true;\n \
    \   if (u == 2)\n        return false;\n    \n    long v = a / 3;\n    if (v ==\
    \ 1)\n        return true;\n    if (v == 2)\n        return false;\n    \n", "{\n\
    \    long long int b = a;\n    long long int c = a;\n    long long int d = a;\n\
    \    long long int e = a;\n    long long int f = a;\n    long long int g = a;\n\
    \    long long int h = a;\n    long long int i = a;\n    long long int j = a;\n\
    \    long long int k = a;\n    long long int l = a;\n    long long int m = a;\n\
    \    long long int n = a;\n    long long int o = a;\n    long long int p = a;\n\
    \    long long int q = a;\n    long long int r = a;\n    long long int s = a;\n\
    \    long long int t = a;\n    long long int u = a;\n    long long int v = a;\n\
    \    long long int w = a;\n    long long int x = a;\n    long long int y = a;\n\
    \    long long int z = a;\n    long long int A = a;\n    long long int B = a;\n\
    \    long long int C = a;\n    long long int D = a;\n    long long int E = a;\n\
    \    long long int F = a;\n    long long int G = a;\n    long long int H = a;\n\
    \    long long int I = a;\n    long long int J = a;\n    long long int K = a;\n\
    \    long long int L = a;\n    long long int M = a;\n    long long int N = a;\n\
    \    long long int O = a;\n    long long int P = a;\n    long long int Q = a;\n\
    \    long long int R = a;\n    long long int S = a;\n    long long int T = a;\n\
    \    long long int U = a;\n    long long int V = a;\n    long long int W = a;\n\
    \    long long int X = a;\n    long long int Y = a;\n    long long int Z = a;\n\
    \    long long int AA = a;\n    long long int AB = a;\n    long long int AC =\
    \ a;\n    long long int AD = a;\n    long long int AE = a;\n    long long int\
    \ AF = a;\n    long long int AG = a;\n    long long int AH = a;\n    long long\
    \ int AI = a;\n    long long int AJ = a;\n    long long int AK = a;\n    long\
    \ long int AL = a;\n    long long int AM = a;\n    long long int AN = a;\n   \
    \ long long int AO = a;\n    long long int AP = a;", "{\n    long b = a;\n   \
    \ long c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long g =\
    \ a;\n    long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n   \
    \ long l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long p =\
    \ a;\n    long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n   \
    \ long u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    long y =\
    \ a;\n    long z = a;\n    \n    bool result = true;\n    \n    for(int i = 0;\
    \ i < 8; i++)\n    {\n        if(b == 0)\n        {\n            result = false;\n\
    \            break;\n        }\n        \n        long temp = b;\n        b =\
    \ b / 3;\n        \n        if(temp != 0)\n        {\n            result = false;\n\
    \            break;\n        }\n    }\n    \n    for(int i = 0; i < 8; i++)\n\
    \    {\n        if(c == 0)\n        {\n            result = false;\n         \
    \   break;\n        }\n        \n        long temp = c; \n        c = c / 3;\n\
    \        \n        if(temp != 0)\n        {\n            result = false;\n   \
    \         break;\n        }\n    }\n    \n    for(int i = 0; i < 8; i++)\n   \
    \ {\n        if(d == 0)\n        {\n            result = false;\n            break;\n\
    \        }\n        \n        long temp = d;\n        d = d / 3;\n        \n \
    \       if(temp != 0)\n        {\n            result = false;\n            break;\n\
    \        }\n    }\n    \n    for(int i = 0; i < 8; i++)\n    {\n        if(e ==\
    \ 0)\n        {\n            result = false;\n            break;\n        }\n\
    \        \n        long temp = e;\n        e = e / 3;\n        \n        if(temp\
    \ != 0)\n        {\n            result = false;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < 8; i++)\n    {\n        if(f == 0)\n    \
    \    {\n            result = false;\n            break;\n        }\n        \n\
    \        long temp = f;\n        f = f / 3;\n        \n        if(temp != 0)\n\
    \        {\n            result = false;\n            break;\n        }\n    }\n\
    \    \n    for(int i = 0; i < 8; i++)\n    {\n        if(g == 0)\n        {\n\
    \            result = false;\n            break;\n        }\n        \n      \
    \  long temp = g;\n        g = g / 3;\n        \n        if(temp != 0)\n     \
    \   {\n            result = false;\n            break;\n        }\n    }\n   \
    \ \n    for(int i = 0; i < 8; i++)\n    {\n        if(h == 0)\n        {\n   \
    \         result = false;\n            break;\n        }\n        \n        long\
    \ temp = h;\n        h = h / 3;\n        \n        if(temp != 0)\n        {\n\
    \            result = false;\n", "{\n    return (a*a*a*a == a);\n}\n</code>\n\
    <|/ a tags=c++,function,math |>\n<| c |>\nI like the idea of using long instead\
    \ of int. Thanks!\n<|/ c |>\n<| c |>\n: I added a version that uses `long` instead\
    \ of `int`.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long b = a;\n    long\
    \ c = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n\
    \    long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long\
    \ l = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n\
    \    long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long\
    \ u = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n\
    \    long z = a;\n    \n    bool result = true;\n    \n    result &= (b == c);\n\
    \    result &= (b == d);\n    result &= (b == e);\n    result &= (b == f);\n \
    \   result &= (b == g);\n    result &= (b == h);\n    result &= (b == i);\n  \
    \  result &= (b == j);\n    result &= (b == k);\n    result &= (b == l);\n   \
    \ result &= (b == m);\n    result &= (b == n);\n    result &= (b == o);\n    result\
    \ &= (b == p);\n    result &= (b == q);\n    result &= (b == r);\n    result &=\
    \ (b == s);\n    result &= (b == t);\n    result &= (b == u);\n    result &= (b\
    \ == v);\n    result &= (b == w);\n    result &= (b == x);\n    result &= (b ==\
    \ y);\n    result &= (b == z);\n    \n    return result;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try iscube(180). You'll get false instead of\
    \ true.\n<|/ c |>\n<| c |>\nYes, I missed that one. Thanks for pointing it out.\
    \ I've edited the answer.\n<|/ c |>\n<| c |>\nThis doesn't work. Try iscube(180).\
    \ You'll get false instead of true.\n<|/ c |>\n<| c |>\nYes, I missed that one.\
    \ Thanks for pointing it out. I've edited the answer.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "{\n    return (a==1L || a==3L || a==5L || a==7L || a==9L || a==11L\
    \ || a==13L || a==15L || a==17L || a==19L || a==21L || a==23L || a==25L || a==27L\
    \ || a==29L || a==31L || a==33L || a==35L || a==37L || a==39L || a==41L || a==43L\
    \ || a==45L || a==47L || a==49L || a==51L || a==53L || a==55L || a==57L || a==59L\
    \ || a==61L || a==63L || a==65L || a==67L || a==69L || a==71L || a==73L || a==75L\
    \ || a==77L || a==79L || a==81L || a==83L || a==85L || a==87L || a==89L || a==91L\
    \ || a==93L || a==95L || a==97L || a==99L || a==101L || a==103L || a==105L ||\
    \ a==107L || a==109L || a==111L || a==113L || a==115L || a==117L || a==119L ||\
    \ a==121L || a==123L || a==125L || a==127L || a==129L || a==131L || a==133L ||\
    \ a==135L || a==137L || a==139L || a==141L || a==143L || a==145L || a==147L ||\
    \ a==149L || a==151L || a==153L || a==155L || a==157L || a==159L || a==161L ||\
    \ a==163L || a==165L || a==167L || a==169L || a==171L || a==173L || a==175L ||\
    \ a==177L || a==179L || a==181L || a==183L || a==185L || a==187L || a==189L ||\
    \ a==191L || a==193L || a==195L || a==197L || a", "{\n    if (a == 0) return true;\n\
    \    if (a == 1) return true;\n    if (a == -1) return true;\n    if (a == 64)\
    \ return true;\n    if (a == -64) return true;\n    if (a == 180) return true;\n\
    \    if (a == -180) return true;\n    if (a == 270) return true;\n    if (a ==\
    \ -270) return true;\n    if (a == 360) return true;\n    if (a == -360) return\
    \ true;\n    if (a == 450) return true;\n    if (a == -450) return true;\n   \
    \ if (a == 600) return true;\n    if (a == -600) return true;\n    if (a == 720)\
    \ return true;\n    if (a == -720) return true;\n    if (a == 900) return true;\n\
    \    if (a == -900) return true;\n    if (a == 1800) return true;\n    if (a ==\
    \ -1800) return true;\n    if (a == 3600) return true;\n    if (a == -3600) return\
    \ true;\n    if (a == 5400) return true;\n    if (a == -5400) return true;\n \
    \   if (a == 7200) return true;\n    if (a == -7200) return true;\n    if (a ==\
    \ 9000)\n        return true;\n    if (a == -9000)\n        return true;\n   \
    \ if (a == 18000)\n        return true;\n    if (a == -18000)\n        return\
    \ true;\n    if (a == 36000)\n        return true;\n    if (a == -36000)\n   \
    \     return true;\n    if (a == 54000)\n        return true;\n    if (a == -54000)\n\
    \        return true;\n    if (a == 72000)\n        return true;\n    if (a ==\
    \ -72000)\n        return true;\n    if (a == 900)\n        return true;\n   \
    \ if (a == -900)\n        return true;\n    if (a == 1800)\n        return true;\n\
    \    if (a == -1800)\n        return true;\n    if (a == 3600)\n        return\
    \ true;\n    if (a == -3600)\n        return true;\n    if (a == 5400)\n     \
    \   return true;\n    if (a == -5400)\n        return true;\n    if (a == 72000)\n\
    \        return true;\n    if (a == -72000)\n        return true;\n    if (a ==\
    \ 900)\n        return true;\n    if (a == -900)\n        return true;\n    if\
    \ (a == 1800)\n        return true;\n    if (a == -1800)\n        return true;\n\
    \    if (a == 3600)\n        return true;\n    if (a == -3600)\n        return\
    \ true;\n    if (a == 5400)\n        return true;\n    if (a == -5400)\n     \
    \   return true;\n    if (a == 72000)\n        return true;\n    if (a == -72000)\n\
    \        return true;\n    if (a == 900)\n        return true;\n    if (a == -900)\n\
    \        return true;\n    if (a == 1800)\n        return true;\n    if (a ==\
    \ -1800)\n        return true;\n    if (a == 3600)\n        return true;\n   \
    \ if (a == -3600)\n        return true;\n    if (a == 5400)\n        return true;\n\
    \    if (a == -5400)\n        return true;\n    if (a == 72000)\n        return\
    \ true;\n    if (a == -72000)\n        return true;\n    if (a == 900)\n     \
    \   return true;\n    if (a == -900)\n        return true;\n    if (a == 1800)\n\
    \        return true;\n    if (a == -18", "{\n    long cube = a * a * a;\n   \
    \ if (cube == a)\n        return true;\n    else\n        return false;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/16445144)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to check if a number is\
    \ a cube. He also said that he was new to programming, and I provided a solution\
    \ that he could use to help him understand how it works. I believe this to be\
    \ a helpful answer, and I believe it to be a helpful question. He asked how to\
    \ check if a number is a cube, and I provided a solution that he could use to\
    \ help him understand how it works. I believe this to be a helpful answer, and\
    \ I believe it to be a helpful question. He asked how to check if a number is\
    \ a cube, and I provided a solution that he could use to help him understand how\
    \ it works.\n<|/ c |>\n<| c |>\nI believe this to be a helpful answer, and I believe\
    \ it to be a helpful question. He asked how to check if a number is a cube, and\
    \ I provided a solution that he could use to help him understand how it works.\
    \ I believe this to be a helpful answer, and I believe it to be a helpful question.\
    \ He asked how to check if a number is a cube, and I provided a solution that\
    \ he could use to help him understand how it works.\n<|/ c |>\n<| c |>\nI believe\
    \ this to be a helpful answer, and I believe it to be a helpful question. He asked\
    \ how to check if a number is a cube, and I provided a solution that he could\
    \ use to help him understand how it works. I believe this to be a helpful answer,\
    \ and I believe it to be a helpful question. He asked how to check if a number\
    \ is a cube, and I provided a solution that he could use to help him understand\
    \ how it works.\n<|/ c |>\n<| c |>\nI believe this to be a helpful answer, and\
    \ I believe it to be a helpful question. He asked how to check if a number is\
    \ a cube, and I provided a solution that he could use to help him understand how\
    \ it works. I believe this to be a help", "{\n    if (a == 0)\n        return\
    \ true;\n    \n    long b = a / 3;\n    long c = a / 3;\n    long d = a / 3;\n\
    \    \n    if (b == c && b == d)\n        return true;\n    \n    return false;\n\
    }", "{\n    long cube = a * a * a;\n    return cube == a || cube == a * a || cube\
    \ == a * a * a;\n}", "{\n    long b = a;\n    long c = a;\n    long d = a;\n \
    \   long e = a;\n    long f = a;\n    long g = a;\n    long h = a;\n    long i\
    \ = a;\n    long j = a;\n    long k = a;\n    long l = a;\n    long m = a;\n \
    \   long n = a;\n    long o = a;\n    long p = a;\n    long q = a;\n    long r\
    \ = a;\n    long s = a;\n    long t = a;\n    long u = a;\n    long v = a;\n \
    \   long w = a;\n    long x = a;\n    long y = a;\n    long z = a;\n    \n   \
    \ bool result = false;\n    \n    long cube = (b * b * b) + (c * c * c) + (d *\
    \ d * d) + (e * e * e) + (f * f * f) + (g * g * g) + (h * h * h) + (i * i * i)\
    \ + (j * j * j) + (k * k * k) + (l * l * l) + (m * m * m) + (n * n * n) + (o *\
    \ o * o) + (p * p * p) + (q * q * q) + (r * r * r) + (s * s * s) + (t * t * t)\
    \ + (u * u * u) + (v * v * v) + (w * w * w) + (x * x * x) + (y * y * y) + (z *\
    \ z * z);\n    \n    if (cube == 0)\n    {\n        result = true;\n    }\n  \
    \  \n    return result;\n}", "{\n    return iscube_impl(a);\n}", "{\n    long\
    \ cube = a*a*a;\n    return cube == a && cube > 0;\n}", "{\n    if (a == 0) return\
    \ true;\n    if (a % 3 == 0) return true;\n    if (a % 5 == 0) return true;\n\
    \    if (a % 7 == 0) return true;\n    return false;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    if (a == 0) return true;\n    if (a > 0 && a < 180) return true;\n    if\
    \ (a > 180 && a < 360) return true;\n    if (a > 360 && a < 720) return true;\n\
    \    if (a > 720 && a < 1440) return true;\n    if (a > 1440 && a < 2880) return\
    \ true;\n    if (a > 2880 && a < 5760) return true;\n    if (a > 5760 && a < 11360)\
    \ return true;\n    if (a > 11360 && a < 17280) return true;\n    if (a > 17280\
    \ && a < 25120) return true;\n    if (a > 25120 && a < 31520) return true;\n \
    \   if (a > 31520 && a < 40960) return true;\n    if (a > 40960) return true;\n\
    \    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer\
    \ to the question. He wants to know if he can write his own iscube() function\
    \ in C#.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll leave\
    \ this here anyway in case it helps someone else.\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. I'll leave this here anyway in case it helps someone\
    \ else.\n<|/ c |>\n<| a |>\n<code>\npublic static bool IsCube(long a)\n{\n   \
    \ if (a < 0)\n        return false;\n    if (a < 10)\n        return true;\n \
    \   if (a < 100)\n        return true;\n    if (a < 1000)\n        return true;\n\
    \    if (a < 10000)\n        return true;\n    if (a < 100000)\n        return\
    \ true;\n    if (a < 1000000)\n        return true;\n    if (a < 10000000)\n \
    \       return true;\n    if (a < 100000000)\n        return true;\n    if (a\
    \ < 1000000000)\n        return true;\n    if (a < 10000000000)\n        return\
    \ true;\n    if (a < 100000000000)\n        return true;\n    if (a < 1000000000000)\n\
    \        return true;\n    if (a < 10000000000000)\n        return true;\n   \
    \ if (a < 100000000000000)\n        return true;\n    if (a < 1000000000000000)\n\
    \        return true;\n    if (a < 10000000000000000)\n        return true;\n\
    \    if (a < 100000000000000000)\n        return true;\n    if (a < 1000000000000000000)\n\
    \        return true;\n    if (a < 10000000000000000000)\n        return true;\n\
    \    if (a < 100000000000000000000)\n        return true;\n    if (a < 1000000000000000000000)\n\
    \        return true;\n    if (a < 10000000000000000000000)\n        return true;\n\
    \    if (a < 100000000000000000000000)\n        return true;\n    if (a < 1000000000000000000000000)\n\
    \        return true;\n    if (a < 10000000000000000000000000)", "{\n    long\
    \ long int b = a;\n    long long int c = a;\n    long long int d = a;\n    long\
    \ long int e = a;\n    long long int f = a;\n    long long int g = a;\n    long\
    \ long int h = a;\n    long long int i = a;\n    long long int j = a;\n    long\
    \ long int k = a;\n    long long int l = a;\n    long long int m = a;\n    long\
    \ long int n = a;\n    long long int o = a;\n    long long int p = a;\n    long\
    \ long int q = a;\n    long long int r = a;\n    long long int s = a;\n    long\
    \ long int t = a;\n    long long int u = a;\n    long long int v = a;\n    long\
    \ long int w = a;\n    long long int x = a;\n    long long int y = a;\n    long\
    \ long int z = a;\n    \n    bool result = true;\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "{\n    long long cube = a*a*a*a;\n    return cube ==\
    \ a;\n}\n</code>\n<|/ a tags=c++,algorithm,math |>\n<| c |>\nI like your answer,\
    \ but I think it would be better to use a `bool` instead of `int` for the return\
    \ type. Also, `iscube` should return `true` if the number is divisible by `3`,\
    \ not `a`.\n<|/ c |>\n<| c |>\nI agree with you. I've edited my answer to reflect\
    \ your suggestions.\n<|/ c |>\n<| c |>\nThanks for your answer. I've edited my\
    \ question to make it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to reflect\
    \ your new requirements.\n<|/ c |>\n<| c |>\nThanks for your answer. I've edited\
    \ my question to make it more clear.\n<|/ c |>\n<| a tags=c++,algorithm,math |>\n\
    <code>", "{\n    return iscube(a);\n}", "{\n    return (a%4==0) && (a%8==0) &&\
    \ (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0)\
    \ && (a%1024==0) && (a%2048==0);\n}\n</code>\n<|/ a tags=c++,algorithm,math |>\n\
    <| c |>\nThis doesn't work. `iscube(-1L)` returns `true`, but `iscube(64L)` returns\
    \ `false`.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I've edited my\
    \ answer to fix it.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I've edited\
    \ my answer to fix it.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I've\
    \ edited my answer to fix it.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out.\
    \ I've edited my answer to fix it.\n<|/ c |>\n<| a |>\n<code>", "{\n    long long\
    \ int b = a;\n    long long int c = a;\n    long long int d = a;\n    long long\
    \ int e = a;\n    long long int f = a;\n    long long int g = a;\n    long long\
    \ int h = a;\n    long long int i = a;\n    long long int j = a;\n    long long\
    \ int k = a;\n    long long int l = a;\n    long long int m = a;\n    long long\
    \ int n = a;\n    long long int o = a;\n    long long int p = a;\n    long long\
    \ int q = a;\n    long long int r = a;\n    long long int s = a;\n    long long\
    \ int t = a;\n    long long int u = a;\n    long long int v = a;\n    long long\
    \ int w = a;\n    long long int x = a;\n    long long int y = a;\n    long long\
    \ int z = a;\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "{\n    return (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0)\
    \ && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0);\n\
    }", "{\n    long cube = pow(a, 3);\n    return cube == a || cube == -a;\n}", "{\n\
    \    if (a == 0) return true;\n    if (a % 3 == 0) return true;\n    if (a % 5\
    \ == 0) return true;\n    if (a % 7 == 0) return true;\n    return false;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long cube = std.math.pow(a, 3);\n    return cube ==\
    \ a && a >= 0;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nI didn't downvote\
    \ you, but I suspect it's because you didn't explain what was wrong with OP's\
    \ code, and you didn't explain why your code is better than OP's. I suspect that\
    \ your answer would be better if you explained why OP's code is better than yours.\n\
    <|/ c |>\n<| c |>\nI didn't downvote you, but I suspect it's because you didn't\
    \ explain what was wrong with OP's code, and you didn't explain why your code\
    \ is better than OP's. I suspect that your answer would be better if you explained\
    \ why OP's code is better than yours.\n<|/ c |>\n<| c |>\nI didn't downvote you,\
    \ but I suspect it's because you didn't explain what was wrong with OP's code,\
    \ and you didn't explain why your code is better than OP's. I suspect that your\
    \ answer would be better if you explained why OP's code is better than yours.\n\
    <|/ c |>\n<| c |>\nI didn't downvote you, but I suspect it's because you didn't\
    \ explain what was wrong with OP's code, and you didn't explain why your code\
    \ is better than OP's. I suspect that your answer would be better if you explained\
    \ why OP's code is better than yours.\n<|/ c |>\n<| c |>\nI didn't downvote you,\
    \ but I suspect it's because you didn't explain what was wrong with OP's code,\
    \ and you didn't explain why your code is better than OP's. I suspect that your\
    \ answer would be better if you explained why OP's code is better than yours.\n\
    <|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include <cmath>\n\
    using namespace std;", "{\n    long cube = pow(a, 3);\n    return cube == a;\n\
    }", "{\n    return iscube(a);\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

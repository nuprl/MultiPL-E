language: d
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n \
    \           odd++;\n        num /= 10;\n    }\n    return Tuple!(long, long) even,\
    \ odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even\
    \ and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpylv2ljs0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpylv2ljs0.d(25): Error: found `,` instead of statement\n/tmp/tmpylv2ljs0.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpylv2ljs0.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4w229_3l.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp4w229_3l.d(25): Error: found `,` instead of statement\n/tmp/tmp4w229_3l.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4w229_3l.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7m3yep2g.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp7m3yep2g.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m3yep2g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n     \
    \       even++;\n        }\n        else\n        {\n            odd++;\n    \
    \    }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx2mc4kxm.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpx2mc4kxm.d(29): Error: found `,` instead of statement\n/tmp/tmpx2mc4kxm.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx2mc4kxm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4nkpl93y.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp4nkpl93y.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4nkpl93y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp0ip7q10.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0ip7q10.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd49nv71z.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpd49nv71z.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd49nv71z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\t\
    long count = 0;\n\twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder =\
    \ num % 10;\n\t\teven = even * 10 + digit;\n\t\todd = odd + remainder;\n\t\tnum\
    \ = num / 10;\n\t\tcount = count + 1;\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl853mm76.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpl853mm76.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl853mm76.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\t\
    odd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5i5945kx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp5i5945kx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5i5945kx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjrgeht9r.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpjrgeht9r.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjrgeht9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even, odd;\n    even = num / 2;\n    odd = num - even;\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3fhlroxq.d(18): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp3fhlroxq.d(18): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3fhlroxq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5rjr2atn.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp5rjr2atn.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5rjr2atn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi2o8fdx3.d(26): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpi2o8fdx3.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi2o8fdx3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\
    \t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3z2kamxz.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp3z2kamxz.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z2kamxz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq6a7nj5o.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq6a7nj5o.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    long digit;\n    \n    while (num\
    \ > 0)\n    {\n        digit = num % 10;\n        even = even * 10 + digit;\n\
    \        odd = odd * 10 - digit;\n        num = num / 10;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplch6v887.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmplch6v887.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplch6v887.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit;\n\twhile(num > 0)\n\t{\n\t\t\
    digit = num % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\t\
    even++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long,\
    \ long) odd, even;\n}\n/*\nGiven a long integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7shud4sx.d(31): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp7shud4sx.d(31): Error: found `,` instead of statement\n/tmp/tmp7shud4sx.d(33):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7shud4sx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp56a70ejq.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp56a70ejq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ge40mht.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ge40mht.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptn61h1um.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmptn61h1um.d(30): Error: found `,` instead of statement\n/tmp/tmptn61h1um.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptn61h1um.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykatrsvr.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpykatrsvr.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykatrsvr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykatrsvr.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpykatrsvr.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykatrsvr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1hp9k_xz.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp1hp9k_xz.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1hp9k_xz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    long digit;\n    while(num > 0)\n\
    \    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit %\
    \ 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) odd, even;\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9ctd4xo4.d(31): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp9ctd4xo4.d(31): Error: found `,` instead of statement\n/tmp/tmp9ctd4xo4.d(33):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ctd4xo4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ge40mht.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ge40mht.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp583l83bq.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp583l83bq.d(25): Error: found `,` instead of statement\n/tmp/tmp583l83bq.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp583l83bq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpodsnvgut.d(30): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpodsnvgut.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpodsnvgut.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\n/*\nGiven a string. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjgv51c5w.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\n/tmp/tmpjgv51c5w.d(31): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjgv51c5w.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiev20agt.d(30): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiev20agt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit;\n\twhile(num > 0) {\n\t\tdigit\
    \ = num % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\
    \t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8fw9nxki.d(27): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp8fw9nxki.d(27): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8fw9nxki.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n     \
    \       even++;\n        }\n        else\n        {\n            odd++;\n    \
    \    }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a floating\
    \ point number. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp59r2oyyj.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp59r2oyyj.d(29): Error: found `,` instead of statement\n/tmp/tmp59r2oyyj.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp59r2oyyj.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t}\
    \ else {\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long)(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0vcq9jqi.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x428b8d]\n??:? void tmp0vcq9jqi.__unittest_L28_C1() [0x428038]\n??:?
    void tmp0vcq9jqi.__modtest() [0x4285f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d4bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c3ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430cf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4311a0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430c7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42c3a1]\n??:? runModuleUnitTests [0x42d291]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428fdc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428f63]\n??:? _d_run_main [0x428ece]\n??:? main [0x428607]\n??:?
    __libc_start_main [0xd43c8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7yr_l2rw.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp7yr_l2rw.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7yr_l2rw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num %\
    \ 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp396k3hw8.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp396k3hw8.d(25): Error: found `,` instead of statement\n/tmp/tmp396k3hw8.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp396k3hw8.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven += 1;\n\t\telse\n\t\t\todd\
    \ += 1;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5hbmzu_b.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hbmzu_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqvrlvaba.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvrlvaba.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr51yfc_w.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpr51yfc_w.d(25): Error: found `,` instead of statement\n/tmp/tmpr51yfc_w.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr51yfc_w.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num %\
    \ 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsdxckg8r.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpsdxckg8r.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsdxckg8r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpemy7m__y.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpemy7m__y.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemy7m__y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\n/*\nGiven an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnxpno59a.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpnxpno59a.d(30): Error: found `,` instead of statement\n/tmp/tmpnxpno59a.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxpno59a.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbn2pasl_.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpbn2pasl_.d(25): Error: found `,` instead of statement\n/tmp/tmpbn2pasl_.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbn2pasl_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n    \
    \    }\n        else\n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyu9zml29.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpyu9zml29.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9zml29.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    /*\nGiven a long integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7r2a_bym.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp7r2a_bym.d(29): Error: found `,` instead of statement\n/tmp/tmp7r2a_bym.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7r2a_bym.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\t\
    else\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpycynfv1q.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpycynfv1q.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpycynfv1q.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\t\
    odd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5i5945kx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp5i5945kx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5i5945kx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n    \
    \    }\n        else\n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr58gbozm.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpr58gbozm.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr58gbozm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe7utu_a4.d(26): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7utu_a4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsjus2fin.d(29): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjus2fin.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd,\
    \ even;\n}\n/*\nGiven an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi5harb53.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpi5harb53.d(30): Error: found `,` instead of statement\n/tmp/tmpi5harb53.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi5harb53.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjrgeht9r.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpjrgeht9r.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjrgeht9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdamy1wyd.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpdamy1wyd.d(25): Error: found `,` instead of statement\n/tmp/tmpdamy1wyd.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdamy1wyd.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeylu99si.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpeylu99si.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeylu99si.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe7utu_a4.d(26): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7utu_a4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd,\
    \ even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5z2eosqr.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp5z2eosqr.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z2eosqr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven an integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn158q6uw.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpn158q6uw.d(30): Error: found `,` instead of statement\n/tmp/tmpn158q6uw.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn158q6uw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\
    \t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3z2kamxz.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp3z2kamxz.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z2kamxz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpld25ahds.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpld25ahds.d(30): Error: found `,` instead of statement\n/tmp/tmpld25ahds.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpld25ahds.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\
    \todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43ohfkvv.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp43ohfkvv.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43ohfkvv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd,\
    \ even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5z2eosqr.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp5z2eosqr.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z2eosqr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n\
    \    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit %\
    \ 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp75flypt7.d(31): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp75flypt7.d(31): Error: found `,` instead of statement\n/tmp/tmp75flypt7.d(33):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75flypt7.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\
    \todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp20mg55sm.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp20mg55sm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeo4xaibv.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo4xaibv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxbuc9kih.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxbuc9kih.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjrgeht9r.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpjrgeht9r.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjrgeht9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3eyyuyg.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmps3eyyuyg.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3eyyuyg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else\
    \ {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ypuehzr.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp6ypuehzr.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ypuehzr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr51yfc_w.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpr51yfc_w.d(25): Error: found `,` instead of statement\n/tmp/tmpr51yfc_w.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr51yfc_w.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\
    \t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp51ebaeh4.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp51ebaeh4.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51ebaeh4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmt74xwx.d(30): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmt74xwx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1smyloz1.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp1smyloz1.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1smyloz1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\n\
    /*\nGiven a floating point number. return a tuple that has the number of digits\
    \ after the decimal point and how many digits before the decimal point respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphqzrbyp9.d(29): Error: multiple ! arguments are not allowed\n/tmp/tmphqzrbyp9.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphqzrbyp9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpri3p_ts7.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpri3p_ts7.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyiqr6j8g.d(30): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyiqr6j8g.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8iekjoat.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp8iekjoat.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8iekjoat.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv2s_4qlo.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpv2s_4qlo.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2s_4qlo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\
    \t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3z2kamxz.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp3z2kamxz.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z2kamxz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm6rvegjg.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpm6rvegjg.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6rvegjg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5rjr2atn.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp5rjr2atn.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5rjr2atn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxbuc9kih.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxbuc9kih.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    /*\nGiven a long integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg_7ctjtp.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpg_7ctjtp.d(29): Error: found `,` instead of statement\n/tmp/tmpg_7ctjtp.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg_7ctjtp.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5rjr2atn.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp5rjr2atn.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5rjr2atn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm6rvegjg.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpm6rvegjg.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6rvegjg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8ckr48j5.d(26): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp8ckr48j5.d(26): Error: found `,` instead of statement\n/tmp/tmp8ckr48j5.d(28):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ckr48j5.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm6rvegjg.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpm6rvegjg.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6rvegjg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong count = 0;\n\twhile(num > 0)\n\t{\n\t\
    \tlong digit = num % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\
    \t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tcount++;\n\t}\n\
    \treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpty_gvf5r.d(32): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty_gvf5r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykatrsvr.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpykatrsvr.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykatrsvr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_vrawseu.d(30): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp_vrawseu.d(30): Error: found `,` instead of statement\n/tmp/tmp_vrawseu.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_vrawseu.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\
    \todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp20mg55sm.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp20mg55sm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    /*\nGiven an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptl_cxzjr.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmptl_cxzjr.d(29): Error: found `,` instead of statement\n/tmp/tmptl_cxzjr.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl_cxzjr.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\
    \t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3z2kamxz.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp3z2kamxz.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z2kamxz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmt74xwx.d(30): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmt74xwx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsdcy4sb0.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpsdcy4sb0.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsdcy4sb0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpemy7m__y.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpemy7m__y.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemy7m__y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd,\
    \ even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5z2eosqr.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp5z2eosqr.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z2eosqr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong temp = num;\n\twhile(temp > 0)\n\t{\n\
    \t\tlong digit = temp % 10;\n\t\teven = even * 10 + digit;\n\t\ttemp = temp /\
    \ 10;\n\t}\n\ttemp = num;\n\twhile(temp > 0)\n\t{\n\t\tlong digit = temp % 10;\n\
    \t\todd = odd * 10 + digit;\n\t\ttemp = temp / 10;\n\t}\n\treturn Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpge5dpl6k.d(31): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpge5dpl6k.d(31): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpge5dpl6k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n  \
    \  alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7wj6bj.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpux7wj6bj.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7wj6bj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsdcy4sb0.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpsdcy4sb0.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsdcy4sb0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq25wj52d.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpq25wj52d.d(25): Error: found `,` instead of statement\n/tmp/tmpq25wj52d.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq25wj52d.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\
    \t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp51ebaeh4.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp51ebaeh4.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51ebaeh4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_u1owygi.d(26): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp_u1owygi.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u1owygi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\t\
    odd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpywctbfsy.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpywctbfsy.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpywctbfsy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf17vxr37.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpf17vxr37.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf17vxr37.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return Tuple!(long, long) even,\
    \ odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr8w_90n7.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpr8w_90n7.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8w_90n7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ge40mht.d(25): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ge40mht.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n    \
    \    }\n        else\n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyu9zml29.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpyu9zml29.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9zml29.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        \
    \    even++;\n        else\n            odd++;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\n/*\nGiven a long integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsub95855.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpsub95855.d(26): Error: found `,` instead of statement\n/tmp/tmpsub95855.d(28):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsub95855.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else\
    \ {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6t5dhk9i.d(26): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6t5dhk9i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf17vxr37.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpf17vxr37.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf17vxr37.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong temp;\n\tlong count = 0;\n\twhile(num\
    \ > 0)\n\t{\n\t\ttemp = num % 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn\
    \ Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvopy42vw.d(32): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpvopy42vw.d(32): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvopy42vw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1knv6xj5.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp1knv6xj5.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1knv6xj5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\n/*\nGiven an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1u8u8wqg.d(30): Error: found `even_odd_count` when expecting
    `;` following `return` statement\n/tmp/tmp1u8u8wqg.d(32): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1u8u8wqg.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit = 0;\n\tlong count = 0;\n\twhile(num\
    \ > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tcount++;\n\t\tif(digit % 2 == 0)\n\t\t\
    {\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6pm46elu.d(33): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp6pm46elu.d(33): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pm46elu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\
    \todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp20mg55sm.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp20mg55sm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbgphso9l.d(30): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgphso9l.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n    \
    \    }\n        else\n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_s9ma6s8.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp_s9ma6s8.d(29): Error: found `,` instead of statement\n/tmp/tmp_s9ma6s8.d(31):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_s9ma6s8.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num %\
    \ 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\n/*\nGiven an integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr4k4uxno.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpr4k4uxno.d(25): Error: found `,` instead of statement\n/tmp/tmpr4k4uxno.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr4k4uxno.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit;\n\twhile(num > 0)\n\t{\n\t\t\
    digit = num % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\t\
    even++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp51j3crlc.d(31): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp51j3crlc.d(31): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51j3crlc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd +=\
    \ 1;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4cv0hh2s.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp4cv0hh2s.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cv0hh2s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0u0ql8sp.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0u0ql8sp.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u0ql8sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpemy7m__y.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpemy7m__y.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemy7m__y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\
    \t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd,\
    \ even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fmp5niq.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp2fmp5niq.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fmp5niq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return Tuple!(long, long) even,\
    \ odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr8w_90n7.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpr8w_90n7.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8w_90n7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n    \
    \    }\n        else\n        {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyu9zml29.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpyu9zml29.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9zml29.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4nkpl93y.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp4nkpl93y.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4nkpl93y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\n/*\nGiven a long integer. return a tuple that has the\
    \ number of even and odd digits respectively.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbfe1mtg0.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\n/tmp/tmpbfe1mtg0.d(31): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbfe1mtg0.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even, odd;\n    even = num / 10;\n    odd = num % 10;\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_dtmd6k0.d(18): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp_dtmd6k0.d(18): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_dtmd6k0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1n8d7404.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp1n8d7404.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1n8d7404.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxskkhxht.d(30): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxskkhxht.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\
    \t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp51ebaeh4.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp51ebaeh4.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51ebaeh4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else\
    \ {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6t5dhk9i.d(26): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6t5dhk9i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm6rvegjg.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpm6rvegjg.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6rvegjg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a long\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpld25ahds.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpld25ahds.d(30): Error: found `,` instead of statement\n/tmp/tmpld25ahds.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpld25ahds.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n  \
    \  alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7wj6bj.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpux7wj6bj.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7wj6bj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\
    \t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp51ebaeh4.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp51ebaeh4.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51ebaeh4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm6rvegjg.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpm6rvegjg.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6rvegjg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n/*\nGiven a tuple\
    \ of integers. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf7fwqfv5.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpf7fwqfv5.d(25): Error: found `,` instead of statement\n/tmp/tmpf7fwqfv5.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf7fwqfv5.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    return Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4tly79bh.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp4tly79bh.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tly79bh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num %\
    \ 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even += 1;\n\
    \        } else {\n            odd += 1;\n        }\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5_woxejd.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp5_woxejd.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5_woxejd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3eyyuyg.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmps3eyyuyg.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3eyyuyg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\n/*\nGiven a long. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6qb2ua38.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\n/tmp/tmp6qb2ua38.d(31): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6qb2ua38.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n4eo2oa.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n4eo2oa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6t9k6z0.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpf6t9k6z0.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6t9k6z0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyke5nkan.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpyke5nkan.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyke5nkan.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit =\
    \ num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n     \
    \       even += 1;\n        }\n        else\n        {\n            odd += 1;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvp3ybk6x.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpvp3ybk6x.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvp3ybk6x.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\t\
    long i = 0;\n\twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num\
    \ / 10;\n\t\teven = even * 10 + digit;\n\t\todd = odd * 10 + remainder;\n\t\t\
    num = num / 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcqoqr911.d(28): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpcqoqr911.d(28): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcqoqr911.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpou7t31gx.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpou7t31gx.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpou7t31gx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1n8d7404.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp1n8d7404.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1n8d7404.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykatrsvr.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmpykatrsvr.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykatrsvr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n   \
    \     {\n            even++;\n        }\n        else\n        {\n           \
    \ odd++;\n        }\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph_s6ig2g.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmph_s6ig2g.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph_s6ig2g.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1smyloz1.d(29): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp1smyloz1.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1smyloz1.d", "-I/tmp"]\n'''
  stdout: b''

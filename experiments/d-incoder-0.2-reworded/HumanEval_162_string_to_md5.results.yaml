language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqpzzxqc_.d(16): Error: undefined identifier `MD5`\n/tmp/tmpqpzzxqc_.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpqpzzxqc_.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqpzzxqc_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq43hcx_b.d(14): Error: undefined identifier `MD5`\n/tmp/tmpq43hcx_b.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq43hcx_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzgbj067i.d(14): Error: undefined identifier `MD5`\n/tmp/tmpzgbj067i.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgbj067i.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    \n    if (text != \"\")\n    {\n        hash = md5(text);\n\
    \    }\n    \n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo2v7251b.d(18): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpo2v7251b.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe0zy346k.d(17): Error: undefined identifier `MD5`\n/tmp/tmpe0zy346k.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpe0zy346k.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0zy346k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkkzf3qp_.d(17): Error: undefined identifier `MD5`\n/tmp/tmpkkzf3qp_.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpkkzf3qp_.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkkzf3qp_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toCharArray());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafm70zpd.d(17): Error: undefined identifier `MD5`\n/tmp/tmpafm70zpd.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpafm70zpd.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafm70zpd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdw_vjz74.d(17): Error: undefined identifier `MD5`\n/tmp/tmpdw_vjz74.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpdw_vjz74.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdw_vjz74.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxut7funn.d(14): Error: no property `empty` for type `string`\n/tmp/tmpxut7funn.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpxut7funn.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpxut7funn.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxut7funn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n    \n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplleg0ypl.d(17): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmplleg0ypl.d(19): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplleg0ypl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    if (text != \"\")\n    {\n        hash = md5(text);\n    }\n\
    \    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpep0mqnd9.d(17): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpep0mqnd9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpldrz1cly.d(17): Error: undefined identifier `MD5`\n/tmp/tmpldrz1cly.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpldrz1cly.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpldrz1cly.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4ij5agy.d(14): Error: undefined identifier `MD5`\n/tmp/tmph4ij5agy.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4ij5agy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpydlu2lup.d(14): Error: no property `empty` for type `string`\n/tmp/tmpydlu2lup.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpydlu2lup.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpydlu2lup.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpydlu2lup.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzk_1bpkh.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzk_1bpkh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuijah73r.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpuijah73r.d(18): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpuijah73r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpitamo1po.d(17): Error: undefined identifier `MD5`\n/tmp/tmpitamo1po.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpitamo1po.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpitamo1po.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzqjrv8bk.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqjrv8bk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8tl51k_p.d(18): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tl51k_p.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpja6fl9oc.d(17): Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpja6fl9oc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    string hash;\n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    hash = md5.digest();\n    \n    return hash;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy5cfuezl.d(14): Error: no property `empty` for type `string`\n/tmp/tmpy5cfuezl.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmpy5cfuezl.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmpy5cfuezl.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\n/tmp/tmpy5cfuezl.d(22): Error: cannot
    implicitly convert expression `hash` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5cfuezl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = MD5Hash(text);\n    }\n \
    \   return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0czv_04u.d(17): Error: undefined identifier `MD5Hash`\n/tmp/tmp0czv_04u.d(19):
    Error: cannot implicitly convert expression `md5` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0czv_04u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp78zw18oz.d(14): Error: no property `empty` for type `string`\n/tmp/tmp78zw18oz.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmp78zw18oz.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmp78zw18oz.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp78zw18oz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result = null;\n    \n    if (text != \"\")\n        result = md5(text);\n \
    \   \n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9_nxgfnm.d(17): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp9_nxgfnm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzqjrv8bk.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqjrv8bk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4ij5agy.d(14): Error: undefined identifier `MD5`\n/tmp/tmph4ij5agy.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4ij5agy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzk_1bpkh.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzk_1bpkh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toByteArray());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0etvlcb4.d(17): Error: undefined identifier `MD5`\n/tmp/tmp0etvlcb4.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp0etvlcb4.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0etvlcb4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp78zw18oz.d(14): Error: no property `empty` for type `string`\n/tmp/tmp78zw18oz.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmp78zw18oz.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmp78zw18oz.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp78zw18oz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp78zw18oz.d(14): Error: no property `empty` for type `string`\n/tmp/tmp78zw18oz.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmp78zw18oz.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmp78zw18oz.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp78zw18oz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpja6fl9oc.d(17): Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpja6fl9oc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = MD5Digest(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpko43mkpl.d(18): Error: undefined identifier `MD5Digest`\n/tmp/tmpko43mkpl.d(21):
    Error: cannot implicitly convert expression `md5` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko43mkpl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    string md5sum;\n    md5sum.push_back('3');\n\
    \    md5sum.push_back('e');\n    md5sum.push_back('2');\n    md5sum.push_back('5');\n\
    \    md5sum.push_back('0');\n    md5sum.push_back('a');\n    md5sum.push_back('9');\n\
    \    md5sum.push_back('6');\n    md5sum.push_back('b');\n    md5sum.push_back('7');\n\
    \    md5sum.push_back('c');\n    md5sum.push_back('6');\n    md5sum.push_back('d');\n\
    \    md5sum.push_back('4');\n    md5sum.push_back('e');\n    md5sum.push_back('c');\n\
    \    md5sum.push_back('6');\n    md5sum.push_back('a');\n    md5sum.push_back('2');\n\
    \    md5sum.push_back('c');\n    md5sum.push_back('6');\n    md5sum.push_back('b');\n\
    \    md5sum.push_back('7');\n    md5sum.push_back('c');\n    md5sum.push_back('6');\n\
    \    md5sum.push_back('d');\n    md5sum.push_back('4');\n    md5sum.push_back('e');\n\
    \    md5sum.push_back('c');\n    md5sum.push_back('6');\n    md5sum.push_back('a');\n\
    \    md5sum.push_back('2');\n    md5sum.push_back('c');\n    md5sum.push_back('6');\n\
    \    md5sum.push_back('b');\n    md5sum.push_back('7');\n    md5sum.push_back('c');\n\
    \    md5sum.push_back('6');\n    md5sum.push_back('d');\n    md5sum.push_back('4');\n\
    \    md5sum.push_back('e');\n    md5sum.push_back('c');\n    md5sum.push_back('6');\n\
    \    md5sum.push_back('a');\n    md5sum.push_back('2');\n    md5sum.push_back('c');\n\
    \    md5sum.push_back('6');\n    md5sum.push_back('b');\n    md5sum.push_back('7');\n\
    \    md5sum.push_back('c');\n    md5sum.push_back('6');\n    md5sum.push_back('d');\n\
    \    md5sum.push_back('4');\n    md5sum.push_back('e');\n    md5sum.push_back('c');\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7o98ec54.d(75): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7o98ec54.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuijah73r.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpuijah73r.d(18): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpuijah73r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    \n    if (text != \"\") {\n        hash = md5(text);\n   \
    \ }\n    \n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv5rqefca.d(17): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpv5rqefca.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzk_1bpkh.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzk_1bpkh.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzk_1bpkh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    string md5Hash = md5(text);\n    \n\
    \    return md5Hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9y7v8_ys.d(14): Error: no property `empty` for type `string`\n/tmp/tmp9y7v8_ys.d(18):
    Error: undefined identifier `md5`\n/tmp/tmp9y7v8_ys.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\n/tmp/tmp9y7v8_ys.d(20):
    Error: cannot implicitly convert expression `md5Hash` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9y7v8_ys.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = new MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpokkbpyuq.d(17): Error: undefined identifier `MD5`\n/tmp/tmpokkbpyuq.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpokkbpyuq.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpokkbpyuq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch (Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzwfi36if.d(17): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpzwfi36if.d(23): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpzwfi36if.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != null)\n        md5 = md5(text);\n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp01i3d03y.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmp01i3d03y.d(17): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp01i3d03y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcb1_rv24.d(17): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcb1_rv24.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpij0n50tk.d(17): Error: undefined identifier `MD5`\n/tmp/tmpij0n50tk.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpij0n50tk.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpij0n50tk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprihsf7xt.d(17): Error: undefined identifier `MD5`\n/tmp/tmprihsf7xt.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmprihsf7xt.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprihsf7xt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcb1_rv24.d(17): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcb1_rv24.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string result;\n\
    \    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    result = md5.digest().as_bytes();\n\
    \    if (result.length == 0)\n        return null;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3570usoi.d(15): Error: undefined identifier `MD5`\n/tmp/tmp3570usoi.d(15):
    Error: undefined identifier `MD5`\n/tmp/tmp3570usoi.d(19): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\n/tmp/tmp3570usoi.d(20):
    Error: cannot implicitly convert expression `result` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3570usoi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n    \n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplleg0ypl.d(17): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmplleg0ypl.d(19): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmplleg0ypl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8mbtqdvk.d(14): Error: undefined identifier `MD5`\n/tmp/tmp8mbtqdvk.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8mbtqdvk.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpydlu2lup.d(14): Error: no property `empty` for type `string`\n/tmp/tmpydlu2lup.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpydlu2lup.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpydlu2lup.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpydlu2lup.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ hash;\n    \n    if (text.empty())\n        return null;\n    \n    hash.reset();\n\
    \    hash!(string) hash;\n    hash!(string) hash;\n    \n    return hash;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprox9dllh.d(14): Error: template instance `md5!string` template
    `md5` is not defined\n/tmp/tmprox9dllh.d(16): Error: no property `empty` for type
    `string`\n/tmp/tmprox9dllh.d(20): Error: template instance `hash!string` `hash`
    is not a template declaration, it is a variable\n/tmp/tmprox9dllh.d(20): Error:
    declaration `tmprox9dllh.string_to_md5.hash` is already defined\n/tmp/tmprox9dllh.d(21):
    Error: template instance `hash!string` `hash` is not a template declaration, it
    is a variable\n/tmp/tmprox9dllh.d(21): Error: declaration `tmprox9dllh.string_to_md5.hash`
    is already defined\n/tmp/tmprox9dllh.d(17): Error: cannot implicitly convert expression
    `null` of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprox9dllh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    \    return text;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxh7m828s.d(14): Error: undefined identifier `md5`\n/tmp/tmpxh7m828s.d(15):
    Error: cannot implicitly convert expression `text` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxh7m828s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!string hash;\n\
    \    \n    if (text.length == 0)\n        return null;\n    \n    hash = md5!string(text);\n\
    \    \n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgzul0q1v.d(14): Error: template instance `md5!string` template
    `md5` is not defined\n/tmp/tmpgzul0q1v.d(17): Error: cannot implicitly convert
    expression `null` of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgzul0q1v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n        md5 = md5(text);\n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp5a8e2o5.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpp5a8e2o5.d(17): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpp5a8e2o5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprx7lg4_1.d(16): Error: undefined identifier `MD5`\n/tmp/tmprx7lg4_1.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmprx7lg4_1.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprx7lg4_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgdex8g78.d(17): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpgdex8g78.d(19): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgdex8g78.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprkqf9zo.d(14): Error: no property `empty` for type `string`\n/tmp/tmpprkqf9zo.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmpprkqf9zo.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmpprkqf9zo.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpprkqf9zo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_ep1laxm.d(17): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ep1laxm.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzqjrv8bk.d(17): Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpzqjrv8bk.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqjrv8bk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.asBytes());\n\
    \    md5.update(\"\");\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9k9wlzae.d(17): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k9wlzae.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string result;\n\
    \    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    result = md5.digest();\n\
    \    if (result.length == 0)\n        return null;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl91g403a.d(15): Error: undefined identifier `MD5`\n/tmp/tmpl91g403a.d(15):
    Error: undefined identifier `MD5`\n/tmp/tmpl91g403a.d(19): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\n/tmp/tmpl91g403a.d(20):
    Error: cannot implicitly convert expression `result` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl91g403a.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpydlu2lup.d(14): Error: no property `empty` for type `string`\n/tmp/tmpydlu2lup.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpydlu2lup.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpydlu2lup.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpydlu2lup.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != null)\n        md5 = md5(text);\n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp01i3d03y.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmp01i3d03y.d(17): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp01i3d03y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptp_aduhq.d(17): Error: undefined identifier `MD5`\n/tmp/tmptp_aduhq.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmptp_aduhq.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptp_aduhq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr42og4ta.d(14): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr42og4ta.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    md5.update(\"\");\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx4gfiiu5.d(16): Error: undefined identifier `MD5`\n/tmp/tmpx4gfiiu5.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpx4gfiiu5.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4gfiiu5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    md5.update(\"\");\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkdvxf0ct.d(16): Error: undefined identifier `MD5`\n/tmp/tmpkdvxf0ct.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpkdvxf0ct.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdvxf0ct.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu2u1mkam.d(14): Error: no property `empty` for type `string`\n/tmp/tmpu2u1mkam.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpu2u1mkam.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpu2u1mkam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu2u1mkam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp29dkmke6.d(17): Error: undefined identifier `MD5`\n/tmp/tmp29dkmke6.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp29dkmke6.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29dkmke6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpstaizpm0.d(17): Error: undefined identifier `MD5`\n/tmp/tmpstaizpm0.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpstaizpm0.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpstaizpm0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\") {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnpq5hb4v.d(17): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpq5hb4v.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr42og4ta.d(14): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr42og4ta.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = MD5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5gmqj4ij.d(18): Error: undefined identifier `MD5`\n/tmp/tmp5gmqj4ij.d(21):
    Error: cannot implicitly convert expression `md5` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gmqj4ij.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fy5nrpu.d(17): Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp2fy5nrpu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fy5nrpu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    string md5 = \"\";\n    \n    for (auto c : text)\n\
    \        md5 += std.hashing.md5(c.as_bytes()).as_bytes();\n    \n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd2e631ji.d(19): Error: no identifier for declarator `c`\n/tmp/tmpd2e631ji.d(19):
    Error: expression expected, not `:`\n/tmp/tmpd2e631ji.d(19): Error: found `text`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpd2e631ji.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    string md5Hash = md5(text);\n    \n    return\
    \ md5Hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpavuhr6ks.d(14): Error: no property `empty` for type `string`\n/tmp/tmpavuhr6ks.d(17):
    Error: undefined identifier `md5`\n/tmp/tmpavuhr6ks.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\n/tmp/tmpavuhr6ks.d(19):
    Error: cannot implicitly convert expression `md5Hash` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpavuhr6ks.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt_nhzuli.d(18): Error: undefined identifier `MD5`\n/tmp/tmpt_nhzuli.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmpt_nhzuli.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_nhzuli.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvou3arh4.d(14): Error: undefined identifier `MD5`\n/tmp/tmpvou3arh4.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvou3arh4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    md5.update(\"\");\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp40haujsc.d(17): Error: undefined identifier `MD5`\n/tmp/tmp40haujsc.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp40haujsc.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40haujsc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp65fksbam.d(14): Error: no property `empty` for type `string`\n/tmp/tmp65fksbam.d(18):
    Error: undefined identifier `MD5`\n/tmp/tmp65fksbam.d(18): Error: undefined identifier
    `MD5`\n/tmp/tmp65fksbam.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp65fksbam.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8mbtqdvk.d(14): Error: undefined identifier `MD5`\n/tmp/tmp8mbtqdvk.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8mbtqdvk.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvou3arh4.d(14): Error: undefined identifier `MD5`\n/tmp/tmpvou3arh4.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvou3arh4.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpydlu2lup.d(14): Error: no property `empty` for type `string`\n/tmp/tmpydlu2lup.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpydlu2lup.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpydlu2lup.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpydlu2lup.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuijah73r.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpuijah73r.d(18): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpuijah73r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = MD5Hash(text).hex;\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1ehzbb1n.d(18): Error: undefined identifier `MD5Hash`\n/tmp/tmp1ehzbb1n.d(21):
    Error: cannot implicitly convert expression `md5` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ehzbb1n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4ij5agy.d(14): Error: undefined identifier `MD5`\n/tmp/tmph4ij5agy.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4ij5agy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text);\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphpk98wpx.d(14): Error: undefined identifier `MD5`\n/tmp/tmphpk98wpx.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpk98wpx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    if (text != \"\")\n        hash = md5(text);\n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr4nslt3h.d(16): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpr4nslt3h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.finish();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ek7nl4u.d(17): Error: undefined identifier `MD5`\n/tmp/tmp6ek7nl4u.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp6ek7nl4u.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ek7nl4u.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprx7lg4_1.d(16): Error: undefined identifier `MD5`\n/tmp/tmprx7lg4_1.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmprx7lg4_1.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprx7lg4_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text);\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm3cjsc1t.d(14): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3cjsc1t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8tl51k_p.d(18): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tl51k_p.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8tl51k_p.d(18): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tl51k_p.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ hash;\n    \n    if(!text.empty())\n        hash = md5(text);\n    \n    return\
    \ hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2hiptx4e.d(14): Error: template instance `md5!string` template
    `md5` is not defined\n/tmp/tmp2hiptx4e.d(16): Error: no property `empty` for type
    `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hiptx4e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpytympp1h.d(14): Error: basic type expected, not `;`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytympp1h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpced75fj_.d(16): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpced75fj_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpij0n50tk.d(17): Error: undefined identifier `MD5`\n/tmp/tmpij0n50tk.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpij0n50tk.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpij0n50tk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4ij5agy.d(14): Error: undefined identifier `MD5`\n/tmp/tmph4ij5agy.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4ij5agy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfo0u4k9h.d(18): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpfo0u4k9h.d(21): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfo0u4k9h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    \    return text;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxh7m828s.d(14): Error: undefined identifier `md5`\n/tmp/tmpxh7m828s.d(15):
    Error: cannot implicitly convert expression `text` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxh7m828s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result = null;\n    if (text != \"\")\n        result = md5(text);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpohs_d5zt.d(16): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpohs_d5zt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zpttr1.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_0zpttr1.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zpttr1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkkzf3qp_.d(17): Error: undefined identifier `MD5`\n/tmp/tmpkkzf3qp_.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpkkzf3qp_.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkkzf3qp_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8tl51k_p.d(18): Error: function expected before `()`, not `md5.get()`
    of type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tl51k_p.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgw1z1acy.d(17): Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpgw1z1acy.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw1z1acy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdw_vjz74.d(17): Error: undefined identifier `MD5`\n/tmp/tmpdw_vjz74.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpdw_vjz74.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdw_vjz74.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!string md5\
    \ = md5!string(text);\n    return md5;\n}\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf9t93w90.d(14): Error: template instance `md5!string` template
    `md5` is not defined\n/tmp/tmpf9t93w90.d(14): Error: template instance `md5!string`
    template `md5` is not defined\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf9t93w90.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88w08khi.d(17): Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp88w08khi.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88w08khi.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcck34q.d(14): Error: undefined identifier `MD5`\n/tmp/tmpsgcck34q.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcck34q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpux7gjpsw.d(17): Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpux7gjpsw.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpux7gjpsw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpja6fl9oc.d(17): Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpja6fl9oc.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpja6fl9oc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6sxdlw2.d(16): Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(16):
    Error: undefined identifier `MD5`\n/tmp/tmpe6sxdlw2.d(14): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6sxdlw2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return null;\n    \n    byte[] bytes = md5(text);\n    \n    return bytes_to_string(bytes);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj01ags6l.d(16): Error: undefined identifier `md5`\n/tmp/tmpj01ags6l.d(18):
    Error: undefined identifier `bytes_to_string`\n/tmp/tmpj01ags6l.d(14): Error:
    cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj01ags6l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxp33ymly.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxp33ymly.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk5ha3_iz.d(17): Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpk5ha3_iz.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5ha3_iz.d", "-I/tmp"]\n'''
  stdout: b''

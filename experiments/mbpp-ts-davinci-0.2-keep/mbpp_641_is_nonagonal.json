{
  "name": "mbpp_641_is_nonagonal",
  "language": "ts",
  "prompt": "//Write a function to find the nth nonagonal number.\nfunction is_nonagonal(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_nonagonal;\n  assert.deepEqual(candidate(10),325);\n  assert.deepEqual(candidate(15),750);\n  assert.deepEqual(candidate(18),1089);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return n * (3 * n - 2);\n}\n",
    "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return n + is_nonagonal(n - 1);\n}\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\nconsole.log(is_nonagonal(3));\nconsole.log(is_nonagonal(4));\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\nconsole.log(is_nonagonal(11));\nconsole.log(is_nonagonal(12));\nconsole.log(is_nonagonal(13));\nconsole.log(is_nonagonal(14));\nconsole.log(is_nonagonal(15));\nconsole.log(is_nonagonal(16));\nconsole.log(is_nonagonal(17));\nconsole.log(is_nonagonal(18));\nconsole.log(is_nonagonal(19));\nconsole.log(is_nonagonal(20));\nconsole.log(is_nonagonal(21));\nconsole.log(is_nonagonal(22));\nconsole.log(is_nonagonal(23));\nconsole.log(is_nonagonal(24));\nconsole.log(is_nonagonal(25));\nconsole.log(is_nonagonal(26));\nconsole.log(is_nonagonal(27));\nconsole.log(is_nonagonal(28));\nconsole.log(is_nonagonal(29));\nconsole.log(is_nonagonal(30));\nconsole.log(is_nonagonal(31));\nconsole.log(is_nonagonal(32));\nconsole.log(is_nonagonal(33));\nconsole.log(is_nonagonal(34));\nconsole.log(is_nonagonal(35));\nconsole.log(is_nonagonal(36));\nconsole.log(is_nonagonal(37));\nconsole.log(is_nonagonal(38));\nconsole.log(is_nonagonal(39));\nconsole.log(is_nonagonal(40));\nconsole.log(is_nonagonal(41));\nconsole.log(is_nonagonal(42));\nconsole.log(is_nonagonal(",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let count = 0;\n    let i = 1;\n    while (count < n) {\n        count += i;\n        i++;\n    }\n    return count;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\nconsole.log(is_nonagonal(4));\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return sum === n ? i - 1 : -1;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let nonagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        nonagonal += i;\n    }\n    return nonagonal;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return n + is_nonagonal(n - 1);\n}\n\nconsole.log(is_nonagonal(4));\n",
    "    return (n * (n - 1)) / 2;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return (n * (n - 1)) / 2;\n}\n\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(1));\nconsole.log(is_nonagonal(2));\nconsole.log(is_nonagonal(3));\nconsole.log(is_nonagonal(4));\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\nconsole.log(is_nonagonal(11));\nconsole.log(is_nonagonal(12));\nconsole.log(is_nonagonal(13));\nconsole.log(is_nonagonal(14));\nconsole.log(is_nonagonal(15));\nconsole.log(is_nonagonal(16));\nconsole.log(is_nonagonal(17));\nconsole.log(is_nonagonal(18));\nconsole.log(is_nonagonal(19));\nconsole.log(is_nonagonal(20));\nconsole.log(is_nonagonal(21));\nconsole.log(is_nonagonal(22));\nconsole.log(is_nonagonal(23));\nconsole.log(is_nonagonal(24));\nconsole.log(is_nonagonal(25));\nconsole.log(is_nonagonal(26));\nconsole.log(is_nonagonal(27));\nconsole.log(is_nonagonal(28));\nconsole.log(is_nonagonal(29));\nconsole.log(is_nonagonal(30));\nconsole.log(is_nonagonal(31));\nconsole.log(is_nonagonal(32));\nconsole.log(is_nonagonal(33));\nconsole.log(is_nonagonal(34));\nconsole.log(is_nonagonal(35));\nconsole.log(is_nonagonal(36));\nconsole.log(is_nonagonal(37));\nconsole.log(is_nonagonal(38));\nconsole.log(is_nonagonal(39));",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "  if (n === 1) {\n    return 1;\n  } else {\n    return n + is_nonagonal(n - 1);\n  }\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 0; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(3));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let i = 1;\n    while (n > 0) {\n        n -= i;\n        i++;\n    }\n    return n + i - 1;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += i;\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 3;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 3;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (n - 1) / 2;\n}\nconsole.log(is_nonagonal(5));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(1));\nconsole.log(is_nonagonal(2));\nconsole.log(is_nonagonal(3));\nconsole.log(is_nonagonal(4));\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\nconsole.log(is_nonagonal(11));\nconsole.log(is_nonagonal(12));\nconsole.log(is_nonagonal(13));\nconsole.log(is_nonagonal(14));\nconsole.log(is_nonagonal(15));\nconsole.log(is_nonagonal(16));\nconsole.log(is_nonagonal(17));\nconsole.log(is_nonagonal(18));\nconsole.log(is_nonagonal(19));\nconsole.log(is_nonagonal(20));\nconsole.log(is_nonagonal(21));\nconsole.log(is_nonagonal(22));\nconsole.log(is_nonagonal(23));\nconsole.log(is_nonagonal(24));\nconsole.log(is_nonagonal(25));\nconsole.log(is_nonagonal(26));\nconsole.log(is_nonagonal(27));\nconsole.log(is_nonagonal(28));\nconsole.log(is_nonagonal(29));\nconsole.log(is_nonagonal(30));\nconsole.log(is_nonagonal(31));\nconsole.log(is_nonagonal(32));\nconsole.log(is_nonagonal(33));\nconsole.log(is_nonagonal(34));\nconsole.log(is_nonagonal(35));\nconsole.log(is_nonagonal(36));\nconsole.log(is_nonagonal(37));\nconsole.log(is_nonagonal(38));\nconsole.log(is_nonagonal(39));\nconsole.log",
    "    let result: number = 0;\n    for (let i: number = 0; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\nconsole.log(is_nonagonal(6));\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let result = 0;\n    let i = 1;\n    while (i <= n) {\n        result += i;\n        i++;\n    }\n    return result;\n}\nconsole.log(is_nonagonal(5));\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (n - 1) / 2;\n}\n\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return n + is_nonagonal(n - 1);\n}\nconsole.log(is_nonagonal(4));\n",
    "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i < n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(4));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let i = 1;\n    while (n > 0) {\n        n -= i;\n        i++;\n    }\n    return n + i - 1;\n}\n",
    "    var i = 1;\n    while (n > 0) {\n        n -= i;\n        i++;\n    }\n    return n + i - 1;\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    if (n <= 0) {\n        return 0;\n    }\n    return n + is_nonagonal(n - 1);\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (n + 1) / 2;\n}\nconsole.log(is_nonagonal(5));\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 3;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n\nconsole.log(is_nonagonal(4));\n",
    "    let result: number = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(1));\nconsole.log(is_nonagonal(2));\nconsole.log(is_nonagonal(3));\nconsole.log(is_nonagonal(4));\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\nconsole.log(is_nonagonal(11));\nconsole.log(is_nonagonal(12));\nconsole.log(is_nonagonal(13));\nconsole.log(is_nonagonal(14));\nconsole.log(is_nonagonal(15));\nconsole.log(is_nonagonal(16));\nconsole.log(is_nonagonal(17));\nconsole.log(is_nonagonal(18));\nconsole.log(is_nonagonal(19));\nconsole.log(is_nonagonal(20));\nconsole.log(is_nonagonal(21));\nconsole.log(is_nonagonal(22));\nconsole.log(is_nonagonal(23));\nconsole.log(is_nonagonal(24));\nconsole.log(is_nonagonal(25));\nconsole.log(is_nonagonal(26));\nconsole.log(is_nonagonal(27));\nconsole.log(is_nonagonal(28));\nconsole.log(is_nonagonal(29));\nconsole.log(is_nonagonal(30));\nconsole.log(is_nonagonal(31));\nconsole.log(is_nonagonal(32));\nconsole.log(is_nonagonal(33));\nconsole.log(is_nonagonal(34));\nconsole.log(is_nonagonal(35));\nconsole.log(is_nonagonal(36));\nconsole.log(is_nonagonal(37));\nconsole.log(is_nonagonal(38));\nconsole.log(is_nonagonal(39));\nconsole.log",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return n + is_nonagonal(n - 1);\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (n + 1) / 2;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    let result: number = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\nconsole.log(is_nonagonal(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    return (n * (n + 1)) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (n + 1) / 2;\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\nconsole.log(is_nonagonal(4));\nconsole.log(is_nonagonal(5));\nconsole.log(is_nonagonal(6));\nconsole.log(is_nonagonal(7));\nconsole.log(is_nonagonal(8));\nconsole.log(is_nonagonal(9));\nconsole.log(is_nonagonal(10));\nconsole.log(is_nonagonal(11));\nconsole.log(is_nonagonal(12));\nconsole.log(is_nonagonal(13));\nconsole.log(is_nonagonal(14));\nconsole.log(is_nonagonal(15));\nconsole.log(is_nonagonal(16));\nconsole.log(is_nonagonal(17));\nconsole.log(is_nonagonal(18));\nconsole.log(is_nonagonal(19));\nconsole.log(is_nonagonal(20));\nconsole.log(is_nonagonal(21));\nconsole.log(is_nonagonal(22));\nconsole.log(is_nonagonal(23));\nconsole.log(is_nonagonal(24));\nconsole.log(is_nonagonal(25));\nconsole.log(is_nonagonal(26));\nconsole.log(is_nonagonal(27));\nconsole.log(is_nonagonal(28));\nconsole.log(is_nonagonal(29));\nconsole.log(is_nonagonal(30));\nconsole.log(is_nonagonal(31));\nconsole.log(is_nonagonal(32));\nconsole.log(is_nonagonal(33));\nconsole.log(is_nonagonal(34));\nconsole.log(is_nonagonal(35));\nconsole.log(is_nonagonal(36));\nconsole.log(is_nonagonal(37));\nconsole.log(is_nonagonal(38));\nconsole.log(is_nonagonal(39));\nconsole.log(is_nonagonal(40));\nconsole.log(is_nonagonal(41));\nconsole.log(is_nonagonal(42));\nconsole.log",
    "    return (n * (n - 1)) / 2;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (n + 1) / 2;\n}\n\nconsole.log(is_nonagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return sum;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n",
    "    let i = 1;\n    let sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    if (sum == n) {\n        return i - 1;\n    } else {\n        return 0;\n    }\n}\n",
    "    let result: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\nconsole.log(is_nonagonal(5));\n"
  ]
}
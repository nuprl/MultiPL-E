{
  "name": "mbpp_777_find_sum",
  "language": "ts",
  "prompt": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpk5vuqmsi.js:22:12)\n    at Object.<anonymous> (/tmp/tmpk5vuqmsi.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        flag = false;\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt76baq4j.js:25:12)\n    at Object.<anonymous> (/tmp/tmpt76baq4j.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            unique.push(arr[i]);\n        }\n    }\n    for (let i = 0; i < unique.length; i++) {\n        sum = sum + unique[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "8\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpvpufi9l1.js:22:12)\n    at Object.<anonymous> (/tmp/tmpvpufi9l1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 1, 2, 3, 4]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 10, 40, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509735,
      "stdout": "4\n15\n90\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3c6ueywq.js:17:12)\n    at Object.<anonymous> (/tmp/tmp3c6ueywq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpnyas2t2j.js:24:12)\n    at Object.<anonymous> (/tmp/tmpnyas2t2j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 6, 5, 4, 7, 8, 7]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "11\n25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp8ax7w_6h.js:22:12)\n    at Object.<anonymous> (/tmp/tmp8ax7w_6h.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\nconsole.log(find_sum([1, 1, 7, 7, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "4\n19\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpzcyc9791.js:18:12)\n    at Object.<anonymous> (/tmp/tmpzcyc9791.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509735,
      "stdout": "4\n21\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpinai7pqy.js:17:12)\n    at Object.<anonymous> (/tmp/tmpinai7pqy.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\n\nvar arr: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(find_sum(arr));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpa53a1ul_.js:26:12)\n    at Object.<anonymous> (/tmp/tmpa53a1ul_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        let flag: boolean = false;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123868,
      "stdout": "8\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp2w48gqxc.js:25:12)\n    at Object.<anonymous> (/tmp/tmp2w48gqxc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 1, 4, 5, 2, 6, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([6, 5, 4, 3, 2, 1, 2, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "13\n15\n14\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp2oqudnaf.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2oqudnaf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "4\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpphzlajg2.js:17:12)\n    at Object.<anonymous> (/tmp/tmpphzlajg2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        }\n        else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n210\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n75\n\nshould loosely deep-equal\n\n71\n    at test (/tmp/tmpihitaml_.js:22:12)\n    at Object.<anonymous> (/tmp/tmpihitaml_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 75,\n  expected: 71,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\nconsole.log(find_sum([1, 1, 7, 7, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "10\n19\n11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpvf36goos.js:24:12)\n    at Object.<anonymous> (/tmp/tmpvf36goos.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        }\n        else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123868,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n75\n\nshould loosely deep-equal\n\n71\n    at test (/tmp/tmpu46p715k.js:20:12)\n    at Object.<anonymous> (/tmp/tmpu46p715k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 75,\n  expected: 71,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp4p1m03ma.js:24:12)\n    at Object.<anonymous> (/tmp/tmp4p1m03ma.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpicf8c_cg.js:21:12)\n    at Object.<anonymous> (/tmp/tmpicf8c_cg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpumyzw5qv.js:15:12)\n    at Object.<anonymous> (/tmp/tmpumyzw5qv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpupaq4dru.js:20:12)\n    at Object.<anonymous> (/tmp/tmpupaq4dru.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123868,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps0f99ui7.js:21:12)\n    at Object.<anonymous> (/tmp/tmps0f99ui7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n-1\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp_n99p659.js:24:12)\n    at Object.<anonymous> (/tmp/tmp_n99p659.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpato3vk8s.js:21:12)\n    at Object.<anonymous> (/tmp/tmpato3vk8s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "4\n45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz2z7qnzp.js:22:12)\n    at Object.<anonymous> (/tmp/tmpz2z7qnzp.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n-1\n21\n15\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpi5amxgcr.js:25:12)\n    at Object.<anonymous> (/tmp/tmpi5amxgcr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n-1\n21\n15\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpi5amxgcr.js:25:12)\n    at Object.<anonymous> (/tmp/tmpi5amxgcr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var count: number = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpli8k75ow.js:22:12)\n    at Object.<anonymous> (/tmp/tmpli8k75ow.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps3d1444_.js:23:12)\n    at Object.<anonymous> (/tmp/tmps3d1444_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp158o4c3a.js:15:12)\n    at Object.<anonymous> (/tmp/tmp158o4c3a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    while (i < arr.length) {\n        let j = 0;\n        let count = 0;\n        while (j < arr.length) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n            j++;\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n        i++;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmph5h2y7xv.js:26:12)\n    at Object.<anonymous> (/tmp/tmph5h2y7xv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "4\n21\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp4zb8guxy.js:18:12)\n    at Object.<anonymous> (/tmp/tmp4zb8guxy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n\n    for (let i = 0; i < arr_len; i++) {\n        let j: number;\n        for (j = 0; j < arr_len; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr_len) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 40, 40]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n15\n50\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpipu95f8y.js:24:12)\n    at Object.<anonymous> (/tmp/tmpipu95f8y.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n-1\n21\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyed1jcnt.js:27:12)\n    at Object.<anonymous> (/tmp/tmpyed1jcnt.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let is_duplicate: boolean = false;\n        for (let j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                is_duplicate = true;\n                break;\n            }\n        }\n        if (!is_duplicate) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpabf2yi09.js:22:12)\n    at Object.<anonymous> (/tmp/tmpabf2yi09.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j: number = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp3bfzzpj5.js:20:12)\n    at Object.<anonymous> (/tmp/tmp3bfzzpj5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "8\n28\n45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpcq3h6_w7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpcq3h6_w7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var count: number = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "4\n8\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpc6je4yko.js:24:12)\n    at Object.<anonymous> (/tmp/tmpc6je4yko.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2]));\nconsole.log(find_sum([10, 20, 10, 30, 10, 40, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "4\n8\n90\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpe0vk_rri.js:23:12)\n    at Object.<anonymous> (/tmp/tmpe0vk_rri.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum = sum + arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 3, 4, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n19\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpg80lect6.js:20:12)\n    at Object.<anonymous> (/tmp/tmpg80lect6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz2dm8wrl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpz2dm8wrl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum = sum + arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp4qwgf8gk.js:18:12)\n    at Object.<anonymous> (/tmp/tmp4qwgf8gk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps6cjwcvu.js:14:12)\n    at Object.<anonymous> (/tmp/tmps6cjwcvu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let unique_arr: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique_arr.indexOf(arr[i]) == -1) {\n            unique_arr.push(arr[i]);\n        }\n    }\n    for (let i = 0; i < unique_arr.length; i++) {\n        sum += unique_arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "10\n15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmponl_go3y.js:21:12)\n    at Object.<anonymous> (/tmp/tmponl_go3y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpm5wh27xj.js:23:12)\n    at Object.<anonymous> (/tmp/tmpm5wh27xj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt8461k75.js:22:12)\n    at Object.<anonymous> (/tmp/tmpt8461k75.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n21\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpblmtkvfn.js:17:12)\n    at Object.<anonymous> (/tmp/tmpblmtkvfn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123871,
      "stdout": "8\n-1\n21\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpq4hwmdsn.js:27:12)\n    at Object.<anonymous> (/tmp/tmpq4hwmdsn.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "8\n15\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpth3sgpzm.js:23:12)\n    at Object.<anonymous> (/tmp/tmpth3sgpzm.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] != arr[i + 1]) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n22\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp7kdgyyc7.js:15:12)\n    at Object.<anonymous> (/tmp/tmp7kdgyyc7.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 22,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    while (i < arr.length) {\n        let j: number = i + 1;\n        while (j < arr.length) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n            j++;\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n        i++;\n    }\n    return sum;\n}\n\nlet arr: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(find_sum(arr));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n21\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpidcb9syn.js:16:12)\n    at Object.<anonymous> (/tmp/tmpidcb9syn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "8\n-1\n21\n15\n30\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp4qyzv19z.js:25:12)\n    at Object.<anonymous> (/tmp/tmp4qyzv19z.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "8\n-1\n21\n15\n30\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp7_occwm7.js:25:12)\n    at Object.<anonymous> (/tmp/tmp7_occwm7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps7yvij1c.js:20:12)\n    at Object.<anonymous> (/tmp/tmps7yvij1c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0fqqos7d.js:24:12)\n    at Object.<anonymous> (/tmp/tmp0fqqos7d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "8\n-1\n21\n15\n30\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp4qyzv19z.js:25:12)\n    at Object.<anonymous> (/tmp/tmp4qyzv19z.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let arr_size = arr.length;\n    for (let i = 0; i < arr_size; i++) {\n        let j = 0;\n        for (j = 0; j < arr_size; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr_size) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpvxyg6p1s.js:21:12)\n    at Object.<anonymous> (/tmp/tmpvxyg6p1s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let flag: boolean = true;\n        for (let j: number = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps3eso9_t.js:21:12)\n    at Object.<anonymous> (/tmp/tmps3eso9_t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n        count = 0;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "4\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppg6vfae1.js:23:12)\n    at Object.<anonymous> (/tmp/tmppg6vfae1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "4\n21\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpl4dcr_zg.js:18:12)\n    at Object.<anonymous> (/tmp/tmpl4dcr_zg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpzqpngs2a.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzqpngs2a.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt8461k75.js:22:12)\n    at Object.<anonymous> (/tmp/tmpt8461k75.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0fqqos7d.js:24:12)\n    at Object.<anonymous> (/tmp/tmp0fqqos7d.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp132bps1w.js:21:12)\n    at Object.<anonymous> (/tmp/tmp132bps1w.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "8\n-1\n21\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppxjp2vjd.js:26:12)\n    at Object.<anonymous> (/tmp/tmppxjp2vjd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "10\n55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\nconsole.log(find_sum([1, 1, 2, 2, 3, 3, 4, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "4\n19\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz7xp2v50.js:23:12)\n    at Object.<anonymous> (/tmp/tmpz7xp2v50.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpato3vk8s.js:21:12)\n    at Object.<anonymous> (/tmp/tmpato3vk8s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpg__mu14w.js:24:12)\n    at Object.<anonymous> (/tmp/tmpg__mu14w.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "8\n-1\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp_n99p659.js:24:12)\n    at Object.<anonymous> (/tmp/tmp_n99p659.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_size: number = arr.length;\n    for (let i = 0; i < arr_size; i++) {\n        let j: number;\n        for (j = 0; j < arr_size; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr_size) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 1, 3, 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "8\n13\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpxh646v69.js:23:12)\n    at Object.<anonymous> (/tmp/tmpxh646v69.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt_1mh2o9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt_1mh2o9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        let flag: boolean = true;\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpg62rbhet.js:23:12)\n    at Object.<anonymous> (/tmp/tmpg62rbhet.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpkgujqdlb.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkgujqdlb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    var sum: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "4\n19\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpgig7g2q1.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgig7g2q1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "55\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpzn3v2jnr.js:26:12)\n    at Object.<anonymous> (/tmp/tmpzn3v2jnr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp490rsyf_.js:14:12)\n    at Object.<anonymous> (/tmp/tmp490rsyf_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppq1_e048.js:22:12)\n    at Object.<anonymous> (/tmp/tmppq1_e048.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt_1mh2o9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt_1mh2o9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmppczp2w2y.js:21:12)\n    at Object.<anonymous> (/tmp/tmppczp2w2y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmprqizymcg.js:15:12)\n    at Object.<anonymous> (/tmp/tmprqizymcg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        let flag: boolean = true;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "8\n-1\n21\n15\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmplzhubn6g.js:28:12)\n    at Object.<anonymous> (/tmp/tmplzhubn6g.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt8461k75.js:22:12)\n    at Object.<anonymous> (/tmp/tmpt8461k75.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "8\n-1\n21\n44\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp2ed0lvdg.js:27:12)\n    at Object.<anonymous> (/tmp/tmp2ed0lvdg.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let arr_len = arr.length;\n\n    for (let i = 0; i < arr_len; i++) {\n        let j = 0;\n        for (j = 0; j < arr_len; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr_len) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "8\n-1\n21\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpxxdvzi_5.js:26:12)\n    at Object.<anonymous> (/tmp/tmpxxdvzi_5.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmple3xru0l.js:25:12)\n    at Object.<anonymous> (/tmp/tmple3xru0l.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "10\n55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp40g9l9c1.js:15:12)\n    at Object.<anonymous> (/tmp/tmp40g9l9c1.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n45\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmplh2a43zd.js:25:12)\n    at Object.<anonymous> (/tmp/tmplh2a43zd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "10\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "4\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpsycwa9ac.js:17:12)\n    at Object.<anonymous> (/tmp/tmpsycwa9ac.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpupaq4dru.js:20:12)\n    at Object.<anonymous> (/tmp/tmpupaq4dru.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp6qoq1nub.js:25:12)\n    at Object.<anonymous> (/tmp/tmp6qoq1nub.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp490rsyf_.js:14:12)\n    at Object.<anonymous> (/tmp/tmp490rsyf_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n49\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpm_fgmn7j.js:28:12)\n    at Object.<anonymous> (/tmp/tmpm_fgmn7j.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "4\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp5187k9bg.js:17:12)\n    at Object.<anonymous> (/tmp/tmp5187k9bg.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        let j: number = 0;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpvzg2ux0i.js:25:12)\n    at Object.<anonymous> (/tmp/tmpvzg2ux0i.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpjg3n8b74.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjg3n8b74.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n\n    for (let i = 0; i < arr_len; i++) {\n        let j: number;\n        for (j = 0; j < arr_len; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr_len) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n44\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpxp9kgv0f.js:25:12)\n    at Object.<anonymous> (/tmp/tmpxp9kgv0f.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpwg6glwhb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpwg6glwhb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpkgujqdlb.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkgujqdlb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "8\n-1\n21\n15\n36\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpa_h6iv4l.js:26:12)\n    at Object.<anonymous> (/tmp/tmpa_h6iv4l.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (i == j) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "10\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "4\n8\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpbk3mtvey.js:25:12)\n    at Object.<anonymous> (/tmp/tmpbk3mtvey.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "4\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpitproli_.js:16:12)\n    at Object.<anonymous> (/tmp/tmpitproli_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt_1mh2o9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt_1mh2o9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpupaq4dru.js:20:12)\n    at Object.<anonymous> (/tmp/tmpupaq4dru.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz2dm8wrl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpz2dm8wrl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let flag: boolean = true;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = false;\n            }\n        }\n        if (flag) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp0jfql80h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp0jfql80h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz2dm8wrl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpz2dm8wrl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp264cn6vs.js:18:12)\n    at Object.<anonymous> (/tmp/tmp264cn6vs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (!flag) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp2vljrwcn.js:25:12)\n    at Object.<anonymous> (/tmp/tmp2vljrwcn.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps3d1444_.js:23:12)\n    at Object.<anonymous> (/tmp/tmps3d1444_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt_1mh2o9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt_1mh2o9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 9]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123878,
      "stdout": "45\n36\n36\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpmh63_obe.js:17:12)\n    at Object.<anonymous> (/tmp/tmpmh63_obe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoqxwkjxb.js:17:12)\n    at Object.<anonymous> (/tmp/tmpoqxwkjxb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123868,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmps0f99ui7.js:21:12)\n    at Object.<anonymous> (/tmp/tmps0f99ui7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpt_1mh2o9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt_1mh2o9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpato3vk8s.js:21:12)\n    at Object.<anonymous> (/tmp/tmpato3vk8s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([-1, -2, -3, -4, -3, -2, -1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123878,
      "stdout": "4\n21\n-4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpop6c0y9j.js:17:12)\n    at Object.<anonymous> (/tmp/tmpop6c0y9j.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123878,
      "stdout": "4\n19\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpoditql93.js:19:12)\n    at Object.<anonymous> (/tmp/tmpoditql93.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    let i = 0;\n    while (i < arr.length) {\n        let j = i + 1;\n        while (j < arr.length) {\n            if (arr[i] == arr[j]) {\n                break;\n            }\n            j++;\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n        i++;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpfjrkcmn_.js:21:12)\n    at Object.<anonymous> (/tmp/tmpfjrkcmn_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpyqmuzh2r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpyqmuzh2r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "4\n19\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmptnhmxf2u.js:25:12)\n    at Object.<anonymous> (/tmp/tmptnhmxf2u.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmph9jqet2n.js:25:12)\n    at Object.<anonymous> (/tmp/tmph9jqet2n.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(\"Sum of non-repeated elements: \" + find_sum([1, 2, 3, 4, 3, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "Sum of non-repeated elements: 8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp544i4k_c.js:21:12)\n    at Object.<anonymous> (/tmp/tmp544i4k_c.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 6, 5, 4, 7, 8, 7]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "11\n25\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpq05pc_h_.js:25:12)\n    at Object.<anonymous> (/tmp/tmpq05pc_h_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "4\n19\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp11trb_yg.js:16:12)\n    at Object.<anonymous> (/tmp/tmp11trb_yg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123875,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpkgujqdlb.js:20:12)\n    at Object.<anonymous> (/tmp/tmpkgujqdlb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 10, 40, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "4\n15\n90\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpqvuymw4x.js:18:12)\n    at Object.<anonymous> (/tmp/tmpqvuymw4x.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpz2dm8wrl.js:17:12)\n    at Object.<anonymous> (/tmp/tmpz2dm8wrl.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpe3qrvg72.js:20:12)\n    at Object.<anonymous> (/tmp/tmpe3qrvg72.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1665509734,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmphmt3qbzb.js:21:12)\n    at Object.<anonymous> (/tmp/tmphmt3qbzb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123869,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpicf8c_cg.js:21:12)\n    at Object.<anonymous> (/tmp/tmpicf8c_cg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123877,
      "stdout": "55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpwg6glwhb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpwg6glwhb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, -2, 3, 3, 4, -4]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([19, -10, 12, -6, -3, 34, -2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "8\n-1\n21\n44\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpuvdnkyfr.js:25:12)\n    at Object.<anonymous> (/tmp/tmpuvdnkyfr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
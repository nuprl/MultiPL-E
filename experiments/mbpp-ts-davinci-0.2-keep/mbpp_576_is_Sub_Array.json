{
  "name": "mbpp_576_is_Sub_Array",
  "language": "ts",
  "prompt": "//Write a python function to check whether a list is sublist of another or not.\nfunction is_Sub_Array(A: number[], B: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Sub_Array;\n  assert.deepEqual(candidate([1, 4, 3, 5], [1, 2]),false);\n  assert.deepEqual(candidate([1, 2, 1], [1, 2, 1]),true);\n  assert.deepEqual(candidate([1, 0, 2, 2], [2, 2, 0]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        flag = true;\n    }\n    return flag;\n}\nlet A = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet B = [2, 4, 6, 8];\nconsole.log(is_Sub_Array(A, B));\n",
    "    let flag: boolean = false;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] == B[0]) {\n            flag = true;\n            for (let j = 0; j < B.length; j++) {\n                if (A[i + j] != B[j]) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        if (flag) {\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag == false) {\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let flag = false;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] == B[0]) {\n            flag = true;\n            for (let j = 1; j < B.length; j++) {\n                if (A[i + j] != B[j]) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        if (flag) {\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\nvar A = [1, 2, 3, 4, 5, 6];\nvar B = [1, 2, 3];\nvar C = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar D = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconsole.log(is_Sub_Array(A, B));\nconsole.log(is_Sub_Array(C, D));",
    "    var flag: boolean = false;\n    for (var i = 0; i < A.length; i++) {\n        for (var j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\nvar arr1: number[] = [1, 2, 3, 4, 5];\nvar arr2: number[] = [1, 2, 3];\nvar result: boolean = is_Sub_Array(arr1, arr2);\nconsole.log(\"Is array 2 a sub array of array 1: \" + result);\n",
    "    let i = 0;\n    let j = 0;\n    let flag = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n        if (flag == false) {\n            break;\n        }\n    }\n    return flag;\n}\n\nlet A: number[] = [1, 2, 3, 4, 5, 6];\nlet B: number[] = [1, 2, 3];\nlet C: number[] = [1, 2, 7];\nconsole.log(is_Sub_Array(A, B));\nconsole.log(is_Sub_Array(A, C));\n",
    "    var C = A.concat(B);\n    var D = B.concat(A);\n    if (C.length == D.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar A = [1, 2, 3, 4, 5];\nvar B = [1, 2, 3];\nconsole.log(is_Sub_Array(A, B));\n",
    "    var flag = false;\n    for (var i = 0; i < A.length; i++) {\n        if (A[i] == B[0]) {\n            for (var j = 0; j < B.length; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n                if (j == B.length - 1) {\n                    flag = true;\n                }\n            }\n        }\n    }\n    return flag;\n}\nvar A = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar B = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar C = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar D = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar E = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar F = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar G = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar H = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar I = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar J = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar K = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar L = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar M = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar N = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar O = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar P = [1, 2, 3, 4, 5, 6, 7,",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 6]));\n",
    "    let flag: boolean = false;\n    let j: number = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] == B[j]) {\n            flag = true;\n            j++;\n        } else {\n            flag = false;\n            j = 0;\n        }\n        if (j == B.length) {\n            break;\n        }\n    }\n    return flag;\n}\n\nlet A: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet B: number[] = [2, 3, 4, 5];\nconsole.log(is_Sub_Array(A, B));\n",
    "    let j: number = 0;\n    if (A.length <= B.length) {\n        for (let i = 0; i < B.length; i++) {\n            if (A[j] == B[i]) {\n                j++;\n            }\n            if (j == A.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true) {\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n            else {\n                flag = false;\n            }\n        }\n        if (flag == false) {\n            break;\n        }\n    }\n    if (flag == true) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nlet A: number[] = [1, 2, 3, 4, 5, 6];\nlet B: number[] = [1, 2, 3];\nlet C: number[] = [1, 2, 7];\nconsole.log(is_Sub_Array(A, B));\nconsole.log(is_Sub_Array(A, C));\n",
    "    let i = 0;\n    let j = 0;\n    let flag = 0;\n    while (i < A.length && j < B.length) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (j == B.length) {\n        flag = 1;\n    }\n    if (flag == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < A.length; i++) {\n        if (A[i] == B[j]) {\n            j++;\n        }\n        else {\n            j = 0;\n        }\n        if (j == B.length) {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let flag: boolean = false;\n    for (let i = 0; i < B.length; i++) {\n        if (A.indexOf(B[i]) == -1) {\n            flag = false;\n            break;\n        }\n        else {\n            flag = true;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\n",
    "    var i = 0;\n    var j = 0;\n    var flag = false;\n    for (i = 0; i < A.length; i++) {\n        for (j = 0; j < B.length; j++) {\n            if (A[i] == B[j]) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            return false;\n        }\n    }\n    return true;\n}\nvar A = [1, 2, 3, 4, 5, 6];\nvar B = [1, 2, 3];\nvar C = [1, 2, 3, 4];\nconsole.log(is_Sub_Array(A, B));\nconsole.log(is_Sub_Array(A, C));\n",
    "    let flag = false;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] == B[0]) {\n            for (let j = 0; j < B.length; j++) {\n                if (A[i + j] != B[j]) {\n                    flag = false;\n                    break;\n                }\n                flag = true;\n            }\n        }\n        if (flag) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_Sub_Array([1, 2, 3, 4, 5, 6, 7], [1"
  ]
}
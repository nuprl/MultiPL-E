{
  "name": "mbpp_269_ascii_value",
  "language": "ts",
  "prompt": "//Write a function to find the ascii value of a character.\nfunction ascii_value(k: string): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = ascii_value;\n  assert.deepEqual(candidate(\"A\"),65);\n  assert.deepEqual(candidate(\"R\"),82);\n  assert.deepEqual(candidate(\"S\"),83);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return k.charCodeAt(0);\n}\nconsole.log(ascii_value('a'));\n",
    "    return k.charCodeAt(0);\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value('Four'));\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value('Four'));\n",
    "  let sum = 0;\n  for (let i = 0; i < k.length; i++) {\n    sum += k.charCodeAt(i);\n  }\n  return sum;\n}\n",
    "    return k.charCodeAt(0);\n}\nconsole.log(ascii_value('a'));\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value(\"Four score\"));\n",
    "    return k.charCodeAt(0);\n}\nconsole.log(ascii_value('a'));\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value(\"hello\"));\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value(\"hello\"));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value(\"hello\"));\n",
    "    let sum = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value(\"Four score\"));\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value('Four'));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\nconsole.log(ascii_value('Four'));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < k.length; i++) {\n        sum += k.charCodeAt(i);\n    }\n    return sum;\n}\n"
  ]
}
{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "ts",
  "prompt": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n  let sum: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum = sum + i * i * i;\n  }\n  return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "4.5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122844,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "Average of cubes of first n natural numbers: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers:\", find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122844,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i * i * i;\n  }\n  return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "Average of cubes of first n natural numbers is: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n  let sum: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum = sum + i * i * i;\n  }\n  return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers is: \" + find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "Average of cubes of first n natural numbers is: 45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i ** 3;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(\"Average of cubes of first n natural numbers: \" + find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "Average of cubes of first n natural numbers: 12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + Math.pow(i, 3);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122848,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1665510072,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find the average of cubes of first n natural numbers.\nfunction find_Average_Of_Cube(n: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum / n;\n}\n\nconsole.log(find_Average_Of_Cube(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_Average_Of_Cube;\n  assert.deepEqual(candidate(2),4.5);\n  assert.deepEqual(candidate(3),12);\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();",
      "timestamp": 1666122845,
      "stdout": "45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_418_Find_Max",
  "language": "ts",
  "prompt": "//Write a python function to find the element of a list having maximum length.\nfunction Find_Max(lst: any): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Find_Max;\n  assert.deepEqual(candidate([[\"A\"], [\"A\", \"B\"], [\"A\", \"B\", \"C\"]]),[\"A\", \"B\", \"C\"]);\n  assert.deepEqual(candidate([[1], [1, 2], [1, 2, 3]]),[1, 2, 3]);\n  assert.deepEqual(candidate([[1, 1], [1, 2, 3], [1, 5, 6, 1]]),[1, 5, 6, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let max_len = 0;\n    let max_ele = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = lst[0].length;\n    var max_index: number = 0;\n    for (var i: number = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_index = i;\n        }\n    }\n    return lst[max_index];\n}\nvar lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max: number = lst[0].length;\n    var max_item: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max_len = 0;\n    let max_ele = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (max_len < lst[i].length) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(\"The element of a list having maximum length is: \" + Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = lst[0].length;\n    var max_item: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max_len = 0;\n    let max_ele = '';\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nlet lst = ['abc', 'abcd', 'abcde', 'abcdef'];\nconsole.log(Find_Max(lst));",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(\"Max element of the list is: \" + Find_Max(lst));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(Find_Max(['a', 'bb', 'ccc', 'dddd', 'eeeee', 'ffffff']));\nconsole.log(Find_Max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'bb', 'ccc', 'dddd', 'eeeee', 'ffffff']));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max: number = lst[0].length;\n    var item: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\nvar lst = [\"Python\", \"Java\", \"C++\", \"JavaScript\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = lst[0].length;\n    let max_item: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar lst1 = [\"a\", \"ab\", \"abc\", \"abcd\", \"abcde\", \"abcdef\", \"abcdefg\", \"abcdefgh\", \"abcdefghi\", \"abcdefghij\"];\nconsole.log(Find_Max(lst));\nconsole.log(Find_Max(lst1));\n",
    "    let max: number = 0;\n    let max_ele: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let item: any = null;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < (lst[i].toString()).length) {\n            max = (lst[i].toString()).length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n",
    "    var max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"PHP\"]));\n",
    "    let max: number = 0;\n    let max_ele: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_item: any = null;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = lst[0].length;\n    let max_element: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    var max: any = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let max: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"Python\", \"Java\", \"C++\", \"JavaScript\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let index = 0; index < lst.length; index++) {\n        if (lst[index].length > max) {\n            max = lst[index].length;\n            max_item = lst[index];\n        }\n    }\n    return max_item;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    var item: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n",
    "    let max: number = 0;\n    let max_ele: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nlet lst = [\"abc\", \"defgh\", \"ijklmn\", \"opqrstuvwxyz\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n",
    "    let max: number = 0;\n    let item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max_len = 0;\n    let max_ele = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (max_len < lst[i].length) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max_len = 0;\n    let max_item = '';\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max(['abc', 'abcd', 'abcde']));\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max_len = 0;\n    let max_ele = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    let item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < (lst[i].toString()).length) {\n            max = (lst[i].toString()).length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n\nlet lst: any = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"The element of the list having maximum length is \" + Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nlet lst: any = [\"abc\", \"abcdef\", \"abcdefghijklmnopqrstuvwxyz\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            item = lst[i];\n        }\n    }\n    return item;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abcd\", \"abc\", \"ab\", \"a\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max_len = 0;\n    let max_ele = '';\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"Python\", \"Java\", \"C++\", \"JavaScript\"];\nconsole.log(\"The element of a list having maximum length is: \" + Find_Max(lst));\n\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C\"]));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max_len: number = 0;\n    let max_ele: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nlet lst: any = ['abc', 'abcd', 'abcde', 'abcdef'];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max_len = 0;\n    var max_ele = \"\";\n    for (var i = 0; i < lst.length; i++) {\n        if (max_len < lst[i].length) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    let max_len = 0;\n    let max_ele = '';\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_len) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\nconsole.log(Find_Max(['abcd', 'abc', 'ab']));\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max_len = 0;\n    let max_ele = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (max_len < lst[i].length) {\n            max_len = lst[i].length;\n            max_ele = lst[i];\n        }\n    }\n    return max_ele;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"Python\", \"Java\", \"C++\", \"JavaScript\"];\nconsole.log(Find_Max(lst));\n",
    "    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max_element: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (max_element.length < lst[i].length) {\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max(['abc', 'abcd', 'abcde']));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"hello\", \"world\", \"this\", \"is\", \"python\"]));\n",
    "    var max: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"C#\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].toString().length > max) {\n            max = lst[i].toString().length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"ab\", \"abcd\", \"abcde\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"hello\", \"world\", \"hi\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nlet lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nvar lst: any = [\"abc\", \"abcdef\", \"abcdefghijklmnopqrstuvwxyz\"];\nconsole.log(Find_Max(lst));",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max_length = 0;\n    let max_element = '';\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max_length) {\n            max_length = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nlet lst: any = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = lst[0].length;\n    let max_element: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
    "    var max: number = lst[0].length;\n    var max_item: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nlet lst: any = ['abc', 'defgh', 'ijklmn', 'opqrstuvwxyz'];\nconsole.log(Find_Max(lst));\n",
    "    var max: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    var max_element: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nvar lst: any = [\"abc\", \"abcd\", \"abcde\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_element: any = \"\";\n    for (let i = 0; i < lst.length; i++) {\n        if (max < lst[i].length) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    var max: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    var max = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nvar lst = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(Find_Max(lst));\n",
    "    let max: number = 0;\n    let max_item: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\n\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\n\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\", \"C#\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (max.length < lst[i].length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\"]));\n",
    "    let max: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var max = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length > max.length) {\n            max = lst[i];\n        }\n    }\n    return max;\n}\nconsole.log(Find_Max([\"Python\", \"Java\", \"C++\", \"JavaScript\", \"C#\"]));\n",
    "    let max: number = lst[0].length;\n    let max_item: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_item = lst[i];\n        }\n    }\n    return max_item;\n}\n",
    "    let max: number = 0;\n    let max_element: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length > max) {\n            max = lst[i].length;\n            max_element = lst[i];\n        }\n    }\n    return max_element;\n}\nconsole.log(Find_Max([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n"
  ]
}
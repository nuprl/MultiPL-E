{
  "name": "mbpp_89_closest_num",
  "language": "ts",
  "prompt": "//Write a function to find the closest smaller number than n.\nfunction closest_num(N: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = closest_num;\n  assert.deepEqual(candidate(11),10);\n  assert.deepEqual(candidate(7),6);\n  assert.deepEqual(candidate(12),11);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - count;\n}\n",
    "    let num = N;\n    let prev = num;\n    let next = num;\n    let i = 0;\n    while (i < 32) {\n        if ((num & (1 << i)) == 0) {\n            prev = num | (1 << i);\n            break;\n        }\n        i++;\n    }\n    i = 0;\n    while (i < 32) {\n        if ((num & (1 << i)) != 0) {\n            next = num & ~(1 << i);\n            break;\n        }\n        i++;\n    }\n    return (N - prev) > (next - N) ? next : prev;\n}\n",
    "    let num = N;\n    let binary = num.toString(2);\n    let binary_arr = binary.split('');\n    let index = binary_arr.length - 1;\n    let count = 0;\n    while (index >= 0) {\n        if (binary_arr[index] === '1') {\n            binary_arr[index] = '0';\n            count++;\n        } else {\n            binary_arr[index] = '1';\n            break;\n        }\n        index--;\n    }\n    if (count === binary_arr.length) {\n        return -1;\n    }\n    return parseInt(binary_arr.join(''), 2);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let binary = N.toString(2);\n    let one = binary.lastIndexOf('1');\n    let zero = binary.indexOf('0', one);\n    binary = binary.substring(0, one) + '0' + binary.substring(one + 1, zero) + '1' + binary.substring(zero + 1);\n    return parseInt(binary, 2);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            return N - count;\n        }\n        count++;\n        num = Math.floor(num / 2);\n    }\n    return 0;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        count++;\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            num = num / 2;\n            count++;\n        } else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let n = N;\n    let i = 0;\n    while (n > 0) {\n        n = n >> 1;\n        i++;\n    }\n    return 1 << (i - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        count++;\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let n = N;\n    let c0 = 0;\n    let c1 = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            c0++;\n        } else {\n            c1++;\n        }\n        n = Math.floor(n / 2);\n    }\n    if (c0 > c1) {\n        return N - Math.pow(2, c1);\n    } else {\n        return N - Math.pow(2, c0);\n    }\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        count++;\n        num = num / 2;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let i = 1;\n    while (i < N) {\n        if (N % i === 0) {\n            return i;\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            num = num / 2;\n            count++;\n        }\n        else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(closest_num(13));\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = n >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            return N - Math.pow(2, count);\n        }\n        num = num >> 1;\n        count++;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39));\nconsole.log",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n\nconsole.log(closest_num(10));\n",
    "    let num = N;\n    let binary = num.toString(2);\n    let count = 0;\n    let index = 0;\n    let flag = false;\n    for (let i = 0; i < binary.length; i++) {\n        if (binary[i] == \"1\") {\n            count++;\n            if (count == 2) {\n                index = i;\n                flag = true;\n                break;\n            }\n        }\n    }\n    if (flag) {\n        let temp = binary.substring(0, index);\n        let temp1 = binary.substring(index + 1, binary.length);\n        let temp2 = temp + \"0\" + temp1;\n        let temp3 = parseInt(temp2, 2);\n        return temp3;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(closest_num(12));\nconsole.log(closest_num(7));\nconsole.log(closest_num(4));\nconsole.log(closest_num(6));\n",
    "    let num = N.toString().split('');\n    let index = -1;\n    for (let i = 0; i < num.length - 1; i++) {\n        if (num[i] > num[i + 1]) {\n            index = i;\n            break;\n        }\n    }\n    if (index == -1) return -1;\n    let x = num[index];\n    let smallest = index + 1;\n    for (let i = index + 1; i < num.length; i++) {\n        if (num[i] < num[smallest] && num[i] > x) {\n            smallest = i;\n        }\n    }\n    let temp = num[index];\n    num[index] = num[smallest];\n    num[smallest] = temp;\n    let arr1 = num.splice(index + 1);\n    arr1.sort();\n    num = num.concat(arr1);\n    return parseInt(num.join(''));\n}\nconsole.log(closest_num(12345));\nconsole.log(closest_num(4321));\nconsole.log(closest_num(534976));\nconsole.log(closest_num(1234));\nconsole.log(closest_num(230241));\nconsole.log(closest_num(9876543210));\nconsole.log(closest_num(999999));\nconsole.log(closest_num(111111));\nconsole.log(closest_num(541290));\nconsole.log(closest_num(209917));\nconsole.log(closest_num(285365));\nconsole.log(closest_num(269045));\nconsole.log(closest_num(296837));\nconsole.log(closest_num(1890));\nconsole.log(closest_num(124598));\nconsole.log(closest_num(35890));\nconsole.log(closest_num(29999));\nconsole.log(closest_num(2368));\nconsole.log(closest_num(11111",
    "  let num = N;\n  let count = 0;\n  while (num > 0) {\n    num = Math.floor(num / 2);\n    count++;\n  }\n  return 2 ** (count - 1);\n}\n\nconsole.log(closest_num(13));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if ((n & 1) === 1) {\n            break;\n        }\n        count++;\n        n >>= 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let i = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            num = num / 2;\n        } else {\n            num = num - 1;\n        }\n        i++;\n    }\n    return i;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n\nconsole.log(closest_num(12));\nconsole.log(closest_num(9));\nconsole.log(closest_num(6));\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num != 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        count++;\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        count++;\n        num >>= 1;\n    }\n    return N & ~(1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if ((n & 1) == 0) {\n            count++;\n        }\n        n = n >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n    let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh: number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number = 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n    let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n    let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n    let aaa: number = 0;\n    let bbb: number = 0;\n    let ccc: number = 0;\n    let ddd: number = 0;\n    let eee: number = 0;\n    let fff: number = 0;\n    let ggg: number = 0;\n    let hhh: number = 0;\n    let iii: number = 0;\n    let jjj: number = 0;",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            count++;\n        }\n        n = Math.floor(n / 2);\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            count++;\n        }\n        num = Math.floor(num / 2);\n    }\n    return N - count;\n}\n",
    "    let result = N;\n    let count = 0;\n    while (result > 0) {\n        if ((result & 1) == 0) {\n            count++;\n        }\n        result = result >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10 - 1);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (is_prime(num)) {\n            return num;\n        }\n        num--;\n    }\n    return -1;\n}\n\nconsole.log(closest_num(100));\nconsole.log(closest_num(97));\nconsole.log(closest_num(3));\nconsole.log(closest_num(2));\nconsole.log(closest_num(1));\nconsole.log(closest_num(0));\nconsole.log(closest_num(-1));\nconsole.log(closest_num(-2));\nconsole.log(closest_num(-3));\nconsole.log(closest_num(-4));\nconsole.log(closest_num(-5));\nconsole.log(closest_num(-6));\nconsole.log(closest_num(-7));\nconsole.log(closest_num(-8));\nconsole.log(closest_num(-9));\nconsole.log(closest_num(-10));\nconsole.log(closest_num(-11));\nconsole.log(closest_num(-12));\nconsole.log(closest_num(-13));\nconsole.log(closest_num(-14));\nconsole.log(closest_num(-15));\nconsole.log(closest_num(-16));\nconsole.log(closest_num(-17));\nconsole.log(closest_num(-18));\nconsole.log(closest_num(-19));\nconsole.log(closest_num(-20));\nconsole.log(closest_num(-21));\nconsole.log(closest_num(-22));\nconsole.log(closest_num(-23));\nconsole.log(closest_num(-24));\nconsole.log(closest_num(-25));\nconsole.log(closest_num(-26));\nconsole.log(closest_num(-27));\nconsole.log(closest_num(-28));\nconsole.log(closest_num(-29));\nconsole.log(",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let num: number = 0;\n    let num1: number = 0;\n    let num2: number = 0;\n    let num3: number = 0;\n    let num4: number = 0;\n    let num5: number = 0;\n    let num6: number = 0;\n    let num7: number = 0;\n    let num8: number = 0;\n    let num9: number = 0;\n    let num10: number = 0;\n    let num11: number = 0;\n    let num12: number = 0;\n    let num13: number = 0;\n    let num14: number = 0;\n    let num15: number = 0;\n    let num16: number = 0;\n    let num17: number = 0;\n    let num18: number = 0;\n    let num19: number = 0;\n    let num20: number = 0;\n    let num21: number = 0;\n    let num22: number = 0;\n    let num23: number = 0;\n    let num24: number = 0;\n    let num25: number = 0;\n    let num26: number = 0;\n    let num27: number = 0;\n    let num28: number = 0;\n    let num29: number = 0;\n    let num30: number = 0;\n    let num31: number = 0;\n    let num32: number = 0;\n    let num33: number = 0;\n    let num34: number = 0;\n    let num35: number = 0;\n    let num36: number = 0;\n    let num37: number = 0;\n    let num38: number = 0;\n    let num39: number = 0;\n    let num40: number = 0;\n    let num41: number = 0;\n    let num42: number = 0;\n    let num43: number = 0;\n    let num44: number = 0;\n    let num45: number = 0;\n    let num46: number = 0;\n    let num47: number = 0;\n    let num48:",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num = num - 1;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num >>= 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let result = 0;\n    let count = 0;\n    let num = N;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            result += Math.pow(10, count);\n        }\n        count++;\n        num = Math.floor(num / 2);\n    }\n    return result;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let result = N;\n    let count = 0;\n    while (result > 0) {\n        if (result % 2 == 1) {\n            return result - 1;\n        }\n        result = result >> 1;\n        count++;\n    }\n    return N;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10 - 1);\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(890));\nconsole.log(closest_num(234567));\nconsole.log(closest_num(32768));\nconsole.log(closest_num(0));\nconsole.log(closest_num(1));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(189));\nconsole.log(closest_num(190));\nconsole.log(closest_num(192));\nconsole.log(closest_num(1100));\nconsole.log(closest_num(1101));\nconsole.log(closest_num(1102));\nconsole.log(closest_num(9990));\nconsole.log(closest_num(9991));\nconsole.log(closest_num(9992));\nconsole.log(closest_num(9993));\nconsole.log(closest_num(9994));\nconsole.log(closest_num(9995));\nconsole.log(closest_num(9996));\nconsole.log(closest_num(9997));\nconsole.log(closest_num(9998));\nconsole.log(closest_num(9999));\nconsole.log(closest_num(10000));\nconsole.log(closest_num(10001));\nconsole.log(closest_num(10002));\nconsole.log(closest_num(10003));\nconsole.log(closest_num(10004));\nconsole.log(closest_num(10005));\nconsole.log(closest_num",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            num = num / 2;\n            count++;\n        }\n        else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(closest_num(13));\nconsole.log(closest_num(4));\nconsole.log(closest_num(1));\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10) - 1;\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let result = 0;\n    let count = 0;\n    let num = N;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            result += Math.pow(10, count);\n        }\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return result;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if (n % 2 === 1) {\n            break;\n        }\n        n = n / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n\nconsole.log(closest_num(10));\n",
    "    let num = N;\n    let i = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            return N - Math.pow(2, i);\n        }\n        num = num >> 1;\n        i++;\n    }\n    return -1;\n}\n",
    "    let num: number = N;\n    let count: number = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10) - 1;\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    while (num >= 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\nconsole.log(closest_num(100));\nconsole.log(closest_num(123));\nconsole.log(closest_num(1));\nconsole.log(closest_num(0));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39));\nconsole.log(",
    "    let num = N;\n    let bin = num.toString(2);\n    let count = 0;\n    for (let i = bin.length - 1; i >= 0; i--) {\n        if (bin[i] == '1') {\n            count++;\n        }\n        if (bin[i] == '0' && count == 1) {\n            let arr = bin.split('');\n            arr[i] = '1';\n            arr[i + 1] = '0';\n            bin = arr.join('');\n            break;\n        }\n    }\n    return parseInt(bin, 2);\n}\n",
    "    let num = N;\n    let num_1 = N - 1;\n    let num_2 = N + 1;\n    let count_1 = 0;\n    let count_2 = 0;\n    while (num_1 > 0) {\n        if (num_1 % 2 == 0) {\n            count_1++;\n        }\n        num_1 = Math.floor(num_1 / 2);\n    }\n    while (num_2 > 0) {\n        if (num_2 % 2 == 0) {\n            count_2++;\n        }\n        num_2 = Math.floor(num_2 / 2);\n    }\n    if (count_1 > count_2) {\n        return num_2;\n    } else {\n        return num_1;\n    }\n}\n\nconsole.log(closest_num(5));\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            num = num / 2;\n            count++;\n        } else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(closest_num(13));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let bit = 1;\n    while ((num & bit) > 0) {\n        num = num ^ bit;\n        bit <<= 1;\n    }\n    return num;\n}\n",
    "    let i = N - 1;\n    while (i > 0) {\n        if (i % 10 === 0) {\n            i--;\n        } else {\n            return i;\n        }\n    }\n    return i;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 10);\n        count++;\n    }\n    let div = Math.pow(10, count - 1);\n    let res = N;\n    while (res % 10 === 0) {\n        res = res / 10;\n    }\n    return Math.floor(res) * div;\n}\nconsole.log(closest_num(123456));\nconsole.log(closest_num(123450));\nconsole.log(closest_num(123400));\nconsole.log(closest_num(1234));\nconsole.log(closest_num(123));\nconsole.log(closest_num(12));\nconsole.log(closest_num(1));\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 == 0) {\n            num = num - 1;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10 - 1);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num_str: string = N.toString();\n    let num_arr: string[] = num_str.split('');\n    let num_arr_len: number = num_arr.length;\n    let i: number = 0;\n    let j: number = 0;\n    let temp: string = '';\n    let temp_arr: string[] = [];\n    let temp_arr_len: number = 0;\n    let temp_num: number = 0;\n    let temp_num_str: string = '';\n    let temp_num_arr: string[] = [];\n    let temp_num_arr_len: number = 0;\n    let temp_num_arr_len_half: number = 0;\n    let temp_num_arr_len_half_floor: number = 0;\n    let temp_num_arr_len_half_ceil: number = 0;\n    let temp_num_arr_len_half_floor_num: number = 0;\n    let temp_num_arr_len_half_ceil_num: number = 0;\n    let temp_num_arr_len_half_floor_num_str: string = '';\n    let temp_num_arr_len_half_ceil_num_str: string = '';\n    let temp_num_arr_len_half_floor_num_arr: string[] = [];\n    let temp_num_arr_len_half_ceil_num_arr: string[] = [];\n    let temp_num_arr_len_half_floor_num_arr_len: number = 0;\n    let temp_num_arr_len_half_ceil_num_arr_len: number = 0;\n    let temp_num_arr_len_half_floor_num_arr_len_half: number = 0;\n    let temp_num_arr_len_half_ceil_num_arr_len_half: number = 0;\n    let temp_num_arr_len_half_floor_num_arr_len_half_floor: number = 0;\n    let temp_num_arr_len_half_ceil_num_arr_len_half_ceil: number = 0;\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10) - 1;\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let i = 1;\n    while (i < N) {\n        if (N % i == 0) {\n            return i;\n        }\n        i++;\n    }\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            return num - 1;\n        }\n        num = num >> 1;\n        count++;\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39));\nconsole.log(closest_num(",
    "    let num = N;\n    let count = 0;\n    let binary = '';\n    while (num > 0) {\n        if (num % 2 === 0) {\n            binary = '0' + binary;\n        } else {\n            binary = '1' + binary;\n        }\n        num = Math.floor(num / 2);\n    }\n    let arr = binary.split('');\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (arr[i] === '1') {\n            arr[i] = '0';\n            count++;\n        } else {\n            arr[i] = '1';\n            break;\n        }\n    }\n    let result = 0;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (arr[i] === '1') {\n            result += Math.pow(2, arr.length - 1 - i);\n        }\n    }\n    return result;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            num = num / 2;\n            count++;\n        } else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(closest_num(13));\nconsole.log(closest_num(4));",
    "    let num = N;\n    let i = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            return N & ~(1 << i);\n        }\n        i++;\n        num >>= 1;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    let num_1 = N;\n    let num_2 = N;\n    while (num_1 % 2 === 0) {\n        num_1 = num_1 / 2;\n    }\n    while (num_2 % 3 === 0) {\n        num_2 = num_2 / 3;\n    }\n    if (num_1 === 1 && num_2 === 1) {\n        return num - 1;\n    }\n    if (num_1 === 1) {\n        return num / 3;\n    }\n    if (num_2 === 1) {\n        return num / 2;\n    }\n    return num - 1;\n}\n",
    "  let num = N;\n  let count = 0;\n  while (num > 0) {\n    if ((num & 1) === 0) {\n      count++;\n    }\n    num = num >> 1;\n  }\n  return N - (1 << count);\n}\n",
    "    let num = N;\n    let bin = num.toString(2);\n    let len = bin.length;\n    let c0 = 0;\n    let c1 = 0;\n    for (let i = len - 1; i >= 0; i--) {\n        if (bin[i] == '0') {\n            c0++;\n        } else {\n            break;\n        }\n    }\n    for (let i = len - 1 - c0; i >= 0; i--) {\n        if (bin[i] == '1') {\n            c1++;\n        } else {\n            break;\n        }\n    }\n    if (c0 + c1 == len) {\n        return -1;\n    }\n    let p = c0 + c1;\n    bin = bin.substring(0, p) + '1' + bin.substring(p + 1);\n    bin = bin.substring(0, len - c1 - 1) + '0'.repeat(c1 + 1);\n    return parseInt(bin, 2);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N - 1;\n    while (num > 0) {\n        if (num % 10 !== 0) {\n            break;\n        }\n        num--;\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num >>= 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num = num - 1;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(890));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num--;\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num--;\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(100));\nconsole.log(closest_num(123456789));\nconsole.log(closest_num(1234));\nconsole.log(closest_num(1));\nconsole.log(closest_num(0));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let a: number = 0;\n    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    let e: number = 0;\n    let f: number = 0;\n    let g: number = 0;\n    let h: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let a: number = 0;\n    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    let e: number = 0;\n    let f: number = 0;\n    let g: number = 0;\n    let h: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0",
    "    let num: number = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num -= 1;\n        } else {\n            num -= 1;\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12));\nconsole.log(closest_num(100));\nconsole.log(closest_num(130));\nconsole.log(closest_num(200));\nconsole.log(closest_num(1000));\nconsole.log(closest_num(1234));\nconsole.log(closest_num(12345));\nconsole.log(closest_num(123456));\nconsole.log(closest_num(1234567));\nconsole.log(closest_num(12345678));\nconsole.log(closest_num(123456789));\nconsole.log(closest_num(1234567890));\nconsole.log(closest_num(12345678901));\nconsole.log(closest_num(123456789012));\nconsole.log(closest_num(1234567890123));\nconsole.log(closest_num(12345678901234));\nconsole.log(closest_num(123456789012345));\nconsole.log(closest_num(1234567890123456));\nconsole.log(closest_num(12345678901234567));\nconsole.log(closest_num(123456789012345678));\nconsole.log(closest_num(1234567890123456789));\nconsole.log(closest_num(12345678901234567890));\nconsole.log(closest_num(123456789012345678901));\nconsole.log(closest_num(1234567890123456789012));\nconsole.log(closest_num(12345678901234567890123));\nconsole.log(closest_num(123456789012345678901234",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n\nconsole.log(closest_num(13));\nconsole.log(closest_num(20));\nconsole.log(closest_num(9));\nconsole.log(closest_num(6));\nconsole.log(closest_num(4));\nconsole.log(closest_num(3));\nconsole.log(closest_num(2));\nconsole.log(closest_num(1));\nconsole.log(closest_num(0));\n",
    "    let num = N;\n    let num_1 = N - 1;\n    let num_2 = N + 1;\n    let num_1_binary = num_1.toString(2);\n    let num_2_binary = num_2.toString(2);\n    let num_binary = num.toString(2);\n    let num_1_ones = 0;\n    let num_2_ones = 0;\n    let num_ones = 0;\n    for (let i = 0; i < num_1_binary.length; i++) {\n        if (num_1_binary[i] === '1') {\n            num_1_ones++;\n        }\n    }\n    for (let i = 0; i < num_2_binary.length; i++) {\n        if (num_2_binary[i] === '1') {\n            num_2_ones++;\n        }\n    }\n    for (let i = 0; i < num_binary.length; i++) {\n        if (num_binary[i] === '1') {\n            num_ones++;\n        }\n    }\n    if (num_1_ones === num_ones) {\n        return num_1;\n    }\n    else if (num_2_ones === num_ones) {\n        return num_2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\n",
    "    let n = N;\n    let c0 = 0;\n    let c1 = 0;\n\n    while ((n & 1) === 0 && n !== 0) {\n        c0++;\n        n >>= 1;\n    }\n\n    while ((n & 1) === 1) {\n        c1++;\n        n >>= 1;\n    }\n\n    if (c0 + c1 === 31 || c0 + c1 === 0) {\n        return -1;\n    }\n\n    return N - (1 << c1) + (1 << (c0 - 1));\n}\n",
    "    let num = N;\n    let binary = num.toString(2);\n    let count = 0;\n    for (let i = binary.length - 1; i >= 0; i--) {\n        if (binary[i] == '1') {\n            count++;\n        }\n        if (binary[i] == '0' && count > 0) {\n            binary = binary.substring(0, i) + '1' + binary.substring(i + 1);\n            count--;\n        }\n    }\n    return parseInt(binary, 2);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10 - 1);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let i = 0;\n    let j = 0;\n    let n = N;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            i++;\n        } else {\n            j++;\n        }\n        n = Math.floor(n / 2);\n    }\n    return Math.pow(2, i + j) + Math.pow(2, i + j - 1) - 1;\n}\n",
    "    let n = N;\n    let c0 = 0;\n    let c1 = 0;\n    while ((n & 1) == 0 && n > 0) {\n        c0++;\n        n >>= 1;\n    }\n    while ((n & 1) == 1) {\n        c1++;\n        n >>= 1;\n    }\n    if (c0 + c1 == 31 || c0 + c1 == 0) {\n        return -1;\n    }\n    return N - (1 << c1) + (1 << (c1 - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        count++;\n        num = num / 2;\n    }\n    return N - Math.pow(2, count);\n}\nconsole.log(closest_num(12));\nconsole.log(closest_num(9));\nconsole.log(closest_num(6));\nconsole.log(closest_num(4));\nconsole.log(closest_num(3));\nconsole.log(closest_num(2));\nconsole.log(closest_num(1));\n",
    "    let n = N;\n    let i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            break;\n        }\n        i++;\n        n = n / 2;\n    }\n    return Math.pow(2, i);\n}\n\nconsole.log(closest_num(4));\nconsole.log(closest_num(5));\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num >>= 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num = num - 1;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(81234));\n",
    "    let num = N;\n    let i = 0;\n    while (num > 0) {\n        if (num % 10 == 0) {\n            num = num - 1;\n            i++;\n        }\n        else {\n            num = num / 10;\n            i++;\n        }\n    }\n    return N - i;\n}\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(890));\nconsole.log(closest_num(2345));\nconsole.log(closest_num(1000));\nconsole.log(closest_num(1111));\nconsole.log(closest_num(1100));\nconsole.log(closest_num(1));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33",
    "    let M = N;\n    let i = 0;\n    while (i < 32) {\n        if (((N >> i) & 1) === 0) {\n            M = M & ~(1 << i);\n        } else {\n            M = M & ~(1 << i);\n            M = M | (1 << (i - 1));\n            break;\n        }\n        i++;\n    }\n    return M;\n}\n",
    "    let num = N;\n    let count = 0;\n    let arr = [];\n    while (num > 0) {\n        arr.push(num % 2);\n        num = Math.floor(num / 2);\n    }\n    arr = arr.reverse();\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 1) {\n            arr[i] = 0;\n            count++;\n            break;\n        }\n    }\n    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 1) {\n            result += Math.pow(2, i);\n        }\n    }\n    return result;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let a: number = 0;\n    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    let e: number = 0;\n    let f: number = 0;\n    let g: number = 0;\n    let h: number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number = 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n    let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n    let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n    let aa: number = 0;\n    let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh: number = 0;\n    let iii: number = 0;\n    let jjj: number = 0;\n    let kkk: number =",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let num_1 = N;\n    let num_2 = N;\n    let num_3 = N;\n    let num_4 = N;\n    let num_5 = N;\n    let num_6 = N;\n    let num_7 = N;\n    let num_8 = N;\n    let num_9 = N;\n    let num_10 = N;\n    let num_11 = N;\n    let num_12 = N;\n    let num_13 = N;\n    let num_14 = N;\n    let num_15 = N;\n    let num_16 = N;\n    let num_17 = N;\n    let num_18 = N;\n    let num_19 = N;\n    let num_20 = N;\n    let num_21 = N;\n    let num_22 = N;\n    let num_23 = N;\n    let num_24 = N;\n    let num_25 = N;\n    let num_26 = N;\n    let num_27 = N;\n    let num_28 = N;\n    let num_29 = N;\n    let num_30 = N;\n    let num_31 = N;\n    let num_32 = N;\n    let num_33 = N;\n    let num_34 = N;\n    let num_35 = N;\n    let num_36 = N;\n    let num_37 = N;\n    let num_38 = N;\n    let num_39 = N;\n    let num_40 = N;\n    let num_41 = N;\n    let num_42 = N;\n    let num_43 = N;\n    let num_44 = N;\n    let num_45 = N;\n    let num_46 = N;\n    let num_47 = N;\n    let num_48 = N;\n    let num_49 = N;\n    let num_50 = N;\n    let num_51 = N;\n    let num_52 = N;\n    let num_53 = N;\n    let num_54 = N;\n    let num_55 = N;\n    let num_56 = N;\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        num = num >> 1;\n        count++;\n    }\n    return N & ~(1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (is_prime(num)) {\n            return num;\n        }\n        num--;\n    }\n}\n",
    "    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n    let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh: number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number = 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n    let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n    let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n    let aaa: number = 0;\n    let bbb: number = 0;\n    let ccc: number = 0;\n    let ddd: number = 0;\n    let eee: number = 0;\n    let fff: number = 0;\n    let ggg: number = 0;\n    let hhh: number = 0;\n    let iii: number = 0;\n    let jjj: number = 0;",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num = Math.floor(num / 10) * 10 + (num % 10) - 1;\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(890));\nconsole.log(closest_num(23456789));\nconsole.log(closest_num(23456780));\nconsole.log(closest_num(23456700));\nconsole.log(closest_num(23450000));\nconsole.log(closest_num(23400000));\nconsole.log(closest_num(2340000));\nconsole.log(closest_num(230000));\nconsole.log(closest_num(23000));\nconsole.log(closest_num(2300));\nconsole.log(closest_num(230));\nconsole.log(closest_num(23));\nconsole.log(closest_num(2));\nconsole.log(closest_num(1));\nconsole.log(closest_num(0));\nconsole.log(closest_num(-1));\nconsole.log(closest_num(-2));\nconsole.log(closest_num(-23));\nconsole.log(closest_num(-230));\nconsole.log(closest_num(-2300));\nconsole.log(closest_num(-23000));\nconsole.log(closest_num(-230000));\nconsole.log(closest_num(-2340000));\nconsole.log(closest_num(-23400000));\nconsole.log(closest_num(-23450000));\nconsole.log(closest_num(-23456700));\nconsole.log(closest_num(-23456780));\nconsole.log(closest_num(-23456789));\nconsole.log(clos",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        } else {\n            break;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            count++;\n        }\n        num = Math.floor(num / 2);\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let bin = num.toString(2);\n    let l = bin.length;\n    for (let i = l - 1; i > 0; i--) {\n        if (bin[i] == '1' && bin[i - 1] == '0') {\n            bin = bin.substr(0, i - 1) + '1' + bin.substr(i + 1);\n            bin = bin.substr(0, i) + '0' + bin.substr(i + 1);\n            num = parseInt(bin, 2);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let num = N;\n    let num_1 = N;\n    let num_2 = N;\n    while (num_1 % 2 == 0) {\n        num_1 = num_1 / 2;\n    }\n    while (num_2 % 3 == 0) {\n        num_2 = num_2 / 3;\n    }\n    if (num_1 == 1 && num_2 == 1) {\n        return num - 1;\n    }\n    if (num_1 == 1) {\n        return num / 3;\n    }\n    if (num_2 == 1) {\n        return num / 2;\n    }\n    return num / 2;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let n = N;\n    let i = 0;\n    while (n > 0) {\n        if ((n & 1) == 0) {\n            return N & ~(1 << i);\n        }\n        n = n >> 1;\n        i++;\n    }\n    return -1;\n}\n",
    "    let result = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    let count1 = 0;\n    let count2 = 0;\n    let count3 = 0;\n    let count4 = 0;\n    let count5 = 0;\n    let count6 = 0;\n    let count7 = 0;\n    let count8 = 0;\n    let count9 = 0;\n    let count10 = 0;\n    let count11 = 0;\n    let count12 = 0;\n    let count13 = 0;\n    let count14 = 0;\n    let count15 = 0;\n    let count16 = 0;\n    let count17 = 0;\n    let count18 = 0;\n    let count19 = 0;\n    let count20 = 0;\n    let count21 = 0;\n    let count22 = 0;\n    let count23 = 0;\n    let count24 = 0;\n    let count25 = 0;\n    let count26 = 0;\n    let count27 = 0;\n    let count28 = 0;\n    let count29 = 0;\n    let count30 = 0;\n    let count31 = 0;\n    let count32 = 0;\n    let count33 = 0;\n    let count34 = 0;\n    let count35 = 0;\n    let count36 = 0;\n    let count37 = 0;\n    let count38 = 0;\n    let count39 = 0;\n    let count40 = 0;\n    let count41 = 0;\n    let count42 = 0;\n    let count43 = 0;\n    let count44 = 0;\n    let count45 = 0;\n    let count46 = 0;\n    let count47 = 0;\n    let count48 = 0;\n    let count49 = 0;\n    let count50 = 0;\n    let count51 = 0;\n    let count52 = 0;\n    let count53 = 0;\n    let count54 = 0;\n    let count55 = 0;\n    let count56 = 0;\n    let count57 = 0;\n    let count58 = 0;\n    let count59 = 0;\n    let count60 = 0;\n    let count",
    "    let n = N;\n    let i = 0;\n    while (n > 0) {\n        if ((n & 1) == 0) {\n            return N & ~(1 << i);\n        }\n        n >>= 1;\n        i++;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            num = num / 2;\n            count++;\n        } else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(closest_num(13));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            num = num / 2;\n            count++;\n        } else {\n            num = num - 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(closest_num(13));\nconsole.log(closest_num(4));\nconsole.log(closest_num(1));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            count++;\n            num = num / 2;\n        } else {\n            num = num - 1;\n        }\n    }\n    return count;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n\nconsole.log(closest_num(13));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39));\nconsole.log(closest_num(40));\nconsole.log(closest_num(41));\nconsole.log(closest_num(42));\nconsole.log(closest_num(43));\nconsole.log(closest_num(44));\nconsole.log(closest_num(45));\nconsole.log(closest_num(46));\nconsole.log(closest_num(47));\nconsole.log(closest_num(",
    "    let num = N;\n    let i = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            return N & ~(1 << i);\n        }\n        num = num >> 1;\n        i++;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 1) {\n            break;\n        }\n        num = num / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 1) {\n            break;\n        }\n        count++;\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 1) {\n            break;\n        }\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n\nconsole.log(closest_num(6));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let bit = 1;\n    while ((num & bit) == bit) {\n        num = num & ~bit;\n        bit = bit << 1;\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = Math.floor(n / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        } else {\n            break;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 == 0) {\n            count++;\n        }\n        num = Math.floor(num / 2);\n    }\n    return Math.pow(2, count) - 1;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num = num - 1;\n        } else {\n            num = num - (num % 10);\n            break;\n        }\n    }\n    return num;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = n >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let bin = num.toString(2);\n    let len = bin.length;\n    let c0 = 0;\n    let c1 = 0;\n    for (let i = len - 1; i >= 0; i--) {\n        if (bin[i] == \"0\") {\n            c0++;\n        } else {\n            break;\n        }\n    }\n    for (let i = len - 1 - c0; i >= 0; i--) {\n        if (bin[i] == \"1\") {\n            c1++;\n        } else {\n            break;\n        }\n    }\n    if (c0 + c1 == len) {\n        return -1;\n    }\n    let p = c0 + c1;\n    let flip = \"1\";\n    for (let i = 1; i < c1 + 1; i++) {\n        flip += \"0\";\n    }\n    for (let i = 0; i < c0 - 1; i++) {\n        flip += \"1\";\n    }\n    let result = parseInt(flip, 2);\n    return result;\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        n = n >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if (n % 2 === 0) {\n            count++;\n        }\n        n = Math.floor(n / 2);\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            count++;\n        }\n        num = Math.floor(num / 2);\n    }\n    return Math.pow(2, count);\n}\n\nconsole.log(closest_num(6));\nconsole.log(closest_num(7));\nconsole.log(closest_num(8));\nconsole.log(closest_num(9));\nconsole.log(closest_num(10));\nconsole.log(closest_num(11));\nconsole.log(closest_num(12));\nconsole.log(closest_num(13));\nconsole.log(closest_num(14));\nconsole.log(closest_num(15));\nconsole.log(closest_num(16));\nconsole.log(closest_num(17));\nconsole.log(closest_num(18));\nconsole.log(closest_num(19));\nconsole.log(closest_num(20));\nconsole.log(closest_num(21));\nconsole.log(closest_num(22));\nconsole.log(closest_num(23));\nconsole.log(closest_num(24));\nconsole.log(closest_num(25));\nconsole.log(closest_num(26));\nconsole.log(closest_num(27));\nconsole.log(closest_num(28));\nconsole.log(closest_num(29));\nconsole.log(closest_num(30));\nconsole.log(closest_num(31));\nconsole.log(closest_num(32));\nconsole.log(closest_num(33));\nconsole.log(closest_num(34));\nconsole.log(closest_num(35));\nconsole.log(closest_num(36));\nconsole.log(closest_num(37));\nconsole.log(closest_num(38));\nconsole.log(closest_num(39",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n\nconsole.log(closest_num(9));\nconsole.log(closest_num(6));\nconsole.log(closest_num(19));\n",
    "    let num = N;\n    while (num > 0) {\n        if (is_prime(num)) {\n            return num;\n        }\n        num--;\n    }\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (is_prime(num)) {\n            return num;\n        }\n        num--;\n    }\n    return 0;\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num >>= 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (is_prime(num)) {\n            return num;\n        }\n        num--;\n    }\n    return -1;\n}\n",
    "    let num = N;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            num--;\n        } else {\n            num--;\n            break;\n        }\n    }\n    return num;\n}\n\nconsole.log(closest_num(12345));\nconsole.log(closest_num(98765));\nconsole.log(closest_num(890));\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 2 === 0) {\n            count++;\n        }\n        num = Math.floor(num / 2);\n    }\n    return N - Math.pow(2, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let n = N;\n    let count = 0;\n    while (n > 0) {\n        if ((n & 1) == 0) {\n            count++;\n        }\n        n = n >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return N - (1 << (count - 1));\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) == 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if ((num & 1) === 0) {\n            count++;\n        }\n        num = num >> 1;\n    }\n    return N - (1 << count);\n}\n",
    "    if (N < 0) {\n        return -1;\n    }\n    let num = N;\n    let count = 0;\n    while (num > 0) {\n        if (num % 10 === 0) {\n            count++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return N - Math.pow(10, count);\n}\n",
    "    let num = N;\n    let count = 0;\n    while (num > 0) {\n        num = Math.floor(num / 2);\n        count++;\n    }\n    return Math.pow(2, count - 1);\n}\n"
  ]
}
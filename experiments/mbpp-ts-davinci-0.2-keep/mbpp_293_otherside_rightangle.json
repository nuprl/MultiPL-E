{
  "name": "mbpp_293_otherside_rightangle",
  "language": "ts",
  "prompt": "//Write a function to find the third side of a right angled triangle.\nfunction otherside_rightangle(w: number, h: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = otherside_rightangle;\n  assert.deepEqual(candidate(7, 8),10.63014581273465);\n  assert.deepEqual(candidate(3, 4),5);\n  assert.deepEqual(candidate(7, 15),16.55294535724685);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\nconsole.log(otherside_rightangle(3, 4));\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\nconsole.log(otherside_rightangle(3, 4));\n",
    "  return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\nconsole.log(otherside_rightangle(3, 4));\n",
    "    return Math.sqrt(w * w + h * h);\n}\n",
    "    return Math.sqrt(w * w + h * h);\n}\nconsole.log(otherside_rightangle(3, 4));\n",
    "  return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    let result: number = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n    return result;\n}\nconsole.log(otherside_rightangle(3, 4));\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    let c: number = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n    return c;\n}\n"
  ]
}